<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>CentOS-Stream-9 初体验Ruby与jekyll</title>
    <url>/2023/04/09/CentOS-Stream-9-%E5%88%9D%E4%BD%93%E9%AA%8CRuby%E4%B8%8Ejekyll/</url>
    <content><![CDATA[<p>使用 jekyll 搭建测试环境，先上效果，访问即可体验：<br><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLXdhbmdrLnBhZ2VzLmRldi8=">https://blog-wangk.pages.dev/<i class="fa fa-external-link-alt"></i></span></p>
<p><img data-src="https://s1.ax1x.com/2023/04/09/ppbB5Ps.png"></p>
<h3 id="絮絮叨叨"><a href="#絮絮叨叨" class="headerlink" title="絮絮叨叨"></a>絮絮叨叨</h3><p><strong>絮絮叨叨</strong><br>起初，在想自己有一定的 Hexo 使用经验，上手 jekyll 应该很快。实际动手，才发现没有想的那么容易。主要是Ruby、jekyll环境问题，遇到陌生没有接触过的技术，没有耐心阅读官方文档。遇到错误，没有耐心排查。</p>
<p>既然聊到 Hexo，那就简单说一下。如果你尝试搭建 Hexo 环境，需要准备 nodejs、npm 以及 git 环境。其中 git 环境用于版本控制和提交到远程仓库，使用jekyll 或者 hugo一样用得上。</p>
<p>如果你不想使用静态博客生成器生成，又有自己的一套技术栈（web后端和前端）。可以打造一套前后端分离的应用，部署到云服务器上，购买域名解析、备案。下面是我的大学老同学（六年 Java后端技术大佬）应该是使用ssm（spring + springboot + mybatis）以及 vuejs 打造的个人站点实验品<strong>随想笔记</strong>：</p>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cud3hsemIudG9wLyMv">https://www.wxlzb.top/#/<i class="fa fa-external-link-alt"></i></span></p>
<p><img data-src="https://s1.ax1x.com/2023/04/09/ppbDHfA.png"></p>
<p>有点扯远了，继续回到打造静态博客站点 jekyll 上。</p>
<p><strong>准备环境</strong>：</p>
<ol>
<li>Centos-stream-9（RHEL9系列）环境</li>
<li>Ruby环境</li>
<li>Ruby设置国内镜像源</li>
<li>Jekyll环境</li>
</ol>
<p>当然，不一定要和我的环境一致，你可以在 Windows 平台搭建Ruby环境安装jekyll。</p>
<p><strong>CentOS-Stream 是什么</strong>？</p>
<blockquote>
<p>Continuously delivered distro that tracks just ahead of Red Hat Enterprise Linux (RHEL) development, positioned as a midstream between Fedora Linux and RHEL. For anyone interested in participating and collaborating in the RHEL ecosystem, CentOS Stream is your reliable platform for innovation.</p>
</blockquote>
<p>大意是：CentOS-Stream Redhat企业版Linux（RHEL）开发版本，定位在Fedora Linux 和 RHEL之间的中间流量。对于那些想参与并合作在RHEL生态系统中的人，CentOS Stream是你可靠的创新平台。</p>
<p>tips：Fedora Linux 很长一段时间作为Red Hat Enterprise Linux的上游版本（开发版本），Redhat作为稳定版本发行，centos同步更新Redhat资源进行发行。 </p>
<p><strong>Ruby是什么</strong>？</p>
<blockquote>
<p>Ruby 是……<br>一门开源的动态编程语言，注重简洁和效率。Ruby 的句法优雅，读起来自然，写起来舒适。</p>
</blockquote>
<p><strong>Jekyll是什么</strong>？</p>
<blockquote>
<p>Transform your plain text into static websites and blogs.</p>
</blockquote>
<p>大意是：你可以使用 jekyll 打造静态网站或者博客站点。</p>
<h3 id="centos-stream-9-部署"><a href="#centos-stream-9-部署" class="headerlink" title="centos-stream-9 部署"></a>centos-stream-9 部署</h3><p>个人推荐使用虚拟机软件VMware搭建centos-stream-9 Linux环境，如果在Windows环境下一样可以使用WSL或者WSL2进行搭建。</p>
<p><strong>准备环境</strong>：</p>
<ol>
<li>VMware虚拟机软件</li>
<li>centos-stream-9 镜像</li>
</ol>
<p>VMware官网：<span class="exturl" data-url="aHR0cHM6Ly93d3cudm13YXJlLmNvbS9wcm9kdWN0cy93b3Jrc3RhdGlvbi1wcm8uaHRtbA==">https://www.vmware.com/products/workstation-pro.html<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>关于VMware版本说明</strong></p>
<ul>
<li>VMware版本：关于VMware workstation pro 与  VMware workstation player。</li>
<li>VMware workstation pro：付费服务，有完善的商业支持。</li>
<li>VMware workstation player：面向个人PC用户的免费版本。前身是VMware player，直到VMware12版本开始成为pro版本的免费版本，购买商业支持后可升级为pro版本。</li>
</ul>
<p><strong>centos-stream官网</strong>：<span class="exturl" data-url="aHR0cHM6Ly93d3cuY2VudG9zLm9yZy9jZW50b3Mtc3RyZWFtLw==">https://www.centos.org/centos-stream/<i class="fa fa-external-link-alt"></i></span></p>
<p>安装步骤：</p>
<ol>
<li>部署VMware。</li>
<li>新建虚拟机（如果你使用VMware16，没有centos-stream-9选项，选Centos8即可）。</li>
<li>CD&#x2F;DVD选择使用ISO镜像文件。</li>
<li>进入centos-stream-9安装，没有特殊需求，默认回车即可，有图形化引导安装界面。</li>
</ol>
<p>VMware成功部署 centos-stream-9 示例界面：</p>
<p><img data-src="https://s1.ax1x.com/2023/04/09/ppbBIGn.png"></p>
<p> 安装了哪些环境，可以在描述一栏备注出来，这是一个好习惯。</p>
<h3 id="Ruby部署"><a href="#Ruby部署" class="headerlink" title="Ruby部署"></a>Ruby部署</h3><p>关于Ruby部署，参考可靠资料：<br>ruby官网：<span class="exturl" data-url="aHR0cHM6Ly93d3cucnVieS1sYW5nLm9yZy96aF9jbi8=">https://www.ruby-lang.org/zh_cn&#x2F;<i class="fa fa-external-link-alt"></i></span><br>ruby国内地址：<span class="exturl" data-url="aHR0cHM6Ly9ydWJ5aW5zdGFsbGVyLmNuLw==">https://rubyinstaller.cn/<i class="fa fa-external-link-alt"></i></span><br>ruby开源仓库地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3J1YnkvcnVieQ==">https://github.com/ruby/ruby<i class="fa fa-external-link-alt"></i></span></p>
<p>主要有两种部署方式：</p>
<ul>
<li>源码包 &amp; 二进制包</li>
<li>rbenv管理工具</li>
</ul>
<p><strong>个人使用如下部署方式</strong><br>yum &amp; dnf源部署：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dnf -y install ruby ruby-devel gcc g++ make cmake</span><br></pre></td></tr></table></figure>

<p>版本查看：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ruby -v;gem -v;gcc -v;g++ -v;make -v </span><br></pre></td></tr></table></figure>

<p>rbenv部署：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install rbenv</span><br></pre></td></tr></table></figure>


<p>rbenv版本查看：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rbenv -v</span><br><span class="line">rbenv 1.2.0</span><br></pre></td></tr></table></figure>

<p>rbenv仓库地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3JiZW52L3JiZW52">https://github.com/rbenv/rbenv<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>Ruby设置国内镜像源</strong></p>
<ul>
<li>Ruby阿里源：<span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIuYWxpeXVuLmNvbS9taXJyb3IvcnVieWdlbXM=">https://developer.aliyun.com/mirror/rubygems<i class="fa fa-external-link-alt"></i></span></li>
<li>Ruby清华大学源：<span class="exturl" data-url="aHR0cHM6Ly9taXJyb3JzLnR1bmEudHNpbmdodWEuZWR1LmNuL2hlbHAvcnVieWdlbXM=">https://mirrors.tuna.tsinghua.edu.cn/help/rubygems<i class="fa fa-external-link-alt"></i></span></li>
<li>Ruby腾讯源：<span class="exturl" data-url="aHR0cHM6Ly9taXJyb3JzLmNsb3VkLnRlbmNlbnQuY29tL3J1YnlnZW1zLw==">https://mirrors.cloud.tencent.com/rubygems/<i class="fa fa-external-link-alt"></i></span></li>
<li>Ruby华为云源：<span class="exturl" data-url="aHR0cHM6Ly9yZXBvLmh1YXdlaWNsb3VkLmNvbS9yZXBvc2l0b3J5L3J1YnlnZW1zLw==">https://repo.huaweicloud.com/repository/rubygems/ <i class="fa fa-external-link-alt"></i></span></li>
<li>Ruby中国科技大学源：<span class="exturl" data-url="aHR0cHM6Ly9taXJyb3JzLnVzdGMuZWR1LmNuL3J1YnlnZW1zLw==">https://mirrors.ustc.edu.cn/rubygems/<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>示例：打开终端运行移除默认源，配置阿里源</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gem sources 	<span class="comment">#查找默认源</span></span><br><span class="line">gem sources --remove https://rubygems.org/  			<span class="comment">#移除默认源</span></span><br><span class="line">gem sources -a https://mirrors.aliyun.com/rubygems/  	<span class="comment">#配置阿里源</span></span><br></pre></td></tr></table></figure>

<p>使用 Gemfile 和 Bundler，可以这样配置：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bundle config mirror.https://rubygems.org  https://developer.aliyun.com/mirror/rubygems</span><br></pre></td></tr></table></figure>

<p>如果想配置其它ruby国内镜像镜像源，只需要更换 sources 后面追加的地址即可。</p>
<p>同理，如果想加速安装Ruby环境，同样可以在这些国内开源镜像网站寻找安装包进行安装。如何获取软件安装包：如果有wget命令环境，直接在wget后面追加软件镜像仓库地址即可。</p>
<p>示例下载 Ruby 和openjdk：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://repo.huaweicloud.com/ruby/ruby/3.2/ruby-3.2.1.tar.gz</span><br><span class="line">wget https://repo.huaweicloud.com/openjdk/17.0.2/openjdk-17.0.2_linux-x64_bin.tar.gz</span><br></pre></td></tr></table></figure>



<h3 id="Jekyll部署"><a href="#Jekyll部署" class="headerlink" title="Jekyll部署"></a>Jekyll部署</h3><p>jekyll官网：<span class="exturl" data-url="aHR0cHM6Ly9qZWt5bGxyYi5jb20v">https://jekyllrb.com/<i class="fa fa-external-link-alt"></i></span></p>
<p>gems部署，安装jekyll服务：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gem install jekyll bundler</span><br></pre></td></tr></table></figure>

<p>jekyll获取帮助命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">jekyll --h</span><br></pre></td></tr></table></figure>



<p><strong>发布之前，准备必要环境</strong>：</p>
<ul>
<li>git 本地环境</li>
<li>github 仓库环境</li>
</ul>
<p><strong>注意</strong>：github 仓库需要手动开启 pages 服务，创建分支命名为 gh-pages。</p>
<p>如果你还没有 github 账号，如果你还没有创建 github pages 服务仓库，如果你还没有 git 环境。没关系，可以参考本人公众号里面github基础教程《git推送项目到github并使用gitee做镜像仓库》以及《你真的了解git、gitee、github吗》。虽然写的稀烂，但可以进行参考。</p>
<p><strong>发布到提供 pages 服务的网站</strong>：</p>
<ul>
<li>github pages</li>
<li>gitee pages</li>
<li>cloudflare pages</li>
</ul>
<p>文初演示地址，采用cloudflare pages服务，支持直接上传本地目录以及压缩包，需要注意中文编码问题。</p>
<p>个人不推荐直接上传，习惯使用如下步骤：</p>
<ol>
<li>发布：github 仓库</li>
<li>关联：第三方 pages 服务</li>
<li>同步至第三方 pages 服务：cloudflare、netlify、vercel。</li>
</ol>
<h3 id="Jekyll：人生中的第一篇博客"><a href="#Jekyll：人生中的第一篇博客" class="headerlink" title="Jekyll：人生中的第一篇博客"></a>Jekyll：人生中的第一篇博客</h3><ol>
<li>jekyll new blog：新建博客（项目）空间</li>
<li>cd blog：进入博客（项目）空间</li>
<li>bundle exec jekyll serve ：启动 jekyll 服务，默认访问地址：localhost:4000</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">jekyll new blog</span><br><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line">bundle <span class="built_in">exec</span> jekyll serve </span><br></pre></td></tr></table></figure>
<p>关于jekyll服务启动，你还可以使用如下简化方式：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">jekyll s --h=192.168.245.132</span><br></pre></td></tr></table></figure>

<p><strong>注意</strong>：<strong>如果在服务器环境不指定IP地址，无法访问远程地址</strong>，使用curl命令测试访问localhost:4000或者127.0.0.1:4000则是正常显示。</p>
<p>打开浏览器，访问：<span class="exturl" data-url="aHR0cDovLzE5Mi4xNjguMjQ1LjEzMjo0MDAw77yM5aaC5p6c5Y+q5Zyo5pys5Zyw6K6/6Zeu77yaaHR0cDovLzEyNy4wLjAuMTo0MDAw">http://192.168.245.132:4000，如果只在本地访问：http://127.0.0.1:4000<i class="fa fa-external-link-alt"></i></span></p>
<p>或者使用curl命令测试：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@Centos9-Stream soft]<span class="comment"># curl -X GET http://192.168.245.132:4000 | grep &quot;Welcome to Jekyll!&quot;</span></span><br><span class="line">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</span><br><span class="line">                                 Dload  Upload   Total   Spent    Left  Speed</span><br><span class="line">100  4788  100  4788    0     0  2337k      0 --:--:-- --:--:-- --:--:-- 2337k</span><br><span class="line">            Welcome to Jekyll!</span><br></pre></td></tr></table></figure>

<p>其实，仔细观察，会发现初始_posts目录下博文给了我们示范：日期-文章标题.后缀名</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">2023-04-07-welcome-to-jekyll.markdown</span><br></pre></td></tr></table></figure>
<p>接下来看一看，官方文档给出的创建文章规范。</p>
<p><strong>创建文章规范</strong></p>
<p>发表一篇新文章，你需要在_post目录中创建一个新文件，文件名的命名非常重要。Jekyll 要求一篇文章的文件名遵循下面的格式：</p>
<ul>
<li>格式一：年-月-日-标题.MARKUP</li>
<li>格式二：年-月-日-标题.md </li>
<li>格式三：年-月-日-标题.markdow</li>
<li>格式四：年-月-日-标题.textile</li>
</ul>
<p>日期格式遵循：年是 4 位数字，月和日都是 2 位数字。MARKUP扩展名代表了这篇文章是用什么格式写。下面是一些合法的文件名的示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">2011-12-31-new-years-eve-is-awesome.md</span><br><span class="line">2012-09-12-how-to-write-a-blog.textile</span><br></pre></td></tr></table></figure>

<p>注意：新建文章需要按照示例博文规范，日期-标题.md。</p>
<p>示例：2023-02-26-vim入门实战.md，新建文章复制到指定目录_posts</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> 2023-02-26-vim入门实战.md _posts/</span><br></pre></td></tr></table></figure>
<p>起初我以为将hexo生成静态博客 posts 目录复制到jekyll posts目录下即可。再次阅读官方文档，发现需要遵循一定的命名规范，还比较严格，整体体验感觉没有 Hexo 友好。</p>
<p><strong>排查错误</strong>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@Centos9-Stream blog]<span class="comment"># jekyll b</span></span><br><span class="line">Resolving dependencies...</span><br><span class="line">Configuration file: /opt/workspace/blog-jekyll-prod/blog/_config.yml</span><br><span class="line">            Source: /opt/workspace/blog-jekyll-prod/blog</span><br><span class="line">       Destination: /opt/workspace/blog-jekyll-prod/blog/_site</span><br><span class="line"> Incremental build: disabled. Enable with --incremental</span><br><span class="line">      Generating...</span><br><span class="line">       Jekyll Feed: Generating feed <span class="keyword">for</span> posts</span><br><span class="line">Deprecation Warning: Using / <span class="keyword">for</span> division outside of calc() is deprecated and will be removed <span class="keyword">in</span> Dart Sass 2.0.0.</span><br><span class="line"></span><br><span class="line">Recommendation: math.div(<span class="variable">$spacing</span>-unit, 2) or calc(<span class="variable">$spacing</span>-unit / 2)</span><br><span class="line"></span><br><span class="line">More info and automated migrator: https://sass-lang.com/d/slash-div</span><br><span class="line">...</span><br><span class="line">Warning: 6 repetitive deprecation warnings omitted.</span><br><span class="line">Run <span class="keyword">in</span> verbose mode to see all warnings.</span><br><span class="line">                    <span class="keyword">done</span> <span class="keyword">in</span> 0.466 seconds.</span><br><span class="line"> Auto-regeneration: disabled. Use --watch to <span class="built_in">enable</span>.</span><br></pre></td></tr></table></figure>

<p>参考github issues：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2pla3lsbC9taW5pbWEvaXNzdWVzLzcwOQ==">https://github.com/jekyll/minima/issues/709<i class="fa fa-external-link-alt"></i></span></p>
<p>编辑_config.yml文件：vim _config.yml</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># _config.yml</span></span><br><span class="line"><span class="attr">sass:</span></span><br><span class="line">  <span class="attr">quiet_deps:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>



<h3 id="借东风"><a href="#借东风" class="headerlink" title="借东风"></a>借东风</h3><p>查看个人已关联上的东风：如果想解除关联，同样在此页面进行配置。</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3NldHRpbmdzL2luc3RhbGxhdGlvbnM=">https://github.com/settings/installations<i class="fa fa-external-link-alt"></i></span></p>
<p><img data-src="https://s1.ax1x.com/2023/04/09/ppbBfaQ.png"></p>
<p>如下示例是个人使用 hexo 和 next主题打造的个人博客站点。当然，优化思考同样可以应用到jekyll或者hugo上。 关于 静态博客优化一点点思考。money &amp; time 寻找平衡。</p>
<p>闲暇时间，想起自己很久没维护的hexo + nextjs打造的静态博客网站。访问速度龟速前进，比看小电影还慢。</p>
<p>一入编程深似海，从此节操是路人。这里是文某人网络三无（无廉耻、无节操、无页面）教程，希望对你有所帮助。</p>
<p><strong>思考</strong></p>
<p>静态博客网站老生常谈的两大问题：</p>
<ol>
<li>加载静态资源耗时长，使用cdn加速、压缩js、css、html文件，提高体验。</li>
<li>访问国外网站速度慢，如果科学上网，速度还行。 其实你会发现，优化再优化最终归结到了科学上网，资源在国内访问速度自然没话说。</li>
</ol>
<p>做完以上（压缩、CDN、套皮、科学上网）测试，可以在Chrome浏览器使用F12进行调试，找到Network，使用快捷键ctrl + r 查看css消耗时间对比，发现main.css加载耗时很长。</p>
<p>使用ctrl + f5大刷新：</p>
<ul>
<li>套cf（cloudflare）皮：main.css加载时间300ms左右。</li>
<li>没套皮：main.css加载时间，运气不好，等待超过10s。</li>
<li>开加速光环：纵享丝滑，同样ms级别，也在300ms左右。</li>
<li>nginx高性能服务器：访问加载速度一样很丝滑。</li>
</ul>
<p><strong>tips</strong>：浏览器有缓存机制，如果f5小刷新没生效，使用ctrl + f5大刷新或者 ctrl + shift + delete清除缓存进行尝试。</p>
<p>如果你访问是我原始没做啥优化也没套皮的这个地址：<span class="exturl" data-url="aHR0cHM6Ly93emd5LmNud2FuZ2sudG9wLw==">https://wzgy.cnwangk.top<i class="fa fa-external-link-alt"></i></span>   体验太糟糕了。</p>
<p>使用第三方平台同步github pages，如果同步过程访问github授权太慢，最好开个科学上网小工具（比如GreenHub）。</p>
<p><strong>需要做两件事</strong>：</p>
<ol>
<li>在Vercel、cloudflare、netlify提供pages服务引入github pages仓库内容，设置自定义域名。</li>
<li>在云服务器厂商购买域名，进行CNAME解析(域名映射)。</li>
</ol>
<p><strong>以腾讯云域名控制台为示例进行DNS解析展示</strong>：<br><a href="https://imgse.com/i/pSxU5F0"><img data-src="https://s1.ax1x.com/2023/02/23/pSxU5F0.jpg" alt="pSxU5F0.jpg"></a></p>
<p>此处只展示基本配置、详细使用我相信各位道友比我还拿手。</p>
<p><strong>Vercel</strong></p>
<p>访问： <span class="exturl" data-url="aHR0cHM6Ly92ZXJjZWwuY29tLw==">https://vercel.com<i class="fa fa-external-link-alt"></i></span>，同步github上的github pages 仓库即可。如果你使用CNAME值解析DNS，无需担心dns可能被污染的问题。</p>
<p>配置Domains（域名）：</p>
<p><a href="https://imgse.com/i/pSxdUUI"><img data-src="https://s1.ax1x.com/2023/02/23/pSxdUUI.jpg" alt="pSxdUUI.jpg"></a></p>
<p>如果调试时，没有立即自动同步更新，可做如下尝试。通常来说，一段时间会自动同步过来。</p>
<p><a href="https://imgse.com/i/pSxU7SU"><img data-src="https://s1.ax1x.com/2023/02/23/pSxU7SU.jpg" alt="pSxU7SU.jpg"></a></p>
<p>使用过程中，有可能遇到使用 git 提交github仓库，但是页面没有刷新过来。可能你遇到了和我一样的问题，<strong>vercel 同步github pages仓库内容时，Deployments过程中进行 Running Checks失败了，需要手动skip all</strong>。</p>
<p><img data-src="https://s1.ax1x.com/2023/04/09/ppbBWVg.png"></p>
<p>个人搭建效果可供参考：<a href="https://blog.cnwangk.top/">https://blog.cnwangk.top</a></p>
<p><strong>cloudflare</strong></p>
<p>官网：<span class="exturl" data-url="aHR0cHM6Ly93d3cuY2xvdWRmbGFyZXN0YXR1cy5jb20v">https://www.cloudflarestatus.com<i class="fa fa-external-link-alt"></i></span><br>使用cloudflare pages服务，导入github pages服务仓库。与Vercel一样支持CNAME解析（域名映射）。<br>个人搭建效果可供参考：<span class="exturl" data-url="aHR0cHM6Ly9jZi5jbndhbmdrLnRvcC8=">https://cf.cnwangk.top<i class="fa fa-external-link-alt"></i></span></p>
<p><a href="https://imgse.com/i/pSxUIYV"><img data-src="https://s1.ax1x.com/2023/02/23/pSxUIYV.jpg" alt="pSxUIYV.jpg"></a></p>
<p><strong>netlify</strong></p>
<p>访问：<span class="exturl" data-url="aHR0cHM6Ly9hcHAubmV0bGlmeS5jb20v">https://app.netlify.com<i class="fa fa-external-link-alt"></i></span>，同步github上的github pages 仓库即可。同样支持CNAME解析（域名映射）。<br>个人搭建效果可供参考：<span class="exturl" data-url="aHR0cHM6Ly93d3cuY253YW5nay50b3Av">https://www.cnwangk.top<i class="fa fa-external-link-alt"></i></span></p>
<p><a href="https://imgse.com/i/pSxUoWT"><img data-src="https://s1.ax1x.com/2023/02/23/pSxUoWT.jpg" alt="pSxUoWT.jpg"></a></p>
<p>对比访问速度，下面套完皮后，感觉是不是还凑合。</p>
<p><strong>云服务器</strong></p>
<ul>
<li>阿里云 &amp; 腾讯云 &amp; 华为云</li>
<li>学生优惠 &amp; 首购优惠</li>
</ul>
<p>使用云服务器，主要是高带宽比较贵，配置可以不用太高，安装字符界面足以满足日常需求。</p>
<p>安装nginx服务，将静态资源文件部署到html目录。</p>
<p>图片服务器也有着落了，使用MinIO &amp; FastDFS搭建图片服务，目前个人比较推荐MinIO 。使用对象云存储对服务器压力要好很多，服务与图片分离开来，互不影响。</p>
<p>MinIO 中文官网下载地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cubWluaW8ub3JnLmNuL2Rvd25sb2FkLnNodG1sIy9saW51eA==">https://www.minio.org.cn/download.shtml#/linux<i class="fa fa-external-link-alt"></i></span></p>
<p>关于图片存储可以使用路过图床，如果想拥有更好的体验，<strong>可以使用oos、cos、七牛云</strong>这种付费对象云存储服务，什么都好，唯独需要money。</p>
<p><strong>注意</strong>：在大陆使用域名需要备案，现在域名备案相对宽松，在腾讯云购买云服务器提供便捷备案。</p>
<p><strong>感受</strong></p>
<p>一朝笑尽天下事，从此节操是路人。没整理的时候，访问体验很糟糕，整完之后越来越糟糕，当然都是玩笑话。</p>
<p>cloudflare与Vercel、netlify使用体验相差无几，都支持CNAME解析（域名映射）。其实都差不多，如果非要挑一个出来，cloudflare体验稍微好一点点。</p>
<p>如果不想这么繁琐，可以使用国内平台gitee去构建gitee pages静态博客网站。</p>
<p>有经济条件，可以考虑购买云服务器（或者轻量级应用服务器）将静态博客文件使用高性能web服务器nginx进行托管。当然，nginx远不止这点功能，诸如反向代理、缓存、负载均衡等等比较强大的功能。</p>
<p>将生成的静态文件复制到 nginx 的 html 目录下即可，不用做任何改动。如果没有服务器，可以在 Windows 或者使用 VMware虚拟机搭建Linux环境安装nginx进行测试。关于nginx入门教程，可以在站内搜索：nginx入门到实践。</p>
<p>访问：<span class="exturl" data-url="aHR0cDovL2xvY2FsaG9zdC8=">http://localhost<i class="fa fa-external-link-alt"></i></span>  或者 <span class="exturl" data-url="aHR0cDovLzEyNy4wLjAuMS8=">http://127.0.0.1<i class="fa fa-external-link-alt"></i></span> ，体验还不错。</p>
<p><strong>参考资料</strong></p>
<ul>
<li>ruby官网：<span class="exturl" data-url="aHR0cHM6Ly93d3cucnVieS1sYW5nLm9yZy96aF9jbi8=">https://www.ruby-lang.org/zh_cn/<i class="fa fa-external-link-alt"></i></span></li>
<li>jekyll doc：<span class="exturl" data-url="aHR0cHM6Ly9qZWt5bGxyYi5jb20vZG9jcy8=">https://jekyllrb.com/docs/<i class="fa fa-external-link-alt"></i></span></li>
<li>jekyll posts文档：<span class="exturl" data-url="aHR0cHM6Ly9qZWt5bGxyYi5jb20vZG9jcy9wb3N0cy8=">https://jekyllrb.com/docs/posts/<i class="fa fa-external-link-alt"></i></span></li>
<li>jekyll minima：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2pla3lsbC9taW5pbWEvaXNzdWVzLzcwOQ==">https://github.com/jekyll/minima/issues/709<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>以上是我记录自己爬过的坑，希望对你有所帮助！</p>
<p>——END——</p>
]]></content>
      <categories>
        <category>静态博客</category>
      </categories>
      <tags>
        <tag>jekyll</tag>
      </tags>
  </entry>
  <entry>
    <title>程序人生：人生中的第一个Rust应用程序</title>
    <url>/2023/03/24/CentOS-Stream-9-%E5%88%9D%E4%BD%93%E9%AA%8CRust/</url>
    <content><![CDATA[<p>Linux（CentOS-Stream-9）平台相对容易点，RHEL系列使用yum或者dnf管理工具安装Rust环境即可体验。</p>
<p>Rust官网：<span class="exturl" data-url="aHR0cHM6Ly93d3cucnVzdC1sYW5nLm9yZy96aC1DTi9sZWFybi9nZXQtc3RhcnRlZA==">https://www.rust-lang.org/zh-CN/learn/get-started<i class="fa fa-external-link-alt"></i></span></p>
<p><a href="https://imgse.com/i/ppBKbA1"><img data-src="https://s1.ax1x.com/2023/03/24/ppBKbA1.png" alt="ppBKbA1.png"></a></p>
<p>如果你只是想在Windows环境体验Rust，可能比较麻烦，需要获取vs_BuildTools。</p>
<p>体验简易步骤如下。</p>
<h3 id="Rust初体验：hello-rust"><a href="#Rust初体验：hello-rust" class="headerlink" title="Rust初体验：hello rust"></a>Rust初体验：hello rust</h3><p>1、安装rust环境</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install rust.x86_64</span><br></pre></td></tr></table></figure>

<p>2、新建rust工作空间</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> rust_workspace</span><br><span class="line"><span class="built_in">cd</span> rust_workspace/</span><br></pre></td></tr></table></figure>

<p>3、进入rust工作空间</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> projects</span><br><span class="line"><span class="built_in">cd</span> projects/</span><br></pre></td></tr></table></figure>

<p>4、编写rust版hello world</p>
<p>编写rust脚本：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim main.rs</span><br></pre></td></tr></table></figure>

<p>写入如下内容：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">fn <span class="function"><span class="title">main</span></span>()&#123;</span><br><span class="line">    println!(<span class="string">&quot;hello rust!!!&quot;</span>);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>
<p>保存退出： </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">:wq</span><br></pre></td></tr></table></figure>

<p>5、编译man.rs</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rustc main.rs</span><br></pre></td></tr></table></figure>

<p>6、执行main</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./main</span><br><span class="line">hello rust!!!</span><br></pre></td></tr></table></figure>
<p>看到 hello rust!!! 证明体验完成。</p>
<h3 id="Rust初体验：cargo"><a href="#Rust初体验：cargo" class="headerlink" title="Rust初体验：cargo"></a>Rust初体验：cargo</h3><p>1、安装cargo</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install cargo</span><br></pre></td></tr></table></figure>



<p>2、初始化项目:hello-rust</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cargo new hello-rust</span><br><span class="line"><span class="built_in">cd</span> hello-rust/</span><br></pre></td></tr></table></figure>



<p>3、运行项目</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cargo run </span><br><span class="line">   Compiling hello-rust v0.1.0 (/opt/rust_workspace/hello-rust)</span><br><span class="line">    Finished dev [unoptimized + debuginfo] target(s) <span class="keyword">in</span> 0.32s</span><br><span class="line">     Running `target/debug/hello-rust`</span><br><span class="line">Hello, world!</span><br></pre></td></tr></table></figure>



<p>4、Cargo.toml追加内容</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[dependencies]</span><br><span class="line">ferris-says = <span class="string">&quot;0.2&quot;</span></span><br></pre></td></tr></table></figure>
<p>这一步，引入了依赖(dependencies)库：ferris-says</p>
<p>5、main.rs填充内容</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">use ferris_says::say; // from the previous step</span><br><span class="line">use std::io::&#123;stdout, BufWriter&#125;;</span><br><span class="line"> </span><br><span class="line">fn <span class="function"><span class="title">main</span></span>() &#123;</span><br><span class="line">    println!(<span class="string">&quot;Hello, world!&quot;</span>);</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">let</span> stdout = stdout();</span><br><span class="line">    <span class="built_in">let</span> message = String::from(<span class="string">&quot;Hello fellow Rustaceans!&quot;</span>);</span><br><span class="line">    <span class="built_in">let</span> width = message.chars().count();</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">let</span> mut writer = BufWriter::new(stdout.lock());</span><br><span class="line">    say(message.as_bytes(), width, &amp;mut writer).unwrap();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>6、运行程序：cargo run</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@Centos9-Stream hello-rust]<span class="comment"># cargo run</span></span><br><span class="line">    Finished dev [unoptimized + debuginfo] target(s) <span class="keyword">in</span> 0.03s</span><br><span class="line">     Running `target/debug/hello-rust`</span><br><span class="line">Hello, world!</span><br><span class="line"> __________________________</span><br><span class="line">&lt; Hello fellow Rustaceans! &gt;</span><br><span class="line"> --------------------------</span><br><span class="line">        \</span><br><span class="line">         \</span><br><span class="line">            _~^~^~_</span><br><span class="line">        \) /  o o  \ (/</span><br><span class="line">          <span class="string">&#x27;_   -   _&#x27;</span></span><br><span class="line">          / <span class="string">&#x27;-----&#x27;</span> \</span><br></pre></td></tr></table></figure>



<p>看到上面的效果，难道不想体验一下么？</p>
<h3 id="配置vim：rust-vim"><a href="#配置vim：rust-vim" class="headerlink" title="配置vim：rust.vim"></a>配置vim：rust.vim</h3><p>如果你没有安装 vim-plug 插件，请先安装：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2p1bmVndW5uL3ZpbS1wbHVn">https://github.com/junegunn/vim-plug<i class="fa fa-external-link-alt"></i></span></p>
<p>如果你和我一样使用的是centos-9-stream，可以下载 plug.vim，复制到如下目录：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> plug.vim /usr/share/vim/vim82/autoload/</span><br></pre></td></tr></table></figure>

<p>重启vim即可生效。</p>
<p><strong>rust.vim开源仓库地址</strong>：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3J1c3QtbGFuZy9ydXN0LnZpbQ==">https://github.com/rust-lang/rust.vim<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>安装rust插件：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Plug <span class="string">&#x27;rust-lang/rust.vim&#x27;</span></span><br></pre></td></tr></table></figure>



<p><strong>vim基本用法</strong>：可以在站内搜索 vim入门实战。</p>
<p>希望对你有所帮助哟！</p>
<p>——END——</p>
]]></content>
      <categories>
        <category>web开发</category>
      </categories>
      <tags>
        <tag>Rust</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS7 Linux 使用VMware12搭建测试环境</title>
    <url>/2021/04/26/CentOS7%20Linux%20%E4%BD%BF%E7%94%A8VMware12%E6%90%AD%E5%BB%BA%E6%B5%8B%E8%AF%95%E7%8E%AF%E5%A2%83/</url>
    <content><![CDATA[<p>﻿以前写过VMware8+Centos6.5的教程，做为经典的入门确实很舒服。</p>
<p>毕竟VMware8已经具备基本的需求，而且对电脑性能配置要求不高。</p>
<p>现在推荐使用VMware12以及Centos7作为测试环境。</p>
<h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><p>lnmpa（linux服务器 + Nginx服务器（中间件，反向代理） + MySQL（MariaDB）数据库+ php（看需求） + Apache（Tomcat服务器））环境搭建之前，需要准备VMware虚拟机和Linux版本（Centos或者Ubuntu）。个人推荐使用Centos，毕竟主打服务器，基本用不上桌面系统。</p>
<p>如果要使用桌面系统，可以下载Ubuntu系统尝鲜，UI界面越做越耐看。麒麟系统适配做的还可以，很耐看。桌面Ubuntu，服务器兼容Centos。<br>个人开发者尝鲜版：<span class="exturl" data-url="aHR0cHM6Ly93d3cudWJ1bnR1a3lsaW4uY29tL2Rvd25sb2Fkcy8=">https://www.ubuntukylin.com/downloads/<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="一、VMware12安装"><a href="#一、VMware12安装" class="headerlink" title="一、VMware12安装"></a>一、VMware12安装</h2><p>这里就不做截图了，绿色版的安装，基本就是下一步下一步。在文章的开头，我提供了VM8和VM12的汁源。其中注册码，也包含在安装包里面，如果没找到可以百度或者谷歌搜索，网上有很多。</p>
<h2 id="二、VMware12新建虚拟机"><a href="#二、VMware12新建虚拟机" class="headerlink" title="二、VMware12新建虚拟机"></a>二、VMware12新建虚拟机</h2><p>这里推荐新建一个空白的虚拟机，一般来说使用典型的配置就够用。当然可以尝试自定义高级，基于你对虚拟机的使用认知比较熟练。其次，你也可以在新建虚拟机的同时，直接选择需要的操作系统镜像进行直接配置安装。</p>
<h4 id="01、可以选典型，设置更简单"><a href="#01、可以选典型，设置更简单" class="headerlink" title="01、可以选典型，设置更简单"></a>01、可以选典型，设置更简单</h4><p><img data-src="https://img-blog.csdnimg.cn/img_convert/469e3fcd2fb6c4b0e28f3c20be97ed61.png#" alt="在这里插入图片描述"></p>
<h4 id="02、新建虚拟机向导，选择虚拟机硬件兼容性，默认就行"><a href="#02、新建虚拟机向导，选择虚拟机硬件兼容性，默认就行" class="headerlink" title="02、新建虚拟机向导，选择虚拟机硬件兼容性，默认就行"></a>02、新建虚拟机向导，选择虚拟机硬件兼容性，默认就行</h4><p><img data-src="https://img-blog.csdnimg.cn/img_convert/f96f8cf41b4181f3c0aa9cd67652fc5a.png#" alt="在这里插入图片描述"></p>
<h4 id="03、新建虚拟机向导，-选稍后安装操作系统"><a href="#03、新建虚拟机向导，-选稍后安装操作系统" class="headerlink" title="03、新建虚拟机向导， 选稍后安装操作系统"></a>03、新建虚拟机向导， 选稍后安装操作系统</h4><p><img data-src="https://img-blog.csdnimg.cn/img_convert/505ce8f6b22043f4c4b7c77e59d4c752.png#" alt="在这里插入图片描述"></p>
<h4 id="04、新建虚拟机向导，选择客户机操作系统"><a href="#04、新建虚拟机向导，选择客户机操作系统" class="headerlink" title="04、新建虚拟机向导，选择客户机操作系统"></a>04、新建虚拟机向导，选择客户机操作系统</h4><p>此处我选linux作为例子，当然你可以选择window，安装更简单。</p>
<p>说简单当然基于我们对win操作系统更熟悉，都是图形化安装界面。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/bb92062ecae71abfb8a9bb2dc3042840.png#" alt="在这里插入图片描述"></p>
<h4 id="05、新建虚拟机向导，虚拟机的命名"><a href="#05、新建虚拟机向导，虚拟机的命名" class="headerlink" title="05、新建虚拟机向导，虚拟机的命名"></a>05、新建虚拟机向导，虚拟机的命名</h4><p>是centos就填centos系统操作版本，例如：centos7_64</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/1c8e587dccdb3a9a7c99497b5d6e462f.png#" alt="在这里插入图片描述"></p>
<h4 id="06、新建虚拟机向导，处理器配置根据实际需求来配置。"><a href="#06、新建虚拟机向导，处理器配置根据实际需求来配置。" class="headerlink" title="06、新建虚拟机向导，处理器配置根据实际需求来配置。"></a>06、新建虚拟机向导，处理器配置根据实际需求来配置。</h4><p>当然电脑真机环境很强，可以给高点。</p>
<p>一般测试玩玩服务器，我不装桌面，无需太高配置。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/d0c256b020cce79c70f8a318d82e3633.png#" alt="在这里插入图片描述"></p>
<h4 id="07、新建虚拟机向导，虚拟机的内存，视实际需求定"><a href="#07、新建虚拟机向导，虚拟机的内存，视实际需求定" class="headerlink" title="07、新建虚拟机向导，虚拟机的内存，视实际需求定"></a>07、新建虚拟机向导，虚拟机的内存，视实际需求定</h4><p>没特殊需求，默认推荐设置就行</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/c8ea3761cf4262b160406f98a929a65b.png#" alt="在这里插入图片描述"></p>
<h4 id="08、新建虚拟机向导，虚拟机的网络类型设置"><a href="#08、新建虚拟机向导，虚拟机的网络类型设置" class="headerlink" title="08、新建虚拟机向导，虚拟机的网络类型设置"></a>08、新建虚拟机向导，虚拟机的网络类型设置</h4><p>推荐选NAT，当然后期可以修改</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/6c04fa85ebc5c5c5109b685c5bf2a031.png#" alt="在这里插入图片描述"></p>
<h4 id="09、新建虚拟机向导，虚拟机I-O控制类型默认推荐就可以了"><a href="#09、新建虚拟机向导，虚拟机I-O控制类型默认推荐就可以了" class="headerlink" title="09、新建虚拟机向导，虚拟机I&#x2F;O控制类型默认推荐就可以了"></a>09、新建虚拟机向导，虚拟机I&#x2F;O控制类型默认推荐就可以了</h4><p><img data-src="https://img-blog.csdnimg.cn/img_convert/2bd9fa0a37d02f1f49655bc28e8ae020.png#" alt="在这里插入图片描述"></p>
<h4 id="10、新建虚拟机向导，虚拟机磁盘类型，选推荐设置"><a href="#10、新建虚拟机向导，虚拟机磁盘类型，选推荐设置" class="headerlink" title="10、新建虚拟机向导，虚拟机磁盘类型，选推荐设置"></a>10、新建虚拟机向导，虚拟机磁盘类型，选推荐设置</h4><p><img data-src="https://img-blog.csdnimg.cn/img_convert/c1346444008a0c0d27c4df25028556ff.png#" alt="在这里插入图片描述"></p>
<h4 id="11、新建虚拟机向导，虚拟机创建磁盘，根据提示来"><a href="#11、新建虚拟机向导，虚拟机创建磁盘，根据提示来" class="headerlink" title="11、新建虚拟机向导，虚拟机创建磁盘，根据提示来"></a>11、新建虚拟机向导，虚拟机创建磁盘，根据提示来</h4><p><img data-src="https://img-blog.csdnimg.cn/img_convert/256adc2f7742b8e14b80c73ea50d3d19.png#" alt="在这里插入图片描述"></p>
<h4 id="12、新建虚拟机向导，虚拟机磁盘容量设置，选推荐默认设置"><a href="#12、新建虚拟机向导，虚拟机磁盘容量设置，选推荐默认设置" class="headerlink" title="12、新建虚拟机向导，虚拟机磁盘容量设置，选推荐默认设置"></a>12、新建虚拟机向导，虚拟机磁盘容量设置，选推荐默认设置</h4><p><img data-src="https://img-blog.csdnimg.cn/img_convert/11ff5064c900bb8dc0ea69597480d6f5.png#" alt="在这里插入图片描述"></p>
<h4 id="13、新建虚拟机向导，虚拟机指定磁盘文件，选推荐设置"><a href="#13、新建虚拟机向导，虚拟机指定磁盘文件，选推荐设置" class="headerlink" title="13、新建虚拟机向导，虚拟机指定磁盘文件，选推荐设置"></a>13、新建虚拟机向导，虚拟机指定磁盘文件，选推荐设置</h4><p><img data-src="https://img-blog.csdnimg.cn/img_convert/e853a08ba0c862fdf8ed42ce2fc103d6.png#" alt="在这里插入图片描述"></p>
<h4 id="14、编辑虚拟机设置，可以重新设定设备配置"><a href="#14、编辑虚拟机设置，可以重新设定设备配置" class="headerlink" title="14、编辑虚拟机设置，可以重新设定设备配置"></a>14、编辑虚拟机设置，可以重新设定设备配置</h4><p><img data-src="https://img-blog.csdnimg.cn/img_convert/90d267d58f4b713414eb02a9419f2fe4.png#" alt="在这里插入图片描述"></p>
<h4 id="15、新建虚拟机向导，设置ISO镜像文件路径"><a href="#15、新建虚拟机向导，设置ISO镜像文件路径" class="headerlink" title="15、新建虚拟机向导，设置ISO镜像文件路径"></a>15、新建虚拟机向导，设置ISO镜像文件路径</h4><p>到此，虚拟机的设置就完成了，接着就是下面对centos7的安装。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/ff750685504d9b5b4cd3921e66d769dc.png#" alt="在这里插入图片描述"></p>
<h2 id="三、Centos7的安装"><a href="#三、Centos7的安装" class="headerlink" title="三、Centos7的安装"></a>三、Centos7的安装</h2><h4 id="01、选择Install-CentOS-Linux-7"><a href="#01、选择Install-CentOS-Linux-7" class="headerlink" title="01、选择Install CentOS Linux 7"></a>01、选择Install CentOS Linux 7</h4><p><img data-src="https://img-blog.csdnimg.cn/img_convert/d08e081eed0801c4272b49f9b1634832.png#" alt="在这里插入图片描述"></p>
<h4 id="02、选择语言，这里推荐选中文"><a href="#02、选择语言，这里推荐选中文" class="headerlink" title="02、选择语言，这里推荐选中文"></a>02、选择语言，这里推荐选中文</h4><p><img data-src="https://img-blog.csdnimg.cn/img_convert/1d4ccb619e0910af722908dbca83e90c.png#" alt="在这里插入图片描述"></p>
<h4 id="03、选择日期和时间"><a href="#03、选择日期和时间" class="headerlink" title="03、选择日期和时间"></a>03、选择日期和时间</h4><p><img data-src="https://img-blog.csdnimg.cn/img_convert/4ea21e5809a9df5cf28c8e58f1b72b29.png#" alt="在这里插入图片描述"></p>
<h4 id="04、选择安装目标位置"><a href="#04、选择安装目标位置" class="headerlink" title="04、选择安装目标位置"></a>04、选择安装目标位置</h4><p>这一步你也可以选择<strong>我要配置分区</strong></p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/ee9dc0bea6d69bff6ac61019214a71e0.png#" alt="在这里插入图片描述"></p>
<h4 id="05、软件选择，初次选基础设施服务器"><a href="#05、软件选择，初次选基础设施服务器" class="headerlink" title="05、软件选择，初次选基础设施服务器"></a>05、软件选择，初次选基础设施服务器</h4><p>右边的环境附加项，根据实际需求定。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/918d26702b4ef18cad48de3ba8471605.png#" alt="在这里插入图片描述"></p>
<h4 id="06、暗转信息摘要，必选项选完即可点击安装"><a href="#06、暗转信息摘要，必选项选完即可点击安装" class="headerlink" title="06、暗转信息摘要，必选项选完即可点击安装"></a>06、暗转信息摘要，必选项选完即可点击安装</h4><p><img data-src="https://img-blog.csdnimg.cn/img_convert/7c446f414d137e485c291833773b4c93.png#" alt="在这里插入图片描述"></p>
<h4 id="07、配置，用户设置以及创建用户"><a href="#07、配置，用户设置以及创建用户" class="headerlink" title="07、配置，用户设置以及创建用户"></a>07、配置，用户设置以及创建用户</h4><p><img data-src="https://img-blog.csdnimg.cn/img_convert/bd1f48ead9d377ff53aeb03a2423aec3.png#" alt="在这里插入图片描述"></p>
<h2 id="四、服务器字符界面初始设置"><a href="#四、服务器字符界面初始设置" class="headerlink" title="四、服务器字符界面初始设置"></a>四、服务器字符界面初始设置</h2><h4 id="01、上一步提示重启，进入字符界面"><a href="#01、上一步提示重启，进入字符界面" class="headerlink" title="01、上一步提示重启，进入字符界面"></a>01、上一步提示重启，进入字符界面</h4><p><img data-src="https://img-blog.csdnimg.cn/img_convert/ff0ef62483afd00cb3ca29c4e334ed20.png#" alt="在这里插入图片描述"></p>
<h4 id="02、ifconfig查看网卡IP地址配置"><a href="#02、ifconfig查看网卡IP地址配置" class="headerlink" title="02、ifconfig查看网卡IP地址配置"></a>02、ifconfig查看网卡IP地址配置</h4><p>需要修改ens33这个文件，将里面的ONBOOTS属性改为YES</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/a2ece3873f37bdd8b31d63d9aca52d85.png#" alt="在这里插入图片描述"></p>
<h4 id="03、进入-etc-sysconfig-network-scripts-，找到ifcfg-ens33"><a href="#03、进入-etc-sysconfig-network-scripts-，找到ifcfg-ens33" class="headerlink" title="03、进入&#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;，找到ifcfg-ens33"></a>03、进入&#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;，找到ifcfg-ens33</h4><p><img data-src="https://img-blog.csdnimg.cn/img_convert/4fd6109ba2d549ccb6fa17ba1e27b773.png#" alt="在这里插入图片描述"></p>
<h4 id="04、进入-etc-sysconfig-network-scripts"><a href="#04、进入-etc-sysconfig-network-scripts" class="headerlink" title="04、进入&#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;"></a>04、进入&#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;</h4><p>找到ifcfg-ens33使用vim命令修改：vim ifcfg-ens33</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ONBOOT=<span class="built_in">yes</span></span><br></pre></td></tr></table></figure>

<p><img data-src="https://img-blog.csdnimg.cn/img_convert/3e695c873cff55f74310ab5e139b5237.png#" alt="在这里插入图片描述"></p>
<h4 id="05、重启服务器，使用reboot命令"><a href="#05、重启服务器，使用reboot命令" class="headerlink" title="05、重启服务器，使用reboot命令"></a>05、重启服务器，使用reboot命令</h4><p>重启完，使用命令查看IP地址：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ifconfig</span><br></pre></td></tr></table></figure>
<p>这里建议修改虚拟机的IP地址为静态地址。</p>
<p>至于如何修改，文章后续会提到，可以参考网上的其它文章。</p>
<p>给出自己总结如何修改IP地址，站内搜索：Linux系统配置静态ip地址</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/9e9d3d941bbfd93631ee58810503d8d1.png#" alt="在这里插入图片描述"></p>
<h2 id="五、XSHELL的配置"><a href="#五、XSHELL的配置" class="headerlink" title="五、XSHELL的配置"></a>五、XSHELL的配置</h2><p>xshell的下载与安装，去官网获取xshell个人版，免费使用正版。<br><strong>xshell7个人版：</strong><br><img data-src="https://img-blog.csdnimg.cn/0b19f9858fc640f99277b4d06e3b804f.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>有能力支持正版，当然还是支持正版<br><img data-src="https://img-blog.csdnimg.cn/e85e67d43d9a4c129888032b1ef326c7.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>使用邮箱账号去接收，xshell官方的下载地址：<br><span class="exturl" data-url="aHR0cHM6Ly93d3cubmV0c2FyYW5nLmNvbS96aC9mcmVlLWZvci1ob21lLXNjaG9vbC8=">https://www.netsarang.com/zh/free-for-home-school/<i class="fa fa-external-link-alt"></i></span></p>
<p>当然某功能有阉割，个人使用足以。</p>
<h4 id="01、XSHELL的使用，配置用户主机"><a href="#01、XSHELL的使用，配置用户主机" class="headerlink" title="01、XSHELL的使用，配置用户主机"></a>01、XSHELL的使用，配置用户主机</h4><p><img data-src="https://img-blog.csdnimg.cn/img_convert/b02b17f108472071b00e4afa35c3934d.png#" alt="在这里插入图片描述"></p>
<h4 id="02、XSHELL的使用，配置用户主机名与密码"><a href="#02、XSHELL的使用，配置用户主机名与密码" class="headerlink" title="02、XSHELL的使用，配置用户主机名与密码"></a>02、XSHELL的使用，配置用户主机名与密码</h4><p><img data-src="https://img-blog.csdnimg.cn/img_convert/99e1d5a355db679753bcbd7cb11bcb63.png#" alt="在这里插入图片描述"></p>
<h4 id="03、验证主机秘钥"><a href="#03、验证主机秘钥" class="headerlink" title="03、验证主机秘钥"></a>03、验证主机秘钥</h4><p>选择一次性接受，以后每次登陆需要输入用户密码。（自己的服务器，建议选一次性接受比较好）<br>选择永久接受，不用每次输入密码。（虚拟机搭建的环境，怎么方便怎么来）</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/f35dca0df5e2043abac736a70a1d3ef4.png#" alt="在这里插入图片描述"></p>
<h4 id="04、至此登录XSHELL成功"><a href="#04、至此登录XSHELL成功" class="headerlink" title="04、至此登录XSHELL成功"></a>04、至此登录XSHELL成功</h4><p><img data-src="https://img-blog.csdnimg.cn/img_convert/ca6b72eeaa09af3941231cc2df38fb3d.png#" alt="在这里插入图片描述"></p>
<p><strong>centos6.5以及centos7的镜像</strong><br>链接：<span class="exturl" data-url="aHR0cHM6Ly9zaGFyZS53ZWl5dW4uY29tLzVsZ3lZdms=">https://share.weiyun.com/5lgyYvk <i class="fa fa-external-link-alt"></i></span><br>密码：wcnrws</p>
<h2 id="六、搭建lnmpa环境"><a href="#六、搭建lnmpa环境" class="headerlink" title="六、搭建lnmpa环境"></a>六、搭建lnmpa环境</h2><p>lnmpa环境的搭建，可以使用一键命令安装，也可以单独手动配置。<br>linux + Nginx + MySQL（MariaDB）+ php（看需求） + Apache（Tomcat）</p>
<p>参考lnmp网站的安装，很详细：<br><span class="exturl" data-url="aHR0cHM6Ly9sbm1wLm9yZy9kb3dubG9hZC5odG1s">https://lnmp.org/download.html<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>开发运维</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS7 Linux 搭建MySQL主从复制</title>
    <url>/2021/11/30/CentOS7%20Linux%20%E6%90%AD%E5%BB%BAMySQL%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>MySQL主从复制实战。以前总听说集群之类的，从来没有好好思考过。如今有空余时间，终于亲自搭建环境得以实现MySQL主从复制。</p>
<p>从搭建虚拟机环境，以及安装Redhat系列的centos7.5服务器，部署MySQL5.6环境。嘿嘿，测试使用虚拟机搭建美滋滋。当然你也可以花money，多建几台云服务器实现集群环境。</p>
<h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><p>MySQL主从复制实战</p>
<h2 id="主要使用到的环境说明"><a href="#主要使用到的环境说明" class="headerlink" title="主要使用到的环境说明"></a>主要使用到的环境说明</h2><p><img data-src="https://img-blog.csdnimg.cn/b4f0f1eb4dae4cc0a6d57b0507ab1fe6.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6b6Z6IW-5LiH6YeMc2t5,size_20,color_FFFFFF,t_70,g_se,x_16#" alt="在这里插入图片描述"></p>
<p><strong>数据库版本</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#使用centos7.3初始安装就可选择安装所需基本环境</span></span><br><span class="line"><span class="number">5.6</span>.<span class="number">51</span><span class="literal">-log</span> MySQL Community Server (GPL)</span><br></pre></td></tr></table></figure>

<p><strong>操作系统</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">linux <span class="keyword">for</span> centos7.<span class="number">3</span>  or centos7.<span class="number">5</span></span><br></pre></td></tr></table></figure>

<p><strong>测试环境</strong>：VMware12虚拟机搭建三台centos7.3服务器<br><strong>服务器IP地址</strong>：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">IP_MASTER：<span class="number">192.168</span>.<span class="number">245.131</span></span><br><span class="line">IP_SLAVE：<span class="number">192.168</span>.<span class="number">245.132</span></span><br><span class="line">IP_SLAVE：<span class="number">192.168</span>.<span class="number">245.132</span></span><br></pre></td></tr></table></figure>
<p><strong>搭建服务器环境参考文章</strong>：<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbS9hcnRpY2xlL2RldGFpbHMvMTE2MDg1NDY3">VMware12配合使用Centos7搭建Linux开发环境<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>测试模型</strong>：一主两从，即（master、slave、slave）<br><strong>知识宝库</strong>：VMware的简单使用，Linux基本命令、MySQL数据库CRUD<br><strong>tips</strong>：VMware8亦可搭建，解决内存过小，这个小伙子有点东西啊！<br><strong>目标实现</strong>：MySQL主从复制</p>
<h2 id="一、binlog与relay-log"><a href="#一、binlog与relay-log" class="headerlink" title="一、binlog与relay-log"></a>一、binlog与relay-log</h2><h3 id="1-1-binlog"><a href="#1-1-binlog" class="headerlink" title="1.1 binlog"></a>1.1 binlog</h3><p><strong>作用</strong>：记录数据库改变的数据，在第四步可以进行验证。</p>
<p><strong>查看binlog日志</strong> </p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">/** 查看binlog日志 **/</span></span><br><span class="line"><span class="keyword">SHOW</span> BINLOG EVENTS <span class="keyword">IN</span> <span class="string">&#x27;mysql-bin.000004&#x27;</span></span><br></pre></td></tr></table></figure>

<p><strong>mysqlbinlog查看binlog日志</strong> </p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">/** mysqlbinlog查看binlog日志 **/</span></span><br><span class="line">mysqlbinlog <span class="comment">--short-form --force-if-open --base64-output=never /var/lib/mysql/mysql-bin.000004 //对应你MySQL的安装目录</span></span><br></pre></td></tr></table></figure>

<h3 id="1-2-relay-log"><a href="#1-2-relay-log" class="headerlink" title="1.2 relay-log"></a>1.2 relay-log</h3><p><strong>作用</strong>：连接master与slave节点的核心</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="number">01</span> master.info</span><br><span class="line"><span class="number">02</span> relay<span class="literal">-log</span>.info</span><br></pre></td></tr></table></figure>


<h2 id="二、master节点配置"><a href="#二、master节点配置" class="headerlink" title="二、master节点配置"></a>二、master节点配置</h2><h3 id="2-1-master节点配置"><a href="#2-1-master节点配置" class="headerlink" title="2.1 master节点配置"></a>2.1 master节点配置</h3><p>MySQL数据库配置文件my.cnf</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">vim /etc/my.cnf</span><br></pre></td></tr></table></figure>

<p>加入配置</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">#开启binlog</span><br><span class="line">log<span class="operator">-</span>bin<span class="operator">=</span>mysql<span class="operator">-</span>bin</span><br><span class="line">#不与其它从节点重复即可</span><br><span class="line">server<span class="operator">-</span>id<span class="operator">=</span><span class="number">101</span></span><br><span class="line">#需要同步的数据，如果不配置则同步全部</span><br><span class="line">binlog<span class="operator">-</span>do<span class="operator">-</span>db<span class="operator">=</span>test_db</span><br><span class="line">#binlog日志保留的天数，清除超过<span class="number">10</span>天的日志；防止日志文件过大，导致磁盘空间不足</span><br><span class="line">expire<span class="operator">-</span>logs<span class="operator">-</span>days<span class="operator">=</span><span class="number">10</span></span><br><span class="line">#开启混合模式</span><br><span class="line">binlog_format<span class="operator">=</span>mixed</span><br><span class="line">innodb_file_per_table<span class="operator">=</span><span class="keyword">ON</span></span><br><span class="line">skip_name_resolve<span class="operator">=</span><span class="keyword">ON</span></span><br></pre></td></tr></table></figure>

<h3 id="2-2-重启mysql"><a href="#2-2-重启mysql" class="headerlink" title="2.2 重启mysql"></a>2.2 重启mysql</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#readhat7系列使用方式</span></span><br><span class="line">systemctl restart mysql</span><br></pre></td></tr></table></figure>

<h3 id="2-3-通过命令查看主节点状态"><a href="#2-3-通过命令查看主节点状态" class="headerlink" title="2.3 通过命令查看主节点状态"></a>2.3 通过命令查看主节点状态</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">show</span> master status\G;</span><br></pre></td></tr></table></figure>

<p>注意查看：master_log_pos的值，这点很重要，master与搭建集群的两个slave节点保持一致。</p>
<h3 id="2-4-授权slave节点账号"><a href="#2-4-授权slave节点账号" class="headerlink" title="2.4 授权slave节点账号"></a>2.4 授权slave节点账号</h3><p>关联授权搭建的两个slave子节点</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">#关联授权搭建的两个slave子节点</span><br><span class="line"><span class="keyword">GRANT</span> REPLICATION SLAVE <span class="keyword">ON</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;192.168.245.132&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;123456&#x27;</span>;</span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">#关联授权搭建的两个slave子节点</span><br><span class="line"><span class="keyword">GRANT</span> REPLICATION SLAVE <span class="keyword">ON</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;192.168.245.133&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;123456&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p>刷新权限</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">#刷新权限</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure>

<h3 id="2-5-查看验证"><a href="#2-5-查看验证" class="headerlink" title="2.5 查看验证"></a>2.5 查看验证</h3><p>显示查看日志</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">#显示查看日志</span><br><span class="line"><span class="keyword">show</span> <span class="keyword">global</span> variables <span class="keyword">like</span> <span class="string">&#x27;%log%&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p>显示查看服务</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">#显示查看服务</span><br><span class="line"><span class="keyword">show</span> <span class="keyword">global</span> variables <span class="keyword">like</span> <span class="string">&#x27;%server%&#x27;</span>;</span><br></pre></td></tr></table></figure>

<h2 id="三、slave节点配置"><a href="#三、slave节点配置" class="headerlink" title="三、slave节点配置"></a>三、slave节点配置</h2><h3 id="3-1-slave节点配置"><a href="#3-1-slave节点配置" class="headerlink" title="3.1 slave节点配置"></a>3.1 slave节点配置</h3><p>MySQL数据库配置文件my.cnf</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#slave01（从节点配置）</span></span><br><span class="line">vim /etc/my.cnf</span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">#不与主节点以及其它从节点重复即可</span><br><span class="line">server<span class="operator">-</span>id<span class="operator">=</span><span class="number">102</span></span><br></pre></td></tr></table></figure>

<h3 id="3-2-登录mysql设置"><a href="#3-2-登录mysql设置" class="headerlink" title="3.2 登录mysql设置"></a>3.2 登录mysql设置</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql <span class="operator">-</span>uroot <span class="operator">-</span>p</span><br></pre></td></tr></table></figure>

<p>输入命令如下</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">CHANGE MASTER <span class="keyword">TO</span></span><br><span class="line">MASTER_HOST<span class="operator">=</span><span class="string">&#x27;192.168.245.131&#x27;</span>,<span class="operator">/</span><span class="operator">/</span>MASTER主节点IP</span><br><span class="line">MASTER_USER<span class="operator">=</span><span class="string">&#x27;root&#x27;</span>,<span class="operator">/</span><span class="operator">/</span>创建的用户</span><br><span class="line">MASTER_PASSWORD<span class="operator">=</span><span class="string">&#x27;123456&#x27;</span>,<span class="operator">/</span><span class="operator">/</span>用户密码</span><br><span class="line">MASTER_LOG_FILE<span class="operator">=</span><span class="string">&#x27;mysql-bin.000001&#x27;</span>,<span class="operator">/</span><span class="operator">/</span>MASTER主机binlog日志名称，必须是最新的一个</span><br><span class="line">MASTER_LOG_POS<span class="operator">=</span><span class="number">120</span>,<span class="operator">/</span><span class="operator">/</span>binlog日志偏移量，对应master节点的</span><br><span class="line">master_port<span class="operator">=</span><span class="number">3306</span>;<span class="operator">/</span>端口号</span><br></pre></td></tr></table></figure>

<h3 id="3-3-开启中继日志"><a href="#3-3-开启中继日志" class="headerlink" title="3.3 开启中继日志"></a>3.3 开启中继日志</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">server<span class="operator">-</span>id<span class="operator">=</span><span class="number">102</span> #必须</span><br><span class="line">relay<span class="operator">-</span>log<span class="operator">=</span>relay<span class="operator">-</span>log #必须</span><br><span class="line">relay<span class="operator">-</span>log<span class="operator">-</span>index<span class="operator">=</span>relay<span class="operator">-</span>log.index #必须</span><br><span class="line">innodb_file_per_table<span class="operator">=</span><span class="keyword">ON</span> #非必须</span><br><span class="line">skip_name_resolve<span class="operator">=</span><span class="keyword">ON</span> #非必须</span><br></pre></td></tr></table></figure>

<h3 id="3-4-辅助操作"><a href="#3-4-辅助操作" class="headerlink" title="3.4 辅助操作"></a>3.4 辅助操作</h3><p>查看slave子节点状态</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">#查看slave子节点状态</span><br><span class="line"><span class="keyword">show</span> slave status\G;</span><br></pre></td></tr></table></figure>

<p>启动slave节点</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">#启动slave节点</span><br><span class="line"><span class="keyword">start</span> slave;</span><br></pre></td></tr></table></figure>

<p>关闭slave节点</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">#关闭slave节点</span><br><span class="line">stop slave;</span><br></pre></td></tr></table></figure>

<h3 id="3-5-slave02（从节点配置）"><a href="#3-5-slave02（从节点配置）" class="headerlink" title="3.5 slave02（从节点配置）"></a>3.5 slave02（从节点配置）</h3><p>修改MySQL从节点配置文件</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">vim /etc/my.cnf</span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">#不与主节点以及其它从节点重复即可</span><br><span class="line">server<span class="operator">-</span>id<span class="operator">=</span><span class="number">103</span></span><br></pre></td></tr></table></figure>

<p>查看slave子节点状态</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">#查看slave子节点状态</span><br><span class="line"><span class="keyword">show</span> slave status\G;</span><br></pre></td></tr></table></figure>

<p>启动slave节点</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">#启动slave节点</span><br><span class="line"><span class="keyword">start</span> slave;</span><br></pre></td></tr></table></figure>


<h2 id="四、创建表以及新增数据进行验证"><a href="#四、创建表以及新增数据进行验证" class="headerlink" title="四、创建表以及新增数据进行验证"></a>四、创建表以及新增数据进行验证</h2><h3 id="4-1-创建数据库用户"><a href="#4-1-创建数据库用户" class="headerlink" title="4.1 创建数据库用户"></a>4.1 创建数据库用户</h3><p>建议使用SQLyog工具创建用户，比较方便。</p>
<p>链接：<span class="exturl" data-url="aHR0cHM6Ly9wYW4uYmFpZHUuY29tL3MvMTFnSWxaS3hvVEc1QkNDY29YZFZKUmc="> https://pan.baidu.com/s/11gIlZKxoTG5BCCcoXdVJRg<i class="fa fa-external-link-alt"></i></span> 提取码: ntu7</p>
<h3 id="4-2-创建表"><a href="#4-2-创建表" class="headerlink" title="4.2 创建表"></a>4.2 创建表</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">/** 创建测试表GIRL **/</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `GIRL` (</span><br><span class="line">  `ID` <span class="type">varchar</span>(<span class="number">64</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `GIRE_NAME` <span class="type">varchar</span>(<span class="number">64</span>) <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `GIRL_AGE` <span class="type">varchar</span>(<span class="number">10</span>) <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `CUP_SIZE` <span class="type">varchar</span>(<span class="number">2</span>) <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`ID`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8_bin</span><br></pre></td></tr></table></figure>

<h3 id="4-3-生成测试数据"><a href="#4-3-生成测试数据" class="headerlink" title="4.3 生成测试数据"></a>4.3 生成测试数据</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">/** 插入测试数据 **/</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> GIRL <span class="keyword">values</span>(<span class="string">&#x27;tolove16B&#x27;</span>,<span class="string">&#x27;梦梦&#x27;</span>,<span class="string">&#x27;16&#x27;</span>,<span class="string">&#x27;B&#x27;</span>);</span><br></pre></td></tr></table></figure>



<h3 id="4-4-采用SQLylog工具验证"><a href="#4-4-采用SQLylog工具验证" class="headerlink" title="4.4 采用SQLylog工具验证"></a>4.4 采用SQLylog工具验证</h3><p><strong>master节点插入测试数据</strong><br><img data-src="https://img-blog.csdnimg.cn/267f0cde8fb84b08ba10885ef226dc8a.png?x-oss-process=,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6b6Z6IW-5LiH6YeMc2t5,size_20,color_FFFFFF,t_70,g_se,x_16#" alt="在这里插入图片描述"></p>
<p><strong>master节点binlog日志验证</strong><br><img data-src="https://img-blog.csdnimg.cn/1171a1cb58cb4ccf89f43c155e7be038.png?x-oss-process=,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6b6Z6IW-5LiH6YeMc2t5,size_20,color_FFFFFF,t_70,g_se,x_16#" alt="在这里插入图片描述"><br><strong>slave_check_RELAYLOG（133服务器）</strong><br><img data-src="https://img-blog.csdnimg.cn/65093ffc14f447389d1409f724f24261.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6b6Z6IW-5LiH6YeMc2t5,size_20,color_FFFFFF,t_70,g_se,x_16#" alt="在这里插入图片描述"></p>
<p>132_slave_insert_data_girl同步数据<br><img data-src="https://img-blog.csdnimg.cn/e3879a0a4d994b55bbab91d63ec0ac2a.png?x-oss-process=,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6b6Z6IW-5LiH6YeMc2t5,size_20,color_FFFFFF,t_70,g_se,x_16#" alt="在这里插入图片描述"></p>
<p>133_slave_check_RELAYLOG日志<br><img data-src="https://img-blog.csdnimg.cn/7e2c75a6733a4db0907e4062191a1aaa.png?x-oss-process=,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6b6Z6IW-5LiH6YeMc2t5,size_20,color_FFFFFF,t_70,g_se,x_16#" alt="在这里插入图片描述"></p>
<p>133_slave_同步数据<br><img data-src="https://img-blog.csdnimg.cn/635b955eec404eeaa64fa2a4d42df58e.png?x-oss-process=,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6b6Z6IW-5LiH6YeMc2t5,size_20,color_FFFFFF,t_70,g_se,x_16#" alt="在这里插入图片描述"></p>
<h2 id="五、排查问题"><a href="#五、排查问题" class="headerlink" title="五、排查问题"></a>五、排查问题</h2><h3 id="5-1-error-1236"><a href="#5-1-error-1236" class="headerlink" title="5.1 error 1236"></a>5.1 error 1236</h3><p><strong>master_log_pos与从节点不一致导致error 1236</strong><br><img data-src="https://img-blog.csdnimg.cn/19ebc56a514245fba120997f467d81f8.png?x-oss-process=,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6b6Z6IW-5LiH6YeMc2t5,size_20,color_FFFFFF,t_70,g_se,x_16#" alt="在这里插入图片描述"><br><strong>分析日志：position日志偏移量与master节点不一致</strong><br>设置的master_log_pos发生改变，导致position不一致，出现无法同步（报：error 1236）<br><img data-src="https://img-blog.csdnimg.cn/79dfcf85f972466c91740a83a132a17b.png?x-oss-process=,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6b6Z6IW-5LiH6YeMc2t5,size_20,color_FFFFFF,t_70,g_se,x_16#" alt="在这里插入图片描述"></p>
<p><strong>slave节点正常状态参考</strong></p>
<p><em>注意：我截图上的是后期优化处理过的，所以看到的pos和上面的不一致</em><br><img data-src="https://img-blog.csdnimg.cn/4ccd9a581e494d7d9b990d3edc83f052.png?x-oss-process=,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6b6Z6IW-5LiH6YeMc2t5,size_20,color_FFFFFF,t_70,g_se,x_16#" alt="在这里插入图片描述"></p>
<h3 id="5-2-解决问题"><a href="#5-2-解决问题" class="headerlink" title="5.2 解决问题"></a>5.2 解决问题</h3><p>通过如下设置保持与master节点一致<br>首先关闭slave节点</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">stop slave</span><br></pre></td></tr></table></figure>

<p>查看master节点日志偏移量</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">show</span> master status\G;</span><br></pre></td></tr></table></figure>

<p>在slave节点修改日志偏移量与master一致</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">change master <span class="keyword">to</span> master_log_file <span class="operator">=</span><span class="string">&#x27;mysql-bin.000005&#x27;</span>,master_log_pos<span class="operator">=</span><span class="number">950</span>;</span><br></pre></td></tr></table></figure>

<p>最后启动slave节点</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">start</span> slave</span><br></pre></td></tr></table></figure>

<h3 id="5-3-数据库授权远程登录"><a href="#5-3-数据库授权远程登录" class="headerlink" title="5.3 数据库授权远程登录"></a>5.3 数据库授权远程登录</h3><p>5.3.1 授权命令</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;你的数据库用户名&#x27;</span>@<span class="string">&#x27;单个ip或者%表示所有&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;你的数据库连接密码&#x27;</span> <span class="keyword">WITH</span> <span class="keyword">GRANT</span> OPTION;</span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;123456&#x27;</span> <span class="keyword">WITH</span> <span class="keyword">GRANT</span> OPTION;</span><br></pre></td></tr></table></figure>

<p>5.3.2 修改用户密码：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">set</span> password <span class="keyword">for</span> root<span class="variable">@localhost</span><span class="operator">=</span>password(<span class="string">&#x27;123456&#x27;</span>);</span><br></pre></td></tr></table></figure>


<h3 id="5-4-防火墙问题"><a href="#5-4-防火墙问题" class="headerlink" title="5.4 防火墙问题"></a>5.4 防火墙问题</h3><p>5.4.1 本次实战中使用到的是centos7，默认安装的是firewalld<br>5.4.2 临时关闭防火墙：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">systemctl stop firewalld.service</span><br></pre></td></tr></table></figure>

<p>5.4.3 实际工作中推荐需要使用哪些端口采取开放，比如开放MySQL默认的3306：<br>公共区域设置开放3306端口永久生效（–permanent）：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">firewall<span class="literal">-cmd</span> <span class="literal">--zone</span>=public <span class="literal">--add-port</span>=<span class="number">3306</span>/tcp <span class="literal">--permanent</span></span><br></pre></td></tr></table></figure>

<p>操作完记住重启或重载：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">firewalld<span class="literal">-cmd</span> <span class="literal">--reload</span></span><br></pre></td></tr></table></figure>

<p>移除：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">firewall<span class="literal">-cmd</span> <span class="literal">--zone</span>=public <span class="literal">--remove-port</span>=<span class="number">3306</span>/tcp <span class="literal">--permanent</span></span><br></pre></td></tr></table></figure>

<p>查看是否开放：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">firewall<span class="literal">-cmd</span> <span class="literal">--zone</span>=public <span class="literal">--query-port</span>=<span class="number">3306</span>/tcp</span><br></pre></td></tr></table></figure>
<h3 id="5-5-连接工具"><a href="#5-5-连接工具" class="headerlink" title="5.5 连接工具"></a>5.5 连接工具</h3><p>推荐使用Navicat和SQLyog可视化工具。<br>链接: <span class="exturl" data-url="aHR0cHM6Ly9wYW4uYmFpZHUuY29tL3MvMTFnSWxaS3hvVEc1QkNDY29YZFZKUmc=">https://pan.baidu.com/s/11gIlZKxoTG5BCCcoXdVJRg<i class="fa fa-external-link-alt"></i></span> 提取码: ntu7<br>SQLyog官网下载<br><span class="exturl" data-url="aHR0cHM6Ly9zcWx5b2cuZW4uc29mdG9uaWMuY29tLw==">https://sqlyog.en.softonic.com/<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="六、实现MySQL主从复制"><a href="#六、实现MySQL主从复制" class="headerlink" title="六、实现MySQL主从复制"></a>六、实现MySQL主从复制</h2><h3 id="6-1-分析模型"><a href="#6-1-分析模型" class="headerlink" title="6.1 分析模型"></a>6.1 分析模型</h3><p>分析模型：一主一从，一主多从，多主一从</p>
<h3 id="6-1-1-一主一从模型：master-slave"><a href="#6-1-1-一主一从模型：master-slave" class="headerlink" title="6.1.1 一主一从模型：master-&gt;slave"></a>6.1.1 一主一从模型：master-&gt;slave</h3><p><img data-src="https://img-blog.csdnimg.cn/9421b86c2f2b4519a0e7cc6216ef5693.png#" alt="在这里插入图片描述"></p>
<h3 id="6-1-2-一主多从"><a href="#6-1-2-一主多从" class="headerlink" title="6.1.2 一主多从"></a>6.1.2 一主多从</h3><p>在slave节点再配置slave缓解master服务器压力<br><img data-src="https://img-blog.csdnimg.cn/6a6ea12e0dbe4fb5a07a5f2b683b8c3f.png?x-oss-process=,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6b6Z6IW-5LiH6YeMc2t5,size_18,color_FFFFFF,t_70,g_se,x_16#" alt="在这里插入图片描述"></p>
<h3 id="6-1-3-多主一从"><a href="#6-1-3-多主一从" class="headerlink" title="6.1.3 多主一从"></a>6.1.3 多主一从</h3><p><img data-src="https://img-blog.csdnimg.cn/0058c7bfdb584e039ae7b0bd0c6a12a0.png?x-oss-process=,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6b6Z6IW-5LiH6YeMc2t5,size_18,color_FFFFFF,t_70,g_se,x_16#" alt="在这里插入图片描述"></p>
<h3 id="6-1-4-特例：主-主复制"><a href="#6-1-4-特例：主-主复制" class="headerlink" title="6.1.4 特例：主-主复制"></a>6.1.4 特例：主-主复制</h3><p>（每一个主既是从又是主）<br><img data-src="https://img-blog.csdnimg.cn/3b12ec87b3894e54ac2b0d222ef65cc7.png#" alt="在这里插入图片描述"></p>
<h3 id="6-1-5-使用SQLylog操作验证"><a href="#6-1-5-使用SQLylog操作验证" class="headerlink" title="6.1.5 使用SQLylog操作验证"></a>6.1.5 使用SQLylog操作验证</h3><p>分别登陆三台数据库服务器（推荐SQLylog工具）<br>同时登陆xshell工具连接查看三台服务器状态（推荐使用xshell或者SecureCRT）</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">ip:<span class="number">192.168</span>.<span class="number">245.131</span> //master</span><br></pre></td></tr></table></figure>

<p>数据库：test_db &#x2F;&#x2F;与master节点配置单一用户对应<br>数据库表：GIRL</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">ip:<span class="number">192.168</span>.<span class="number">245.132</span> //slave</span><br></pre></td></tr></table></figure>

<p>master节点创建GIRL表，slave同步创建</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">ip:<span class="number">192.168</span>.<span class="number">245.133</span> //slave</span><br></pre></td></tr></table></figure>

<p>master节点创建GIRL表，slave同步创建</p>
<p>tips：如果想实现主-主同步，则需要在其它两台配置数据库用户关联授权，参考第二步。<br>      我并没有验证主-主同步，嘿嘿，当然你可以私下验证哟！</p>
<h2 id="七、附件（搭建环境）"><a href="#七、附件（搭建环境）" class="headerlink" title="七、附件（搭建环境）"></a>七、附件（搭建环境）</h2><h3 id="7-1-虚拟机搭建环境"><a href="#7-1-虚拟机搭建环境" class="headerlink" title="7.1 虚拟机搭建环境"></a>7.1 虚拟机搭建环境</h3><p><strong>搭建服务器环境参考文章</strong>：<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbS9hcnRpY2xlL2RldGFpbHMvMTE2MDg1NDY3">VMware12配合使用Centos7搭建Linux开发环境<i class="fa fa-external-link-alt"></i></span></p>
<p>7.1.1 搭建虚拟机环境<br><img data-src="https://img-blog.csdnimg.cn/5f71fb1bf7a541659167e279e64a9c1f.png?x-oss-process=,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6b6Z6IW-5LiH6YeMc2t5,size_20,color_FFFFFF,t_70,g_se,x_16#" alt="在这里插入图片描述"></p>
<p>7.1.2 虚拟机服务器配置<br><img data-src="https://img-blog.csdnimg.cn/a1c23c5687f744b8baba899c2cfb0122.png?x-oss-process=,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6b6Z6IW-5LiH6YeMc2t5,size_20,color_FFFFFF,t_70,g_se,x_16#" alt="在这里插入图片描述"></p>
<h3 id="7-2-xshell远程连接"><a href="#7-2-xshell远程连接" class="headerlink" title="7.2  xshell远程连接"></a>7.2  xshell远程连接</h3><p>7.2.1  使用xshell远程连接<br><img data-src="https://img-blog.csdnimg.cn/870c93fdf05544f58019209b9fd6d940.png?x-oss-process=,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6b6Z6IW-5LiH6YeMc2t5,size_20,color_FFFFFF,t_70,g_se,x_16#" alt="在这里插入图片描述"></p>
<h3 id="7-3-搭建linux环境"><a href="#7-3-搭建linux环境" class="headerlink" title="7.3 搭建linux环境"></a>7.3 搭建linux环境</h3><p>准备三台MySQL服务器配置主从复制（master：131，slave：132，slave：133）<br><img data-src="https://img-blog.csdnimg.cn/55f2fb392b7f4685ad41a24b41ae5bc2.png?x-oss-process=,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6b6Z6IW-5LiH6YeMc2t5,size_20,color_FFFFFF,t_70,g_se,x_16#" alt="在这里插入图片描述"></p>
<p>131 master主节点my.cnf配置<br><img data-src="https://img-blog.csdnimg.cn/7e4ac3f916084c32bdc3d3d347449790.png?x-oss-process=,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6b6Z6IW-5LiH6YeMc2t5,size_20,color_FFFFFF,t_70,g_se,x_16#" alt="在这里插入图片描述"></p>
<p>131 验证master节点log_bin开启<br><img data-src="https://img-blog.csdnimg.cn/f8d6c4bac4244a9590bafcca13d67534.png?x-oss-process=,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6b6Z6IW-5LiH6YeMc2t5,size_20,color_FFFFFF,t_70,g_se,x_16#" alt="在这里插入图片描述"></p>
<p>131 show_master_status查看状态（注意：此时master的pos为120）<br><img data-src="https://img-blog.csdnimg.cn/d15885b813824b98b49461c8e9fb1961.png?x-oss-process=,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6b6Z6IW-5LiH6YeMc2t5,size_20,color_FFFFFF,t_70,g_se,x_16#" alt="在这里插入图片描述"></p>
<p>131查看主节点master的server服务（131服务器）<br><img data-src="https://img-blog.csdnimg.cn/ecee6f893de949d894e1cb38c7f6f39b.png?x-oss-process=,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6b6Z6IW-5LiH6YeMc2t5,size_20,color_FFFFFF,t_70,g_se,x_16#" alt="在这里插入图片描述"></p>
<p>131查看主节点binlog日志所在目录（131服务器）<br><img data-src="https://img-blog.csdnimg.cn/e32b155a20b543e8a3db6c9c63a272df.png#" alt="在这里插入图片描述"></p>
<p>start_slave启动从节点132（此时master的pos为120，没对应上导致slave无法读取）<br><img data-src="https://img-blog.csdnimg.cn/19ebc56a514245fba120997f467d81f8.png?x-oss-process=,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6b6Z6IW-5LiH6YeMc2t5,size_20,color_FFFFFF,t_70,g_se,x_16#" alt="在这里插入图片描述"><br><img data-src="https://img-blog.csdnimg.cn/79dfcf85f972466c91740a83a132a17b.png?x-oss-process=,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6b6Z6IW-5LiH6YeMc2t5,size_20,color_FFFFFF,t_70,g_se,x_16#" alt="在这里插入图片描述"></p>
<p>参考<strong>步骤五排查问题</strong>进行解决<br>在slave节点修改日志偏移量与master一致，master_log_file对应先查出主节点最新的：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">show</span> master status\G;</span><br></pre></td></tr></table></figure>
<p><strong>查看此时master的pos为120</strong></p>
<p><img data-src="https://img-blog.csdnimg.cn/c477973816274cbbb448fd207cc7567a.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6b6Z6IW-5LiH6YeMc2t5,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p>
<p><strong>此时设置master_log_pos&#x3D;120</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">change master <span class="keyword">to</span> master_log_file <span class="operator">=</span><span class="string">&#x27;mysql-bin.000001&#x27;</span>,master_log_pos<span class="operator">=</span><span class="number">120</span>;</span><br></pre></td></tr></table></figure>
<p><strong>正常slave节点读取_IO_SQL_Running为YES，如下图</strong><br><img data-src="https://img-blog.csdnimg.cn/4ccd9a581e494d7d9b990d3edc83f052.png?x-oss-process=,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6b6Z6IW-5LiH6YeMc2t5,size_20,color_FFFFFF,t_70,g_se,x_16#" alt="在这里插入图片描述"></p>
<p><strong>slave_mysql_log（132服务器对应的slave节点）</strong><br><img data-src="https://img-blog.csdnimg.cn/1fada42a85e34709aab98c0c042aa647.png?x-oss-process=,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6b6Z6IW-5LiH6YeMc2t5,size_20,color_FFFFFF,t_70,g_se,x_16#" alt="在这里插入图片描述"></p>
<p><strong>启动从节点slave（对应slave节点133服务器）</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**（此时master的pos为120，没对应上导致slave无法读取）</span></span><br><span class="line"><span class="comment">参考132服务器正常状态，修改pos对应上master节点 **/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">start</span> slave</span><br></pre></td></tr></table></figure>

<p><strong>slave节点MySQL日志（slave节点对应133服务器）</strong><br><img data-src="https://img-blog.csdnimg.cn/9accbacee2144cabab2b78ff23723f78.png#" alt="在这里插入图片描述"></p>
<p>132开启从节点中继日志<br><img data-src="https://img-blog.csdnimg.cn/d4d77ff463b043b783ccaf03b4c838f2.png?x-oss-process=,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6b6Z6IW-5LiH6YeMc2t5,size_20,color_FFFFFF,t_70,g_se,x_16#" alt="在这里插入图片描述"></p>
<h3 id="7-4-采用SQLylog工具进行测试"><a href="#7-4-采用SQLylog工具进行测试" class="headerlink" title="7.4 采用SQLylog工具进行测试"></a>7.4 采用SQLylog工具进行测试</h3><p>131_master_插入测试数据<br><img data-src="https://img-blog.csdnimg.cn/267f0cde8fb84b08ba10885ef226dc8a.png?x-oss-process=,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6b6Z6IW-5LiH6YeMc2t5,size_20,color_FFFFFF,t_70,g_se,x_16#" alt="在这里插入图片描述"></p>
<p>131_master_binlog_日志验证<br><img data-src="https://img-blog.csdnimg.cn/1171a1cb58cb4ccf89f43c155e7be038.png?x-oss-process=,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6b6Z6IW-5LiH6YeMc2t5,size_20,color_FFFFFF,t_70,g_se,x_16#" alt="在这里插入图片描述"><br>132_slave_check_RELAYLOG<br><img data-src="https://img-blog.csdnimg.cn/65093ffc14f447389d1409f724f24261.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6b6Z6IW-5LiH6YeMc2t5,size_20,color_FFFFFF,t_70,g_se,x_16#" alt="在这里插入图片描述"></p>
<p>132_slave_insert_data_girl同步数据<br><img data-src="https://img-blog.csdnimg.cn/e3879a0a4d994b55bbab91d63ec0ac2a.png?x-oss-process=,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6b6Z6IW-5LiH6YeMc2t5,size_20,color_FFFFFF,t_70,g_se,x_16#" alt="在这里插入图片描述"></p>
<p>133_slave_check_RELAYLOG日志<br><img data-src="https://img-blog.csdnimg.cn/7e2c75a6733a4db0907e4062191a1aaa.png?x-oss-process=,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6b6Z6IW-5LiH6YeMc2t5,size_20,color_FFFFFF,t_70,g_se,x_16#" alt="在这里插入图片描述"></p>
<p>133_slave_同步数据<br><img data-src="https://img-blog.csdnimg.cn/635b955eec404eeaa64fa2a4d42df58e.png?x-oss-process=,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6b6Z6IW-5LiH6YeMc2t5,size_20,color_FFFFFF,t_70,g_se,x_16#" alt="在这里插入图片描述"></p>
<p>—END—</p>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS搭建本地yum源</title>
    <url>/2020/08/26/CentOS%E6%90%AD%E5%BB%BA%E6%9C%AC%E5%9C%B0yum%E6%BA%90/</url>
    <content><![CDATA[<p>之前自学的时候，那会刚到外地找工作，意识到了学习<code>linux</code>的重要性。作为开发人员的基本必备技能，找工作时也是加分项。当时租房没联网，就想到了这种方法。</p>
<p><strong>针对初学入门者</strong>来说，做测试或者自学的时候，其实<strong>使用本地</strong><code>yum</code><strong>源更方便</strong>。当然对于没有联网的情况下，你是用此方法也是极度舒适的，毕竟不用占用你的网络资源。都2020年了，没有网还搞啥编程，当然这是玩笑话，就当乐一乐了。</p>
<h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="一、首先使网络yum源失效"><a href="#一、首先使网络yum源失效" class="headerlink" title="一、首先使网络yum源失效"></a>一、首先使网络<code>yum</code>源失效</h2><p><strong>切换到yum源所在目录</strong>：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /etc/yum.repos.d/</span><br></pre></td></tr></table></figure>

<p><strong>查询一下目录</strong>：<code>ls</code><br>主要关注我们用到的<strong>网络</strong><code>yum</code><strong>源和光盘源</strong>：</p>
<ul>
<li>CentOS-Base.repo</li>
<li>CentOS-Media.repo</li>
</ul>
<p><strong>修改</strong><code>yum</code>源文件后缀名<strong>使其失效</strong>。我这里就不做修改了，你们可以自己试试。</p>
<p>如果担心修改之后忘记怎么修改回来，最好备份一份，使用<code>cp</code>命令即可。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#备份到root目录下的backup下，这个目录你也可以自己定，备份更加保险</span></span><br><span class="line"><span class="built_in">cp</span> CentOS<span class="literal">-Base</span>.repo  /root/backup/</span><br></pre></td></tr></table></figure>

<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mv</span> CentOS<span class="literal">-Base</span>.repo CentOS<span class="literal">-Base</span>.repo.bak</span><br></pre></td></tr></table></figure>



<h2 id="二、让光盘yum源生效"><a href="#二、让光盘yum源生效" class="headerlink" title="二、让光盘yum源生效"></a>二、让光盘<code>yum</code>源生效</h2><p><strong>tips：善用TAB键进行补全，很方便哟</strong></p>
<p>进入<code>yum</code>源目录</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /etc/yum.repos.d/</span><br></pre></td></tr></table></figure>



<h3 id="修改光盘源，使其生效：vim-CentOS-Media-repo"><a href="#修改光盘源，使其生效：vim-CentOS-Media-repo" class="headerlink" title="修改光盘源，使其生效：vim CentOS-Media.repo"></a>修改光盘源，使其生效：vim CentOS-Media.repo</h3><p><strong>修改centos6的光盘源</strong>，考虑到还是一部分是用<code>centos6</code>作为入门的，所以也记录了。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">[<span class="type">c6</span>-<span class="type">media</span>] </span><br><span class="line">name=CentOS-<span class="variable">$releaserver</span> - Media</span><br><span class="line">baseurl=file:///mnt/cdrom <span class="comment">#此地址为你自己光盘挂载的地址</span></span><br><span class="line"><span class="comment">#file:///media/cdrom #注释掉不存在的地址</span></span><br><span class="line"><span class="comment">#file:///media/cdrecorder #注释掉不存在的地址</span></span><br><span class="line">gpgcheck=<span class="number">1</span></span><br><span class="line">enable=<span class="number">1</span> <span class="comment">#将enable由0改为1，yum配置文件生效</span></span><br><span class="line">gpgkey=file:///etc/pki/rpm<span class="literal">-gpg</span>/RPM<span class="literal">-GPG-KEY-CentOS-6</span></span><br></pre></td></tr></table></figure>


<p><strong>修改centos7的光盘源</strong></p>
<p>使用<code>cat</code>命令可以查看到<strong>光盘源的配置</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> CentOS-Media.repo</span><br></pre></td></tr></table></figure>

<p><strong>对比c6和c7版本，你会发现区别不大，基本上都是操作命令有些变动。</strong></p>
<p><strong>这里是修改后的配置，vim CentOS-Media.repo</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">[<span class="type">c7</span>-<span class="type">media</span>]</span><br><span class="line">name=CentOS-<span class="variable">$releasever</span> - Media</span><br><span class="line">baseurl=file:///mnt/CentOS/</span><br><span class="line"><span class="comment">#file:///media/cdrom/</span></span><br><span class="line"><span class="comment">#file:///media/cdrecorder/</span></span><br><span class="line">gpgcheck=<span class="number">1</span></span><br><span class="line">enabled=<span class="number">1</span> <span class="comment">#将enable由0改为1，yum配置文件生效</span></span><br><span class="line">gpgkey=file:///etc/pki/rpm<span class="literal">-gpg</span>/RPM<span class="literal">-GPG-KEY-CentOS-7</span></span><br></pre></td></tr></table></figure>



<h3 id="挂载光盘"><a href="#挂载光盘" class="headerlink" title="挂载光盘"></a>挂载光盘</h3><p><strong>建立挂载点</strong>：<code>mkdir  /mnt/cdrom</code></p>
<p><strong>这个可加可不加</strong>：<code>-t iso9660</code>，指定挂载类型</p>
<p><strong>挂载光盘</strong>：<code>mount  -t iso9660 /dev/cdrom /mnt/cdrom</code>，我这里已经挂载了。<br><strong>挂载成功后</strong>：<code>ls /mnt/cdrom</code></p>
<p>遇到<strong>mount: 在 &#x2F;dev&#x2F;sr0 上找不到媒体</strong>，这种问题需要设置一下你的虚拟机。</p>
<p><strong>卸载命令</strong></p>
<ul>
<li><code>umount</code> [接设备文件名或者挂载点]</li>
<li>例如卸载光盘：<code>umount /mnt/cdrom/</code></li>
</ul>
<p>以上总结，可能已经过时，仅供参考，希望对你的工作有所帮助。</p>
<p>—END—</p>
]]></content>
      <categories>
        <category>开发运维</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>DM8 数据库 DTS 迁移工具详细使用教程</title>
    <url>/2022/02/18/DM8%E6%95%B0%E6%8D%AE%E5%BA%93DTS%E8%BF%81%E7%A7%BB%E5%B7%A5%E5%85%B7%E8%AF%A6%E7%BB%86%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<p>最近业务上突然有了这种需求，国产化替代，优先选中了国内的噩梦。啊…口误，是国产数据库优秀的代表达梦数据库。寻思着达梦DTS迁移工具的使用，发现具有多种迁移模式。比如支持DM到DM，亦或是Oracle迁移用户数据到DM8。<br><img data-src="https://img-blog.csdnimg.cn/2ff923a9ea3f4566848dea6934d0cd86.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70#" alt="在这里插入图片描述"></p>
<p>当然，DM8在Windows下安装很简单，图形化界面，基本就是下一步下一步，注意你安装的路径。Linux下安装稍微麻烦一点，万变不离其宗，只要注意安装过程中需要实例化（初始化DATA，类似于MySQL以及MariaDB），以及注册达梦数据库的服务DmServiceDMSERVER。也可以参考达梦官方教程，但是坑很多。这里只是抛砖引玉，linux下达梦数据库的部署教程以及遇到的坑也在编写中。</p>
<p><strong>tips：个人使用中，感觉比较有用的几个官方手册，进行了标注，仅供参考</strong><br><img data-src="https://img-blog.csdnimg.cn/c9bd3677c62340adb61f3213393bfeb4.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70#" alt="在这里插入图片描述"></p>
<h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="一、首先介绍Windows下的使用"><a href="#一、首先介绍Windows下的使用" class="headerlink" title="一、首先介绍Windows下的使用"></a>一、首先介绍Windows下的使用</h2><h3 id="1、安装后的快捷方式启动"><a href="#1、安装后的快捷方式启动" class="headerlink" title="1、安装后的快捷方式启动"></a>1、安装后的快捷方式启动</h3><p>1.1、这样截图给人的感觉比较直观，常用的有：<strong>DM管理工具、DM数据迁移工具</strong>，偶尔也会用上SQL交互式查询工具。DM用户手册有很多内容，实用性高的就是安装手册以及开发人员手册和管理员手册，根据个人使用总结出来的。</p>
<p>1.2、DM官网直通车：<span class="exturl" data-url="aHR0cHM6Ly93d3cuZGFtZW5nLmNvbS8=">https://www.dameng.com/<i class="fa fa-external-link-alt"></i></span></p>
<p>1.3、在官网下载技术文档以及DM数据库需要注册登录，可以申请开发版取到key解锁更多的功能。各大数据库公司都很骚，不注册没法获取官网的资源。<br><img data-src="https://img-blog.csdnimg.cn/aea94af6d9d4434994f1d35f89685380.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70#" alt="在这里插入图片描述"></p>
<h3 id="2、安装的目录-tool所在目录"><a href="#2、安装的目录-tool所在目录" class="headerlink" title="2、安装的目录(tool所在目录)"></a>2、安装的目录(tool所在目录)</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">D:\software\dmdbms\tool</span><br></pre></td></tr></table></figure>

<p><img data-src="https://img-blog.csdnimg.cn/ad526803f22b4c3c917e4811d3968765.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70#" alt="在这里插入图片描述"></p>
<h3 id="3、达梦8数据库DTS工具使用教程"><a href="#3、达梦8数据库DTS工具使用教程" class="headerlink" title="3、达梦8数据库DTS工具使用教程"></a>3、达梦8数据库DTS工具使用教程</h3><p>3.1、DTS迁移例子讲解，以Oracle中的scott用户迁移作为讲解。<br><img data-src="https://img-blog.csdnimg.cn/c5d284c347d44dc895aaccc85a0e13c1.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70#" alt="在这里插入图片描述"></p>
<p>3.2、DTS设置数据源（此次迁移的库Oracle）<br><img data-src="https://img-blog.csdnimg.cn/57442f6dd9c641749cb1abf3c4d9309c.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70#" alt="在这里插入图片描述"></p>
<p>3.3、DTS设置目的DM8的连接信息（迁移的目的DM8数据库）<br><img data-src="https://img-blog.csdnimg.cn/ddae9a9eda7343c79b885372fbe5a3b7.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70#" alt="在这里插入图片描述"><br>3.4、DTS选择要迁移的对象（指定scott用户）<img data-src="https://img-blog.csdnimg.cn/6fe105b98daa40fa9e33c8c093223799.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70#" alt="在这里插入图片描述"></p>
<p>3.5、DTS迁移对象对应scott用户的表<img data-src="https://img-blog.csdnimg.cn/38313ad14f6a498ea6f2b924ce32cbf4.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70#" alt="在这里插入图片描述"><br>3.6、DTS完成迁移向导，确认迁移信息。点击完成，开始迁移。<br><img data-src="https://img-blog.csdnimg.cn/615ae61268f84d59b1bba157edfb88b5.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70#" alt="在这里插入图片描述"></p>
<p>3.7、在DM8客户端管理工具验证迁移后的scott用户<br><img data-src="https://img-blog.csdnimg.cn/6ad580fc06e2468390f0d7390ab7b588.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70#" alt="在这里插入图片描述"></p>
<h2 id="二、其次介绍linux下的使用"><a href="#二、其次介绍linux下的使用" class="headerlink" title="二、其次介绍linux下的使用"></a>二、其次介绍linux下的使用</h2><h3 id="1、定位DTS所在目录"><a href="#1、定位DTS所在目录" class="headerlink" title="1、定位DTS所在目录"></a>1、定位DTS所在目录</h3><p>找到<code>DTS</code>所在目录（服务器端），比如DM8默认安装的目录&#x2F;opt&#x2F;dmdbms&#x2F;，具体是tool还是tools我记不清了，容易记混。</p>
<p>有没有dmdba这一级目录，我也有点记住不住了。最终是视实际安装目录定，找到tool目录，里面有很多启动工具的脚本命令。你也可以创建快捷方式，放到桌面，现在国产linux服务器也是适配了桌面。</p>
<p>直接在终端运行<code>dts</code>，也就是达梦数据迁移工具（普通用户需要sudo提权，root用户直接运行）</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#（这是我个人的安装路径）</span></span><br><span class="line">/opt/dmdbms/bin/tool/DTS</span><br></pre></td></tr></table></figure>



<h3 id="2、定位manager所在目录"><a href="#2、定位manager所在目录" class="headerlink" title="2、定位manager所在目录"></a>2、定位manager所在目录</h3><p>直接在终端运行DM管理工具（普通用户需要sudo提权，root用户直接运行）</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">/opt/dmdbms/bin/tool/manager</span><br></pre></td></tr></table></figure>


<h2 id="三、设置自动DM数据自动备份"><a href="#三、设置自动DM数据自动备份" class="headerlink" title="三、设置自动DM数据自动备份"></a>三、设置自动DM数据自动备份</h2><p>这里只是附带的记录了DM8设置自动备份，这里需要打开上面描述过的DM管理工具。</p>
<h3 id="1、右键代理创建代理环境"><a href="#1、右键代理创建代理环境" class="headerlink" title="1、右键代理创建代理环境"></a>1、右键代理创建代理环境</h3><p><img data-src="https://img-blog.csdnimg.cn/f6eda50394a0437abebf52af91b8cac8.jpg?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70#" alt="在这里插入图片描述"></p>
<h3 id="2、创建代理后生成作业功能"><a href="#2、创建代理后生成作业功能" class="headerlink" title="2、创建代理后生成作业功能"></a>2、创建代理后生成作业功能</h3><p><img data-src="https://img-blog.csdnimg.cn/9de14efa7e614e09806ee7e532f0f01e.jpg#" alt="在这里插入图片描述"></p>
<h3 id="3、新建作业"><a href="#3、新建作业" class="headerlink" title="3、新建作业"></a>3、新建作业</h3><p><img data-src="https://img-blog.csdnimg.cn/c11ad7cab3da455cb944d908560e4d1f.jpg?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70#" alt="在这里插入图片描述"></p>
<h3 id="4、新建作业设置备份"><a href="#4、新建作业设置备份" class="headerlink" title="4、新建作业设置备份"></a>4、新建作业设置备份</h3><p><img data-src="https://img-blog.csdnimg.cn/e3592754affd4f5db8750c8495c4e126.jpg?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70#" alt="在这里插入图片描述"></p>
<h3 id="5、作业步骤"><a href="#5、作业步骤" class="headerlink" title="5、作业步骤"></a>5、作业步骤</h3><p><img data-src="https://img-blog.csdnimg.cn/aeda48cc7df448768b4f7336b49938a6.jpg?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70#" alt="在这里插入图片描述"></p>
<h3 id="6、作业调度"><a href="#6、作业调度" class="headerlink" title="6、作业调度"></a>6、作业调度</h3><p><img data-src="https://img-blog.csdnimg.cn/05add000a263414da3c5eb2162b1c6b3.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70#" alt="在这里插入图片描述"></p>
<h3 id="7、查看DDL备份语句"><a href="#7、查看DDL备份语句" class="headerlink" title="7、查看DDL备份语句"></a>7、查看DDL备份语句</h3><p><img data-src="https://img-blog.csdnimg.cn/f02fc20a634c4fa4b5a257c2ef2cc707.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70#" alt="在这里插入图片描述"></p>
<h3 id="8、选择备份数据库"><a href="#8、选择备份数据库" class="headerlink" title="8、选择备份数据库"></a>8、选择备份数据库</h3><p><img data-src="https://img-blog.csdnimg.cn/20625ca63840460db833b9ab0094f433.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70#" alt="在这里插入图片描述"></p>
<p>这里同样的步骤，去设置增量备份。通过设置DDL语句，设置定期清除备份。这里不做截图说明。</p>
<h3 id="9、增量备份"><a href="#9、增量备份" class="headerlink" title="9、增量备份"></a>9、增量备份</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#除周六外，每晚23:30做增量备份。你也可以在DM管理工具右键新建增量备份作业。</span></span><br><span class="line">call SP_CREATE_JOB(<span class="string">&#x27;increment _bak&#x27;</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="string">&#x27;&#x27;</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="string">&#x27;&#x27;</span>,<span class="number">0</span>,<span class="string">&#x27;increment _bak&#x27;</span>);</span><br><span class="line">call SP_JOB_CONFIG_START(<span class="string">&#x27;increment _bak&#x27;</span>);</span><br><span class="line">call SP_ADD_JOB_STEP(<span class="string">&#x27;increment _bak&#x27;</span>, <span class="string">&#x27;increment _bak&#x27;</span>, <span class="number">6</span>, <span class="string">&#x27;11000000D:\software\dmdbms\data\DAMENG\bak&#x27;</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">0</span>, NULL, <span class="number">0</span>);</span><br><span class="line"><span class="literal">--call</span> SP_ADD_JOB_STEP(<span class="string">&#x27;increment _bak&#x27;</span>, <span class="string">&#x27;increment _bak&#x27;</span>, <span class="number">6</span>, <span class="string">&#x27;11000000D:\software\dmdbms\data\DAMENG\bak&#x27;</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">0</span>, NULL, <span class="number">0</span>);</span><br><span class="line">call SP_ADD_JOB_SCHEDULE(<span class="string">&#x27;increment _bak&#x27;</span>, <span class="string">&#x27;increment _bak&#x27;</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">63</span>, <span class="number">0</span>, <span class="string">&#x27;23:30:00&#x27;</span>, NULL, <span class="string">&#x27;2021-06-25 22:03:58&#x27;</span>, NULL, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">call SP_JOB_CONFIG_COMMIT(<span class="string">&#x27;increment _bak&#x27;</span>);</span><br></pre></td></tr></table></figure>

<h3 id="10、定期清除备份"><a href="#10、定期清除备份" class="headerlink" title="10、定期清除备份"></a>10、定期清除备份</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#每天00:00删除7天前的数据，定期清除备份暂未做验证，慎用。要用，把路径改下。</span></span><br><span class="line">call SP_CREATE_JOB(<span class="string">&#x27;JOB_DEL_BAK_TIMELY&#x27;</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="string">&#x27;&#x27;</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="string">&#x27;&#x27;</span>,<span class="number">0</span>,<span class="string">&#x27;JOB_DEL_BAK_TIMELY&#x27;</span>);</span><br><span class="line">call SP_JOB_CONFIG_START(<span class="string">&#x27;JOB_DEL_BAK_TIMELY&#x27;</span>);</span><br><span class="line">call SP_ADD_JOB_STEP(<span class="string">&#x27;JOB_DEL_BAK_TIMELY&#x27;</span>, <span class="string">&#x27;JOB_DEL_BAK_TIMELY&#x27;</span>, <span class="number">0</span>, <span class="string">&#x27;call SF_BAKSET_BACKUP_DIR_ADD(&#x27;</span><span class="string">&#x27;DISK&#x27;</span><span class="string">&#x27;, &#x27;</span><span class="string">&#x27;D:\software\dmdbms\data\DAMENG\bak&#x27;</span><span class="string">&#x27;);</span></span><br><span class="line"><span class="string">CALL SP_DB_BAKSET_REMOVE_BATCH(&#x27;</span><span class="string">&#x27;DISK&#x27;</span><span class="string">&#x27;, NOW()-7);&#x27;</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">0</span>, NULL, <span class="number">0</span>);</span><br><span class="line">call SP_ADD_JOB_SCHEDULE(<span class="string">&#x27;JOB_DEL_BAK_TIMELY&#x27;</span>, <span class="string">&#x27;JOB_DEL_BAK_TIMELY&#x27;</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="string">&#x27;00:00:00&#x27;</span>, NULL, <span class="string">&#x27;2021-06-25 22:06:13&#x27;</span>, NULL, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">call SP_JOB_CONFIG_COMMIT(<span class="string">&#x27;JOB_DEL_BAK_TIMELY&#x27;</span>);</span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>开发工具</category>
      </categories>
      <tags>
        <tag>达梦</tag>
      </tags>
  </entry>
  <entry>
    <title>Github入门与实践</title>
    <url>/2022/01/17/Github%E5%85%A5%E9%97%A8%E4%B8%8E%E5%AE%9E%E8%B7%B5/</url>
    <content><![CDATA[<p>2022最新版github入门教程，教你如何一步步创建自己的github账号并初始化仓库，然后使用git工具配置个人工作环境。配合gitee仓库，作为github的镜像仓库使用。这篇文章很基础，对萌新来说是非常友好的，会持续更新优化。顺带一提，同样将最新的github pages服务的设置一并写入了文档中。</p>
<p>官方文档：</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9kb2NzLmdpdGh1Yi5jb20vY24vZ2V0LXN0YXJ0ZWQvcXVpY2tzdGFydA==">https://docs.github.com/cn/get-started/quickstart<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>用心作题图，用脚写文档。</p>
<p>其实这篇文章是对之前的git系列文章的一个补充，毕竟还是需要有人完善最新版的github创建教程，并且使用gitee作为镜像仓库。</p>
<p>当年也是萌新过来的，自己踩过不少坑，现如今很多教程老化了。为了照顾到新入坑的萌新，近段时间写了一个最新版的创建github账号以及登录的详细教程，并使用gitee作为github的镜像仓库。最后会存放到我新建的demo示例仓库中，并且使用gitee作为图床。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/3d30e465bd9afb00d69c1c891d8dacc0.png"></p>
<h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><p>如下所描述的教程需要事先创建好github和gitee账号。此处会详细讲解github如何创建账号，毕竟这货是纯英文的。对gitee则不会详细介绍如何创建账号，本身就是中文的，比较容易上手。</p>
<p>个人使用github搭建的hexo博客示例：</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9jbndhbmdrLmdpdGh1Yi5pby8=">https://cnwangk.github.io/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/d93c979b30d28dc5f8a0d4bf4db6da9e.png"></p>
<h2 id="一、创建github账号"><a href="#一、创建github账号" class="headerlink" title="一、创建github账号"></a>一、创建github账号</h2><h3 id="1、创建github账号"><a href="#1、创建github账号" class="headerlink" title="1、创建github账号"></a>1、创建github账号</h3><p><strong>1.1、github登录页面</strong></p>
<blockquote>
<p>登录账号：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2xvZ2lu">https://github.com/login<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p>最下面有一行<strong>Create an account就是创建账号的链接</strong>，打开即可进入创建页面。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/7c132ef19d780b9ba3f042ed1bfe5d1a.png"></p>
<p><strong>1.2、创建账号页面</strong></p>
<blockquote>
<p>创建账号：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3NpZ251cA==">https://github.com/signup<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p>github创建账号的页面，这个欢迎界面比起N年前确实漂亮不少哟，提示输入你的邮箱。<strong>最好是填写自己常用的邮箱账号</strong>，后续登录验证接收验证码之类的，都需要使用这个填写的邮箱。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/1dbe29d9f68f8326449894cf11f826a6.png"></p>
<p><strong>1.3、创建账号需要的一些参数</strong></p>
<ul>
<li>enter your email：输入你的邮箱账号；</li>
<li>create a password：输入密码；</li>
<li>enter a username：输入用户名，注册完后可以用于登录；</li>
<li>最后一行提示y与n，<strong>建议选y</strong>，貌似有个防机器人验证。</li>
</ul>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/b2bdd5f5181cd534ed8eb78fb4b43bcb.png"></p>
<p><strong>1.4、二次验证</strong></p>
<p>欢迎加入github，这一步确实验证了我的猜想，<strong>选择y</strong>验证自己新创建的账号。</p>
<p>确实弹出来一个页面，让你选择图片，进行真人认证。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/8653e3d529bfd3436ea963cf0c435871.png"></p>
<p><strong>1.5、续上面的截图</strong></p>
<p>点击确认创建github账号：</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/779c17eb9e2312c4a09782ae53f8e9a3.png"></p>
<p><strong>1.6、登录之前创建好的账号</strong></p>
<p>需要接收验证码，还记得上面说的要填写的那么邮箱吗？</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/bc2b51c34b3fe6d98b8e832c066e00be.png"></p>
<p><strong>1.7、邮箱验证码</strong></p>
<p>之前输入的邮箱账号，接收到验证码输入即可进行到下一步界面。</p>
<p>有可能网速原因，大家都懂得，有时会抽风访问不进去。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/9acf84a7c5ba66b223490b44cc3d29a6.png"></p>
<p><strong>1.8、询问你是个人还是团队</strong>，当时没仔细看，所以写了随便选一个。</p>
<ul>
<li>just me：个人就选择just me；</li>
<li>如果是team，就选择后面的数字</li>
</ul>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/6edd4b5f049295ae53f442ff63e73dfb.png"></p>
<p><strong>1.9、参数的勾选</strong></p>
<p>可以不选，点击continue继续。下图中部分参数：</p>
<ul>
<li>客户端APP</li>
<li>项目管理</li>
<li>团队管理员</li>
<li>社区</li>
</ul>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/ac6cdb5bf9053c3d1e3d0b341e876e8a.png"></p>
<p><strong>1.10、选择免费或者团队</strong></p>
<ul>
<li>free：个人版式免费提供的，选择继续；</li>
<li>team：这个是团队版，收费的，每月4美刀。</li>
</ul>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/1036366ba9e6643741594c1b588e13f9.png"></p>
<p><strong>1.11、登录到github首页</strong></p>
<p>至此终于创建完成，成功进入个人的github主页。介绍一些基本的使用：</p>
<ul>
<li>create repository：创建仓库，<strong>在当前页面右上角个人的图像展开一样可以新建仓库和导入仓库</strong>；</li>
<li>import repository：导入远程仓库；</li>
<li>read the guide：阅读向导。</li>
</ul>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/5875bcf94257fdbfbb5fa0d040702e9e.png"></p>
<p>到此创建账号过程就完成了，纯英文的确实对萌新不是很友好。<strong>但是习惯就好，毕竟是学习编程的好平台</strong>。</p>
<h3 id="2、初始化仓库"><a href="#2、初始化仓库" class="headerlink" title="2、初始化仓库"></a>2、初始化仓库</h3><p><strong>2.1、创建仓库demo</strong></p>
<blockquote>
<p>点击创建仓库：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL25ldw==">https://github.com/new<i class="fa fa-external-link-alt"></i></span></p>
<p>新建的demo示例：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2Nud2FuZ2svZGVtbw==">https://github.com/cnwangk/demo<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p>接着上面创建完账号，继续新建仓库，并且进行个人的第一个仓库初始化设置。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/4f55ddafb666b115bf17d35443864ed5.png"></p>
<p>github新建仓库，初始化设置如果勾选了下列三个选项则需要设置模板，没有选择模板否则无法创建仓库。</p>
<ul>
<li>Add a README file：初始化设置可以不勾选，不选则不会创建。</li>
<li>Add .gitignore：初始化新建忽略文件需要下拉设置模板，不选则不会创建。</li>
<li>Choose a license：初始化设置可以不选开源协议，如果有开源需求则设置，例如：Apache License2.0。</li>
</ul>
<p><strong>2.2、设置仓库初始化参数</strong></p>
<p>续上面的图，接着设置参数，<strong>选择了下面的三个参数则需要选择模板才能创建仓库</strong>：</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/6f454843c703bf62fb16be655fad1164.png"></p>
<p><strong>2.3、README.MD文件设置</strong></p>
<p>初始化设置可以新增一个README.MD文件，对这个仓库的一个介绍，markdown格式。</p>
<p>说明比较简单，将仓库的名称以及简介记录到文件中，图中输错了，其实是this is demo，后面修正了，可在线编辑。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/c8def45e8041db717a2ba96c8387887c.png"></p>
<p><strong>2.4、.gitignore模板设置</strong></p>
<p>这里以近几十年比较火热的Java语言作为demo进行讲解。</p>
<p>默认选择了Java语言模板，里面设置了一些忽略文件：</p>
<ul>
<li>log日志；</li>
<li>class编译文件；</li>
<li>jar包、war包以及压缩包等等。</li>
</ul>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/c5be9363f55908f3dc3c341f4e4187d1.png"></p>
<p>至此，我们的第一个github仓库demo就创建完成，并且预配置了readme以及忽略设置文件。</p>
<h3 id="3、通过git配置工作空间"><a href="#3、通过git配置工作空间" class="headerlink" title="3、通过git配置工作空间"></a>3、通过git配置工作空间</h3><p><strong>接着上面的初始化仓库进行讲解</strong>，首先需要安装好git环境，Windows下安装比较容易，就不再赘述。</p>
<p>然后将我们创建的demo仓库克隆到本地，选择则克隆方式为SSH，接下来配置的也是公钥SSH：</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/60b15a9357420f67a6109c2d66d64427.png"></p>
<p>关于git工具的下载与详细使用请参考我之前的文章《献给初学者的git和github教程，使用hexo搭建个人博客》，地址如下：</p>
<blockquote>
<p>github仓库地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2Nud2FuZ2svU1FMLXN0dWR5L3RyZWUvbWFzdGVyL21kL2dpdA==">https://github.com/cnwangk/SQL-study/tree/master/md/git<i class="fa fa-external-link-alt"></i></span></p>
<p>备用地址：<span class="exturl" data-url="aHR0cHM6Ly9jbndhbmdrLmdpdGh1Yi5pby90YWdzL2dpdC8=">https://cnwangk.github.io/tags/git/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p><strong>3.1、配置git环境</strong></p>
<p>安装好了git工具，此时可以在桌面右键（Git Bash），输入以下命令进行设置用户以及email（邮箱）。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git config --global user.name <span class="string">&quot;demo&quot;</span></span><br><span class="line">$ git config --global user.email <span class="string">&quot;demo@example.com&quot;</span></span><br></pre></td></tr></table></figure>

<p>参数<strong>--global</strong>代表配置全局的，不加--global参数，则是配置当前仓库生效，当然设置了也会覆盖当前仓库的设置。可以通过git config -l命令列出整组配置文件共同查找的所有变量设置值，或者使用你熟悉的cat以及喜欢的vim命令查看配置文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git config -l</span><br><span class="line"><span class="comment">#或者使用你熟悉的cat以及喜欢的vim命令查看配置文件</span></span><br><span class="line">$ <span class="built_in">cat</span> .git/config</span><br><span class="line">$ vim .git/config</span><br></pre></td></tr></table></figure>

<p><strong>配置ssh-key</strong>，生成ssh公钥。Windows下默认在<strong>系统盘的当前用的.ssh目录下，可以配置ed25519或者是rsa方式都行，github官网的教程默认写的是rsa方式</strong>。如下图所示，默认回车生成ssh-key：</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/66c8aea21e880396e6a8461d3c619747.png"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#方式一</span></span><br><span class="line">$ ssh-keygen -t ed25519 -C <span class="string">&quot;demo@example.com&quot;</span> </span><br><span class="line"><span class="comment">#方式二</span></span><br><span class="line">$ ssh-keygen -t rsa -b 4096 -C <span class="string">&quot;demo@example.com&quot;</span></span><br></pre></td></tr></table></figure>

<p>检查你的系统目录是否有ssh公钥。<strong>默认情况ssh公钥</strong>，可能是以下几种文件形式：</p>
<ul>
<li>id_ed25519.pub</li>
<li>id_rsa.pub</li>
<li>id_ecdsa.pub</li>
<li>id_dsa.pub</li>
</ul>
<p>个人在Windows系统下演示生成的ssh-key文件，<strong>使用的是ed25519模式</strong>。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/03bc41b122c7b0a90a51feaedb7bc180.png"></p>
<p>将生成的pub文件的key值使用记事本、SublimeText或者VScode打开，<strong>然后复制到github账号的ssh-key中</strong>。</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3NldHRpbmdzL3NzaC9uZXc=">https://github.com/settings/ssh/new<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/41ee4dd94d62cbf223e6d5cbd35301bc.png"></p>
<p><strong>配置完ssh-key</strong>之后，Windows下右键打开<code>Git Bash</code>，使用<code>ssh -T</code>命令测试验证。<strong>当前配置了github的ssh公钥，验证返回结果成功</strong>。未配置github的ssh公钥，则测试验证返回的结果是权限（permission denied）拒绝。</p>
<p><strong>使用命令测试验证</strong>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#验证github</span></span><br><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure>

<p>示例：<strong>验证成功，返回结果为successfully</strong>；验证失败，则返回permission deny权限拒绝。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/55b47a3d1e982c476919cee05e8147bf.png"></p>
<p><strong>3.2、克隆仓库</strong></p>
<p>打开git bash命令窗口，使用git clone命令克隆远程仓库demo示例，可以选择多种方式：</p>
<ul>
<li>HTTPS方式</li>
<li>SSH方式，个人最常用的方式</li>
<li>github cli方式</li>
</ul>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/4ab012db38b5c5760bdebfe8f97648be.png"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> git@github.com:cnwangk/demo.git</span><br></pre></td></tr></table></figure>

<blockquote>
<p>远程仓库demo示例：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2Nud2FuZ2svZGVtbw==">https://github.com/cnwangk/demo<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p><strong>3.3、连接远程仓库完成初始化提交</strong></p>
<p>接着上一步克隆demo仓库，然后<strong>进入demo仓库（目录）进行如下操作</strong>，空目录默认是不会提交的，需要写点内容进去：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git add --all <span class="comment">#暂存所有未追踪的文件</span></span><br><span class="line">$ git commit -a -m <span class="string">&quot;初始化提交&quot;</span> <span class="comment">#初始化提交</span></span><br><span class="line">$ git push git@github.com:cnwangk/demo.git</span><br><span class="line">remote: Resolving deltas: 100% (1/1), completed with 1 <span class="built_in">local</span> object.</span><br><span class="line">To github.com:cnwangk/demo.git</span><br><span class="line">   c670e49..48b58fb  main -&gt; main</span><br></pre></td></tr></table></figure>

<p>至此git环境的配置与github克隆以及推送至远程仓库就讲解完毕，更多的git操作可以参考《git版本控制管理》这本书。github操作则可以参考官方文档，在偶然的一次浏览github文档时发现部分的官方文档已经汉化了，我将当时的截图上传到上面演示的demo仓库中了。</p>
<h3 id="4、加速访问github"><a href="#4、加速访问github" class="headerlink" title="4、加速访问github"></a>4、加速访问github</h3><p>油侯插件，估计大家都不陌生吧！没错，就是油侯插件。</p>
<blockquote>
<p>油侯插件下载：<span class="exturl" data-url="aHR0cHM6Ly93d3cudGFtcGVybW9ua2V5Lm5ldC8=">https://www.tampermonkey.net/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p>在Google Chrome管理油侯插件：</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/3ef5050ab3d33152182ab95c75705870.png"></p>
<p><strong>新增js脚本</strong>：</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/f5be19bf3fa5bfcaf86376408f4b028f.png"></p>
<p><strong>在我们的浏览器中启用新增的js脚本</strong>：</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/1847bcfd2aa0d49792baf22e6f1a6361.png"></p>
<h2 id="二、gitee初次使用"><a href="#二、gitee初次使用" class="headerlink" title="二、gitee初次使用"></a>二、gitee初次使用</h2><h3 id="1、创建gitee账号"><a href="#1、创建gitee账号" class="headerlink" title="1、创建gitee账号"></a>1、创建gitee账号</h3><p><strong>1.1、gitee创建账号</strong>，支持多种方式进行登录：</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRlZS5jb20vc2lnbnVw">https://gitee.com/signup<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/5dfe8349fc3345c5d7a76d9ebbed193f.png"></p>
<h3 id="2、初始化仓库-1"><a href="#2、初始化仓库-1" class="headerlink" title="2、初始化仓库"></a>2、初始化仓库</h3><p><strong>登录到个人的gitee账号</strong>，进行创建仓库。gitee新建仓库：</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRlZS5jb20vcHJvamVjdHMvbmV3">https://gitee.com/projects/new<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/5b4b48033239796b8a26b1840d7c43e4.png"></p>
<h2 id="三、使用gitee作github镜像仓库"><a href="#三、使用gitee作github镜像仓库" class="headerlink" title="三、使用gitee作github镜像仓库"></a>三、使用gitee作github镜像仓库</h2><p>要问为什么需要使用gitee作为镜像仓库使用，那就是大家都懂得。</p>
<p>gitee仓库管理界面，找到功能设置，然后<strong>滑至底部，进行设置需要强制同步的远程github仓库</strong>：</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/8c1ef023d765a7d47a2154e043fd4592.png"></p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRlZS5jb20vZHl3YW5nay9odHovc2V0dGluZ3MjZnVuY3Rpb24=">https://gitee.com/dywangk/htz/settings#function<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p><strong>gitee设置同步github做镜像仓库</strong>：</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/d33e8227b5a8421e1a1c075e9ce64170.png"></p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2Nud2FuZ2svU1FMLXN0dWR5">https://github.com/cnwangk/SQL-study<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p><strong>最后定期进行同步github仓库</strong>：</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/fa39995032e6e00abeca225ff788afa1.png"></p>
<p>gitee同步github仓库就介绍到这里，上手比较容易，毕竟是中文界面。</p>
<p><strong>tips</strong>：gitee的私人仓库是免费使用的哟，一般我不告诉别人，自己的私人工作空间可以使用gitee哟！还可以使用PicGo配置gitee图床，毕竟访问gitee比较快，访问github还得配置CDN加速。配置图床的教程，我写过一篇稀烂的文章，可以在我的博客或者公众号上找一找。</p>
<h2 id="四、github遇上hexo"><a href="#四、github遇上hexo" class="headerlink" title="四、github遇上hexo"></a>四、github遇上hexo</h2><h3 id="1、准备环境"><a href="#1、准备环境" class="headerlink" title="1、准备环境"></a>1、准备环境</h3><p>当github遇上hexo、jekyII或者hugo，即将发生美妙的事情，那就是搭建个人博客小站。你只需要做几步简单的配置，就可以轻轻松松搭建属于自己的私人博客，再也不用担心乱七八糟的审核了。这里说的github指的是github pages服务，创建一个仓库命令为<strong>用户名追加.github.io</strong>，并开启github pages服务。</p>
<p>github pages仓库名配置例如：</p>
<blockquote>
<p>sky.github.io</p>
</blockquote>
<p><strong>Windows下需要准备环境</strong>：</p>
<ul>
<li>下载并安装nodejs环境；</li>
<li>通过nodejs安装hexo init blog；</li>
<li>安装git环境，便于推送至github。</li>
</ul>
<p>通过hexo new “hello world”生成第一篇博客，使用hexo server启动服务，访问如下链接测试：</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cDovL2xvY2Fob3N0OjQwMDAv">http://locahost:4000<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<h3 id="2、hexo配置"><a href="#2、hexo配置" class="headerlink" title="2、hexo配置"></a>2、hexo配置</h3><p><strong>2.1、安装nodejs</strong></p>
<p>下载安装比较容易，不做过多介绍，但会讲注意事项。</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9ub2RlanMub3JnL2VuLw==">https://nodejs.org/en/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p>下载Windows版本的nodejs并安装，<strong>建议将nodejs安装目录加入配置环境变量</strong>便于操作：</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/05956eb58247bb8f54030dbf00c00408.png"></p>
<p>个人安装的nodejs版本，安装nodejs后在开始菜单右键即可打开cmd命令窗口，<strong>也可以使用node -v查看版本</strong>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">D:\work\createSpace\hexo&gt;node -v</span><br><span class="line">v14.16.1</span><br></pre></td></tr></table></figure>

<p><img data-src="https://img-blog.csdnimg.cn/img_convert/ac123748a5a44985cdc6864fd0c3c5a5.png"></p>
<p><strong>2.2、安装hexo</strong></p>
<p>然后使用npm再安装hexo模块。这里只介绍Windows下安装hexo环境：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">D:\work\createSpace\hexo\blog&gt; npm install hexo-cli -g</span><br><span class="line">$ hexo init blog</span><br><span class="line">$ <span class="built_in">cd</span> blog</span><br><span class="line">$ npm install</span><br><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<ul>
<li>01、安装nodejs环境；</li>
<li>02、在node环境下安装hexo，打开cmd命令窗口执行：<code>npm install -g hexo-cli</code></li>
<li>03、初始化blog：<code>hexo init blog</code></li>
<li>04、进入blog目录：<code>cd blog</code></li>
<li>05、继续在cmd窗口命令安装：<code>npm install hexo</code></li>
<li>06、启动服务：<code>hexo server</code></li>
<li>07、访问：<span class="exturl" data-url="aHR0cDovL2xvY2FsaG9zdDo0MDAwLw==">http://localhost:4000<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>在node环境下安装hexo后生成的blog文件目录：</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/376649a39980177fd09d8cc46c4a2e30.png"></p>
<p><strong>使用hexo命令</strong>，hexo new命令生成文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">D:\work\createSpace\hexo\blog&gt;hexo new <span class="string">&quot;你要生成的md文件名&quot;</span></span><br><span class="line">hexo generate <span class="comment">#生成静态文件</span></span><br><span class="line">hexo server <span class="comment">#启动服务</span></span><br></pre></td></tr></table></figure>

<p><img data-src="https://img-blog.csdnimg.cn/img_convert/4cdd5b8b16b29b7f4abb50adebac16e6.png"></p>
<p><strong>hexo server命令启动服务</strong>，通过hexo new “hello world”生成第一篇博客，使用hexo server启动服务，访问如下链接测试：</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cDovL2xvY2FsaG9zdDo0MDAwLw==">http://locahost:4000<i class="fa fa-external-link-alt"></i></span></p>
<p>个人搭建的示例：<span class="exturl" data-url="aHR0cHM6Ly9jbndhbmdrLmdpdGh1Yi5pby8=">https://cnwangk.github.io/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p>hexo配合github还是挺方便的，毕竟在Windows平台我可以利用node.js安装hexo插件，进而配合一键生成模板然后提交到github。直接在hexo生成的blob模板中的markdown文件中写入你的文章。抛开通用性，markdown确实很方便。具体其它平台安装hexo可以参考官网中文文档，这里提供一下<strong>hexo的网址</strong>：</p>
<ul>
<li>hexo的github仓库：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhv">https://github.com/hexojs/hexo<i class="fa fa-external-link-alt"></i></span></li>
<li>hexo的中文文档：<span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL3poLWNuL2RvY3Mv">https://hexo.io/zh-cn/docs/<i class="fa fa-external-link-alt"></i></span></li>
<li>hexo中文github-pages教程：<span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL3poLWNuL2RvY3MvZ2l0aHViLXBhZ2Vz">https://hexo.io/zh-cn/docs/github-pages<i class="fa fa-external-link-alt"></i></span></li>
<li>hexo安装deploy实现一键发布：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvLWRlcGxveWVyLWdpdA==">https://github.com/hexojs/hexo-deployer-git<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<h3 id="3、配置github-pages服务"><a href="#3、配置github-pages服务" class="headerlink" title="3、配置github pages服务"></a>3、配置github pages服务</h3><p>github pages的配置页面</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2Nud2FuZ2svdGVzdC9zZXR0aW5ncy9wYWdlcw==">https://github.com/cnwangk/test/settings/pages<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p>配置教程，纯英文的，可以用Google翻译一下哈</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9wYWdlcy5naXRodWIuY29tLw==">https://pages.github.com/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p><strong>我测试配置了一个仓库</strong></p>
<p><strong>注意</strong>：仓库必须是公开的（public）、然后仓库命令可以命令为用户名加github.io。默认进入一个设置好的<strong>gh-pages</strong>分支的仓库这样显示内容的：</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/295fe568f07fd38171ad3a157655e212.png"></p>
<p>进入需要配置成github pages服务的仓库，找到Pages页面设置，<strong>选择自己新建的分支gh-pages</strong>，这也是github推荐你这样设置的：</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/ea5210d400e3ffafdd7817d1a8460cb0.png"></p>
<p>简单的github pages 服务搭建示例，可以测试访问。</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9jbndhbmdrLmdpdGh1Yi5pby8=">https://cnwangk.github.io/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>以上就是对github入门教程进了一个总结，很基础的一个教程，萌新一样可以看懂哟！希望能对你的工作与学习有所帮助。</p>
]]></content>
      <categories>
        <category>开发工具</category>
      </categories>
      <tags>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title>Git文件管理与索引</title>
    <url>/2022/01/17/Git%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%E4%B8%8E%E7%B4%A2%E5%BC%95/</url>
    <content><![CDATA[<p>git文件管理与索引</p>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>这一夜，注定是个不眠之夜，小白和cangls的对话已然进入了白热化。小白孜孜不倦的咨询关于git方面的知识，对索引越来越感兴趣。小白以前存的小电影文件可以进行版本的对比，探索哪个版本画质更好。</p>
<p><strong>小白</strong>：cangls，我最近有点疑惑。<br><strong>cangls</strong>：具体是哪些方面呢？</p>
<p><strong>小白</strong>：最近有些需求，我需要对文件进行版本管理控制，但是有些问题百思不得其解。<br><strong>cangls</strong>：版本管理啊，这个我可熟悉呢，最近也在总结系列文章。看了之后，相信会对你有所帮助。</p>
<p>Linus Torvalds在Git邮件列表里曾说如果不先了解索引的目的，你就不能完全领会Git的强大之处。</p>
<p>本文为个人Git系列文章第二弹，git进阶内容之不得不了解的文件管理与索引。Git的索引不包含任何文件内容，它仅仅追踪你想要提交的那些内容。当执行git commit命令的时候，Git会通过检查索引而不是工作目录来找到提交的内容。虽然git在底层为了我们处理了很多事情，但记住索引和它的状态也很重要。在任何时候都可以通过git status命令来查询索引的状态。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/71b2fa05c710128c817a75716ea31535.png"></p>
<h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><p>VCS的经典问题之一就是文件重命名会导致它们丢失对文件历史记录的追踪。而Git即使经过重命名，也仍然能保留历史信息。在实际的工作使用中，貌似Git系统处理文件重命名的方式更优越一点点。因为啊，git有多种方式处理重命名一个文件（比如：使用git rm配合git add、git mv），而以往的程度还不足以确保SVN知道所有的情况。但是，还没有能完美处理重命名的文件系统。</p>
<h2 id="一、git文件分类"><a href="#一、git文件分类" class="headerlink" title="一、git文件分类"></a>一、git文件分类</h2><h3 id="1、git文件分类"><a href="#1、git文件分类" class="headerlink" title="1、git文件分类"></a>1、git文件分类</h3><p>git将所有文件分为3类：已追踪的、被忽略的和未追踪的，如下图所示。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">graph TD</span><br><span class="line">git中的文件分类 --&gt; 已追踪的Tracked</span><br><span class="line">git中的文件分类 --&gt; 被忽略的Ignored</span><br><span class="line">git中的文件分类 --&gt; 未追踪的Untracked</span><br></pre></td></tr></table></figure>

<h4 id="1-1、已追踪的（Tracked）"><a href="#1-1、已追踪的（Tracked）" class="headerlink" title="1.1、已追踪的（Tracked）"></a>1.1、已追踪的（Tracked）</h4><p>已追踪的文件是指<strong>已经在版本库中的文件</strong>，或者是<strong>已经暂存到索引中的文件</strong>。如果想将新文件newfile添加到为已追踪（Tracked）的文件，执行<code>git add newfile</code>命令即可。例如暂存index.html文件。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git add index.html</span><br></pre></td></tr></table></figure>



<h4 id="1-2、被忽略的（Ignored）"><a href="#1-2、被忽略的（Ignored）" class="headerlink" title="1.2、被忽略的（Ignored）"></a>1.2、被忽略的（Ignored）</h4><p>被忽略的文件必须<strong>在版本库中被明确申明为不可见或被忽略</strong>，即使它可能会在你的工作目录中出现。一个软件项目通常会有很多倍忽略的文件（使用过SVN开发Java的小伙伴就很熟悉了，通过提交时我们可以选择忽略哪些固定的文件不提交）。普通被忽略的文件包含临时文件、个人笔记、编译器输出文件以及构建项目过程中自动生成的大多数文件等等。<strong>Git维护一个默认忽略文件列表</strong>，也可以配置版本库来识别其它文件。</p>
<h4 id="1-3、未追踪的（Untracked）"><a href="#1-3、未追踪的（Untracked）" class="headerlink" title="1.3、未追踪的（Untracked）"></a>1.3、未追踪的（Untracked）</h4><p>未追踪的文件是指那些不在前两类中的文件。Git把工作目录下的所有文件当成一个集合，减去已追踪的文件和被忽略的文件，剩余部分最为未被追踪的文件（Untracked）。</p>
<p>这里测试，初始化了一个名为test目录的仓库，原本包含了一个demo-1-0.0.1-SNAPSHOT.jar文件。但是我没有将其暂存或者是添加到版本库中，就是如下你看到的显示未追踪的文件（Untracked files）。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git status</span><br><span class="line">HEAD detached at bd156ab</span><br><span class="line">Untracked files:</span><br><span class="line">  (use <span class="string">&quot;git add &lt;file&gt;...&quot;</span> to include <span class="keyword">in</span> what will be committed)</span><br><span class="line">        demo-1-0.0.1-SNAPSHOT.jar</span><br><span class="line"></span><br><span class="line">nothing added to commit but untracked files present (use <span class="string">&quot;git add&quot;</span> to track)</span><br></pre></td></tr></table></figure>

<p>为了演示说明，<strong>重新初始化了一个sky工作目录</strong>。通过创建一个全新的工作目录和版本库并处理一些文件来测试验证这些不同类别的文件。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#初始仓库sky</span></span><br><span class="line">$ git init</span><br><span class="line">Initialized empty Git repository <span class="keyword">in</span> D:/work/sky/.git/</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看状态</span></span><br><span class="line">$ git status</span><br><span class="line">On branch master</span><br><span class="line">No commits yet</span><br><span class="line">nothing to commit (create/copy files and use <span class="string">&quot;git add&quot;</span> to track)</span><br><span class="line"></span><br><span class="line"><span class="comment">#输入数据到sky仓库的sky文件中</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;new data&quot;</span> &gt;&gt; sky</span><br><span class="line"><span class="comment">#再次查看状态，显示一个未被追踪的文件sky</span></span><br><span class="line">$ git status</span><br><span class="line">On branch master</span><br><span class="line">No commits yet</span><br><span class="line">Untracked files:</span><br><span class="line">  (use <span class="string">&quot;git add &lt;file&gt;...&quot;</span> to include <span class="keyword">in</span> what will be committed)</span><br><span class="line">        sky</span><br><span class="line">nothing added to commit but untracked files present (use <span class="string">&quot;git add&quot;</span> to track)</span><br></pre></td></tr></table></figure>

<p>起初，目录里没有文件，已经追踪的文件和被忽略的文件都是空的，因此未追踪的文件也是空的。一旦创建了一个sky文件，<code>git status</code>就会报告一个未追踪的文件。</p>
<p>编辑器和构建环境常常会在源码文件周围遗留一些临时文件。在版本库中这些文件通常是不应该被当做源文件追踪的。为了让Git忽略目录中的文件，只需要将该文件名添加到一个特殊的文件<code>.gitignore</code>中即可。手动创建一个测试的垃圾文件test.o，然后放入.gitignore文件中进行维护。如下是演示过程中的示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#手动创建一个测试的垃圾文件</span></span><br><span class="line">$ <span class="built_in">touch</span> test.o</span><br><span class="line"><span class="comment">#查看状态，此时未添加到忽略文件中进行维护</span></span><br><span class="line">$ git status</span><br><span class="line">On branch master</span><br><span class="line">No commits yet</span><br><span class="line">Untracked files:</span><br><span class="line">  (use <span class="string">&quot;git add &lt;file&gt;...&quot;</span> to include <span class="keyword">in</span> what will be committed)</span><br><span class="line">        sky</span><br><span class="line">        test.o</span><br><span class="line">nothing added to commit but untracked files present (use <span class="string">&quot;git add&quot;</span> to track)</span><br><span class="line"></span><br><span class="line"><span class="comment">#添加到忽略文件.gitignore，然后查看状态与之前进行对比</span></span><br><span class="line">$ <span class="built_in">echo</span> test.o &gt; .gitignore</span><br><span class="line">$ git status</span><br><span class="line">On branch master</span><br><span class="line">No commits yet</span><br><span class="line">Untracked files:</span><br><span class="line">  (use <span class="string">&quot;git add &lt;file&gt;...&quot;</span> to include <span class="keyword">in</span> what will be committed)</span><br><span class="line">        .gitignore</span><br><span class="line">        sky</span><br><span class="line">nothing added to commit but untracked files present (use <span class="string">&quot;git add&quot;</span> to track)</span><br></pre></td></tr></table></figure>

<p>通过上面的一系列操作，这样test.o已经被忽略掉了，但是git status现在显示出一个新的未追踪的文件<code>.gitignore</code>。虽然.gitignore文件对Git有特殊的意义，但是它和版本库中任何其它普文件都是同样管理的。除非将.gitignore文件添加到索引中，否则Git仍然会将她当成未追踪的文件。下面将展示不同的方式来改变文件的追踪状态，以及如何添加或者从索引中删除她。</p>
<h2 id="二、git-add命令"><a href="#二、git-add命令" class="headerlink" title="二、git add命令"></a>二、git add命令</h2><p>回顾git add使用</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#新增一个工作目录test</span></span><br><span class="line">$ <span class="built_in">mkdir</span> <span class="built_in">test</span></span><br><span class="line"><span class="comment">#初始化化一个仓库</span></span><br><span class="line">git init</span><br><span class="line"><span class="comment">#暂存test.md文件</span></span><br><span class="line">git add test.md</span><br></pre></td></tr></table></figure>

<p><strong>注意</strong>：在暂存的过程中，你会发现<code>git diff</code>这个命令非常的有用。<strong>这条命令可以显示出两组不同的差异</strong>，git diff显示仍然留在工作目录中且未暂存的变更；<code>git diff --cached</code><strong>显示已经暂存且因此需要有助于下次提交的变更</strong>。</p>
<h4 id="1、git-add用法，探寻原理"><a href="#1、git-add用法，探寻原理" class="headerlink" title="1、git add用法，探寻原理"></a>1、git add用法，探寻原理</h4><p>git add 命令的意义是将暂存一个文件。以Git文件分类而言，如果一个文件是未追踪的，那么<code>git add</code>会将文件的状态转化为<strong>已追踪状态</strong>。如果git add<strong>作用一个目录</strong>，那么该目录下的<strong>所有文件都会被递归为已追踪状态暂存起来</strong>。接着之前的例子，继续进行讲解。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git status</span><br><span class="line">On branch master</span><br><span class="line">No commits yet</span><br><span class="line">Untracked files:</span><br><span class="line">  (use <span class="string">&quot;git add &lt;file&gt;...&quot;</span> to include <span class="keyword">in</span> what will be committed)</span><br><span class="line">        .gitignore</span><br><span class="line">        sky</span><br><span class="line">nothing added to commit but untracked files present (use <span class="string">&quot;git add&quot;</span> to track)</span><br><span class="line"><span class="comment">#将sky和.gitignore文件暂存，查看状态对比</span></span><br><span class="line">$ git add sky .gitignore</span><br><span class="line">$ git status</span><br><span class="line">On branch master</span><br><span class="line">No commits yet</span><br><span class="line">Changes to be committed:</span><br><span class="line">  (use <span class="string">&quot;git rm --cached &lt;file&gt;...&quot;</span> to unstage)</span><br><span class="line">        new file:   .gitignore</span><br><span class="line">        new file:   sky</span><br></pre></td></tr></table></figure>

<p>第一条git status目录显示有两个未追踪的文件，<strong>并友好的提醒你要追踪一个文件</strong>，只需要使用<code>git add &lt;file&gt;...</code>命令即可。使用git add命令之后，暂存和追踪sky以及.gitignore文件，并准备在下次提交的时候添加到版本裤中。</p>
<p>在Git的对象模型方面，发出<code>git add</code>命令时对每个文件的全部内容都将被复制到对象库中，并且按文件的SHA1名来索引。<strong>暂存一个文件也称作为缓存</strong>（cacheing）一个文件，或者是称为<strong>将文件放入索引</strong>，其实上面已经看到了提示<code>--cached</code>。可以使用<code>git ls-files</code>命令查看隐藏在对象模型下的文件，并且可以找到那些暂存文件的SHA1值。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git ls-files --stage</span><br><span class="line">100644 85c292ca0717bb097b55af3b961c493190d1a4aa 0       .gitignore</span><br><span class="line">100644 116c7ee1423b9a469b3b0e122952cdedc3ed28fc 0       sky</span><br></pre></td></tr></table></figure>

<p>在版本库中大多数的日常变化可能只是简单的编辑。但在任何编辑后，提交变更之前，请执行<code>git add</code>命令，用最新的版本文件去更新索引。如果不这么去做，你将会得到两个不同版本的文件：<strong>一个在对象库中是被索引引用</strong>的，<strong>另一个则在你的工作目录下</strong>。继续之前的示例，改变sky文件，使之有别与索引中的那个文件，然后使用来自神秘的东方的韩天尊的无敌逃跑技能。开个玩笑，其实是命令git hash-object file（你几乎不会直接调用她）来直接和输出的这个新版本的SHA1散列值。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git ls-files --stage</span><br><span class="line">100644 85c292ca0717bb097b55af3b961c493190d1a4aa 0       .gitignore</span><br><span class="line">100644 116c7ee1423b9a469b3b0e122952cdedc3ed28fc 0       sky</span><br><span class="line"><span class="comment">#通过vim修改，新增了add new some data now</span></span><br><span class="line">$ <span class="built_in">cat</span> sky</span><br><span class="line">new data</span><br><span class="line">add new some data now</span><br><span class="line"><span class="comment">#使用命令计算SHA1散列值</span></span><br><span class="line">$ git hash-object sky</span><br><span class="line">e24bcd708d232113f9012a5ece0a64eb97f3921e</span><br></pre></td></tr></table></figure>

<p>在略做修改之后，你会发现保存在对象库和索引中的那个文件的<strong>上一个版本的SHA1值是</strong><code>116c7ee1423b9a469b3b0e122952cdedc3ed28fc</code>。然而在更新sky文件后，<strong>版本的SHA1值则变成了</strong><code>e24bcd708d232113f9012a5ece0a64eb97f3921e</code>。接下来更新索引，使之包含文件的最新版本。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git add sky</span><br><span class="line">$ git ls-files --stage</span><br><span class="line">100644 85c292ca0717bb097b55af3b961c493190d1a4aa 0       .gitignore</span><br><span class="line">100644 e24bcd708d232113f9012a5ece0a64eb97f3921e 0       sky</span><br></pre></td></tr></table></figure>

<p>现在索引有了更新后的文件版本。简单来概括：<strong>文件已经暂存</strong>了，或者是<strong>sky文件在索引中</strong>。在文件索引中这种说法并不是很确切，因为实际上文件存在对象库中，<strong>索引只是指向她而已</strong>。看似无用的处理SHA1散列值和索引，却带来一个关键点：与其将<code>git add</code>看成是<strong>添加这个文件</strong>，不如看作是<strong>添加这个内容</strong>。</p>
<p>在任何情况下，最重要的是<strong>要记住工作目录下的文件版本和索引中暂存的文件版本可能是不同步的</strong>。当提交的时候，<strong>git会使用索引中的文件版本</strong>。</p>
<h2 id="三、git-rm命令"><a href="#三、git-rm命令" class="headerlink" title="三、git rm命令"></a>三、git rm命令</h2><p>回顾简单用法，例如删除test.md文件（前提是已暂存了）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#删除test.md文件</span></span><br><span class="line">git <span class="built_in">rm</span> test.md</span><br></pre></td></tr></table></figure>

<h3 id="1、git-rm命令的用法"><a href="#1、git-rm命令的用法" class="headerlink" title="1、git rm命令的用法"></a>1、git rm命令的用法</h3><p><code>git rm</code>命令自然是与<code>git add</code>相反的命令。她会在版本库和工作目录中同时删除文件。然而，由于删除文件比添加文件问题更多（假如出现错误），git对移除文件更多一些关注。</p>
<p>Git可以从索引或者同时从索引和工作目录中删除一个文件。Git不会只从工作目录中删除一个文件，普通的rm命令可用于这一目的。</p>
<p>从工作目录和索引中同时删除一个文件，<strong>并不会删除该文件在版本库中的历史记录</strong>。文件的任何版本，只要是提交到版本库中的历史记录中的一部分，就会留在对象库里并保存历史记录。继续上述的例子，引入一个不应该暂存的<strong>意外文件</strong>，看如何将其删除。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#新增了一个意外文件rdms</span></span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">&quot;random file data&quot;</span> &gt; rdms</span><br><span class="line"><span class="comment">#提示：无法对Git认为是other的文件执行git rm</span></span><br><span class="line"><span class="comment">#应该只是用rm rdms</span></span><br><span class="line">$ git <span class="built_in">rm</span> rdms</span><br><span class="line">fatal: pathspec <span class="string">&#x27;rdms&#x27;</span> did not match any files</span><br></pre></td></tr></table></figure>

<p>因为git rm也是一条<strong>对索引进行操作的命令</strong>，所以对没有添加到版本库中或索引中的文件是不起作用的。Git必须先认识到文件才行，所以下面<strong>偶然的暂存rdms文件</strong>。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#意外暂存rdms文件</span></span><br><span class="line">$ git add rdms</span><br><span class="line">$ git status</span><br><span class="line">On branch master</span><br><span class="line">No commits yet</span><br><span class="line">Changes to be committed:</span><br><span class="line">  (use <span class="string">&quot;git rm --cached &lt;file&gt;...&quot;</span> to unstage)</span><br><span class="line">        new file:   .gitignore</span><br><span class="line">        new file:   rdms</span><br><span class="line">        new file:   sky</span><br></pre></td></tr></table></figure>

<p>如果要将一个文件由已暂存的转化为未暂存的，可以使用<code>git rm --cached</code>命令。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#查看SHA1散列值</span></span><br><span class="line">$ git ls-files --stage</span><br><span class="line">100644 85c292ca0717bb097b55af3b961c493190d1a4aa 0       .gitignore</span><br><span class="line">100644 087d758bdee282174e3ba5905a5e463d3d7a88dc 0       rdms</span><br><span class="line">100644 e24bcd708d232113f9012a5ece0a64eb97f3921e 0       sky</span><br><span class="line"><span class="comment">#删除</span></span><br><span class="line">$ git <span class="built_in">rm</span> --cached rdms</span><br><span class="line"><span class="built_in">rm</span> <span class="string">&#x27;rdms&#x27;</span></span><br><span class="line"><span class="comment">#此时对比删除前的内容，发现rdms文件已经不存在了</span></span><br><span class="line">$ git ls-files --stage</span><br><span class="line">100644 85c292ca0717bb097b55af3b961c493190d1a4aa 0       .gitignore</span><br><span class="line">100644 e24bcd708d232113f9012a5ece0a64eb97f3921e 0       sky</span><br><span class="line"><span class="comment">#可以看出，加上--cached参数并不会删除工作目录中的文件</span></span><br><span class="line">$ <span class="built_in">ls</span></span><br><span class="line">rdms  sky  test.o</span><br></pre></td></tr></table></figure>

<p><code>git rm --cached</code>会删除索引中的文件并将其保留在工作目录中，而<code>git rm</code>则会将文件从索引和工作目录中同时删除。所以，<strong>我额外的加了注意事项在文末</strong>，并予以说明。</p>
<p>如果想要移除一个已经提交的文件，通过简单的git rm filename命令来暂存这一请求。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#对暂存的文件进行提交</span></span><br><span class="line">$ git commit -m <span class="string">&quot;add some files&quot;</span></span><br><span class="line">[master (root-commit) 82e23d4] add some files</span><br><span class="line"> 2 files changed, 3 insertions(+)</span><br><span class="line"> create mode 100644 .gitignore</span><br><span class="line"> create mode 100644 sky</span><br><span class="line"><span class="comment">#将之前暂存的文件sky移除暂存</span></span><br><span class="line">$ git <span class="built_in">rm</span> sky</span><br><span class="line"><span class="built_in">rm</span> <span class="string">&#x27;sky&#x27;</span></span><br><span class="line"><span class="comment">#查看状态</span></span><br><span class="line">$ git status</span><br><span class="line">On branch master</span><br><span class="line">Changes to be committed:</span><br><span class="line">  (use <span class="string">&quot;git restore --staged &lt;file&gt;...&quot;</span> to unstage)</span><br><span class="line">        deleted:    sky</span><br><span class="line"></span><br><span class="line">Untracked files:</span><br><span class="line">  (use <span class="string">&quot;git add &lt;file&gt;...&quot;</span> to include <span class="keyword">in</span> what will be committed)</span><br><span class="line">        rdms</span><br></pre></td></tr></table></figure>

<p>Git在删除一个文件之前，她会先进行检查以确保工作目录下该文件的版本与当前分支中的最新版本（Git命令调用HEAD的版本）是匹配的。这个验证会防止文件的修改（由于你的编辑）意外丢失。</p>
<p>tips：还可以使用<code>git rm -f</code>来强制删除文件。强制就是明确授权，给你权限放心大胆的删除。即使从上次提交以来你已经修改了该文件，还是会删除她。</p>
<p>万一真的想不留那个不小心删除的文件，只要在把她添加回来即可。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git add sky</span><br><span class="line">$ git checkout HEAD--sky</span><br><span class="line"><span class="comment">#或者提交后采取如下命令找到对应的散列值，进行恢复，rev-list命令很实用，请拿起小本本记住她</span></span><br><span class="line">$ git rev-list master</span><br><span class="line">82e23d40959116ae55ca82ced231e0069d8fc229</span><br><span class="line">$ git checkout 82e23d40959116ae55ca82ced231e0069d8fc229</span><br><span class="line">Warning: you are leaving 1 commit behind, not connected to</span><br><span class="line">any of your branches:</span><br><span class="line">  40eac09 delete some files</span><br><span class="line">If you want to keep it by creating a new branch, this may be a good time</span><br><span class="line">to <span class="keyword">do</span> so with:</span><br><span class="line"> git branch &lt;new-branch-name&gt; 40eac09</span><br><span class="line">HEAD is now at 82e23d4 add some files</span><br></pre></td></tr></table></figure>

<p><strong>注意</strong>：<code>rev-list</code>命令很实用，<strong>请拿起小本本记住她</strong>。</p>
<p>此处只是顺带的提一下。当我们删除了一个文件，此时想回退到历史版本，可以使用git checkout 接上master分支的ID（SHA1）。如何找到ID值呢？这里仅仅是简单的介绍了一下<code>git rev-list</code>的用法，相信你会爱上她的。当然还可以加上参数–before，接指定的日期去查询分支。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#查询我的历史版本查看到散列值</span></span><br><span class="line">$ git rev-list master</span><br><span class="line">988df9ddbeb6b30d0bf5138f36219a8593df75e0</span><br><span class="line">bd156ab27fc96e78e5515c39c05d4ecd6c36b9f0</span><br><span class="line"></span><br><span class="line"><span class="comment">#检出历史版本，根散列值恢复到上一个版本</span></span><br><span class="line">$ git checkout bd156ab27fc96e78e5515c39c05d4ecd6c36b9f0</span><br></pre></td></tr></table></figure>

<p>版本系统擅长恢复文件的旧的版本。关于<code>git rm</code>命令就演示这么多。</p>
<h2 id="四、git-mv命令"><a href="#四、git-mv命令" class="headerlink" title="四、git mv命令"></a>四、git mv命令</h2><h3 id="1、简单描述使用"><a href="#1、简单描述使用" class="headerlink" title="1、简单描述使用"></a>1、简单描述使用</h3><p>例如，使用git mv命令将test.md文件重命名为Readme.md，如下命令所示。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#重命名一个文件</span></span><br><span class="line">git <span class="built_in">mv</span> test.md Readme.md</span><br></pre></td></tr></table></figure>

<p>git mv命令的另一作用是移动文件位置，熟悉Linux命令的小伙伴肯定不会陌生。将test.md文件由github目录移动到gitee目录。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#移动一个文件的位置</span></span><br><span class="line">git <span class="built_in">mv</span> /github/test.md /gitee/</span><br></pre></td></tr></table></figure>

<h3 id="2、git-mv详细用法介绍"><a href="#2、git-mv详细用法介绍" class="headerlink" title="2、git mv详细用法介绍"></a>2、git mv详细用法介绍</h3><p>假设你需要移动或者重命名文件。可以对旧的文件使用<code>git rm</code>命令，然后使用<code>git add</code>命令添加新文件，或者直接使用<code>git mv</code>命令。给定一个版本库，其中有一个test文件，你想要将重命名为newtest。下面一系列的命令就是等价的Git操作。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">mv</span> <span class="built_in">test</span> newtest</span><br><span class="line">$ git <span class="built_in">rm</span> <span class="built_in">test</span></span><br><span class="line">$ git add newtest</span><br><span class="line"><span class="comment">#上面三步操作等价于下面操作</span></span><br><span class="line">$ git <span class="built_in">mv</span> <span class="built_in">test</span> newtest</span><br></pre></td></tr></table></figure>

<p>无论哪种情况，<strong>Git都会在索引中删除test的路径名</strong>，<strong>并添加newtest的路径名</strong>。至于test的原始内容，则仍然保留在对象库中，然后才会将它与newtest重新关联。看起来有点绕，其实仔细琢磨一下就好了。</p>
<p>在示例版本库中找回test这个文件，如下重命名，然后提交变更。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git <span class="built_in">mv</span> <span class="built_in">test</span> newtest</span><br><span class="line">$ git add newtest</span><br><span class="line">$ git commit newtest -m <span class="string">&quot;moved test to newtest&quot;</span></span><br><span class="line">[detached HEAD adc778e] moved <span class="built_in">test</span> to newtest</span><br><span class="line"> 1 file changed, 1 insertion(+)</span><br><span class="line"> create mode 100644 newtest</span><br></pre></td></tr></table></figure>

<p>如果你碰巧检查这个文件的历史记录，你可能会不安的看到Git很明显丢失了原始的test文件的历史记录，只记得她从test从重命名为当前文件名。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> newtest</span><br><span class="line">commit adc778e58db37977b39a541da4498607f12bc80b (HEAD)</span><br><span class="line">Author: dywangk &lt;example@xx.com&gt;</span><br><span class="line">Date:   Mon Jan 17 20:35:56 2022 +0800</span><br><span class="line">    moved <span class="built_in">test</span> to newtest</span><br></pre></td></tr></table></figure>

<p>其实，Git是记得全部历史记录的，但是显示要限制与在命令中指定的文件名。<code>--follow</code>选项会让Git在日志中回溯并找到内容相关联的整个历史记录。这里就不贴代码记录了，篇幅拉的太长了，可以自行修改测试。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> --follow sky</span><br></pre></td></tr></table></figure>

<p>VCS的经典问题之一就是文件重命名会导致它们丢失对文件历史记录的追踪。而Git即使经过重命名，也仍然能保留历史信息。</p>
<h2 id="五、追踪重命名注解"><a href="#五、追踪重命名注解" class="headerlink" title="五、追踪重命名注解"></a>五、追踪重命名注解</h2><p><strong>小白</strong>：cangls啊，我以前使用过svn，没有用过Git，她们之间对重命名有啥区别吗？<br><strong>cangls</strong>：当然有了，下面就给你科普一下。内容很长，虽然很乏味，但请耐心看完。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/4cb64e9aef61918b91844ec711c5b57a.png"></p>
<h3 id="1、追踪重命名注解介绍"><a href="#1、追踪重命名注解介绍" class="headerlink" title="1、追踪重命名注解介绍"></a>1、追踪重命名注解介绍</h3><p>下面作为传统版本控制系统的典型，SVN对文件重命名和移动做了很多追踪工作。为什么呢？这是由于它只追踪文件之间的差异才导致的。例如，如果移动一个文件这本质上就相当于从旧文件中删除所有行，然后将它添加到新文件中。但是任何时候，你哪怕就做一个简单的重命名，也需要再次传输和存储文件的全部内容，这将变得非常低效；想象一下重命名一个拥有数以千计的文件的子目录，那该是多么恐怖的一件事情。</p>
<p>为了缓解这种情况，SVN显示追踪每一次重命名。如果你想将<code>test.txt</code>重命名为<code>subdir/test.txt</code>，<strong>你必须对文件使用svn mv</strong>，而不能使用<code>svn rm</code>和<code>svn add</code>。否则，SVN将不能识别出这是一个重命名，只能像刚才描述的那样进行低效的删除、添加步骤。</p>
<p>接着，要有追踪重命名这个特殊功能，SVN服务器需要一个特殊协议来告诉她的客户端，<strong>请将test.txt移动到subdir&#x2F;test.txt</strong>。此外，每一个SVN客户端必须确保该操作（相对罕见）执行的正确性。</p>
<p>另一方面，<strong>Git则不追踪重命名</strong>。可以将text.txt移动到或者复制到任何地方，这么做只会影响树对象而已（<strong>请记住树对象保存内容间的关系，而内容本身保存在blob中</strong>）。查看两颗树间的差异，我们很容易发现叫 a30af53…的blob已经移到另一个新地方。即使你没有明确检查差异，系统中的每个部分都知道她已经有了那么一个blob，不再需要她的另一个副本了。</p>
<p>在这种情况下，像在很多其它地方一样，Git基于散列的简单存储系统简化了许多其它RCS被难倒的或者选择回避的事情。</p>
<h2 id="六、-gitignore文件"><a href="#六、-gitignore文件" class="headerlink" title="六、.gitignore文件"></a>六、.gitignore文件</h2><p>在本文介绍暂存文件的时候，就已经简单的使用过gitignore文件来忽略不相干的test.o文件。在那个例子中，可以忽略任何文件，只要将想要忽略的文件名加到同一目录下的.gitignore文件即可。此外可以通过将文件名添加到该版本库顶层目录下的.gitignore文件中忽略她。</p>
<p>但是git还支持一种更为丰富的机制。<strong>一个.gitignore文件下可以包含一个文件名模式列表，指定哪些文件要忽略</strong>。.gitignore文件格式如下：</p>
<ul>
<li>空行会被忽略，而已井号（#）开头的行可以用于注释。然而，如果#跟在其它文本后面，它就不表示注释了。</li>
<li>一个简单的字面配置文件名匹配任何目录中的同名文件。</li>
<li>目录名由末尾的反斜线（&#x2F;）标记。这能匹配同名的目录和子目录，但不匹配文件或符号链接。</li>
<li>包含shell通配符，如星号（*），这种模式可以扩展为shell通配模式。</li>
<li>起始的感叹号（！）会对该行其余部分模式进行取反。此外，被之前模式排除但被取反规则匹配的文件是要包含的。取反模式会覆盖低优先级的规则。</li>
</ul>
<p><strong>Git允许在版本库中任何目录下有.gitignore文件</strong>。每个文件都只影响该目录和其所有子目录。.gitignore的规则也是级联的：可以覆盖高层目录中的规则，只要在其子目录包含一个取反模式（使用起始的“！”）。</p>
<p>为了解决带多个.gitignore目录的层次结构问题，也为了允许命令行对忽略文件列表的增编，Git按照下列由高到底的有限顺序：</p>
<ul>
<li>在命令行指定的模式；</li>
<li>从相同目录的.gitignore文件中读取的模式；</li>
<li>上层目录中的模式，向上进行。因此，当前目录的模式能推翻上层目录的模式，而最接近当前目录的上层目录的模式优于更上层的目录模式；</li>
<li>来自.git&#x2F;info&#x2F;exclude文件的模式；</li>
<li>来自配置变量core.excludefile指定的文件中的模式。</li>
</ul>
<p><strong>因为在版本库中.gitignore被视为普通文件，所以在复制操作过程中它会被复制，并适用于你的版本库的所有副本</strong>。<strong>一般情况下，只有当模式普遍适用于派生的版本库时，才应该将条目放入版本控制下的.gitignore文件中</strong>。</p>
<p>当然还有一种特殊情形，有一类文件我需要忽略，但其中部分我需要追踪，此时可以使用取反（！）。</p>
<h2 id="七、Git中对象模型和文件"><a href="#七、Git中对象模型和文件" class="headerlink" title="七、Git中对象模型和文件"></a>七、Git中对象模型和文件</h2><p>到现在为止，你应该具备管理文件的基本能力。尽管如此，在哪里跟踪啥文件：在工作目录、索引还是版本库中，还是让人困惑。通过图形进行区分她们之间的区别。初始状态，在工作目录中包含file1和file2两个文件，分别为“foo”和“bar”。</p>
<p>4张图绘制有点粗糙，后续会优化的。</p>
<h3 id="1、示例图1"><a href="#1、示例图1" class="headerlink" title="1、示例图1"></a>1、示例图1</h3><p>除了工作目录下的file1和file2之外，master分支还有一个提交，它记录了与file1和file2内容完全一样的“foo”和“bar”的树。另外，该索引记录两个HSA1值 257cc5和5716ca，与那个两个文件分别对应。工作目录、索引及对象库都是同步一致的，没什么是脏的。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/6051935876609ed8046a5bd56ce46771.png"></p>
<h3 id="2、示例图2"><a href="#2、示例图2" class="headerlink" title="2、示例图2"></a>2、示例图2</h3><p>图2显示了在工作记录中对file1编辑后的变化，现在它的内容包含“git”。索引和对象库中没有变化，但是工作目录现在是脏的。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/059bb76bfb11fc73169b335c0c7be9f9.png"></p>
<p>当使用<code>git add file1</code>来暂存file1的编辑时，一些有趣的变化发生了。如图3所示。</p>
<h3 id="3、示例图3"><a href="#3、示例图3" class="headerlink" title="3、示例图3"></a>3、示例图3</h3><p>git首先选取出工作目录中file1的版本，为它的内容计算一个SHA1散列ID（04848c），然后把那个ID保存在对象库中。接下来，Git就会记录在索引中的file1路径名已更新为新的（04848c）SHA1值。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/a933d4f47f1f6f3beff3a4a00bb65a01.png"></p>
<h3 id="4、示例图4"><a href="#4、示例图4" class="headerlink" title="4、示例图4"></a>4、示例图4</h3><p>由于file2文件内容未发生改变而且没有任何<code>git add</code>来暂存file2，因此索引继续指向原始的blob对象。此时你已经在索引暂存了file1文件，而且工作目录和索引是一致的。不过，就HEAD而言，索引是脏的，因为索引中的树和在master分支的HEAD提交的树在对象库里是不一样的。最后，当所有变更暂存到版本库中，<code>git commit</code>的作用如图4。图4过程看着最为复杂，需要自己画图捋一捋。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/108097a4f86c814a78abfb46ae850aba.png"></p>
<p>如图4所示，提交启动了三个步骤。首先，虚拟树对象（即索引）在转换成一个真实的树对象后，会以SHA1命名，然后存放到对象库中。其次，用你的日志消息创建一个新的提交对象。新的提交将会指向新创建的树对象以及前一个或父提交。最后，master分支的引用从最近一次提交移动到新创建的提交对象，成为新的master HEAD。</p>
<p>最终，一个有趣的细节是，工作目录、索引和对象库（由master分支的HEAD表示）再次同步，此时就变为一致了，就如同在图1所示。</p>
<h2 id="八、注意事项（重点）"><a href="#八、注意事项（重点）" class="headerlink" title="八、注意事项（重点）"></a>八、注意事项（重点）</h2><h3 id="1、git-commit-–all注意事项"><a href="#1、git-commit-–all注意事项" class="headerlink" title="1、git commit –all注意事项"></a>1、git commit –all注意事项</h3><h4 id="1-1、回顾提交命令"><a href="#1-1、回顾提交命令" class="headerlink" title="1.1、回顾提交命令"></a>1.1、回顾提交命令</h4><p>此处分为未指定参数、指定-a参数、指定单个文件三种情况。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#未指定参数</span></span><br><span class="line">git commit -m <span class="string">&quot;注释&quot;</span></span><br><span class="line"><span class="comment">#指定单个要提交的文件</span></span><br><span class="line">git commit /github/test.md -m <span class="string">&quot;初次提交test.md文件&quot;</span></span><br><span class="line"><span class="comment">#或者提交全部（注意事项：导致暂存和未暂存以及未追踪的文件发生变化）</span></span><br><span class="line">git commit -a -m <span class="string">&quot;提交全部&quot;</span></span><br></pre></td></tr></table></figure>

<p>这里补充一个git常用的命令git diff，查看提交差异。使用之前提交的两个全ID名并执行git diff，通过git log命令查看ID值。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git diff 988df9ddbeb6b30d0bf5138f36219a8593df75e0 bd156ab27fc96e78e5515c39c05d4ecd6c36b9f0</span><br><span class="line"></span><br><span class="line">diff --git a/README.md b/README.md</span><br><span class="line">new file mode 100644</span><br><span class="line">index 0000000..2b64487</span><br><span class="line">--- /dev/null</span><br><span class="line">+++ b/README.md</span><br><span class="line">@@ -0,0 +1 @@</span><br><span class="line">+初始化</span><br></pre></td></tr></table></figure>





<h4 id="1-2、注意事项"><a href="#1-2、注意事项" class="headerlink" title="1.2、注意事项"></a>1.2、注意事项</h4><p>以前只是用来写作，也没多想，最多就写个注释就直接提交（commit ）和推送（push）到远程仓库了。原本我思考过这样一个问题，当我提交的时候不加参数也不指定提交的文件，会有什么影响。起初也是好奇，才翻阅了一些书籍发现有很多门道的。</p>
<p>后来，注意到了关于<code>git commit --all</code>注意事项。<code>commit -a</code>或者<code>-all</code>参数<strong>会导致执行之前自动暂存所有未暂存的和未追踪的文件变化，包括从工作副本中删除已追踪的文件</strong>。</p>
<p><strong>注意</strong>：如果不通过命令行直接提供日志消息，Git会启动编辑器，并提示你写一个。</p>
<h3 id="2、git-rm-–cached注意事项"><a href="#2、git-rm-–cached注意事项" class="headerlink" title="2、git rm –cached注意事项"></a>2、git rm –cached注意事项</h3><h4 id="2-1、回顾删除命令"><a href="#2-1、回顾删除命令" class="headerlink" title="2.1、回顾删除命令"></a>2.1、回顾删除命令</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#索引和工作目录中都删除</span></span><br><span class="line">git <span class="built_in">rm</span> test.md</span><br><span class="line"><span class="comment">#递归删除test目录</span></span><br><span class="line">git <span class="built_in">rm</span> -r <span class="built_in">test</span></span><br><span class="line"><span class="comment">#将文件标记为未追踪的，却在工作目录中仍然保留着一份副本(慎重使用)</span></span><br><span class="line">git <span class="built_in">rm</span> --cached test.md</span><br></pre></td></tr></table></figure>



<h4 id="2-2、注意事项"><a href="#2-2、注意事项" class="headerlink" title="2.2、注意事项"></a>2.2、注意事项</h4><p>git add是加一个文件暂存起来，与之相反的就是git rm是将一个文件由暂存状态移除暂存，并且<strong>rm会将文件从索引和工作目录中都删除</strong>。使用<code>git rm --cached</code>命令<strong>会将文件标记为未追踪的，却在工作目录中仍然保留着一份副本</strong>，这是很危险的。因为你也许会忘记之前自己做过了哪些操作，换句话来说是会忘记这个文件是不再被追踪的。<strong>Git需要检查工作文件中的内容是最新的，使用这种方法则无视了这个检查</strong>，从而增加了隐患。所用要<strong>慎重使用git rm –cached命令</strong>。</p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><strong>以上就是此次文章的所有内容的，希望能对你的工作有所帮助。感觉写的好，就拿出你的一键三连。如果感觉总结的不到位，也希望能留下您宝贵的意见，我会在文章中进行调整优化。</strong></p>
]]></content>
      <categories>
        <category>开发工具</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo博客优化</title>
    <url>/2023/03/11/Hexo%E5%8D%9A%E5%AE%A2%E4%BC%98%E5%8C%96/</url>
    <content><![CDATA[<p>关于 hexo 博客优化一点点思考。money &amp; time 寻找平衡。</p>
<p>闲暇时间，想起自己很久没维护的hexo + nextjs打造的静态博客网站。访问速度龟速前进，比看小电影还慢。</p>
<p>一入编程深似海，从此节操是路人。这里是文某人网络三无教程，希望对你有所帮助。</p>
<h2 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h2><p>静态博客网站老生常谈的两大问题：</p>
<ol>
<li>加载静态资源耗时长，使用cdn加速、压缩js、css、html文件，提高体验。</li>
<li>访问国外网站速度慢，如果科学上网，速度还行。 其实你会发现，优化再优化最终归结到了科学上网，资源在国内访问速度自然没话说。</li>
</ol>
<p>做完以上测试（压缩、CDN、套皮、科学上网），可以在Chrome浏览器使用F12进行调试，找到Network，使用快捷键ctrl + r 查看css消耗时间对比，发现main.css加载耗时很长。<br>使用ctrl + f5大刷新：</p>
<ul>
<li>套cf（cloudflare）皮：main.css加载时间300ms左右。</li>
<li>没套皮：main.css加载时间，运气不好，等待超过10s。</li>
<li>开加速光环：纵享丝滑，同样ms级别，也在300ms左右。</li>
<li>nginx高性能服务器：访问加载速度一样很丝滑。</li>
</ul>
<p><strong>tips</strong>：浏览器有缓存机制，如果f5小刷新没生效，使用ctrl + f5大刷新或者 ctrl + shift + delete清除缓存进行尝试。</p>
<h2 id="借东风"><a href="#借东风" class="headerlink" title="借东风"></a>借东风</h2><p>如果你访问是我原始没做啥优化也没套皮的这个地址：<span class="exturl" data-url="aHR0cHM6Ly93emd5LmNud2FuZ2sudG9wLOS9k+mqjOWkquezn+ezleS6hi4v">https://wzgy.cnwangk.top，体验太糟糕了。<i class="fa fa-external-link-alt"></i></span></p>
<p>使用第三方平台同步github pages，如果同步过程访问github授权太慢，最好开个科学上网小工具(比如GreenHub)。</p>
<p><strong>需要做两件事</strong>：</p>
<ol>
<li>在Vercel、cloudflare、netlify提供pages服务引入github pages仓库内容，设置自定义域名。</li>
<li>在云服务器厂商购买域名，进行CNAME解析(域名映射)。</li>
</ol>
<p><strong>以腾讯云域名控制台为示例进行DNS解析展示</strong>：<br><a href="https://imgse.com/i/pSxU5F0"><img data-src="https://s1.ax1x.com/2023/02/23/pSxU5F0.jpg" alt="pSxU5F0.jpg"></a></p>
<p>此处只展示基本配置、详细使用我相信各位道友比我还拿手。</p>
<h3 id="Vercel"><a href="#Vercel" class="headerlink" title="Vercel"></a>Vercel</h3><p>访问：<span class="exturl" data-url="aHR0cHM6Ly92ZXJjZWwuY29tLw==">https://vercel.com <i class="fa fa-external-link-alt"></i></span></p>
<p>同步github上的github pages 仓库即可。如果你使用CNAME值解析DNS，无需担心dns可能被污染的问题。</p>
<p>配置Domains（域名）：</p>
<p><a href="https://imgse.com/i/pSxdUUI"><img data-src="https://s1.ax1x.com/2023/02/23/pSxdUUI.jpg" alt="pSxdUUI.jpg"></a></p>
<p>如果调试时，没有立即自动同步更新，可做如下尝试。通常来说，一段时间会自动同步过来。</p>
<p><a href="https://imgse.com/i/pSxU7SU"><img data-src="https://s1.ax1x.com/2023/02/23/pSxU7SU.jpg" alt="pSxU7SU.jpg"></a></p>
<p>个人搭建效果可供参考：<a href="https://blog.cnwangk.top/">https://blog.cnwangk.top</a></p>
<h3 id="cloudflare"><a href="#cloudflare" class="headerlink" title="cloudflare"></a>cloudflare</h3><p>官网：<span class="exturl" data-url="aHR0cHM6Ly93d3cuY2xvdWRmbGFyZXN0YXR1cy5jb20v">https://www.cloudflarestatus.com<i class="fa fa-external-link-alt"></i></span></p>
<p>控制台：<span class="exturl" data-url="aHR0cHM6Ly9kYXNoLmNsb3VkZmxhcmUuY29tLw==">https://dash.cloudflare.com/<i class="fa fa-external-link-alt"></i></span></p>
<p>使用cloudflare pages服务，导入github pages服务仓库。与Vercel一样支持CNAME解析（域名映射）。</p>
<p>个人搭建效果可供参考：<span class="exturl" data-url="aHR0cHM6Ly9jZi5jbndhbmdrLnRvcC8=">https://cf.cnwangk.top<i class="fa fa-external-link-alt"></i></span></p>
<p><a href="https://imgse.com/i/pSxUIYV"><img data-src="https://s1.ax1x.com/2023/02/23/pSxUIYV.jpg" alt="pSxUIYV.jpg"></a></p>
<h3 id="netlify"><a href="#netlify" class="headerlink" title="netlify"></a>netlify</h3><p>访问：<span class="exturl" data-url="aHR0cHM6Ly9hcHAubmV0bGlmeS5jb20v">https://app.netlify.com<i class="fa fa-external-link-alt"></i></span></p>
<p>同步github上的github pages 仓库即可。同样支持CNAME解析（域名映射）。</p>
<p>个人搭建效果可供参考：<span class="exturl" data-url="aHR0cHM6Ly93d3cuY253YW5nay50b3Av">https://www.cnwangk.top<i class="fa fa-external-link-alt"></i></span></p>
<p><a href="https://imgse.com/i/pSxUoWT"><img data-src="https://s1.ax1x.com/2023/02/23/pSxUoWT.jpg" alt="pSxUoWT.jpg"></a></p>
<p>对比访问速度，下面套完皮后，感觉是不是还凑合。</p>
<h2 id="云服务器"><a href="#云服务器" class="headerlink" title="云服务器"></a>云服务器</h2><ul>
<li>阿里云 &amp; 腾讯云 &amp; 华为云</li>
<li>学生优惠 &amp; 首购优惠</li>
</ul>
<p>使用云服务器，主要是高带宽比较贵，配置可以不用太高，Linux服务器安装字符界面足以满足日常需求。</p>
<p>部署nginx服务，将静态资源文件部署到html目录。</p>
<p>图片服务器也有着落了，使用<strong>MinIO</strong> &amp; FastDFS搭建图片服务，目前个人比较推荐MinIO 。使用对象云存储对服务器压力要好很多，服务与图片分离开来，互不影响。</p>
<p>MinIO 中文官网下载地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cubWluaW8ub3JnLmNuL2Rvd25sb2FkLnNodG1sIy9saW51eA==">https://www.minio.org.cn/download.shtml#/linux<i class="fa fa-external-link-alt"></i></span></p>
<p>关于图片存储可以使用路过图床，如果想拥有更好的体验，<strong>可以使用oos、cos、七牛云</strong>这种付费对象云存储服务，什么都好，唯独需要money。<strong>注意了</strong>：在大陆使用域名需要备案，现在域名备案相对宽松，在腾讯云购买云服务器提供便捷备案。</p>
<h2 id="感受"><a href="#感受" class="headerlink" title="感受"></a>感受</h2><p>一朝笑尽天下事，从此节操是路人。没整理的时候，访问体验很糟糕，整完之后越来越糟糕，当然都是玩笑话。</p>
<p>cloudflare与Vercel、netlify使用体验相差无几，都支持CNAME解析（域名映射）。其实都差不多，如果非要挑一个出来，cloudflare体验稍微好一点点。</p>
<p>如果不想这么繁琐，可以使用国内平台gitee去构建gitee pages静态博客网站。</p>
<p>有经济条件，可以考虑购买云服务器（或者轻量级应用服务器）将静态博客文件使用高性能web服务器nginx进行托管。当然，nginx远不止这点功能，诸如反向代理、缓存、负载均衡等等比较强大的功能。</p>
<p>将生成的静态文件复制到nginx的html目录下即可，不用做任何改动。如果没有服务器，可以在Windows或者使用VMware虚拟机搭建Linux环境安装nginx进行测试。关于nginx入门教程，可以在站内搜索：nginx入门到实践。<br>访问：<span class="exturl" data-url="aHR0cDovL2xvY2FsaG9zdC8=">http://localhost<i class="fa fa-external-link-alt"></i></span> 或者 <span class="exturl" data-url="aHR0cDovLzEyNy4wLjAuMSzkvZPpqozov5jkuI3plJkuLw==">http://127.0.0.1，体验还不错。<i class="fa fa-external-link-alt"></i></span></p>
<p>如果想打造炫酷、实用的hexo静态博客，可以参考这两位的博客，搜索hexo相关优化资料。</p>
<ul>
<li>Sukka：<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLnNray5tb2Uv">https://blog.skk.moe<i class="fa fa-external-link-alt"></i></span></li>
<li>zu1k：<span class="exturl" data-url="aHR0cHM6Ly96dTFrLmNvbS8=">https://zu1k.com<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>——END——</p>
]]></content>
      <categories>
        <category>静态博客</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux-CentOS-Stream-9使用htop命令监控服务器</title>
    <url>/2023/04/03/Linux-CentOS-Stream-9%E4%BD%BF%E7%94%A8htop%E5%91%BD%E4%BB%A4%E7%9B%91%E6%8E%A7%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
    <content><![CDATA[<p><strong>使用 htop -t 效果展示如下图</strong>：</p>
<p><img data-src="https://s1.ax1x.com/2023/04/03/pp49tOO.png" alt="pp49tOO.png"></p>
<p>htop 支持Linux发行版比较丰富，以RHEL9（EL9）CentOS Stream 9进行示例演示。</p>
<p><strong>htop仓库地址</strong>：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2h0b3AtZGV2L2h0b3A=">https://github.com/htop-dev/htop<i class="fa fa-external-link-alt"></i></span></p>
<p>htop官网：<span class="exturl" data-url="aHR0cHM6Ly9odG9wLmRldi9kb3dubG9hZHMuaHRtbA==">https://htop.dev/downloads.html<i class="fa fa-external-link-alt"></i></span></p>
<p>epel：<span class="exturl" data-url="aHR0cHM6Ly9kb2NzLmZlZG9yYXByb2plY3Qub3JnL2VuLVVTL2VwZWwv">https://docs.fedoraproject.org/en-US/epel/<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>RHEL使用epel库，CentOS Stream 9</strong>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dnf config-manager --set-enabled crb</span><br><span class="line">dnf install epel-release epel-next-release</span><br></pre></td></tr></table></figure>



<p>wget获取epel：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://dl.fedoraproject.org/pub/epel/epel-next-release-latest-9.noarch.rpm</span><br></pre></td></tr></table></figure>



<p><strong>epel依赖库安装</strong>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rpm -ivh epel-next-release-latest-9.noarch.rpm</span><br></pre></td></tr></table></figure>

<p><strong>htop安装</strong>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dnf -y install htop</span><br></pre></td></tr></table></figure>

<p>htop 查看当前版本：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">htop -V</span><br><span class="line">htop 3.2.2</span><br></pre></td></tr></table></figure>

<p><strong>htop 运行</strong>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">htop</span><br><span class="line">htop -t</span><br></pre></td></tr></table></figure>
<p>参数 -t ：Tree，显示目录树结构。</p>
<p>htop 帮助文档：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">htop -h </span><br><span class="line">htop --<span class="built_in">help</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>开发运维</category>
      </categories>
      <tags>
        <tag>htop</tag>
      </tags>
  </entry>
  <entry>
    <title>程序人生：人生中的第一个 Java 应用程序 hello world</title>
    <url>/2017/01/01/Java%E7%89%88hello-world/</url>
    <content><![CDATA[<p>算是开个人 blog 第一篇博文。</p>
<p>程序人生：人生中的第一个Java应用程序 hello java！</p>
<p>开局一张图，程序全靠编：</p>
<p><img data-src="https://s1.ax1x.com/2023/05/15/p92J3q0.png"></p>
<span id="more"></span>

<h3 id="Hello-Java"><a href="#Hello-Java" class="headerlink" title="Hello Java"></a>Hello Java</h3><p><strong>准备环境</strong></p>
<ul>
<li>JDK</li>
<li>STS4（Spring Tool Suit4）</li>
</ul>
<p><strong>安装JDK17</strong><br>Windows平台：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">unzip jdk-17.0.4.1_windows-x64_bin.zip</span><br><span class="line"><span class="built_in">mv</span> jdk-17.0.4.1 jdk17</span><br></pre></td></tr></table></figure>
<p>加入环境变量：</p>
<ol>
<li>win + x + y：找到高级系统设置</li>
<li>编辑用户环境变量：新增 JAVA_HOME 引入 JDK 安装目录，例如：D:\jdk17</li>
<li>编辑用户环境变量：找到 Path 加入 %JAVA_HOME%;</li>
</ol>
<p>Linux平台：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar -zxvf jdk-17.0.4.1_linux-x64_bin.tar.gz</span><br><span class="line"><span class="built_in">mv</span> jdk-17.0.4.1 jdk17</span><br><span class="line"><span class="built_in">mkdir</span> -p /usr/java</span><br><span class="line"><span class="built_in">mv</span> jdk17  /usr/java/</span><br></pre></td></tr></table></figure>

<p>加入环境变量：sudo vim &#x2F;etc&#x2F;profile</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># JAVA ENV</span></span><br><span class="line">JAVA_HOME=/usr/java/jdk17</span><br><span class="line">CLASS_PATH=.:<span class="variable">$JAVA_HOME</span>/jre/lib/rt.jar:<span class="variable">$JAVA_HOME</span>/lib/dt.jar:<span class="variable">$JAVA_HOME</span>/lib/tools.jar</span><br><span class="line">PATH=<span class="variable">$PATH</span>:<span class="variable">$JAVA_HOME</span>/bin</span><br><span class="line"><span class="built_in">export</span> JAVA_HOME CLASS_PATH PATH</span><br></pre></td></tr></table></figure>

<p>即时生效，执行 source 命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure>





<p><strong>验证版本</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure>



<p><strong>编写Java类</strong><br>如果有 vi  &amp;  vim 环境（通常Linux发行版自带）：vim Test.java</p>
<p>桌面环境（无IDE）：使用编辑器编辑（记事本  sublime text  VSCode）新建文件：Test.java</p>
<p>桌面环境（有IDE）：Eclipse for JavaEE、STS4（SpringToolSuit4）、IntelliJ<br>IDEA 或者 VSCode（安装 SpringToolSuit4 插件）任选一款构建 Java Project：Helloworld，然后 New、选 Class，新增文件：Test.java</p>
<p>结构清单：</p>
<ul>
<li>Helloworld<ul>
<li>src<ul>
<li>（default package）Test.java</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>输入如下内容：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">		helloWorld();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">helloWorld</span><span class="params">()</span>&#123;</span><br><span class="line">		<span class="type">String</span> <span class="variable">hello_world</span> <span class="operator">=</span><span class="string">&quot;hello world&quot;</span>;</span><br><span class="line">		System.out.println(hello_world);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p><strong>Run：运行</strong></p>
<p>输入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">java Test.java</span><br></pre></td></tr></table></figure>
<p><strong>注意</strong>：某些低版本JDK需要先执行javac Test.java，再执行 java Test</p>
<p>输出：hello world</p>
<h3 id="骚操作"><a href="#骚操作" class="headerlink" title="骚操作"></a>骚操作</h3><p>开局图片效果，是如下示例输出结果。</p>
<p><strong>Rocky 9 Linux</strong></p>
<p><strong>输入</strong>如下内容，Linux 平台终端使用 vim 编辑时，打印输出需要注意圆点和引号的转义：</p>
<p>vim Test.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Test</span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String args[])</span>&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;佛祖保佑！！！&quot;</span>);</span><br><span class="line">                  System.out.println(<span class="string">&quot;////////////////////////////////////////////////////////////////////&quot;</span>);</span><br><span class="line"> System.out.println(<span class="string">&quot;//                          _ooOoo_                               //&quot;</span>);</span><br><span class="line"> System.out.println(<span class="string">&quot;//                         o8888888o                              //&quot;</span>);</span><br><span class="line"> System.out.println(<span class="string">&quot;//                         88\&quot; . \&quot;88                              //&quot;</span>);</span><br><span class="line"> System.out.println(<span class="string">&quot;//                         (| ^_^ |)                              //&quot;</span>);</span><br><span class="line"> System.out.println(<span class="string">&quot;//                         O\\  =  /O                              //&quot;</span>);</span><br><span class="line"> System.out.println(<span class="string">&quot;//                      ___//`---&#x27;\\____                           //&quot;</span>);</span><br><span class="line"> System.out.println(<span class="string">&quot;//                    .&#x27;  \\|     |//  `.                          //&quot;</span>);</span><br><span class="line"> System.out.println(<span class="string">&quot;//                   /  \\|||  :  |||//  \\                         //&quot;</span>);</span><br><span class="line"> System.out.println(<span class="string">&quot;//                  /  _||||| -:- |||||-  \\                       //&quot;</span>);</span><br><span class="line"> System.out.println(<span class="string">&quot;//                  |   | \\\\  -  /// |    |                       //&quot;</span>);</span><br><span class="line"> System.out.println(<span class="string">&quot;//                  | \\_|  &#x27;&#x27;\\---//&#x27;&#x27;  |   |                      //&quot;</span>);</span><br><span class="line"> System.out.println(<span class="string">&quot;//                  \\  .-\\__  `-`  ___//-. //                     //&quot;</span>);</span><br><span class="line"> System.out.println(<span class="string">&quot;//                ___`. .&#x27;  /--.--\\  `. . ___                     //&quot;</span>);</span><br><span class="line"> System.out.println(<span class="string">&quot;//            .\&quot;\&quot; &#x27;&lt;  `.___\\_&lt;|&gt;_//___.&#x27;  &gt;&#x27;\&quot;\&quot;.                   //&quot;</span>);</span><br><span class="line"> System.out.println(<span class="string">&quot;//            | | :  `- \\`.;`\\ _ //`;.`/ - ` : | |                //&quot;</span>);</span><br><span class="line"> System.out.println(<span class="string">&quot;//            \\  \\ `-.   \\_ __\\ //__ _/   .-` /  /                //&quot;</span>);</span><br><span class="line"> System.out.println(<span class="string">&quot;//      ========`-.____`-.___\\_____/___.-`____.-&#x27;========         //&quot;</span>);</span><br><span class="line"> System.out.println(<span class="string">&quot;//                           `=---=&#x27;                              //&quot;</span>);</span><br><span class="line"> System.out.println(<span class="string">&quot;//      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^        //&quot;</span>);</span><br><span class="line"> System.out.println(<span class="string">&quot;//      佛祖保佑       永无BUG     永不修改        永不宕机       //&quot;</span>);</span><br><span class="line"> System.out.println(<span class="string">&quot;////////////////////////////////////////////////////////////////////&quot;</span>);</span><br><span class="line">            </span><br><span class="line">            System.out.println(<span class="string">&quot;永不宕机！！！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<p><strong>Windows 平台</strong><br>如果，你有 vim 环境，同样可以在 CMD 字符命令环境或者 PowerShell 环境使用 vim 编辑 Test.java。</p>
<p>好吧，我想大抵是没有安装的。</p>
<p>使用 Windows 平台自带的记事本或者下载第三方编辑器，新建 Test.java，然后编辑并输入上面的演示内容。</p>
<p><strong>Run 运行</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">java Test.java</span><br></pre></td></tr></table></figure>

<p><strong>输出</strong>结果，开局一张图。</p>
<p>示例，玩笑话，就当乐呵呵。</p>
<p>写代码，无法做到永无 bug ；服务器，也无法做到永不宕机。</p>
<p>人生也一样，终身有忧处，终身有乐处。</p>
<p>以上总结，仅供入门参考哟！</p>
<p>—END—</p>
]]></content>
      <categories>
        <category>web开发</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux下zabbix配合MySQL搭建监控系统使用教程</title>
    <url>/2021/12/01/Linux%E4%B8%8Bzabbix%E9%85%8D%E5%90%88MySQL%E6%90%AD%E5%BB%BA%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本文主要介绍zabbix4.0在Redhat7系列的入门环境搭建，并记录搭建过程中的注意事项，偏向于实战。</p>
<p>距离我上次使用zabbix大概在3个月之前。当时也工作需要，公司用到了大数据看板需要配合zabbix做后台监控运维。</p>
<p>看过我之前发的文章，其实就会发现我写的基本上都是些与linux服务器相关的。基本上所有的环境都是Windows配合虚拟机使用linux发行版，比如Centos、Ubuntu还有国产化的银河麒麟以及统信UOS。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/501ff82854deda0e36a2fc8a7037bd00.png"></p>
<h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="一、安装zabbix前的准备"><a href="#一、安装zabbix前的准备" class="headerlink" title="一、安装zabbix前的准备"></a>一、安装zabbix前的准备</h2><h3 id="1、软件环境"><a href="#1、软件环境" class="headerlink" title="1、软件环境"></a>1、软件环境</h3><h4 id="1-1、linux服务器"><a href="#1-1、linux服务器" class="headerlink" title="1.1、linux服务器"></a>1.1、linux服务器</h4><p>推荐使用虚拟机+linux镜像，其次使用云服务器。我个人倾向Centos7或者Centos6，或者使用Ubuntu一样可行，选择自己熟悉的一款。</p>
<h4 id="1-2、数据库环境"><a href="#1-2、数据库环境" class="headerlink" title="1.2、数据库环境"></a>1.2、数据库环境</h4><p>推荐安装MySQL5.6（MariaDB也行）或者以上版本。MySQL的安装参考网上教程，这里不做过多介绍。</p>
<p><strong>可以参考菜鸟教程</strong>：<span class="exturl" data-url="aHR0cHM6Ly93d3cucnVub29iLmNvbS9teXNxbC9teXNxbC1pbnN0YWxsLmh0bWw=">https://www.runoob.com/mysql/mysql-install.html<i class="fa fa-external-link-alt"></i></span></p>
<p>MariaDB是MySQL的开源社区版，由MySQL创始人开发维护，所以测试安装MariaDB也是一样的。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#安装MySQL</span></span><br><span class="line">wget http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm</span><br><span class="line">rpm -ivh mysql-community-release-el7-5.noarch.rpm</span><br><span class="line">yum update</span><br><span class="line">yum install mysql-server</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#使用yum命令安装MariaDB</span></span><br><span class="line">yum install mariadb-server mariadb </span><br><span class="line"></span><br><span class="line">MariaDB数据库的相关操作命令：</span><br><span class="line">(注意：centos6版本可用service命令替换systemctl)</span><br><span class="line"><span class="comment">#启动MariaDB</span></span><br><span class="line">systemctl start mariadb </span><br><span class="line"></span><br><span class="line"><span class="comment">#停止MariaDB </span></span><br><span class="line">systemctl stop mariadb </span><br><span class="line"></span><br><span class="line"><span class="comment">#重启MariaDB </span></span><br><span class="line">systemctl restart mariadb </span><br><span class="line"></span><br><span class="line"><span class="comment">#设置开机启动 </span></span><br><span class="line">systemctl <span class="built_in">enable</span> mariadb  </span><br></pre></td></tr></table></figure>

<p><strong>登录命令</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure>

<p><strong>开放远程连接限制</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">GRANT ALL PRIVILEGES ON *.* TO <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED BY <span class="string">&#x27;123456&#x27;</span> WITH GRANT OPTION;</span><br></pre></td></tr></table></figure>

<p><strong>修改用户密码</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">set</span> password <span class="keyword">for</span> root@localhost=password(<span class="string">&#x27;123456&#x27;</span>);</span><br></pre></td></tr></table></figure>



<h2 id="二、修改防火墙规则"><a href="#二、修改防火墙规则" class="headerlink" title="二、修改防火墙规则"></a>二、修改防火墙规则</h2><p>既然使用了Redhat7系列，那就习惯使用systemd环境。</p>
<h3 id="1、临时关闭防火墙"><a href="#1、临时关闭防火墙" class="headerlink" title="1、临时关闭防火墙"></a>1、临时关闭防火墙</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl stop iptables.service </span><br></pre></td></tr></table></figure>

<h3 id="2、加入zabbix到防火墙规则"><a href="#2、加入zabbix到防火墙规则" class="headerlink" title="2、加入zabbix到防火墙规则"></a>2、加入zabbix到防火墙规则</h3><p>加入zabbix-server与zabbix-agent规则时，<strong>此时是在你已经安装好了zabbix服务为前提</strong>。</p>
<p>通过命令查看zabbix服务</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#查看服务</span></span><br><span class="line">ps -aux | grep zabbix</span><br><span class="line">ps -aux | grep zabbix_server</span><br><span class="line">ps -aux | grep zabbix_agent</span><br><span class="line"><span class="comment">#或者</span></span><br><span class="line">ps -ef | grep zabbix</span><br><span class="line"><span class="comment">#查看端口</span></span><br><span class="line">netstat -tlunp | grep zabbix</span><br></pre></td></tr></table></figure>



<p><strong>说明</strong>：<code>--permanent</code>参数代表永久生效，不熟悉的命令，<strong>建议使用</strong><code>firewall-cmd --help</code>查看<strong>帮助命令</strong>。</p>
<p>2.1、永久生效，加入zabbix-server与zabbix-agent</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-service=zabbix-agent --permanent </span><br><span class="line">firewall-cmd --zone=public --add-service=zabbix-server --permanent </span><br></pre></td></tr></table></figure>

<p>2.2、开放80端口，zabbix前端访问默认使用80端口</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=80/tcp --permanent </span><br></pre></td></tr></table></figure>

<p>2.3、额外开放10050与10051，监控使用到</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=10050/tcp --permanent </span><br><span class="line">firewall-cmd --zone=public --add-port=10051/tcp --permanent </span><br></pre></td></tr></table></figure>





<h2 id="三、安装zabbix"><a href="#三、安装zabbix" class="headerlink" title="三、安装zabbix"></a>三、安装zabbix</h2><p>本人测试环境是Redhat系列Centos7.3配合MySQL5.6使用搭建zabbix监控系统。下面是官方文档，同样有中文版，如下：</p>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cuemFiYml4LmNvbS9kb2N1bWVudGF0aW9uLzQuMC96aC9tYW51YWwvaW5zdGFsbGF0aW9uL2luc3RhbGxfZnJvbV9wYWNrYWdlcy9yaGVsX2NlbnRvcw==">https://www.zabbix.com/documentation/4.0/zh/manual/installation/install_from_packages&#x2F;rhel_centos<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="1、zabbix-server服务安装"><a href="#1、zabbix-server服务安装" class="headerlink" title="1、zabbix-server服务安装"></a>1、zabbix-server服务安装</h3><p>1.1、准备好官方提供的yum源</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#编辑</span></span><br><span class="line">vim /etc/yum.repos.d/zabbix.repo</span><br><span class="line"><span class="comment">#加入如下内容</span></span><br><span class="line">[zabbix]</span><br><span class="line">name=Zabbix Official Repository - <span class="variable">$basearch</span></span><br><span class="line">baseurl=http://repo.zabbix.com/zabbix/4.0/rhel/7/<span class="variable">$basearch</span>/</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-ZABBIX-A14FE591</span><br><span class="line"></span><br><span class="line">[zabbix-non-supported]</span><br><span class="line">name=Zabbix Official Repository non-supported - <span class="variable">$basearch</span></span><br><span class="line">baseurl=http://repo.zabbix.com/non-supported/rhel/7/<span class="variable">$basearch</span>/</span><br><span class="line">enabled=1</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-ZABBIX</span><br><span class="line">gpgcheck=1</span><br></pre></td></tr></table></figure>



<p> <strong>1.2、安装zabbix软件仓库</strong></p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rpm -ivh http://repo.zabbix.com/zabbix/4.0/rhel/7/x86_64/zabbix-release-4.0-1.el7.noarch.rpm</span><br></pre></td></tr></table></figure>

<p><strong>安装额外基础包</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum-config-manager --<span class="built_in">enable</span> rhel-7-server-optional-rpms</span><br></pre></td></tr></table></figure>

<p><strong>1.3、安装zabbix-server</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install zabbix-server-mysql</span><br></pre></td></tr></table></figure>

<h3 id="2、zabbix-proxy安装"><a href="#2、zabbix-proxy安装" class="headerlink" title="2、zabbix-proxy安装"></a>2、zabbix-proxy安装</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install zabbix-proxy-mysql</span><br></pre></td></tr></table></figure>

<p><strong>安装 Zabbix 前端</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install zabbix-web-mysql</span><br></pre></td></tr></table></figure>

<p><strong>导入数据</strong>（MySQL数据库，事先创建好zabbix用户）</p>
<p>注意了：一般安装第一个create.sql.gz就行，遇特殊需求安装第二个schema.sql.gz，安装时（zabbix）库名不要重复。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#对于zabbix-server</span></span><br><span class="line">zcat /usr/share/doc/zabbix-server-mysql*/create.sql.gz | mysql -uzabbix -p zabbix</span><br><span class="line"><span class="comment">#对于zabbix-proxy</span></span><br><span class="line">zcat /usr/share/doc/zabbix-proxy-mysql*/schema.sql.gz | mysql -uzabbix -p zabbix</span><br></pre></td></tr></table></figure>

<p><strong>Zabbix server&#x2F;proxy 配置数据库</strong></p>
<p>编辑zabbix_server.conf配置文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/zabbix/zabbix_server.conf</span><br></pre></td></tr></table></figure>

<p>加入如下配置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#Zabbix</span></span><br><span class="line">DBHost=localhost</span><br><span class="line">DBName=zabbix</span><br><span class="line">DBUser=zabbix</span><br><span class="line">DBPassword=123456</span><br></pre></td></tr></table></figure>

<p><strong>zabbix-server进程启用</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#设置开机自启</span></span><br><span class="line">systemctl <span class="built_in">enable</span> zabbix-server</span><br><span class="line"><span class="comment">#启动服务</span></span><br><span class="line">systemctl start zabbix-server</span><br><span class="line"><span class="comment">#关闭服</span></span><br><span class="line">systemctl stop zabbix-server</span><br><span class="line"><span class="comment">#禁止开机启动</span></span><br><span class="line">systemctl <span class="built_in">disable</span> zabbix-server</span><br></pre></td></tr></table></figure>



<h3 id="3、zabbix-agent服务安装"><a href="#3、zabbix-agent服务安装" class="headerlink" title="3、zabbix-agent服务安装"></a>3、zabbix-agent服务安装</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#安装zabbix-agent</span></span><br><span class="line">yum install zabbix-agent</span><br><span class="line"><span class="comment">#设置开机自启</span></span><br><span class="line">systemctl <span class="built_in">enable</span> zabbix-agent</span><br><span class="line"><span class="comment">#启动</span></span><br><span class="line">systemctl <span class="built_in">enable</span> zabbix-agent</span><br></pre></td></tr></table></figure>

<p>同时启动用<code>zabbix-server zabbix-agent httpd</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> zabbix-server zabbix-agent httpd</span><br></pre></td></tr></table></figure>

<h3 id="4、创建组与用户"><a href="#4、创建组与用户" class="headerlink" title="4、创建组与用户"></a>4、创建组与用户</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#组</span></span><br><span class="line">groupadd --system zabbix</span><br><span class="line"><span class="comment">#用户</span></span><br><span class="line">useradd --system -g zabbix -d /usr/lib/zabbix -s /sbin/nologin -c <span class="string">&quot;Zabbix 监控系统&quot;</span> zabbix</span><br></pre></td></tr></table></figure>

<h3 id="5、selinux配置-Redhat7系列"><a href="#5、selinux配置-Redhat7系列" class="headerlink" title="5、selinux配置(Redhat7系列)"></a>5、selinux配置(Redhat7系列)</h3><p>解除selinux对zabbix的限制</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">setsebool -P httpd_can_connect_zabbix on</span><br><span class="line"><span class="comment">#如果数据库可以通过网络访问（在 PostgreSQL 情况下包括 &#x27;localhost&#x27;)，您也需要允许 Zabbix 前端连接到数据库：</span></span><br><span class="line">setsebool -P httpd_can_network_connect_db on</span><br></pre></td></tr></table></figure>

<p>RHEL 7 之前的版本</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">setsebool -P httpd_can_network_connect on</span><br><span class="line">setsebool -P zabbix_can_network on</span><br></pre></td></tr></table></figure>

<p>待前端和 SELinux 配置完成后，<strong>需要重新启动 Apache web 服务器</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl restart httpd</span><br></pre></td></tr></table></figure>

<p><strong>安装完zabbix后</strong>，记得看<strong>第二步的防火墙规则</strong>，否则会影响前端的访问。</p>
<h2 id="四、zabbix前端"><a href="#四、zabbix前端" class="headerlink" title="四、zabbix前端"></a>四、zabbix前端</h2><h3 id="1、登录zabbix前端"><a href="#1、登录zabbix前端" class="headerlink" title="1、登录zabbix前端"></a>1、登录zabbix前端</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#IP地址换成你自己的本机或者远程IP</span></span><br><span class="line">http://192.168.245.131/zabbix</span><br></pre></td></tr></table></figure>

<p><strong>注意</strong>：默认用户名是Admin，密码是zabbix。</p>
<h3 id="2、界面介绍"><a href="#2、界面介绍" class="headerlink" title="2、界面介绍"></a>2、界面介绍</h3><p>首先建议将语言调成自己熟悉的，比如中文简体。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/6fd248827735f19507c4c13bd224aa18.png"></p>
<h3 id="1、默认管理员界面"><a href="#1、默认管理员界面" class="headerlink" title="1、默认管理员界面"></a>1、默认管理员界面</h3><p>1.1、监测模块功能列表展示</p>
<ul>
<li>仪表板、问题、概览、web监测、最新数据</li>
<li>图形、聚合图形、拓扑图、自动发现、服务</li>
</ul>
<p>其实，配置好后，用的最多的还是监控模块的仪表板功能，通过添加图形化界面，实时监控动态。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/9839c3a2f097b673ae12de53e21f0303.png"></p>
<p>1.2、资产记录模块功能列表</p>
<ul>
<li>概览</li>
<li>主机</li>
</ul>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/8730cb84cb3917bd31bc1e2fc1ea6d56.png"></p>
<p>1.3、报表模块功能列表</p>
<ul>
<li>系统信息、可用性报表</li>
<li>触发器Top 100</li>
<li>审计、动作日志、警报</li>
</ul>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/607b526c24707b914f4a42a96a1e70c8.png"></p>
<p>1.4、配置模块功能列表</p>
<ul>
<li>主机群组、模板、主机、动作</li>
<li>关联项事件、自动发现、服务</li>
</ul>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/c6788728ad13afddc57de9f964f609ff.png"></p>
<p>1.5、管理模块功能列表</p>
<ul>
<li>一般、agent代理程序、认证、用户群组</li>
<li>用户、报警没接类型、脚本、队列</li>
</ul>
<p><strong>值得注意的是，用户功能模块，可以配置多个用户，不同用户权限不一样</strong>。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/e10f5548fa36e99bc35896aac49ecf4d.png"></p>
<p>1.6、切换用户，<strong>不同的用户（权限）看到的界面也会有所不同</strong>，如下会介绍普通管理员看到的界面。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/7b6055ee91822517b6fe9bcac7b7ef2c.png"></p>
<h3 id="2、普通管理员界面"><a href="#2、普通管理员界面" class="headerlink" title="2、普通管理员界面"></a>2、普通管理员界面</h3><p>2.1、监测模块功能列表</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/8b9362a0069e169794e9e38ea2a13f0a.png"></p>
<p>2.2、资产记录模块功能列表</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/55caf0e66bff76e24b0f132508adc85c.png"></p>
<p>2.3、报表模块功能列表</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/bc3f34296e06f49929f05a17f1537077.png"></p>
<p>此时，在进行对比，你会发现普通管理员监控到的界面功能相对比较少，大的模块也少了两个。</p>
<p>以上就是本文此次对zabbix监控系统入门做的一个简单总结。</p>
<p>当然，如果配合Java等后端开发语言进行使用，需要安装支撑Java的网关服务，官网也有介绍。</p>
]]></content>
      <categories>
        <category>开发运维</category>
      </categories>
      <tags>
        <tag>zabbix</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux养成达人之入门实践图文超详细</title>
    <url>/2020/01/03/Linux%E5%85%BB%E6%88%90%E8%BE%BE%E4%BA%BA%E4%B9%8B%E5%85%A5%E9%97%A8%E5%AE%9E%E8%B7%B5%E5%9B%BE%E6%96%87%E8%B6%85%E8%AF%A6%E7%BB%86/</url>
    <content><![CDATA[<p>VMware简单介绍：<span class="exturl" data-url="aHR0cHM6Ly93d3cudm13YXJlLmNvbS8=">官网直通车<i class="fa fa-external-link-alt"></i></span>，用于PC端便于两种操作系统共存，不用在真机上折腾安装多种操作系统。比如：在自己电脑上安装了windows操作系统，本身对linux并不是很熟悉，又想入门，但是怕把自己的电脑系统整崩了，得不偿失。这时强大的VMware虚拟就起到关键作用了。<strong>初学时建议用虚拟机，出现很多问题时，也方便处理，例如系统崩溃了重启重装</strong>。VMware强大的快照功能、挂起以及克隆功能这些都有助于你的学习。</p>
<p>我为啥要写这篇文章了，其实在几年前就应该着手的。这篇文章撰写的初衷，在于让小伙伴们少走一些弯路，不用踩我之前遇到的坑。也是对自己学习这门课程的一个交代，经验总结。</p>
<h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="一、安装前的准备工作。"><a href="#一、安装前的准备工作。" class="headerlink" title="一、安装前的准备工作。"></a>一、安装前的准备工作。</h2><ol>
<li>如果没有买云服务器，也不建议在真机上安装，你会非常不适应的。当然也没关系，可以新建一个虚拟机，安装<code>linux</code>服务器。很实用，万一崩了，重装也快捷方便。</li>
<li><code>VMware</code> 软件安装包，不一定要最新版本，稳定适合学习的版本就行，我这里准备的是<code>VMware8</code>。</li>
<li><code>linux</code>系统安装包准备 <code>Ubantu</code>、<code>CentOS</code>等等，看个人喜好，我个人准备的是<code>CentOS6.5</code>，比较经典的一个入门版本。</li>
<li>假如你觉得寻找汁源麻烦，直接看第六步获取安装包。</li>
</ol>
<h2 id="二、虚拟机的安装与创建。"><a href="#二、虚拟机的安装与创建。" class="headerlink" title="二、虚拟机的安装与创建。"></a>二、虚拟机的安装与创建。</h2><ol>
<li>这里就不截图了，几乎是默认下一步，傻瓜式安装。</li>
<li><strong>VMware安装汉化包的时候遇到警告之类的直接忽略点继续，不要在意，这是正常的</strong>。</li>
<li>当然也可以直接默认安装，那就没多大的意义了，后期熟练后你可以在虚拟机上这样操作。既然要学习，那就要起到学习的作用。虚拟机的创建，建议先创建一个空白的磁盘，然后安装linux服务器，这里只演示Basic Server基本服务安装，不带桌面的。</li>
</ol>
<h3 id="1、新建一个标准的虚拟机"><a href="#1、新建一个标准的虚拟机" class="headerlink" title="1、新建一个标准的虚拟机"></a>1、新建一个标准的虚拟机</h3><p><img data-src="https://img-blog.csdnimg.cn/2020010318101027.jpg?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="2、创建一个空白盘便于学习"><a href="#2、创建一个空白盘便于学习" class="headerlink" title="2、创建一个空白盘便于学习"></a>2、创建一个空白盘便于学习</h3><p><img data-src="https://img-blog.csdnimg.cn/20200103181054377.jpg?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="三、选择linux-centos64作为演示"><a href="#三、选择linux-centos64作为演示" class="headerlink" title="三、选择linux centos64作为演示"></a>三、选择linux centos64作为演示</h2><p><img data-src="https://img-blog.csdnimg.cn/20200103181122898.jpg?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>1、虚拟机的命令以及设置安装位置，值得注意的是虚拟机的名称后期也是可以改的</strong><br><img data-src="https://img-blog.csdnimg.cn/20200103181147361.jpg?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>2、指定磁盘大小，机制是用多少占多少</strong><br><img data-src="https://img-blog.csdnimg.cn/20200103181211336.jpg?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>3、默认点击完成</strong><br><img data-src="https://img-blog.csdnimg.cn/20200103181228307.jpg?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>4、设置你的linux系统镜像路径</strong><br><img data-src="https://img-blog.csdnimg.cn/20200103181247820.jpg?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>5、选择到DVD设置镜像路径</strong><br><img data-src="https://img-blog.csdnimg.cn/20200103181307164.jpg?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>手动设置虚拟linux安装包的路径，为下一步linux系统安装做准备。</strong></p>
<h2 id="四、linux-centos6系统安装。"><a href="#四、linux-centos6系统安装。" class="headerlink" title="四、linux_centos6系统安装。"></a>四、linux_centos6系统安装。</h2><p>设置完后，启动虚拟机等待安装，选择skip跳过然后回车。万一点了OK就会不停地提示，这时选择关闭电源，重新启动电源时注意选skip跳过光盘验证，最后看到安装界面。下面即将出现N多图片，做好心理准备，教程超详细。</p>
<p><strong>01、默认选择第一种方式进行安装，图片上其它的方式，去了解一下就行</strong><br><img data-src="https://img-blog.csdnimg.cn/20200103181458228.jpg?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>02、出现警告光盘检测选skip跳过</strong><br><img data-src="https://img-blog.csdnimg.cn/20200103181518238.jpg?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>03、选择ok回车</strong><br><img data-src="https://img-blog.csdnimg.cn/20200103181536898.jpg?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>04、等待一会看到安装界面点击next</strong><br><img data-src="https://img-blog.csdnimg.cn/2020010318155137.jpg?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>05、选择中文简体点击next，当然你英语特别好，就当我没说，我的英语不是很好，哈哈</strong><br><img data-src="https://img-blog.csdnimg.cn/20200103181614122.jpg?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>06、选择适当的键盘，默认下一步</strong><br><img data-src="https://img-blog.csdnimg.cn/20200103181627861.jpg?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>07、设备此时默认基础设备就行，指定设备可以自己去了解，这里只做入门演示</strong><br><img data-src="https://img-blog.csdnimg.cn/20200103181642562.jpg?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>08、为了演示，点击忽略所有数据进行下一步安装</strong><br><img data-src="https://img-blog.csdnimg.cn/20200103181656971.jpg?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>09、为linux系统计算机名称默认就行</strong><br><img data-src="https://img-blog.csdnimg.cn/20200103181703636.jpg?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>10、时区设置默认就行</strong><br><img data-src="https://img-blog.csdnimg.cn/20200103181723304.jpg?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>11、为了演示选简单的密码，忽略，不然无法进行下一步安装</strong><br><img data-src="https://img-blog.csdnimg.cn/20200103181750856.jpg?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>12、选择自定义布局进行安装</strong><br><img data-src="https://img-blog.csdnimg.cn/20200103181904937.jpg?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>13、便于演示理解创建标准分区，当然可以选择其它分区，这里不做讲解，只做入门，你可以私下去了解更多的用法</strong><br><img data-src="https://img-blog.csdnimg.cn/20200103181952777.jpg?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>14、sda创建分区页面</strong><br><img data-src="https://img-blog.csdnimg.cn/20200103182120845.jpg?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>15、创建home分区用于上传下载文件服务器</strong><br><img data-src="https://img-blog.csdnimg.cn/20200103182234445.jpg?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>16、创建boot分区分配大小，便于系统稳定启动</strong><br><img data-src="https://img-blog.csdnimg.cn/2020010318225141.jpg?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>17、创建swap分区内存的两倍</strong><br><img data-src="https://img-blog.csdnimg.cn/20200103182306318.jpg?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>18、根分区设置使用剩余空间大小</strong><br><img data-src="https://img-blog.csdnimg.cn/20200103182325477.jpg?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>19、分区创建完成</strong><br><img data-src="https://img-blog.csdnimg.cn/20200103182352359.jpg?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>20、为了继续选格式化下一步</strong><br><img data-src="https://img-blog.csdnimg.cn/20200103182418593.jpg?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>21、选择修改写入磁盘</strong><br><img data-src="https://img-blog.csdnimg.cn/20200103182434236.jpg?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>22、安装引导默认就行</strong><br><img data-src="https://img-blog.csdnimg.cn/20200103182452786.jpg?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>23、便于后期学习建议安装basic_server</strong><br><img data-src="https://img-blog.csdnimg.cn/20200103182511373.jpg?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>24、此时就进入了centos6漫长的安装过程，在固态硬盘下，安装也没花多长时间，取决于你的计算机性能</strong><br><img data-src="https://img-blog.csdnimg.cn/20200103182539551.jpg?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>25、到了这一步点击重新引导重启</strong><br><img data-src="https://img-blog.csdnimg.cn/20200103182645321.jpg?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>26、此时看到这个界面证明你安装成功了，输入你设置的用户名和密码就可以登录了</strong><br><img data-src="https://img-blog.csdnimg.cn/20200103182659483.jpg?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>是不是感觉看完后，这样安装真不容易啊，但是你的收获肯定满满的。</strong></p>
<h2 id="五、安装完后使用优美的xshell软件连接你的linux虚拟机。"><a href="#五、安装完后使用优美的xshell软件连接你的linux虚拟机。" class="headerlink" title="五、安装完后使用优美的xshell软件连接你的linux虚拟机。"></a>五、安装完后使用优美的<code>xshell</code>软件连接你的<code>linux</code>虚拟机。</h2><p><strong>注意</strong>：<code>centos6</code>是<code>ifcfg-eth0</code>，<code>centos7</code>则为<code>ifcfg-ens33</code></p>
<p><strong>使用ifconfig命令时，是不是发现少了点什么，这时就看下面给出的详细解决方案</strong></p>
<p> 转到<code>ifcfg-eth0</code>文件所在目录，使用<strong>TAB</strong>键补全命令很方便哟</p>
<p> vim的简单使用，<code>i</code>键进行插入，编辑完后，用<code>:wq</code>进行保存退出，不保存退出<code>q!</code>。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#查看当前路径 </span></span><br><span class="line"><span class="built_in">pwd</span></span><br><span class="line"><span class="comment">#转到if-eho所在目录 </span></span><br><span class="line"><span class="built_in">cd</span> /etc/sysconfig/network<span class="literal">-scripts</span>/</span><br><span class="line"><span class="comment">#查看列表详情</span></span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line"><span class="comment">#编辑网卡，修改设置，centos6版本</span></span><br><span class="line">vim ifcfg<span class="literal">-eth0</span></span><br><span class="line"><span class="comment">#编辑网卡，修改设置，centos7版本</span></span><br><span class="line">vim ifcfg<span class="literal">-ens33</span></span><br></pre></td></tr></table></figure>

<p>这里就不做截图了，修改<code>ONBOOT</code>属性为<code>yes</code>。</p>
<p>然后使用<code>ifconfig</code>或者<code>ip addr</code>命令查看你的<code>ip</code>地址，用于远程连接工具使用。</p>
<p><strong>修改完后保存，并且注意重启生效</strong>，可以使用<code>reboot</code>命令重启。</p>
<p>比如<code>xshell</code>远程连工具、<code>FileZilla</code>与<code>WinSCP</code>文件传输等工具会用到。</p>
<p>这里也给出我的另外一篇博文：<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbS9hcnRpY2xlL2RldGFpbHMvNzI4MjE2ODk=">Linux学习笔记之系统管理图文详解超详细<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="六、安装包的下载"><a href="#六、安装包的下载" class="headerlink" title="六、安装包的下载"></a>六、安装包的下载</h2><ol>
<li>首先我还是给出自己整理的<code>centos6.5</code>地址： <code>https://share.weiyun.com/5lgyYvk</code> 密码：<code>4kqdsi</code></li>
<li>官网直通车给出的是最新版本：<code>https://www.centos.org/download/</code></li>
<li>这里可以选择更多的版本，选择你需要的版本：<code>https://wiki.centos.org/Download</code></li>
<li>VMware直通车，当然里面包含了汉化包以及教程，也包含了<code>xshell</code>工具： 链接:<br><code>https://pan.baidu.com/s/1PF54bq98u33VA9WTJ1M08g</code> 提取码: <code>mumj</code></li>
</ol>
]]></content>
      <categories>
        <category>开发运维</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux基本命令scp详细教程</title>
    <url>/2022/01/04/Linux%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4scp%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<p>今天给大家带来的是linux中比较实用的命令scp。善用小技巧，解决工作中的痛点。<br>掌握一门好的技术或者说一门好的艺术，最快捷的方式就是融入到工作中。</p>
<p>在工作的不断鞭策之下，我其实也想偷偷懒，有时候觉得怎样简单快捷怎样来。在某种特定的工作环境下，有些操作被限制死了，只能用传统的方式传输（比如定制的商业加密U盘、光盘刻录）。当你了解实际情况后，可能有更优解，你会寻求其它的突破口或者折中方案。</p>
<p>夸张的说法，我用了1分钟熟悉了scp的用法，并直接运用于工作当中。然而，我教同事使用，他却花了远远不止10倍的时间。其中的小窍门，你知道是为啥吗？我的回答是：善用系统提供的帮助工具或者提示。<br><img data-src="https://img-blog.csdnimg.cn/img_convert/86f00e907ac0dc393af8a29d971e5e44.png"></p>
<h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="一、SCP命令简介"><a href="#一、SCP命令简介" class="headerlink" title="一、SCP命令简介"></a>一、SCP命令简介</h2><p>在Redhat系列可以使用帮助命令：<code>man scp</code>，快速上手，掌握使用方法。</p>
<p>如下图使用<code>scp</code>或者<code>man scp</code>命令：</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/c17370f5b672e835c61b27fc911367c5.png"></p>
<h3 id="1、简介"><a href="#1、简介" class="headerlink" title="1、简介"></a>1、简介</h3><ul>
<li><p><strong>NAME</strong>：scp — 安全复制(远程文件复制程序)</p>
</li>
<li><p>scp 在网络中的主机间进行文件复制。 它用 ssh(1) 来传输及验证数据，提供与 ssh(1)相同的安全保护。 它不象 rcp(1), scp 会根据需要询问口令。 在任何文件名中都可以包含主机名和用户名，用来指定从&#x2F;向该主机复制此文件。</p>
</li>
<li><p>Linux scp 命令主要用于 Linux 之间复制文件和目录。</p>
</li>
<li><p>scp 是 secure copy 的缩写, scp 是 linux 系统下基于 ssh 登陆进行安全的远程文件拷贝命令。</p>
</li>
<li><p>scp 是加密的，rcp 是不加密的，scp 是 rcp 的加强版。</p>
</li>
</ul>
<h3 id="2、前世今生"><a href="#2、前世今生" class="headerlink" title="2、前世今生"></a>2、前世今生</h3><ul>
<li><p>作者</p>
<p>Timo Rinne <span class="exturl" data-url="bWFpbHRvOiYjeDc0OyYjMTE0OyYjMTA1OyYjNjQ7JiMxMDU7JiN4NmI7JiMxMDU7JiM0NjsmI3g2NjsmI3g2OTs=">&#x74;&#114;&#105;&#64;&#105;&#x6b;&#105;&#46;&#x66;&#x69;<i class="fa fa-external-link-alt"></i></span> 和 Tatu Ylonen <span class="exturl" data-url="bWFpbHRvOiYjeDc5OyYjMTA4OyYjeDZmOyYjeDQwOyYjOTk7JiMxMTU7JiN4MmU7JiMxMDQ7JiN4NzU7JiN4NzQ7JiN4MmU7JiN4NjY7JiMxMDU7">&#x79;&#108;&#x6f;&#x40;&#99;&#115;&#x2e;&#104;&#x75;&#x74;&#x2e;&#x66;&#105;<i class="fa fa-external-link-alt"></i></span></p>
</li>
<li><p>起源</p>
<p>scp 基于University of California BSD 的 rcp(1) 源代码</p>
</li>
<li><p>参考<br>rcp(1)，sftp(1)， ssh(1)， ssh-add(1)，ssh-agent(1)，ssh-keygen(1)，ssh_config(5)，sshd(8)</p>
</li>
</ul>
<h2 id="二、测试环境搭建"><a href="#二、测试环境搭建" class="headerlink" title="二、测试环境搭建"></a>二、测试环境搭建</h2><h3 id="1、排除干扰因素"><a href="#1、排除干扰因素" class="headerlink" title="1、排除干扰因素"></a>1、排除干扰因素</h3><ul>
<li>防火墙规则</li>
<li>所在用户的scp访问权限</li>
<li>默认端口是否变更</li>
</ul>
<h3 id="2、建议"><a href="#2、建议" class="headerlink" title="2、建议"></a>2、建议</h3><p>可以租多台云服务器测试，按时计费那种（腾讯云或者阿里云）。</p>
<p>个人建议：采用VMware虚拟机搭建两台linux服务环境进行测试学习。或者安装git，使用git bash测试scp传输文件。有人会问，你为啥不直接用WinSCP或者FileZilla传输。生活在于折腾，消磨时间呗。从Windows到linux也是一样的，当然这是本机搭建的VMware虚拟环境网络是打通的。不要问我为什么，问就是省money呗。</p>
<h3 id="3、准备环境"><a href="#3、准备环境" class="headerlink" title="3、准备环境"></a>3、准备环境</h3><ul>
<li>VMware虚拟机工具</li>
<li>Redhat系列、Ubuntu或者国产银河麒麟</li>
<li>系统环境：X86平台</li>
<li>ssh远程工具<strong>xshell</strong>、SecureCRT、putty以及<strong>Git Bash</strong>等等，只要支持ssh远程连接的工具。</li>
</ul>
<p>这里可以看看利用Git Bash工具，从Windows本地传文件到搭建的linux服务器上。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/2f9c2a44a940bdf328757266f4133e3e.png"></p>
<h2 id="三、SCP命令详细操作说明"><a href="#三、SCP命令详细操作说明" class="headerlink" title="三、SCP命令详细操作说明"></a>三、SCP命令详细操作说明</h2><h3 id="1、语法"><a href="#1、语法" class="headerlink" title="1、语法"></a>1、语法</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">usage: scp [-<span class="number">12346</span><span class="type">BCpqrv</span>] [-<span class="type">c</span> <span class="type">cipher</span>] [-<span class="type">F</span> <span class="type">ssh_config</span>] [-<span class="type">i</span> <span class="type">identity_file</span>]</span><br><span class="line">           [-<span class="type">l</span> <span class="type">limit</span>] [-<span class="type">o</span> <span class="type">ssh_option</span>] [-<span class="type">P</span> <span class="type">port</span>] [-<span class="type">S</span> <span class="type">program</span>]</span><br><span class="line">           [[<span class="type">user</span><span class="selector-tag">@</span>]<span class="type">host1</span>:]file1 ... [[<span class="type">user</span><span class="selector-tag">@</span>]<span class="type">host2</span>:]file2</span><br></pre></td></tr></table></figure>



<p><strong>简单来看</strong>：</p>
<p>scp [可选参数] 本地文件 目标目录</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">scp /root/av/local_file.av  remote_username@ip:/root/av</span><br></pre></td></tr></table></figure>

<p>scp [可选参数] 本地目录 目标目录</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">scp <span class="literal">-r</span> /root/av/  remote_username@ip:/root/</span><br></pre></td></tr></table></figure>







<h3 id="2、参数解析"><a href="#2、参数解析" class="headerlink" title="2、参数解析"></a>2、参数解析</h3><p>默认scp传输情况下，会显示传输的速率以及进度。</p>
<p>只介绍部分，具体可以参考官方文档。常用的、重要的也就那么几个。</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>-1</td>
<td>强制scp命令使用协议ssh1</td>
</tr>
<tr>
<td>-2</td>
<td>强制scp命令使用协议ssh2</td>
</tr>
<tr>
<td>-4</td>
<td>强制scp命令只使用IPv4寻址</td>
</tr>
<tr>
<td>-6</td>
<td>强制scp命令只使用IPv6寻址</td>
</tr>
<tr>
<td>-B</td>
<td>使用批处理模式（传输过程中不询问传输口令或短语）</td>
</tr>
<tr>
<td>-C</td>
<td>允许压缩。（将-C标志传递给ssh，从而打开压缩功能）</td>
</tr>
<tr>
<td><strong>-p</strong></td>
<td><strong>保留原文件的修改时间，访问时间和访问权限</strong></td>
</tr>
<tr>
<td>-q</td>
<td>不显示传输进度条</td>
</tr>
<tr>
<td><strong>-r</strong></td>
<td><strong>递归复制整个目录</strong></td>
</tr>
<tr>
<td>-v</td>
<td>详细方式显示输出。scp和ssh(1)会显示出整个过程的调试信息。这些信息用于调试连接，验证和配置问题</td>
</tr>
<tr>
<td>-c cipher</td>
<td>以cipher将数据传输进行加密，这个选项将直接传递给ssh</td>
</tr>
<tr>
<td>-F ssh_config</td>
<td>指定一个替代的ssh配置文件，此参数直接传递给ssh</td>
</tr>
<tr>
<td>-i identity_file</td>
<td>从指定文件中读取传输时使用的密钥文件，此参数直接传递给ssh</td>
</tr>
<tr>
<td>-l limit</td>
<td>限定用户所能使用的带宽，以Kbit&#x2F;s为单位</td>
</tr>
<tr>
<td>-P port</td>
<td><strong>注意此处是大写P</strong>, port是指定数据传输用到的端口号</td>
</tr>
<tr>
<td>-S program</td>
<td>指定加密传输时所使用的程序。此程序必须能够理解ssh(1)的选项</td>
</tr>
</tbody></table>
<h3 id="3、应用场景"><a href="#3、应用场景" class="headerlink" title="3、应用场景"></a>3、应用场景</h3><p>一点小建议：如果不是很理解操作的意义。你可以这样看待：本机到服务器或者是服务器到到服务器，将其都看作是仓库，我需要将一壶油或一箱香飘飘者是转移到另一个仓库（目的地）。单件的时候，直接传一个过去；量大的时候，将其所在目录打包传输过去。操作方便快捷，只需要简单的几行命令搞定文件传输。</p>
<p><strong>命令格式介绍</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#复制文件格式</span></span><br><span class="line">scp local_file remote_username@remote_ip:remote_directory </span><br><span class="line"><span class="comment">#或者 </span></span><br><span class="line">scp local_file remote_username@remote_ip:remote_file </span><br><span class="line"><span class="comment">#或者 </span></span><br><span class="line">scp local_file  remote_ip:remote_directory </span><br><span class="line"><span class="comment">#或者 </span></span><br><span class="line">scp local_file remote_ip:remote_file </span><br></pre></td></tr></table></figure>



<p><strong>复制目录命令格式</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#复制命令格式</span></span><br><span class="line">scp <span class="literal">-r</span> local_directory remote_username@remote_ip:remote_directory </span><br><span class="line"><span class="comment">#或者 </span></span><br><span class="line">scp <span class="literal">-r</span> local_directory remote_ip:remote_directory </span><br></pre></td></tr></table></figure>



<h4 id="3-1、本地到远程"><a href="#3-1、本地到远程" class="headerlink" title="3.1、本地到远程"></a>3.1、本地到远程</h4><p>3.1.1、准备了两台Centos7服务器，已经设置好了静态IP</p>
<p><strong>采用虚拟机搭建环境</strong></p>
<ul>
<li>ip：192.168.245.147</li>
<li>ip：192.168.245.131</li>
</ul>
<p><strong>3.2.2、在147服务器上准备测试内容</strong></p>
<p>下面举例子的内容，啊啊啊就不要多幻想哈。只是想骚一骚而已，哈哈哈！！！</p>
<p>程序员都懂的，形象生动的sex教育片。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#新增一个av目录</span></span><br><span class="line">mkdir /root/av</span><br><span class="line"><span class="comment">#新增cangls文件并添加内容</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;cangls av&quot;</span> &gt; /root/av/cangls.av</span><br></pre></td></tr></table></figure>



<p>3.2.3、<strong>指定用户名</strong></p>
<p>个人推荐使用指定用户名，方便快捷。</p>
<p><strong>a、传输文件</strong></p>
<p>注意：<strong>第一次使用scp命令时会提示验证，输入yes即可通过</strong>。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#切记传输文件时，目标目录后面不要加/,否则会提示拒绝,这个习惯至今没改过来</span></span><br><span class="line">scp /root/av/cangls.av  root@<span class="number">192.168</span>.<span class="number">245.131</span>:/root</span><br></pre></td></tr></table></figure>

<p><strong>传文件时，root目录后面的 &#x2F; 需要去掉，传输完成如下</strong></p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/78988b9516e846cad0995fd900aeb4ad.png"></p>
<p><strong>b、验证</strong></p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/584d7c31e79d2a7a1efafa0e50f46c15.png"></p>
<p><strong>传输文件并指定文件名</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#传输文件，指定文件名，注意看目标文件名改了方便区别</span></span><br><span class="line">scp /root/av/cangls.av  root@<span class="number">192.168</span>.<span class="number">245.131</span>:/root/test.av</span><br></pre></td></tr></table></figure>

<p><img data-src="https://img-blog.csdnimg.cn/img_convert/ed1a75fcc26ae3e820e03b991800f020.png"></p>
<p><strong>指定文件名并验证</strong></p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/f3efce9a5f6bb71df4a38ccc4128918c.png"></p>
<p><strong>传输目录</strong>：加上参数-r</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#传输目录，需要加上-r参数</span></span><br><span class="line">scp <span class="literal">-r</span> /root/av/  root@<span class="number">192.168</span>.<span class="number">245.131</span>:/root/</span><br></pre></td></tr></table></figure>

<p><img data-src="https://img-blog.csdnimg.cn/img_convert/bc244269006c29b4b4599ab1f8a0f296.png"></p>
<p><strong>传输目录，到目标服务器验证</strong></p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/4ee8430484ae50eeab94a88f64413759.png"></p>
<p>4、不指定用户名</p>
<p>输入的时候需要手动输入用户名和密码。</p>
<p><strong>传输文件并沿用原始文件名</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#传输文件，沿用原始文件名</span></span><br><span class="line">scp /root/av/cangls.av  <span class="number">192.168</span>.<span class="number">245.131</span>:/root</span><br></pre></td></tr></table></figure>

<p><strong>传输文件，指定文件名</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#传输文件，指定文件名，注意看目标文件名改了方便区别</span></span><br><span class="line">scp /root/av/cangls.av  <span class="number">192.168</span>.<span class="number">245.131</span>:/root/test.av</span><br></pre></td></tr></table></figure>

<p><strong>传输目录，需要加上-r参数</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#传输目录，需要加上-r参数</span></span><br><span class="line">scp <span class="literal">-r</span> /root/av/  <span class="number">192.168</span>.<span class="number">245.131</span>:/root/</span><br></pre></td></tr></table></figure>



<h4 id="3-2、远程到本地"><a href="#3-2、远程到本地" class="headerlink" title="3.2、远程到本地"></a>3.2、远程到本地</h4><p>从远程复制到本地，说白了就是需要知道远程的服务器IP以及用户名密码，反过来操作即可从远程取货物。换个角度思考就是原本从A端传到B端，此时从B端传到A端。前提是两端互通，不然会只进不出。</p>
<p>3.2.1、从<strong>远程取cangls.av文件到本地</strong>的root目录下</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">scp root@<span class="number">192.168</span>.<span class="number">245.147</span>:/root/av/cangls.av /root</span><br></pre></td></tr></table></figure>

<p><img data-src="https://img-blog.csdnimg.cn/img_convert/aefceec4c85229163b42c47105146c9c.png"></p>
<p>3.2.2、从<strong>远程取av目录到本地</strong>的root目录下</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">scp <span class="literal">-r</span> root@<span class="number">192.168</span>.<span class="number">245.147</span>:/root/av/ /root/</span><br></pre></td></tr></table></figure>

<p><img data-src="https://img-blog.csdnimg.cn/img_convert/d2c4eb30e326a7530a8f0eff7c37e2a3.png"></p>
<h3 id="4、注意事项"><a href="#4、注意事项" class="headerlink" title="4、注意事项"></a>4、注意事项</h3><p>如果远程服务器防火墙有为scp命令设置了指定的端口，我们需要使用 -P 参数来设置命令的端口号，命令格式如下：<br>scp 命令使用指定端口号 6022</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#从远程服务器获取文件到本地，指定端口</span></span><br><span class="line">scp <span class="literal">-P</span> <span class="number">6022</span>  remote@ip:/usr/local/av.sh  /root</span><br></pre></td></tr></table></figure>

<p><strong>使用scp需要具备读取文件的权限，如果没有权限则无法传输</strong>。</p>
]]></content>
      <categories>
        <category>开发运维</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 平台 RHEL7 系列安装 Oracle11g 和 Oracle19c</title>
    <url>/2021/12/24/Linux%E5%B9%B3%E5%8F%B0RHEL7%E7%B3%BB%E5%88%97%E9%83%A8%E7%BD%B2Oracle11g%E5%92%8COracle19c/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>基于linux for centos7.x进行安装部署，分别部署Oracle11g和Oracle19c进行对比。</p>
<p><strong>强调一下Oracle11g基于zip安装包（有图形化界面），如果是rpm包安装（可以参考本文Oracle19c的部署）。</strong></p>
<p>之前一直在Windows上进行安装部署测试的，其实在linux操作系统上部署基本上可以参考Windows的图形界面安装。</p>
<p>图形化安装和Windows配置是差不多的，我安装的时候就是参考以前Windows上部署的经验。</p>
<p>部分安装注意事项还是需要注意，比如不能用root用户直接安装，需要新建普通用户安装。</p>
<p>说明：Oracle11g采用是带有桌面环境的系统部署，Oracle19c纯字符界面进行部署。</p>
<p><strong>基本环境准备</strong></p>
<p>1、部署系统环境：linux for centos7.x 64位<br>2、部署数据库软件：Oracle11gR2以及Oracle19c服务端<br>3、部署数据库客户端：Oracle11g客户端连接Oracle11g，Oracle19c客户端配置连接Oracle19c<br>3.1、tips：客户端版本低于连接的服务端版本，会提示协议错误，无法连接。<br>4、部署连接工具：plsql developer1207（汉化）</p>
<h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="一、注意事项"><a href="#一、注意事项" class="headerlink" title="一、注意事项"></a>一、注意事项</h2><h3 id="1、开启xhost"><a href="#1、开启xhost" class="headerlink" title="1、开启xhost +"></a>1、开启xhost +</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#以root用户执行命令</span></span><br><span class="line">xhost +</span><br></pre></td></tr></table></figure>

<h3 id="2、加入ip"><a href="#2、加入ip" class="headerlink" title="2、加入ip"></a>2、加入ip</h3><p>加入你的ip配置</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#以root用户执行命令</span></span><br><span class="line"><span class="comment">#例如：export $DISPLAY=192.168.245.233:0.0</span></span><br><span class="line">export <span class="variable">$DISPLAY</span>=IP:<span class="number">0.0</span></span><br></pre></td></tr></table></figure>

<h3 id="3、新增oracle用户"><a href="#3、新增oracle用户" class="headerlink" title="3、新增oracle用户"></a>3、新增oracle用户</h3><p>3.1、新增用户</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#新增oracle用户</span></span><br><span class="line">adduser oracle</span><br></pre></td></tr></table></figure>

<p>3.2、修改密码</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#修改密码</span></span><br><span class="line">passwd oracle</span><br></pre></td></tr></table></figure>

<p>3.3、切换用户</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#切换用户oracle</span></span><br><span class="line">su oracle</span><br></pre></td></tr></table></figure>


<h2 id="二、完全安装"><a href="#二、完全安装" class="headerlink" title="二、完全安装"></a>二、完全安装</h2><p>直接配置(create and configure a database：选择创建并配置数据库)<br>监听设置以及实例化在图形界面会提示配置。</p>
<h2 id="三、分步骤安装（Oracle11gR2）"><a href="#三、分步骤安装（Oracle11gR2）" class="headerlink" title="三、分步骤安装（Oracle11gR2）"></a>三、分步骤安装（Oracle11gR2）</h2><p>（install database software only：仅安装数据库软件 ）<br>解压文件：unzip 文件名<br>然后进入database文件目录执行安装<br><img data-src="https://img-blog.csdnimg.cn/4bb44a5c3a8042e8bba71a396c74d244.png?x-oss-process=,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6b6Z6IW-5LiH6YeMc2t5,size_20,color_FFFFFF,t_70,g_se,x_16#" alt="在这里插入图片描述"></p>
<h3 id="1、安装软件"><a href="#1、安装软件" class="headerlink" title="1、安装软件"></a>1、安装软件</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#切换用户oracle</span></span><br><span class="line">su oracle</span><br><span class="line"><span class="comment">#执行命令</span></span><br><span class="line">sh runInstaller </span><br><span class="line"><span class="comment">#或者执行 </span></span><br><span class="line">./runInstaller</span><br></pre></td></tr></table></figure>
<h3 id="2、乱码问题临时解决（安装显示英文模式）"><a href="#2、乱码问题临时解决（安装显示英文模式）" class="headerlink" title="2、乱码问题临时解决（安装显示英文模式）"></a>2、乱码问题临时解决（安装显示英文模式）</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">LANG=en_US sh runInstaller </span><br><span class="line"><span class="comment">#或者</span></span><br><span class="line">LANG=en_US ./runInstaller</span><br></pre></td></tr></table></figure>

<h3 id="3、首先进入到安装软件后的oracle的bin目录"><a href="#3、首先进入到安装软件后的oracle的bin目录" class="headerlink" title="3、首先进入到安装软件后的oracle的bin目录"></a>3、首先进入到安装软件后的oracle的bin目录</h3><p>3.1、切换至bin目录</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#进入bin目录</span></span><br><span class="line"><span class="built_in">cd</span> /home/oracle/app/product/<span class="number">11.2</span>.<span class="number">0</span>/dbhome_1/bin/</span><br><span class="line"><span class="comment">#直接查看bin目录下的文件</span></span><br><span class="line"><span class="built_in">ls</span> /home/oracle/app/product/<span class="number">11.2</span>.<span class="number">0</span>/dbhome_1/bin/</span><br></pre></td></tr></table></figure>

<h3 id="4、安装监听"><a href="#4、安装监听" class="headerlink" title="4、安装监听"></a>4、安装监听</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">./netca</span><br><span class="line"><span class="comment">#临时解决乱码问题，以英文模式安装</span></span><br><span class="line">LANG=en_US.UTF<span class="literal">-8</span> ./netca </span><br></pre></td></tr></table></figure>

<h3 id="5、安装数据库实例"><a href="#5、安装数据库实例" class="headerlink" title="5、安装数据库实例"></a>5、安装数据库实例</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">./dbca</span><br><span class="line"><span class="comment">#解决乱码问题，以英文模式安装</span></span><br><span class="line">LANG=en_US.UTF<span class="literal">-8</span> ./dbca</span><br></pre></td></tr></table></figure>

<h2 id="四、优化配置"><a href="#四、优化配置" class="headerlink" title="四、优化配置"></a>四、优化配置</h2><h3 id="1、部署目录"><a href="#1、部署目录" class="headerlink" title="1、部署目录"></a>1、部署目录</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#部署目录，此处部署目录根据实际情况调整</span></span><br><span class="line">/home/oracle/app/product/<span class="number">11.2</span>.<span class="number">0</span>/dbhome_1/bin/</span><br><span class="line"><span class="comment">#进入bin目录</span></span><br><span class="line"><span class="built_in">cd</span> /home/oracle/app/product/<span class="number">11.2</span>.<span class="number">0</span>/dbhome_1/bin/</span><br><span class="line"><span class="comment">#直接查看bin目录下的文件</span></span><br><span class="line"><span class="built_in">ls</span> /home/oracle/app/product/<span class="number">11.2</span>.<span class="number">0</span>/dbhome_1/bin/</span><br></pre></td></tr></table></figure>

<h3 id="2、设置主机名，重启服务器生效"><a href="#2、设置主机名，重启服务器生效" class="headerlink" title="2、设置主机名，重启服务器生效"></a>2、设置主机名，重启服务器生效</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#set hostname</span></span><br><span class="line">vim /etc/hostname</span><br></pre></td></tr></table></figure>

<h3 id="3、设置监听服务"><a href="#3、设置监听服务" class="headerlink" title="3、设置监听服务"></a>3、设置监听服务</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#set listener tnsnames</span></span><br><span class="line">vim /home/oracle/app/product/<span class="number">11.2</span>.<span class="number">0</span>/dbhome_1/network/admin/listener.ora </span><br><span class="line">vim /home/oracle/app/product/<span class="number">11.2</span>.<span class="number">0</span>/dbhome_1/network/admin/tnsnames.ora</span><br></pre></td></tr></table></figure>

<p>3.1、listener.ora 配置文件新增内容</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># listener.ora Network Configuration File: /home/oracle/app/product/11.2.0/dbhome_1/network/admin/listener.ora</span></span><br><span class="line"><span class="comment"># Generated by Oracle configuration tools.</span></span><br><span class="line"><span class="comment">#listener.ora 配置文件新增内容，新增内容视具体情况修改</span></span><br><span class="line">SID_LIST_LISTENER =</span><br><span class="line">  (SID_LIST =</span><br><span class="line">    (SID_DESC =</span><br><span class="line">      (SID_NAME = orcl)</span><br><span class="line">      (ORACLE_HOME = /home/oracle/app/product/<span class="number">11.2</span>.<span class="number">0</span>/dbhome_1/)</span><br><span class="line">      <span class="comment">#(PROGRAM = extproc) //去掉PROGRAM = extproc，外部通道调用动态dll</span></span><br><span class="line">      (ENVS = <span class="string">&quot;EXTPROC_DLLS=ONLY:/home/oracle/app/product/11.2.0/dbhome_1/bin/oraclr11.dll&quot;</span>)</span><br><span class="line">    )</span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line"><span class="comment">#原始配置，HOST一般是主机名或者localhost或者127.0.0.1，个人推荐设置固定IP</span></span><br><span class="line">LISTENER =</span><br><span class="line">  (DESCRIPTION_LIST =</span><br><span class="line">    (DESCRIPTION =</span><br><span class="line">      (ADDRESS = (PROTOCOL = TCP)(HOST = <span class="number">192.168</span>.<span class="number">245.147</span>)(PORT = <span class="number">1521</span>))</span><br><span class="line">    )</span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">ADR_BASE_LISTENER = /home/oracle/app</span><br><span class="line"></span><br></pre></td></tr></table></figure>


<p>3.2、tnsnames.ora新增内容</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># tnsnames.ora Network Configuration File: /home/oracle/app/product/11.2.0/dbhome_1/network/admin/tnsnames.ora</span></span><br><span class="line"><span class="comment"># Generated by Oracle configuration tools.</span></span><br><span class="line"><span class="comment">#tnsnames.ora新增内容</span></span><br><span class="line">ORACLR_CONNECTION_DATA =</span><br><span class="line">  (DESCRIPTION =</span><br><span class="line">    (ADDRESS_LIST =</span><br><span class="line">      (ADDRESS = (PROTOCOL = IPC)(KEY = EXTPROC1521))</span><br><span class="line">    )</span><br><span class="line">    (CONNECT_DATA =</span><br><span class="line">      (SID = CLRExtProc)</span><br><span class="line">      (PRESENTATION = RO)</span><br><span class="line">    )</span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line"><span class="comment">#原始配置</span></span><br><span class="line">ORCL =</span><br><span class="line">  (DESCRIPTION =</span><br><span class="line">    (ADDRESS = (PROTOCOL = TCP)(HOST = <span class="number">192.168</span>.<span class="number">245.147</span>)(PORT = <span class="number">1521</span>))</span><br><span class="line">    (CONNECT_DATA =</span><br><span class="line">      (SERVER = DEDICATED)</span><br><span class="line">      (SERVICE_NAME = orcl)</span><br><span class="line">    )</span><br><span class="line">  )</span><br><span class="line"></span><br></pre></td></tr></table></figure>


<h3 id="4、切换用户"><a href="#4、切换用户" class="headerlink" title="4、切换用户"></a>4、切换用户</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#切换到oracle用户</span></span><br><span class="line">su oracle</span><br></pre></td></tr></table></figure>

<h3 id="5、配置oracle环境变量"><a href="#5、配置oracle环境变量" class="headerlink" title="5、配置oracle环境变量"></a>5、配置oracle环境变量</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#进入当前用户的home（家目录）</span></span><br><span class="line"><span class="built_in">cd</span> ~</span><br></pre></td></tr></table></figure>

<p>5.1、设置oracle环境变量</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#oracle home，设置oracle环境变量</span></span><br><span class="line">vim .bash_profile </span><br></pre></td></tr></table></figure>

<p>5.2、加入配置（仅供参考）</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">ORACLE_BASE=/home/oracle/app;</span><br><span class="line">ORACLE_HOME=<span class="variable">$ORACLE_BASE</span>/product/<span class="number">11.2</span>.<span class="number">0</span>/dbhome_1;</span><br><span class="line">PATH=<span class="variable">$ORACLE_HOME</span>/bin:<span class="variable">$PATH</span>;</span><br><span class="line">ORACLE_SID=orcl;</span><br><span class="line"></span><br><span class="line">export ORACLE_SID ORACLE_BASE ORACLE_HOME PATH</span><br></pre></td></tr></table></figure>

<p>5.3、bin目录说明<br>切换到Oracle服务安装后的bin目录，很多命令都是在此目录的，切换至此目录使用更便捷。<br>其中的监听lsnrctl监听服务启动以及sqlplus工具都在此目录，当然也可以不用切换进来，linux最原始是采用绝对路径执行命令脚本的。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/oracle/app/product/<span class="number">11.2</span>.<span class="number">0</span>/dbhome_1/bin/</span><br></pre></td></tr></table></figure>

<h3 id="6、启动监听"><a href="#6、启动监听" class="headerlink" title="6、启动监听"></a>6、启动监听</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">./lsnrctl <span class="built_in">start</span></span><br></pre></td></tr></table></figure>


<h3 id="7、设置所用户生效"><a href="#7、设置所用户生效" class="headerlink" title="7、设置所用户生效"></a>7、设置所用户生效</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#需要root用户执行</span></span><br><span class="line"><span class="comment">#设置所用户生效</span></span><br><span class="line">vim /etc/profile</span><br></pre></td></tr></table></figure>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#设置所用户生效</span></span><br><span class="line">ORACLE_BASE=/home/oracle/app;</span><br><span class="line">ORACLE_HOME=<span class="variable">$ORACLE_BASE</span>/product/<span class="number">11.2</span>.<span class="number">0</span>/dbhome_1;</span><br><span class="line">PATH=<span class="variable">$ORACLE_HOME</span>/bin:<span class="variable">$PATH</span>;</span><br><span class="line">ORACLE_SID=orcl;</span><br><span class="line"></span><br><span class="line">export ORACLE_SID ORACLE_BASE ORACLE_HOME PATH</span><br></pre></td></tr></table></figure>

<p>启动监听，如下图所示，启动成功<br><img data-src="https://img-blog.csdnimg.cn/4f3db6fd56464f0d8d02690f880eb950.png?x-oss-process=,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6b6Z6IW-5LiH6YeMc2t5,size_20,color_FFFFFF,t_70,g_se,x_16#" alt="在这里插入图片描述"></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#启动监听，此时已经切入到了bin目录进行操作</span></span><br><span class="line">./lsnrctl <span class="built_in">start</span></span><br><span class="line"><span class="comment">#关闭监听</span></span><br><span class="line">./lsnrctl stop</span><br><span class="line"><span class="comment">#查看监听状态</span></span><br><span class="line">./lsnrctl status</span><br><span class="line">./lsnrctl stat</span><br></pre></td></tr></table></figure>

<h3 id="8、登录验证"><a href="#8、登录验证" class="headerlink" title="8、登录验证"></a>8、登录验证</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#登录</span></span><br><span class="line">sqlplus /nolog</span><br></pre></td></tr></table></figure>
<p>连接sqlplus</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#连接sqlplus</span></span><br><span class="line">conn system as sysdba</span><br></pre></td></tr></table></figure>

<h3 id="9、启动与关闭实例"><a href="#9、启动与关闭实例" class="headerlink" title="9、启动与关闭实例"></a>9、启动与关闭实例</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#启动实例</span></span><br><span class="line">startup</span><br><span class="line"><span class="comment">#关闭实例</span></span><br><span class="line">shutdown</span><br></pre></td></tr></table></figure>


<h2 id="五、解决问题"><a href="#五、解决问题" class="headerlink" title="五、解决问题"></a>五、解决问题</h2><h3 id="1、Oracle-home环境变量"><a href="#1、Oracle-home环境变量" class="headerlink" title="1、Oracle home环境变量"></a>1、Oracle home环境变量</h3><p>定位问题：message 1070 not found<br><img data-src="https://img-blog.csdnimg.cn/e90fc98999894db790e7e3ec0cbd9c62.png?x-oss-process=,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6b6Z6IW-5LiH6YeMc2t5,size_20,color_FFFFFF,t_70,g_se,x_16#" alt="在这里插入图片描述"></p>
<p>解决问题：加入Oracle环境变量，参看上面的优化配置</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#切换到当前用户home目录</span></span><br><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line"><span class="comment">#查看环境变量</span></span><br><span class="line"><span class="built_in">cat</span> .bash_profile</span><br></pre></td></tr></table></figure>

<h3 id="2、listener-ora、tnsnames-ora监听文件"><a href="#2、listener-ora、tnsnames-ora监听文件" class="headerlink" title="2、listener.ora、tnsnames.ora监听文件"></a>2、listener.ora、tnsnames.ora监听文件</h3><p>参考：个人部署oracle数据库监听文件位置所在目录<br><img data-src="https://img-blog.csdnimg.cn/69bce99f85dc47c3b21d6a45cf8e458f.png?x-oss-process=,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6b6Z6IW-5LiH6YeMc2t5,size_20,color_FFFFFF,t_70,g_se,x_16#" alt="在这里插入图片描述"></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#检查listener.ora</span></span><br><span class="line"><span class="built_in">cat</span> /home/oracle/app/product/<span class="number">11.2</span>.<span class="number">0</span>/dbhome_1/network/admin/listener.ora </span><br><span class="line"><span class="comment">#检查tnsnames.ora</span></span><br><span class="line"><span class="built_in">cat</span> /home/oracle/app/product/<span class="number">11.2</span>.<span class="number">0</span>/dbhome_1/network/admin/tnsnames.ora</span><br></pre></td></tr></table></figure>

<h3 id="3、主机名一致性"><a href="#3、主机名一致性" class="headerlink" title="3、主机名一致性"></a>3、主机名一致性</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#检查主机名</span></span><br><span class="line"><span class="built_in">cat</span> /etc/hostname</span><br><span class="line"><span class="comment">#检查hosts文件配置</span></span><br><span class="line"><span class="built_in">cat</span> /etc/hosts</span><br><span class="line"><span class="comment">#检查listener.ora </span></span><br><span class="line"><span class="built_in">cat</span> /home/oracle/app/product/<span class="number">11.2</span>.<span class="number">0</span>/dbhome_1/network/admin/listener.ora </span><br><span class="line"><span class="comment">#检查tnsnames.ora</span></span><br><span class="line"><span class="built_in">cat</span> /home/oracle/app/product/<span class="number">11.2</span>.<span class="number">0</span>/dbhome_1/network/admin/tnsnames.ora</span><br></pre></td></tr></table></figure>

<h3 id="4、安装时显示乱码问题"><a href="#4、安装时显示乱码问题" class="headerlink" title="4、安装时显示乱码问题"></a>4、安装时显示乱码问题</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#在命令前加上,临时生效</span></span><br><span class="line">LANAG=en_US</span><br></pre></td></tr></table></figure>

<h3 id="5、关于服务开机自启问题"><a href="#5、关于服务开机自启问题" class="headerlink" title="5、关于服务开机自启问题"></a>5、关于服务开机自启问题</h3><p>5.1、使用官方提供的脚本</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#执行root.sh脚本</span></span><br><span class="line">/home/oracle/app/product/<span class="number">11.2</span>.<span class="number">0</span>/dbhome_1/root.sh</span><br></pre></td></tr></table></figure>

<p>5.2、验证oratab文件</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#验证oratab文件</span></span><br><span class="line"><span class="built_in">ls</span> /etc/oratab</span><br></pre></td></tr></table></figure>

<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#代表开启自动</span></span><br><span class="line"><span class="variable">$ORACLE_SID:</span><span class="variable">$ORACLE_HOME:Y</span></span><br><span class="line">通过dbstart、dbshut控制启动与停止服务</span><br></pre></td></tr></table></figure>

<h3 id="6、关于oratab文件"><a href="#6、关于oratab文件" class="headerlink" title="6、关于oratab文件"></a>6、关于oratab文件</h3><p>提示<code>/etc/oratab</code>文件不可用，需要使用root用户去执行root.sh。<br>原因：使用普通用户oracle，权限不足。</p>
<p><strong>使用官方提供的脚本</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#执行root.sh脚本，以root用户身份执行，或者sudo提权</span></span><br><span class="line">/home/oracle/app/product/<span class="number">11.2</span>.<span class="number">0</span>/dbhome_1/root.sh</span><br></pre></td></tr></table></figure>
<p><img data-src="https://img-blog.csdnimg.cn/3de1c769b5e74b3aa39d220d8218e9e1.png?x-oss-process=,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6b6Z6IW-5LiH6YeMc2t5,size_20,color_FFFFFF,t_70,g_se,x_16#" alt="在这里插入图片描述"></p>
<h2 id="六、Oracle19c安装"><a href="#六、Oracle19c安装" class="headerlink" title="六、Oracle19c安装"></a>六、Oracle19c安装</h2><p>友情提示：下载需要注册Oracle账号并且登录，真的很骚。</p>
<h3 id="1、准备安装包"><a href="#1、准备安装包" class="headerlink" title="1、准备安装包"></a>1、准备安装包</h3><p>官网地址<br><span class="exturl" data-url="aHR0cHM6Ly93d3cub3JhY2xlLmNvbS9jbi9kYXRhYmFzZS90ZWNobm9sb2dpZXMvb3JhY2xlLWRhdGFiYXNlLXNvZnR3YXJlLWRvd25sb2Fkcy5odG1sIzE5Yw==">https://www.oracle.com/cn/database/technologies/oracle-database-software-downloads.html#19c<i class="fa fa-external-link-alt"></i></span></p>
<p>下载地址<br><span class="exturl" data-url="aHR0cHM6Ly93d3cub3JhY2xlLmNvbS93ZWJhcHBzL3JlZGlyZWN0L3NpZ25vbj9uZXh0dXJsPWh0dHBzOi8vZG93bmxvYWQub3JhY2xlLmNvbS9vdG4vbGludXgvb3JhY2xlMTljLzE5MDAwMC9vcmFjbGUtZGF0YWJhc2UtZWUtMTljLTEuMC0xLng4Nl82NC5ycG0=">https://www.oracle.com/webapps/redirect/signon?nexturl=https://download.oracle.com/otn/linux/oracle19c/190000/oracle-database-ee-19c-1.0-1.x86_64.rpm<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="2、依赖环境安装"><a href="#2、依赖环境安装" class="headerlink" title="2、依赖环境安装"></a>2、依赖环境安装</h3><p>2.1、前提条件（rpm安装会提示依赖包）</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">yum <span class="literal">-y</span> install libaio<span class="literal">-devel</span></span><br><span class="line">yum <span class="literal">-y</span> install ksh</span><br></pre></td></tr></table></figure>

<h3 id="3、正式安装"><a href="#3、正式安装" class="headerlink" title="3、正式安装"></a>3、正式安装</h3><p>3.1、rpm命令安装</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">rpm <span class="literal">-ivh</span> oracle<span class="literal">-database-preinstall-19c-1</span>.<span class="number">0</span><span class="literal">-3</span>.el7.x86_64.rpm</span><br><span class="line">rpm <span class="literal">-ivh</span> oracle<span class="literal">-database-ee-19c-1</span>.<span class="number">0</span><span class="literal">-1</span>.x86_64.rpm</span><br></pre></td></tr></table></figure>

<p>3.2、或者使用yum形式安装</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">yum <span class="literal">-y</span> install oracle<span class="literal">-database-preinstall-19c-1</span>.<span class="number">0</span><span class="literal">-3</span>.el7.x86_64.rpm</span><br><span class="line">yum <span class="literal">-y</span> install oracle<span class="literal">-database-ee-19c-1</span>.<span class="number">0</span><span class="literal">-1</span>.x86_64.rpm</span><br></pre></td></tr></table></figure>

<h3 id="4、执行部署配置"><a href="#4、执行部署配置" class="headerlink" title="4、执行部署配置"></a>4、执行部署配置</h3><p>4.1、配置</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">/etc/init.d/oracledb_ORCLCDB<span class="literal">-19c</span> configure</span><br></pre></td></tr></table></figure>

<p>4.2、默认安装位置</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--SID：ORCLCDB</span></span><br><span class="line"><span class="operator">/</span>opt<span class="operator">/</span>oracle<span class="operator">/</span>product<span class="operator">/</span><span class="number">19</span>c<span class="operator">/</span>dbhome_1<span class="operator">/</span></span><br></pre></td></tr></table></figure>

<p>4.3、加入环境变量</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#进入当前用户家目录</span></span><br><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line"><span class="comment">#编辑当前用户的环境变量</span></span><br><span class="line">vim .bash_profile</span><br></pre></td></tr></table></figure>

<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#加入环境变量</span></span><br><span class="line">ORACLE_BASE=/opt/oracle;</span><br><span class="line">ORACLE_HOME=<span class="variable">$ORACLE_BASE</span>/product/<span class="number">19</span>c/dbhome_1;</span><br><span class="line">PATH=<span class="variable">$ORACLE_HOME</span>/bin:<span class="variable">$PATH</span>;</span><br><span class="line">ORACLE_SID=ORCLCDB;</span><br><span class="line"></span><br><span class="line">export ORACLE_SID ORACLE_BASE ORACLE_HOME PATH</span><br></pre></td></tr></table></figure>

<p>4.4、执行后生效</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#执行后生效</span></span><br><span class="line">source .bash_profile</span><br></pre></td></tr></table></figure>

<h3 id="5、登录验证"><a href="#5、登录验证" class="headerlink" title="5、登录验证"></a>5、登录验证</h3><p>5.1、登录sqlplus验证</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--登录sqlplus验证</span></span><br><span class="line"><span class="operator">/</span>opt<span class="operator">/</span>oracle<span class="operator">/</span>product<span class="operator">/</span><span class="number">19</span>c<span class="operator">/</span>dbhome_1<span class="operator">/</span>bin<span class="operator">/</span>sqlplus <span class="operator">/</span> <span class="keyword">as</span> sysdba</span><br></pre></td></tr></table></figure>

<p>5.2、显示用户</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">user</span>;</span><br></pre></td></tr></table></figure>

<p>5.3、启动实例</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--启动实例</span></span><br><span class="line">startup;</span><br></pre></td></tr></table></figure>

<p>5.4、修改system密码</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--修改system用户密码</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">user</span> <span class="keyword">system</span> identified <span class="keyword">by</span> <span class="number">123456</span>;</span><br></pre></td></tr></table></figure>

<p>5.5、配置Oracle19c客户端数据源</p>
<p>Oracle19默认安装实例名为：ORCLCDB<br>目前使用最广泛的还是Oracle11g。这里提一下，在Oracle12的版本加入了容器新特性。<br><img data-src="https://img-blog.csdnimg.cn/81bb184ab9464038874a8e203f599d34.png?x-oss-process=,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6b6Z6IW-5LiH6YeMc2t5,size_20,color_FFFFFF,t_70,g_se,x_16#" alt="在这里插入图片描述"><br>5.6、配置plsql developer</p>
<p>前提：Oracle19c的客户端正常安装<br><img data-src="https://img-blog.csdnimg.cn/98394f8028f646bcbdce89fbff7cf515.png?x-oss-process=,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6b6Z6IW-5LiH6YeMc2t5,size_20,color_FFFFFF,t_70,g_se,x_16#" alt="在这里插入图片描述"></p>
<p>使用工具连接，此时可以检测到我利用Oracle19c客户端配置的134数据源。<br><img data-src="https://img-blog.csdnimg.cn/d35166069b7c4c0daf071cbf9376317b.png?x-oss-process=,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6b6Z6IW-5LiH6YeMc2t5,size_20,color_FFFFFF,t_70,g_se,x_16#" alt="在这里插入图片描述"></p>
<h3 id="6、优化"><a href="#6、优化" class="headerlink" title="6、优化"></a>6、优化</h3><p>6.1、设置字符集，统一编码</p>
<p>tips：如果字符集设置的不统一，你看到的sqlplus提示会显示为”xxx ???”这种形式</p>
<p>设置中文（我部署的centos7选择的中文）</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">export NLS_LANG<span class="operator">=</span>&quot;Simplified Chinese_china.al32utf8&quot;</span><br></pre></td></tr></table></figure>

<p>Oracle默认的编码</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--Oracle默认的编码</span></span><br><span class="line">export NLS_LANG<span class="operator">=</span>&quot;SIMPLIFIED CHINESE_CHINA.ZHS16GBK&quot;</span><br></pre></td></tr></table></figure>


<p>6.2、创建用户需要加c##的问题</p>
<p>6.2.1、解决方案一</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--报错</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> test;</span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--解决问题</span></span><br><span class="line">reate <span class="keyword">user</span> c##test;</span><br></pre></td></tr></table></figure>

<p><strong>经过思考以及参考书籍发现：导致原因是与容器数据库新特性有关</strong></p>
<p>6.2.2、解决方案二</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--我修改了并没生效</span></span><br><span class="line"><span class="keyword">ALTER</span> PLUGGABLE DATABASE PDB$SEED <span class="keyword">CLOSE</span> ;</span><br></pre></td></tr></table></figure>

<p>6.2.3、解决方案三<br>在安装的过程之前取消勾选新特性容器数据库的选项</p>
<p><strong>或许会有更优化的解决方案，欢迎留言，共同进步！</strong></p>
<h2 id="七、关于自启"><a href="#七、关于自启" class="headerlink" title="七、关于自启"></a>七、关于自启</h2><p>我只提供思路，网上的教程很多。</p>
<p>1、利用官方提供的脚本设置</p>
<p>2、自己写shell脚本设置，锻炼写脚本的逻辑能力，孰能生巧。<br>或者偷偷懒，使用别人写好的脚本，优化一下，然后设置开机自启。</p>
<p>3、然后加入的&#x2F;ect&#x2F;rc.local文件中，开机运行</p>
<h1 id="开心一刻"><a href="#开心一刻" class="headerlink" title="开心一刻"></a>开心一刻</h1><p>创作乐无边，学而思有境。好了，到此为止就是此篇文章的全部内容了，<strong>能看到这里的都是帅哥靓妹啊</strong>！！！善于总结，其乐不穷。<strong>好记性不如烂笔头</strong>，多收集自己第一次尝试的成果，收获也颇丰。<strong>你会发现，自己的知识宝库越来越丰富</strong>。白嫖有瘾，原创不易，快乐学习！</p>
<H5 align=center><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==">by 龙腾万里sky 原创不易，白嫖有瘾<i class="fa fa-external-link-alt"></i></span></H5>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>Oracle</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux银河麒麟V10部署DM8数据库</title>
    <url>/2021/11/07/Linux%E5%8F%91%E8%A1%8C%E7%89%88%E5%9B%BD%E4%BA%A7%E9%93%B6%E6%B2%B3%E9%BA%92%E9%BA%9FV10%E9%83%A8%E7%BD%B2ARM%E6%9E%B6%E6%9E%84%E8%BE%BE%E6%A2%A6%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
    <content><![CDATA[<p>国产适配linux银河麒麟V10下部署DM8（arm版本）</p>
<p>tips：安装过程仅供参考，具体因你的实际部署路径而定</p>
<h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="一、下载好对应的Linux版本的达梦数据库"><a href="#一、下载好对应的Linux版本的达梦数据库" class="headerlink" title="一、下载好对应的Linux版本的达梦数据库"></a>一、下载好对应的Linux版本的达梦数据库</h2><p>DM8官网直通车：<span class="exturl" data-url="aHR0cHM6Ly93d3cuZGFtZW5nLmNvbS92aWV3XzYxLmh0bWw=">https://www.dameng.com/view_61.html<i class="fa fa-external-link-alt"></i></span></p>
<p>下载中心，需要注册登录<br><span class="exturl" data-url="aHR0cHM6Ly93d3cuZGFtZW5nLmNvbS91Y2VudGVyL2RvY3MuaHRtbA==">https://www.dameng.com/ucenter/docs.html<i class="fa fa-external-link-alt"></i></span><br><img data-src="https://img-blog.csdnimg.cn/3eabbe2a2f6c4210860e28496d0b6037.png?x-oss-process=,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA6b6Z6IW-5LiH6YeMc2t5,size_20,color_FFFFFF,t_70,g_se,x_16#" alt="在这里插入图片描述"></p>
<p><strong>系统检测，参考官网技术文档，一般而言可以忽略这一步</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">#获取系统位数</span><br><span class="line">getconf LONG_BIT</span><br></pre></td></tr></table></figure>

<p>查询操作系统 release 信息，Redhat系列</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">#如果没安装对应的服务包，无法使用该命令</span><br><span class="line">lsb_release <span class="operator">-</span>a</span><br></pre></td></tr></table></figure>

<p>查询系统信息</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">cat <span class="operator">/</span>etc<span class="operator">/</span>issue</span><br></pre></td></tr></table></figure>

<p>查询系统名称</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">uname <span class="operator">-</span>a</span><br></pre></td></tr></table></figure>

<p>linux下检查操作系统限制<br>运行 <code>ulimit -a</code> 进行查询</p>
<p>官方文档建议如下设置<br>参数使用限制：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="number">1.</span>data seg size</span><br><span class="line">data seg size (kbytes, <span class="operator">-</span>d)</span><br></pre></td></tr></table></figure>

<p>建议用户设置为 1048576(即 1GB)以上或 unlimited(无限制)，此参数过小<br>将导致数据库启动失败。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="number">2.</span> file size</span><br><span class="line">file size(blocks, <span class="operator">-</span>f)</span><br></pre></td></tr></table></figure>

<p>建议用户设置为 unlimited(无限制)，此参数过小将导致数据库安装或初始化<br>失败。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="number">3.</span> <span class="keyword">open</span> files</span><br><span class="line"><span class="keyword">open</span> files(<span class="operator">-</span>n)</span><br></pre></td></tr></table></figure>

<p>建议用户设置为 65536 以上或 unlimited(无限制)。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="number">4.</span>virtual memory</span><br><span class="line">virtual memory (kbytes, <span class="operator">-</span>v)</span><br></pre></td></tr></table></figure>

<p>建议用户设置为 1048576(即 1GB)以上或 unlimited(无限制)，此参数过小将导致数据库启动失败。</p>
<p>检查系统内存，获取内存总大小</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">grep MemTotal /proc/meminfo</span><br></pre></td></tr></table></figure>

<p>获取交换分区大小</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">grep SwapTotal /proc/meminfo</span><br></pre></td></tr></table></figure>

<p>获取内存使用详情</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">free</span><br></pre></td></tr></table></figure>

<p>检查存储空间<br>查询目录可用空间</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">df <span class="literal">-h</span> /mount_point/dir_name</span><br></pre></td></tr></table></figure>


<p>如果&#x2F;tmp 目录不能保证 1GB 的存储空间，用户可以扩展&#x2F;tmp 目录存储空间或者通<br>过设置环境变量 DM_INSTALL_TMPDIR 指定安装程序的临时目录。具体命令如下所示:<br>以 BASH 为例：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">mkdir <span class="literal">-p</span> /mount_point/dir_name</span><br></pre></td></tr></table></figure>

<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">DM_INSTALL_TMPDIR=/mount_point/dir_name</span><br><span class="line">export DM_INSTALL_TMPDIR</span><br></pre></td></tr></table></figure>


<p>配置JAVA环境，无特殊需求忽略此步骤<br>#以 BASH 为例:</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">vim /etc/profile</span><br></pre></td></tr></table></figure>

<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">export DM_JAVA_HOME=/mount_point/jdk_home_dir</span><br></pre></td></tr></table></figure>


<p>arm架构银河麒麟V10<br>数据库文件：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#准备arm架构版本的</span></span><br><span class="line">dm8_20200907_FTarm_kylin4_64_ent_8.<span class="number">1.1</span>.<span class="number">126</span>.iso</span><br></pre></td></tr></table></figure>


<h2 id="二、使用mount命令挂载准备好的iso镜像"><a href="#二、使用mount命令挂载准备好的iso镜像" class="headerlink" title="二、使用mount命令挂载准备好的iso镜像"></a>二、使用mount命令挂载准备好的iso镜像</h2><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mount</span> dm8_20200907_FTarm_kylin4_64_ent_8.<span class="number">1.1</span>.<span class="number">126</span>.iso  /mnt/<span class="keyword">data</span>/dm8</span><br></pre></td></tr></table></figure>

<p>赋予权限755</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#找到/mnt/data/dm8下的DMInstall.bin</span></span><br><span class="line">chmod <span class="number">755</span> ./DMInstall.bin </span><br></pre></td></tr></table></figure>


<h2 id="三、使用命令进行安装"><a href="#三、使用命令进行安装" class="headerlink" title="三、使用命令进行安装"></a>三、使用命令进行安装</h2><p>此步骤，官方不推荐使用root用户安装，采用新建用户授权形式。</p>
<p>创建安装用户</p>
<p>为了减少对操作系统的影响，用户不应该以 root 系统用户来安装和运行 DM。用户可以在安装之前为 DM 创建一个专用的系统用户。可参考以下示例创建系统用户和组(并指定用户 ID 和组 ID)，具体细节可向系统管理员咨询。</p>
<ol>
<li>创建安装用户组 dinstall</li>
</ol>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">groupadd <span class="literal">-g</span> <span class="number">12349</span> dinstall</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>创建安装用户 dmdba。</li>
</ol>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">useradd <span class="literal">-u</span> <span class="number">12345</span> <span class="literal">-g</span> dinstall <span class="literal">-m</span> <span class="literal">-d</span> /home/dmdba <span class="literal">-s</span> /bin/bash dmdba</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>初始化用户密码。</li>
</ol>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">passwd dmdba</span><br></pre></td></tr></table></figure>

<ol start="4">
<li><p>之后通过系统提示进行密码设置。<br>注意：创建安装系统用户完成后，安装手册之后的操作默认使用安装系统用户进行<br>操作。</p>
</li>
<li><p>切换用户进行安装</p>
</li>
</ol>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">sudo dmdba</span><br></pre></td></tr></table></figure>

<p>切回root用户，需要验证密码。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">./DMInstall.bin <span class="literal">-i</span></span><br></pre></td></tr></table></figure>

<p>如果当前操作系统中已存在 DM，将在终端弹出提示，输入选项：继续，将进行下一<br>步的命令行安装，否则退出命令行安装。</p>
<ol start="6">
<li><p>选择语言</p>
</li>
<li><p>验证key文件</p>
</li>
<li><p>输入时区</p>
</li>
<li><p>选择安装类型<br>1 ：典型安装<br>2 ：服务器<br>3 ：客户端<br>4 ：自定义</p>
</li>
<li><p>选择安装路径</p>
</li>
</ol>
<p>默认安装路径：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/opt/dmdbms</span><br></pre></td></tr></table></figure>

<p>官方文档推荐安装路径</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/home/dmdba/dmdbms</span><br></pre></td></tr></table></figure>

<p>这里官方推荐安装路径，与之前推荐新建用户dmdba对应起来。<br>（个人推荐还是安装在&#x2F;opt&#x2F;下）</p>
<ol start="11">
<li>静默安装</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#配置文件全路径</span></span><br><span class="line">./DMInstall.bin -q </span><br></pre></td></tr></table></figure>

<p>例如通过配置文件安装，需要配置auto_install.xml文件</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">./DMInstall.bin <span class="literal">-q</span> /opt/dmdba/auto_install.xml</span><br></pre></td></tr></table></figure>

<h2 id="四、初始化数据库与注册服务"><a href="#四、初始化数据库与注册服务" class="headerlink" title="四、初始化数据库与注册服务"></a>四、初始化数据库与注册服务</h2><p>1、dminit命令初始化创建实例，初始化生成data数据文件。无论是安装MySQL、MariaDB、Oracle亦或是DM数据库都是需要注册服务与实例化的过程，最终生成配置文件以及data数据文件。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">./dminit PATH=/opt/dmdba/dmdbms/<span class="keyword">data</span></span><br></pre></td></tr></table></figure>

<h2 id="五、通过脚本命令注册达梦数据库服务"><a href="#五、通过脚本命令注册达梦数据库服务" class="headerlink" title="五、通过脚本命令注册达梦数据库服务"></a>五、通过脚本命令注册达梦数据库服务</h2><p>1.通过指定服务类型注册服务，或者手动添加</p>
<p>dm_service_installer.sh所在路径，linux_银河麒麟V10_arm版本</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">/opt/dmdba/dmdbms/script/root</span><br></pre></td></tr></table></figure>
<p>执行命令注册服务</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">./dm_service_installer.sh  <span class="literal">-t</span> dmserver <span class="literal">-dm_ini</span> /opt/dmdba/dmdbms/<span class="keyword">data</span>/DAMENG/dm.ini <span class="literal">-p</span> DMSERVER</span><br></pre></td></tr></table></figure>



<h2 id="六、测试启动DmServiceDMSERVER服务"><a href="#六、测试启动DmServiceDMSERVER服务" class="headerlink" title="六、测试启动DmServiceDMSERVER服务"></a>六、测试启动DmServiceDMSERVER服务</h2><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#如果报错请看第八步</span></span><br><span class="line">systemctl <span class="built_in">start</span> DmServiceDMSERVER</span><br></pre></td></tr></table></figure>


<h2 id="七、设置管理员口令模式"><a href="#七、设置管理员口令模式" class="headerlink" title="七、设置管理员口令模式"></a>七、设置管理员口令模式</h2><p>比如同时采用（2+4）口令长度不小于9且必须包含一个大写字母<br>设置系统默认口令策略，修改参数PWD_POLICY。</p>
<ol>
<li>0： 无策略；</li>
<li>1： 禁止与用户名相同；</li>
<li>2： 口令长度不小于 9；</li>
<li>4：至少包含一个大写字母（A-Z）；</li>
<li>8 ：至少包含一个数字（0－9）；</li>
<li>16：至少包含一个标点符号（英文输入法状态下，除―和空格外的所有符号；若为其他数字，则表示配置值的和，如 3<br>＝1+2,表示同时启用第 1 项和第 2 项策略。当COMPATIBLE_MODE&#x3D;1 时，PWD_POLICY 的实际值均为 0</li>
</ol>
<p><strong>一般推荐2+4的组合设置密码策略</strong></p>
<h2 id="八、排查错误"><a href="#八、排查错误" class="headerlink" title="八、排查错误"></a>八、排查错误</h2><p>启动DmServiceDMSERVER，需要找到对应的ini文件，没有实例化导致报错，是因为达梦数据库默认去&#x2F;opt&#x2F;dmdbms&#x2F;下找dm.ini文件</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">root@localhost]<span class="comment"># ./DmServiceDMSERVER start</span></span><br><span class="line">Starting DmServiceDMSERVER: 上一次登录：二 <span class="number">5</span>月 <span class="number">11</span> <span class="number">22</span>:<span class="number">59</span>:<span class="number">33</span> CST <span class="number">2021</span></span><br><span class="line">                                                           [ <span class="type">FAILED</span> ]</span><br><span class="line">Invalid input %INI_PATH%</span><br><span class="line">格式: ./dmserver [<span class="type">ini_file_path</span>] [-<span class="type">noconsole</span>] [<span class="type">mount</span>] [<span class="type">path</span>=<span class="type">ini_file_path</span>] [<span class="type">dcr_ini</span>=<span class="type">dcr_path</span>]</span><br></pre></td></tr></table></figure>
<p><strong>例如:</strong> </p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">./dmserver path=/opt/dmdbms/bin/dm.ini</span><br><span class="line">./dmserver /opt/dmdbms/bin/dm.ini</span><br></pre></td></tr></table></figure>


<p><strong>关键字             说明</strong></p>
<hr>
<p>path              		 dm.ini绝对路径或者dmserver当前目录的dm.ini<br>dcr_ini            		如果使用css集群环境，指定dmdcr.ini文件路径<br>-noconsole         	以服务方式启动<br>mount              	配置方式启动<br>help               		打印帮助信息</p>
<p>解决方案可以通过dminit初始化创建实例，生成data文件<br>#执行如下命令<br>1、初始化</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">./dminit PATH=/opt/dmdba/dmdbms/<span class="keyword">data</span></span><br></pre></td></tr></table></figure>


<p>2、通过指定服务类型注册服务<br>2.1、dm_service_installer.sh所在路径，linux_银河麒麟_arm版本</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">/opt/dmdba/dmdbms/script/root/</span><br></pre></td></tr></table></figure>

<p>2.2、注册服务</p>
<p>进入对应脚本目录 </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/dmdba/dmdbms/script/root/</span><br></pre></td></tr></table></figure>

<p>执行命令</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">./dm_service_installer.sh  <span class="literal">-t</span> dmserver <span class="literal">-dm_ini</span> </span><br><span class="line"></span><br><span class="line">/opt/dmdba/dmdbms/<span class="keyword">data</span>/DAMENG/dm.ini <span class="literal">-p</span> DMSERVER</span><br></pre></td></tr></table></figure>


<p>3、通过服务脚本文件注册服务</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">./dm_service_installer.sh <span class="literal">-s</span> /opt/dmdba/dmdbms/bin/DmServiceDMSERVER</span><br></pre></td></tr></table></figure>

<p>4、通过命令启动服务</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">start</span> DmServiceDMSERVER</span><br></pre></td></tr></table></figure>


<h2 id="九、手动注册服务（官方文档提供）"><a href="#九、手动注册服务（官方文档提供）" class="headerlink" title="九、手动注册服务（官方文档提供）"></a>九、手动注册服务（官方文档提供）</h2><p>以下步骤将以 Red Hat Enterprise Linux 6 for x86-64 系统为例，由于不同<br>操作系统系统命令不尽相同，具体步骤及操作请以本机系统为准，具体细节可向系统管理员<br>咨询。</p>
<p>1、拷贝服务模板文件（DmService）到系统服务目录（&#x2F;etc&#x2F;rc.d&#x2F;init.d），并将<br>新文件命名为 DmServiceDMSERVER。</p>
<p>init.d环境</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> /opt/dmdba/dmdbms/bin/service_template/DmService</span><br><span class="line">/etc/rc.d/init.d/DmServiceDMSERVER</span><br><span class="line"></span><br><span class="line">chmod <span class="number">755</span> /etc/rc.d/init.d/DmServiceDMSERVER</span><br></pre></td></tr></table></figure>

<p>2、修改服务脚本（&#x2F;etc&#x2F;rc.d&#x2F;init.d&#x2F;DmServiceDMSERVER）配置。<br>#修改 DmServiceDMSERVER<br>INI_PATH&#x3D;INI 路径</p>
<p>3、创建启动服务的连接</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">ln <span class="literal">-s</span> /etc/rc.d/init.d/DmServiceDMSERVER /etc/rc.d/rc0.d/K02DmServiceDMSERVER</span><br><span class="line">ln <span class="literal">-s</span> /etc/rc.d/init.d/DmServiceDMSERVER /etc/rc.d/rc1.d/K02DmServiceDMSERVER</span><br><span class="line">ln <span class="literal">-s</span> /etc/rc.d/init.d/DmServiceDMSERVER /etc/rc.d/rc2.d/S98DmServiceDMSERVER</span><br><span class="line">ln <span class="literal">-s</span> /etc/rc.d/init.d/DmServiceDMSERVER /etc/rc.d/rc3.d/S98DmServiceDMSERVER</span><br><span class="line">ln <span class="literal">-s</span> /etc/rc.d/init.d/DmServiceDMSERVER /etc/rc.d/rc4.d/S98DmServiceDMSERVER</span><br><span class="line">ln <span class="literal">-s</span> /etc/rc.d/init.d/DmServiceDMSERVER /etc/rc.d/rc5.d/S98DmServiceDMSERVER</span><br><span class="line">ln <span class="literal">-s</span> /etc/rc.d/init.d/DmServiceDMSERVER /etc/rc.d/rc6.d/K02DmServiceDMSERVER</span><br></pre></td></tr></table></figure>

<p>如果没有dm.ini文件,新建一份</p>
<p>4、启动与停止服务</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#停止服务</span></span><br><span class="line">service DmServiceDMSERVER stop</span><br></pre></td></tr></table></figure>

<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#启动服务</span></span><br><span class="line">service DmServiceDMSERVER <span class="built_in">start</span></span><br></pre></td></tr></table></figure>


<p>4.1、systemd 环境<br>以下步骤将以 Red Hat Enterprise Linux 7 for x86-64 系统为例，由于不同<br>操作系统系统命令不尽相同，具体步骤及操作请以本机系统为准，具体细节可向系统管理员<br>咨询。</p>
<p>4.2、拷贝服务模板文件（DmService）到目录（&#x2F;opt&#x2F;dmdbms&#x2F;bin），并将新文件命<br>名为 DmServiceDMSERVER。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> /opt/dmdba/dmdbms/bin/service_template/DmService</span><br><span class="line">/opt/dmdba/dmdbms/bin/DmServiceDMSERVER</span><br><span class="line"></span><br><span class="line">chmod <span class="number">755</span> /opt/dmdba/dmdbms/bin/DmServiceDMSERVER</span><br></pre></td></tr></table></figure>

<p>4.3、修改服务脚本（&#x2F;opt&#x2F;dmdbms&#x2F;bin&#x2F;DmServiceDMSERVER）配置<br>修改 DmServiceDMSERVER，手动指定dm.ini路径<br>INI_PATH&#x3D;INI 路径</p>
<p>4.4、创建系统服务配置文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/usr/lib/systemd/system/DmServiceDMSERVER.service</span><br></pre></td></tr></table></figure>

<p>文件内容，如下所示：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">[<span class="type">Unit</span>]</span><br><span class="line">Description=DmServiceDMSERVER</span><br><span class="line">[<span class="type">Service</span>]</span><br><span class="line"><span class="built_in">Type</span>=forking</span><br><span class="line">PIDFile=/opt/dmdba/dmdbms/bin/pids/DmServiceDMSERVER.pid</span><br><span class="line">ExecStart=/opt/dmdba/dmdbms/bin/DmServiceDMSERVER <span class="built_in">start</span></span><br><span class="line">ExecStop=/opt/dmdba/dmdbms/bin/DmServiceDMSERVER stop</span><br><span class="line">PrivateTmp=true</span><br><span class="line">[<span class="type">Install</span>]</span><br><span class="line">WantedBy=multi<span class="literal">-user</span>.target</span><br></pre></td></tr></table></figure>


<p>4.5、在使用服务前，需要启用服务。相关命令如下所示:</p>
<p>centos7版本开始推荐使用systemctl命令</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#启用服务，设置开机自弃</span></span><br><span class="line">systemctl enable DmServiceDMSERVER</span><br></pre></td></tr></table></figure>

<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#停止服务</span></span><br><span class="line">systemctl stop DmServiceDMSERVER</span><br></pre></td></tr></table></figure>

<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#启动服务</span></span><br><span class="line">systemctl <span class="built_in">start</span> DmServiceDMSERVER</span><br></pre></td></tr></table></figure>


<p>4.6、卸载服务<br>服务卸载脚本文件为 </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dm_service_uninstaller.sh</span><br></pre></td></tr></table></figure>

<p>用户可以使用服务卸载脚本<br>删除已经注册成操作系统服务的 DM 服务脚本，参数如下表：</p>
<p>4.7、删除服务参数<br>标志 参数  说明<br>-n 服务名  指定服务名，删除指定的操作系统随机启动服务<br>-h 帮助</p>
<p>使用方法：<br>操作之前，需要使用root系统用户登录或切换至root系统用户。<br>删除指定的操作系统服务。假设存在DM的操作系统随机启动服务</p>
<p>DmServiceDMSERVER，命令如下：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">./dm_service_uninstaller.sh <span class="literal">-n</span> DmServiceDMSERVER</span><br></pre></td></tr></table></figure>

<p>大部分是参考DM8官方文档进行操作的，安装后也会在部署的doc目录下生成相关文档。部署过两次，就将安装的过程记录下来，以备不时之需。</p>
<p>持续优化更新中…</p>
<h1 id="莫问收获，但问耕耘"><a href="#莫问收获，但问耕耘" class="headerlink" title="莫问收获，但问耕耘"></a>莫问收获，但问耕耘</h1><p>创作乐无边，学而思有境。好了，到此为止就是此篇文章的全部内容了，<strong>能看到这里的都是帅哥靓妹啊</strong>！！！善于总结，其乐不穷。<strong>好记性不如烂笔头</strong>，多收集自己第一次尝试的成果，收获也颇丰。</p>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>达梦</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux是什么？</title>
    <url>/2023/03/14/Linux%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F/</url>
    <content><![CDATA[<p><strong>Linux内核官网</strong>：<span class="exturl" data-url="aHR0cHM6Ly93d3cua2VybmVsLm9yZy8=">https://www.kernel.org/<i class="fa fa-external-link-alt"></i></span></p>
<p>一腔热血，亦或是兴趣使然，Linus开发了Linux系统。</p>
<p>这里在谈Linux系统时，加了发行版三个字，避免歧义和误解。一般情况，谈Linux其实是指Linux发行版，而实际Linux是基于内核开发的。</p>
<h3 id="Linux是什么"><a href="#Linux是什么" class="headerlink" title="Linux是什么"></a>Linux是什么</h3><p><strong>Linux是什么？</strong></p>
<p>答：Linux核心是内核。起源与MiniX有一定的联系，起初创始人Linus本人出于个人兴趣爱好所开发，Linux应运而生，随后开源发展迅速。出发点是什么，貌似已经并不重要了，重要的是Linux对开源生态系统做出的卓越贡献，全球将近70%服务器使用Linux发行版，或许Linus本人也没想到开源后的Linux对如今服务器环境的巨大影响。</p>
<p>后来基于Linux内核开发的发行版本如雨后春笋，最为突出的是Redhat（有企业服务支撑）系列以及无企业服务支撑的Centos作用于服务器操作系统，以稳定著称，社区活跃，文档丰富。</p>
<p><strong>注意：centos Linux8 于2021年12月31日停止更新维护，centos Linux7计划于2024年6月30日停止更新维护。</strong></p>
<p><strong>Linux发行版是什么？</strong></p>
<p>答：基于Linux内核开发发行的版本统称。</p>
<p>例如：</p>
<ul>
<li>RHEL系列：Fedora、Redhat、Centos、Rocky。</li>
<li>Debian系列：Debian、Ubuntu、kali。</li>
<li>SUSE、openSUSE。</li>
<li>Arch、mandriva、Gentoo、turbolinux等等。</li>
</ul>
<p>Redhat官网：<span class="exturl" data-url="aHR0cHM6Ly93d3cucmVkaGF0LmNvbS96aA==">https://www.redhat.com/zh<i class="fa fa-external-link-alt"></i></span></p>
<p>centos Linux官网：<span class="exturl" data-url="aHR0cHM6Ly93d3cuY2VudG9zLm9yZy8=">https://www.centos.org/<i class="fa fa-external-link-alt"></i></span></p>
<p>Ubuntu官网：<span class="exturl" data-url="aHR0cHM6Ly91YnVudHUuY29tLw==">https://ubuntu.com/<i class="fa fa-external-link-alt"></i></span></p>
<p>rockylinux官网：<span class="exturl" data-url="aHR0cHM6Ly9yb2NreWxpbnV4Lm9yZy8=">https://rockylinux.org/<i class="fa fa-external-link-alt"></i></span></p>
<p>kali Linux官网： <span class="exturl" data-url="aHR0cHM6Ly93d3cua2FsaS5vcmcv">https://www.kali.org/<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>为什么市面上很多Linux教程基于Centos和Ubuntu？</strong></p>
<p>答：开源免费。Centos是开源免费并且几乎和Redhat同步更新（Redhat有企业服务支撑，收费），了解Centos可以很好地过渡到Redhat，并且作为服务器很稳定。</p>
<p>Ubuntu 也很受欢迎，早期桌面系统很出色，UI可以媲美macOS，近些年社区很活跃，服务器版本更新也很频繁，资源也不少。</p>
<p><strong>作为入门学习如何选择Linux发行版？</strong></p>
<p>多角度思考：假如某软件长期没有更新维护，你还会使用吗？不用立刻回答，或许有更好的替代品。</p>
<p>答：可以使用Centos7.x、Centos-stream或者Ubuntu亦或是Rocky，都可以。主要是：教程多，资源丰富，社区活跃，支持周期长。选择其中哪一个发行版都行，主要熟悉Linux基本命令和常用命令，其次熟悉基本权限，然后针对某一发行版熟悉软件包安装、更新以及监控。比如RHEL系列软件管理使用yum和dnf以及rpm命令，Debian系列则使用apt和deb、dpkg命令进行管理。</p>
<p><strong>为何要用Linux发行版作为服务器？</strong></p>
<p>答：Linux发行版操作系统作为服务器稳定节省资源，不易被攻击，换句话说攻击成本相对高一点。一般情况，服务器不会安装桌面系统，只保留字符命令行界面。但也有特殊情况，安装带有桌面的服务器，使用更为方便。</p>
<h3 id="kali-Linux"><a href="#kali-Linux" class="headerlink" title="kali Linux"></a>kali Linux</h3><p><strong>kali Linux有什么特色？</strong><br>答：一句话概括，渗透性测试最佳服务器Linux发行版。</p>
<p>以上总结，仅供参考！</p>
]]></content>
      <categories>
        <category>杂谈</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux服务器使用firewalld与iptables命令管理防火墙规则</title>
    <url>/2022/01/12/Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BD%BF%E7%94%A8firewalld%E5%92%8Ciptables/</url>
    <content><![CDATA[<p>Linux服务器使用 firewalld 与 iptables 命令管理防火墙规则：通俗来讲，用于管理开放相应端口，甚至可以通过管理工具进行限流。</p>
<p><strong>许多不了解的人，认为RHEL7中的防火墙从iptables变成了firewalld。其实不然，无论是iptables还是firewalld都无法提供防火墙功能。他们都只是linux系统中的一个防火墙管理工具，负责生成防火墙规则与内核模块netfilter进行“交流”，真正实现防火墙功能的是内核模块netfilter。</strong></p>
<p><img data-src="https://s1.ax1x.com/2023/04/04/pp448cq.png" alt="https://s1.ax1x.com/2023/04/04/pp448cq.png"></p>
<p>iptables与firewalld防火墙管理工具在linux发行版Redhat7系列使用较为广泛。UFW则是在linux发行版Ubuntu下进行管理防火墙的一款管理工具。在选用防火墙工具的时候，运维或者是开发人员往往会纠结使用哪个。这里给出建议，使用iptables工具管理就禁用firewalld，使用firewalld工具管理就禁用iptables，二者选其一即可，避免产生混乱。</p>
<p>此篇文章不会在原理上做深究，主要以实用性为主，原理可以阅读相关书籍慢慢品味。</p>
<h2 id="一、Netfilter内核模块"><a href="#一、Netfilter内核模块" class="headerlink" title="一、Netfilter内核模块"></a>一、Netfilter内核模块</h2><p>无论是使用<code>iptables</code>还是<code>firewalld</code>，不妨先了解一下<strong>Netfilter内核模块</strong>。</p>
<p><strong>什么是Netfilter</strong>：linux操作系统核心层内部的一个数据包处理模块。</p>
<p><strong>Hook point</strong>：数据包在Netfilter中的挂载点。（PRE_ROUTING INPUT OUTPUT FORWORD POST_ROUTING）</p>
<h3 id="1、netfilter的体系结构"><a href="#1、netfilter的体系结构" class="headerlink" title="1、netfilter的体系结构"></a>1、netfilter的体系结构</h3><p>网络数据包的的统信主要通过以下相关步骤，对应netfilter定义的钩子函数，具体可以参考源码介绍。</p>
<ul>
<li><p><strong>NF_IP_PRE_ROUTING</strong>：</p>
<p>网络数据包进入系统，经过简单检测后，数据包转交给改函数进行处理，然后根据系统设置的规则对数据包进行处理，如果数据包不被丢弃则交给路由函数进行处理。<strong>在该函数中可以替换IP包的目的地址，及DNAT</strong>。</p>
</li>
<li><p>NF_IP_LOCAL_IN：</p>
<p>所有发送给本机的数据包都要通过该函数进行处理，该函数根据系统设置的系统规则对数据包进行处理，如果数据包不被丢弃则交给本地的应用程序。</p>
</li>
<li><p>NF_IP_FORWARD：</p>
<p>所有不是发送给本机的数据包都要通过该函数进行处理，该函数会根据系统设置的规则对数据包进行处理，如数据包不被丢弃则转给</p>
<p>NF_IP_POST_ROUTING处理。</p>
</li>
<li><p>NF_IP_LOCAL_OUT：</p>
<p>所有从本地应用程序出来的数据包必须通过该函数进行处理，该函数会根据系统设置的规则对数据包进行处理，如数据包不被丢弃则交给路由函数进行处理。</p>
</li>
<li><p><strong>NF_IP_POST_ROUTING</strong>：</p>
<p>所有数据包在发送给其它主机之前需要通过该函数进行处理，该函数会根据系统设置的规则对数据包进行处理，如数据包不被丢弃，将数据包发给数据链路层。<strong>在该函数中可以替换IP包的源地址，即SNAT</strong>。</p>
</li>
</ul>
<p>数据包通过linux防火墙的处理过程如下图：</p>
<p><img data-src="https://s1.ax1x.com/2023/04/04/pp448cq.png" alt="https://s1.ax1x.com/2023/04/04/pp448cq.png"></p>
<h3 id="2、包过滤"><a href="#2、包过滤" class="headerlink" title="2、包过滤"></a>2、包过滤</h3><p>每个函数都可以对数据包进行处理，最基本的操作是对数据包进行过滤。系统管理员可以通过iptables工具来向内核模块注册多个过滤规则，并且指明过滤规则的优先权。设置完以后每个钩子按照规则进行匹配。如果规则匹配，函数就会进行一些过滤操作，这些操作主要如下：</p>
<ul>
<li>NF_ACCEPT：继续正常的传递包。</li>
<li>NF_DROP：丢弃包，阻止传送。</li>
<li>SF_STOLEN：已经接管了包，不需要继续传送。</li>
<li>NF_QUEUE：排列包。</li>
<li>NF_REPEAT：再次使用钩子。</li>
</ul>
<p>篇幅受限，介绍过多反而不好。关于包过滤就介绍这么多。</p>
<h2 id="二、firewalld防火墙工具"><a href="#二、firewalld防火墙工具" class="headerlink" title="二、firewalld防火墙工具"></a>二、firewalld防火墙工具</h2><p>以Redhat系列为例子做简单的介绍，熟悉CentOS的基本上可以套用。</p>
<p><strong>firewalld简介</strong></p>
<p>在RHEL7之前的版本中，iptables和ip6tables作为防火墙配置管理工具。在RHEL7中防火墙管理工具变成了firewalld，它是一个支持自定义网络区域（zone）及接口安全等级的动态防火墙管理工具。利用firewalld，用户可以实现许多强大的网络功能，例如防火墙、代理服务器以及网络地址转换。</p>
<p>之前版本的system-config-firewall和lokkit防火墙模型是静态的，每次修改防火墙规则都需要完全重启。在此过程中包括提供防火墙的内核模块netfilter需要卸载和重新加载。而卸载会破坏已建立的连接和状态防火墙。与之前的静态模型有区别，firewalld将动态地管理防火墙，不需要重新启动防火墙，也不需重新加载内核模块。但firewalld服务要求所有关于防火墙的变更都要通过守护进程来完成，从而确保守护进程中的状态与内核防火墙之间的一致性。</p>
<p><strong>许多不了解的人，认为RHEL7中的防火墙从iptables变成了firewalld。其实不然，无论是iptables还是firewalld都无法提供防火墙功能。他们都只是linux系统中的一个防火墙管理工具，负责生成防火墙规则与内核模块netfilter进行“交流”，真正实现防火墙功能的是内核模块netfilter。</strong></p>
<p>firewalld提供了两种管理模式：其一是firewall-cmd命令管理工具，其二是firewall-config图形化管理工具。在之前版本中的iptables将规则保存在文件&#x2F;etc&#x2F;sysconfig&#x2F;iptables中，现在firewalld将配置文件保存在&#x2F;usr&#x2F;lib&#x2F;firewalld和&#x2F;etc&#x2F;firewalld目录的xml文件中。</p>
<p>虽然RHEL7中将默认的防火墙管理工具从iptables换成了firewalld，但在RHEL7中仍然可以使用iptables的，只需要通过yum命令进行安装启用iptables服务即可。换句话说，红帽将这个选择权交给了用户。</p>
<p>下面给出RHEL7的防火墙堆栈：</p>
<p><img data-src="https://s1.ax1x.com/2023/04/04/pp44mB8.png" alt="https://s1.ax1x.com/2023/04/04/pp44mB8.png"></p>
<h3 id="1、firewalld命令行模式"><a href="#1、firewalld命令行模式" class="headerlink" title="1、firewalld命令行模式"></a>1、firewalld命令行模式</h3><p><strong>区域选择</strong></p>
<p>当前操作系统安装完成后，防火墙会设置一个默认区域，将接口加入到默认区域中。用户配置防火墙的第一步是获取默认区域并修改，关于操作如下：</p>
<p>查看当前系统中所有区域</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">firewall-cmd --get-zones</span><br></pre></td></tr></table></figure>
<p>查看当前默认的区域</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">firewall-cmd --get-default-zone</span><br></pre></td></tr></table></figure>
<p>查看当前已激活的区域</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">firewall-cmd --get-active-zones</span><br></pre></td></tr></table></figure>
<p>获取接口ens33所属区域</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">firewall-cmd --get-zone-of-interface=ens33</span><br></pre></td></tr></table></figure>
<p>修改接口所属区域</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">firewall-cmd --permanent --zone=internal --change-interface=ens33</span><br></pre></td></tr></table></figure>



<p><strong>firewalld服务重载、重启、停止</strong></p>
<p>重新加载防火墙配置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure>

<p>重启防火墙(redhat系列)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart firewalld.service</span><br></pre></td></tr></table></figure>

<p>临时关闭防火墙</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl stop firewalld.service</span><br></pre></td></tr></table></figure>
<p>开机启用防火墙</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> firewalld.service</span><br></pre></td></tr></table></figure>
<p>开机禁止防火墙</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">disable</span> firewalld.service</span><br></pre></td></tr></table></figure>

<p>查看firewalld的运行状态</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">firewall-cmd --state</span><br></pre></td></tr></table></figure>



<p><strong>firewalld开放端口（public）</strong></p>
<p>公共区域设置开放21端口永久生效并写入配置文件（参数：–permanent）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#参数：--permanent，设置即立刻生效并且写入配置文件</span></span><br><span class="line">firewall-cmd --zone=public --add-port=21/tcp --permanent</span><br></pre></td></tr></table></figure>

<p>查询防火墙端口21是否开放</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">firewall-cmd --zone=public --query-port=21/tcp</span><br></pre></td></tr></table></figure>

<p>移除开放的端口21</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">firewall-cmd --zone=public --remove-port=21/tcp --permanent</span><br></pre></td></tr></table></figure>



<p><strong>区域规则修改</strong></p>
<p>查询防火墙规则列表</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">firewall-cmd --zone=public --list-all</span><br></pre></td></tr></table></figure>
<p>新增一条区域规则httpd服务</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">firewall-cmd --permanent --zone=internal --add-service=http</span><br></pre></td></tr></table></figure>
<p>验证规则</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">firewall-cmd  --zone=internal --list-all</span><br></pre></td></tr></table></figure>



<h3 id="2、firewalld图形化界面"><a href="#2、firewalld图形化界面" class="headerlink" title="2、firewalld图形化界面"></a>2、firewalld图形化界面</h3><p>上面的简介也介绍到了firewalld提供了两种管理模式：其一是<code>firewall-cmd</code>命令管理工具，其二是<code>firewall-config</code>图形化管理工具。在之前版本中的iptables将规则保存在文件<code>/etc/sysconfig/iptables</code>中，现在firewalld将配置文件保存在<code>/usr/lib/firewalld</code>和<code>/etc/firewalld</code>目录的xml文件中。</p>
<p>图形化界面中修改接口区域可以使用NetworkManager，也可以使用firewall-config工具。NetworkManager使用方法：打开终端执行命令<code>nm-connection-editor</code>，如下图弹出对话框：</p>
<p><img data-src="https://s1.ax1x.com/2023/04/04/pp44KAg.png"></p>
<p>2.1、图形化界面NetworkManager</p>
<p>终端执行：<code>nm-connection-editor</code></p>
<p>2.2、图形化界面firewall-config</p>
<p>终端执行：<code>firewall-config</code></p>
<p><img data-src="https://s1.ax1x.com/2023/04/04/pp44VjP.png"></p>
<h2 id="三、iptables防火墙工具"><a href="#三、iptables防火墙工具" class="headerlink" title="三、iptables防火墙工具"></a>三、iptables防火墙工具</h2><h3 id="1、安装iptables"><a href="#1、安装iptables" class="headerlink" title="1、安装iptables"></a>1、安装iptables</h3><p>假如是centos6，默认是安装了iptables。<br>如果是centos7或者Redhat7系列，默认没有安装iptables。你需要关闭默认启动的firewalld，二选一即可。</p>
<p>临时关闭firewalld</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl stop firewalld</span><br></pre></td></tr></table></figure>

<p><strong>开机禁用firewalld</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">disable</span> firewalld</span><br></pre></td></tr></table></figure>

<p>开机启用firewalld</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> firewalld</span><br></pre></td></tr></table></figure>



<p>通过yum在线安装iptables，检查是否安装了iptables</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl status iptables.service</span><br><span class="line">service iptables status</span><br></pre></td></tr></table></figure>

<p><strong>安装iptables</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install iptables</span><br></pre></td></tr></table></figure>

<p>升级iptables</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum update iptables</span><br></pre></td></tr></table></figure>

<p><strong>安装iptables-services</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install iptables-services.x86_64</span><br></pre></td></tr></table></figure>

<p><strong>设置iptables为开机自启</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> iptables.service</span><br></pre></td></tr></table></figure>

<p><strong>iptables规则组成</strong></p>
<ul>
<li>ACCEPT(接收，允许通过)</li>
<li>DROP(丢弃数据包不做任何反馈)</li>
<li>REJECT(丢弃数据包，客户端有对应消息返回)</li>
</ul>
<p><strong>查询已经设置的规则：-L命令</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#一般配合-n命令使用</span></span><br><span class="line">iptables -L</span><br><span class="line"><span class="comment">#不显示主机地址</span></span><br><span class="line">iptables -nL </span><br></pre></td></tr></table></figure>

<p><strong>清除原来设置的规则：-F命令</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iptables -F</span><br></pre></td></tr></table></figure>

<p><strong>删除某一条已经设置的规则：-D命令</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iptables -D INPUT -p tcp --dport 80 -j ACCEPT</span><br></pre></td></tr></table></figure>

<h3 id="2、应用场景"><a href="#2、应用场景" class="headerlink" title="2、应用场景"></a>2、应用场景</h3><p>插入一些规则：-I命令，<strong>放通80、22、10~21（一段）这些端口</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iptables -I INPUT -p tcp --dport 80 -j ACCEPT</span><br></pre></td></tr></table></figure>

<p><strong>设置某一个固定的IP访问80端口</strong>：-s 192.168.xxx.xxx</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iptables -I INPUT -p tcp -s (你的IP地址) --dport 80 -j ACCEPT</span><br></pre></td></tr></table></figure>

<p><strong>ssh远程连接本地服务器或者云服务器需要默认启用的端口</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iptables -I INPUT -p tcp --dport 22 -j ACCEPT</span><br></pre></td></tr></table></figure>

<p><strong>设置10~21端口开放访问</strong>  			 </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iptables -I INPUT -p tcp --dport 10:21 -j ACCEPT</span><br></pre></td></tr></table></figure>

<p><strong>设置icmp规则允许访问</strong>	</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iptables -I INPUT -p icmp -j ACCEPT</span><br></pre></td></tr></table></figure>

<p><strong>注意：允许本机可以访问本机，本机访问外网</strong><br>解决本机可以访问本机（telnet 127.0.0.1  22），添加-i lo（网卡）规则。</p>
<p>设置规则</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iptables -I INPUT -i lo -p tcp  -j ACCEPT</span><br></pre></td></tr></table></figure>

<p>本机测试访问外网</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl https://www.baidu.com</span><br></pre></td></tr></table></figure>

<p>设置规则</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iptables -I INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT</span><br></pre></td></tr></table></figure>

<p><strong>在设置的最后追加一条规则</strong>：-A命令<br>拒绝xx规则</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iptables -A INPUT -j REJECT</span><br></pre></td></tr></table></figure>

<p><strong>场景二</strong></p>
<p>ftp主动模式下iptables的规则配置（不建议）<br><strong>ftp被动模式下iptables的规则配置（实际应用，推荐）</strong></p>
<p><strong>场景三</strong></p>
<p>工作中的一些常用配置，设置好规则后保存到配置文件。chkconfig iptables on 设置开机启动规则。<br>snat（对原地址，发起地址）规则设置，dnat（目标地址，发往的地址）规则设置。</p>
<h3 id="3、iptables防攻击企业应用"><a href="#3、iptables防攻击企业应用" class="headerlink" title="3、iptables防攻击企业应用"></a>3、iptables防攻击企业应用</h3><p>iptables防攻击企业应用(根据实际业务设置)</p>
<ol>
<li>利用iptables防CC攻击</li>
<li>connlimit模块</li>
<li>作用：用于限制每一个客户端IP的并发连接数。</li>
<li>参数： <code>--connlimit-above n</code>（次数），限制并发数</li>
</ol>
<p>例如，限制次数为100</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iptables -I INPUT -p tcp --syn --dport 80 -m connlimit --connlimit-above 100 -j REJECT</span><br></pre></td></tr></table></figure>

<p>测试，限制某一固定IP并发次数</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iptables -I INPUT -p tcp --dport 80 -s [ip地址] -m connlimit --connlimit-above 10 -j REJECT</span><br></pre></td></tr></table></figure>

<h3 id="4、limit模块"><a href="#4、limit模块" class="headerlink" title="4、limit模块"></a>4、limit模块</h3><p><strong>作用：</strong> 限速，控制流量<br>例如</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iptable -A INPUT -m <span class="built_in">limit</span> --<span class="built_in">limit</span> 3/hour</span><br></pre></td></tr></table></figure>
<p>–limit-burst 5，默认值为5</p>
<p>在设置最后追加一条过滤规则</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iptables -A INPUT -p icmp -m <span class="built_in">limit</span> --<span class="built_in">limit</span> 1/m --limit-burst 10 -j ACCEPT </span><br></pre></td></tr></table></figure>

<p>拒绝其它规则访问</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iptables -A INPUT -p icmp -j DROP</span><br></pre></td></tr></table></figure>

<p>设置完，测试接限制的IP地址：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#测试受限IP地址</span></span><br><span class="line">ping 192.168.245.139</span><br></pre></td></tr></table></figure>



<h3 id="5、配置文件新增规则"><a href="#5、配置文件新增规则" class="headerlink" title="5、配置文件新增规则"></a>5、配置文件新增规则</h3><p>文中介绍过iptables安装后的配置文件所在目录。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/etc/sysconfig/iptables</span><br></pre></td></tr></table></figure>


<p>修改配置文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim  /etc/sysconfig/iptables</span><br></pre></td></tr></table></figure>

<p><img data-src="https://s1.ax1x.com/2023/04/04/pp44nHS.png"></p>
<h2 id="四、UFW防火墙工具"><a href="#四、UFW防火墙工具" class="headerlink" title="四、UFW防火墙工具"></a>四、UFW防火墙工具</h2><blockquote>
<p>Uncomplicated Firewall</p>
<p>简称UFW，是Ubuntu系统上默认的防火墙组件。UFW是为轻量化配置iptables而开发的一款工具。<br>UFW 提供一个非常友好的界面用于创建基于IPV4，IPV6的防火墙规则。UFW 在 Ubuntu 8.04 LTS 后的所有发行版中默认可用。<br>UFW 的图形用户界面叫Gufw。</p>
</blockquote>
<h3 id="开启与关闭防火墙"><a href="#开启与关闭防火墙" class="headerlink" title="开启与关闭防火墙"></a>开启与关闭防火墙</h3><p>开启防火墙</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ufw <span class="built_in">enable</span></span><br></pre></td></tr></table></figure>

<p>关闭防火墙</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ufw <span class="built_in">disable</span></span><br></pre></td></tr></table></figure>
<p>2、显示防火墙状态</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ufw status</span><br></pre></td></tr></table></figure>

<p>3、查看防火墙详细状态</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ufw status verbose</span><br></pre></td></tr></table></figure>

<p>4、允许与阻止</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ufw allow</span><br></pre></td></tr></table></figure>

<p>5、允许通过 21 连接端口使用 tcp 和 udp 协议连线本机</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ufw allow 21</span><br></pre></td></tr></table></figure>

<p>6、增加一条表示阻止的规则</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ufw deny</span><br></pre></td></tr></table></figure>
<p>阻止通过 21 连接端口使用 tcp 协议连线本机</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ufw deny 21/tcp</span><br></pre></td></tr></table></figure>

<p>7、增加一条表示拒绝的规则</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ufw reject</span><br></pre></td></tr></table></figure>

<p>8、以服务名称代表连接端口，可以采用</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">less /etc/services</span><br></pre></td></tr></table></figure>

<p>——END——</p>
]]></content>
      <categories>
        <category>开发运维</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux服务器vsftpd安装与配置</title>
    <url>/2022/01/05/Linux%E6%9C%8D%E5%8A%A1%E5%99%A8vsftpd%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本文，主要以vsftp软件为主进行讲解，版本为3.0.2。以介绍设置虚拟用户、权限验证为主，linux权限知识默认大家都有所了解。vsftpd设置有两种模式：主动模式、被动模式。</p>
<p>Linux网络文件共享。例如NFS、Sambs、FTP，其中以FTP应用最为广泛，成为了当下linux文件系统中主流的网络文件共享工具。介绍FTP主要有几种常见的工具vsftp、proftp、wu-ftp、pureftp，各种FTP软件无优劣之分，实际工作中选择自己熟悉的一款即可。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/fb197ba8c54400818254253c8c0c1f6e.png"></p>
<h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="一、vsftp安装"><a href="#一、vsftp安装" class="headerlink" title="一、vsftp安装"></a>一、vsftp安装</h2><p>注意：以Redhat7系列（或者支持systemd环境的linux系统）</p>
<p>1、准备安装包</p>
<p>可以到此网站下载各个版本：<span class="exturl" data-url="aHR0cDovL3d3dy5ycG1maW5kLm5ldC9saW51eC9ycG0yaHRtbC9zZWFyY2gucGhwP3F1ZXJ5PXZzZnRwZA==">http://www.rpmfind.net/linux/rpm2html/search.php?query=vsftpd<i class="fa fa-external-link-alt"></i></span></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vsftpd-3.0.2-29.el7_9.x86_64.rpm</span><br></pre></td></tr></table></figure>

<p>2、安装</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rpm -ivh vsftpd-3.0.2-29.el7_9.x86_64.rpm</span><br></pre></td></tr></table></figure>

<p>查询是否安装</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rpm -qa | grep vsftpd</span><br></pre></td></tr></table></figure>

<h2 id="二、启动与停止"><a href="#二、启动与停止" class="headerlink" title="二、启动与停止"></a>二、启动与停止</h2><h3 id="1、设置开启自启"><a href="#1、设置开启自启" class="headerlink" title="1、设置开启自启"></a>1、设置开启自启</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> vsftpd.service</span><br></pre></td></tr></table></figure>

<h3 id="2、启动vsftpd服务"><a href="#2、启动vsftpd服务" class="headerlink" title="2、启动vsftpd服务"></a>2、启动vsftpd服务</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl start vsftpd.service</span><br></pre></td></tr></table></figure>

<h3 id="3、查看vsftpd服务状态"><a href="#3、查看vsftpd服务状态" class="headerlink" title="3、查看vsftpd服务状态"></a>3、查看vsftpd服务状态</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl status vsftpd.service</span><br></pre></td></tr></table></figure>

<h3 id="4、查看vsftpd进程"><a href="#4、查看vsftpd进程" class="headerlink" title="4、查看vsftpd进程"></a>4、查看vsftpd进程</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ps -ef | grep vsftpd</span><br><span class="line"><span class="comment">#或者</span></span><br><span class="line">ps -aux | grep vsftpd</span><br></pre></td></tr></table></figure>





<h2 id="三、错误排查"><a href="#三、错误排查" class="headerlink" title="三、错误排查"></a>三、错误排查</h2><h3 id="1、通过Git-Bash验证ftp登录"><a href="#1、通过Git-Bash验证ftp登录" class="headerlink" title="1、通过Git Bash验证ftp登录"></a>1、通过Git Bash验证ftp登录</h3><p>在本机会提示没有ftp命令，直接就在远端测试连接。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">ftp remote_ip</span><br></pre></td></tr></table></figure>



<h3 id="2、排查错误"><a href="#2、排查错误" class="headerlink" title="2、排查错误"></a>2、排查错误</h3><p>其实翻译一下就知道了，chroot配置没有写入的权限。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">OOPS: vsftpd: refusing to run with writable root inside <span class="built_in">chroot</span>()</span><br><span class="line">Login failed.</span><br></pre></td></tr></table></figure>



<h3 id="3、在vsftpd-conf加入如下配置"><a href="#3、在vsftpd-conf加入如下配置" class="headerlink" title="3、在vsftpd.conf加入如下配置"></a>3、在vsftpd.conf加入如下配置</h3><p>后续的版本更新了，需要手动加上allow_writeable_chroot&#x3D;YES参数配置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">allow_writeable_chroot=YES</span><br></pre></td></tr></table></figure>



<h3 id="4、重启vsftpd服务（Redhat7系列）"><a href="#4、重启vsftpd服务（Redhat7系列）" class="headerlink" title="4、重启vsftpd服务（Redhat7系列）"></a>4、重启vsftpd服务（Redhat7系列）</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart vsftpd.service</span><br></pre></td></tr></table></figure>



<h2 id="四、优化设置"><a href="#四、优化设置" class="headerlink" title="四、优化设置"></a>四、优化设置</h2><h3 id="1、设置防火墙规则"><a href="#1、设置防火墙规则" class="headerlink" title="1、设置防火墙规则"></a>1、设置防火墙规则</h3><p>关于防火墙的设置，可以参考我的历史文章（在站内搜索firewalld与iptables）</p>
<p>重启测试vsftpd上传文件，默认存储路径为该用户的home目录下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#例如</span></span><br><span class="line">/home/vsftpd/test</span><br></pre></td></tr></table></figure>

<p>如需更改配置，如下设置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">local_root=/var/ftp/pub</span><br></pre></td></tr></table></figure>

<p>防火墙加入ftp服务</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-service=ftp --permanent</span><br></pre></td></tr></table></figure>

<p>主动模式，防火墙开启20、21端口</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=21/tcp --permanent </span><br><span class="line">firewall-cmd --zone=public --add-port=20/tcp --permanent</span><br></pre></td></tr></table></figure>



<p>设置当前ftp存储目录用户权限、chroot_list文件配置用户登录、设置虚拟用户。</p>
<p><strong>注意：在Windows资源管理访问，网络共享中心-&gt;Internet属性-&gt;高级，开启被动访问ftp（开启兼容模式）</strong></p>
<h3 id="2、设置selinux"><a href="#2、设置selinux" class="headerlink" title="2、设置selinux"></a>2、设置selinux</h3><p>1、设置SELinux为宽容模式或者临时关闭</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#临时改成宽容模式</span></span><br><span class="line">setenforce 0</span><br><span class="line"><span class="comment">#查看selinux</span></span><br><span class="line">[root@dywangk <span class="built_in">test</span>]<span class="comment"># getenforce</span></span><br><span class="line">Permissive</span><br></pre></td></tr></table></figure>

<p>2、永久设置selinux，修改配置文件<code>/etc/sysconfig/selinux</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#查看，默认配置文件是开启的</span></span><br><span class="line"><span class="built_in">cat</span> /etc/sysconfig/selinux</span><br><span class="line">SELINUX=enforcing</span><br><span class="line"><span class="comment">#禁用selinux</span></span><br><span class="line">SELINUX=<span class="built_in">disable</span></span><br><span class="line"><span class="comment">#宽容模式</span></span><br><span class="line">SELINUX=Permissive</span><br></pre></td></tr></table></figure>



<h2 id="五、配置参考"><a href="#五、配置参考" class="headerlink" title="五、配置参考"></a>五、配置参考</h2><h3 id="1、示例配置虚拟用户"><a href="#1、示例配置虚拟用户" class="headerlink" title="1、示例配置虚拟用户"></a>1、示例配置虚拟用户</h3><p>编辑配置文件<code>vim  /etc/vsftpd/vsftpd.conf</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Example config file /etc/vsftpd/vsftpd.conf</span></span><br><span class="line"><span class="comment">#绑定本机IP</span></span><br><span class="line">listen_address=192.168.245.134</span><br><span class="line"><span class="comment">#禁止匿名用户登录</span></span><br><span class="line">anonymous_enable=NO</span><br><span class="line"><span class="comment">#允许本地用户访问</span></span><br><span class="line">local_enable=YES</span><br><span class="line"><span class="comment">#开启写入权限</span></span><br><span class="line">write_enable=YES</span><br><span class="line"><span class="comment">#在后续比较高的版本中需要加入允许chroot写的权限</span></span><br><span class="line">allow_writeable_chroot=YES</span><br><span class="line"><span class="comment">#上传文件后默认权限掩码</span></span><br><span class="line">local_umask=022</span><br><span class="line"><span class="comment">#默认不开放匿名用户上传权限</span></span><br><span class="line"><span class="comment">#anon_upload_enable=YES</span></span><br><span class="line"><span class="comment">#默认不开放匿名用户创建于写的权限</span></span><br><span class="line"><span class="comment">#anon_mkdir_write_enable=YES</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">dirmessage_enable=YES</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Activate logging of uploads/downloads.</span></span><br><span class="line">xferlog_enable=YES</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Make sure PORT transfer connections originate from port 20 (ftp-data).</span></span><br><span class="line"><span class="comment">#默认为FTP主动模式，需要开启防火墙20、21端口</span></span><br><span class="line">connect_from_port_20=YES</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#chown_uploads=YES</span></span><br><span class="line"><span class="comment">#chown_username=whoever</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#xferlog_file=/var/log/xferlog</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">xferlog_std_format=YES</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#idle_session_timeout=600</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#data_connection_timeout=120</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#nopriv_user=ftpsecure</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#async_abor_enable=YES</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#ascii_upload_enable=YES</span></span><br><span class="line"><span class="comment">#ascii_download_enable=YES</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#ftpd_banner=Welcome to blah FTP service.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#deny_email_enable=YES</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#banned_email_file=/etc/vsftpd/banned_emails</span></span><br><span class="line"><span class="comment">#禁止FTP用户离开自己的主目录</span></span><br><span class="line">chroot_local_user=YES</span><br><span class="line">chroot_list_enable=NO</span><br><span class="line"><span class="comment"># (default follows)</span></span><br><span class="line"><span class="comment">#虚拟用户列表，设置默认允许登录FTP的用户，每行一个用户</span></span><br><span class="line">chroot_list_file=/etc/vsftpd/chroot_list</span><br><span class="line"><span class="comment">#开启虚拟用户功能</span></span><br><span class="line">guest_enable=YES</span><br><span class="line"><span class="comment">#虚拟用户宿主目录</span></span><br><span class="line">guest_username=ftp</span><br><span class="line"><span class="comment">#用户登录后操作主目录和本地用户具有同样的权限</span></span><br><span class="line">virtual_use_local_privs=YES</span><br><span class="line"><span class="comment">#虚拟用户主目录配置文件</span></span><br><span class="line">user_config_dir=/etc/vsftpd/vconf</span><br><span class="line"></span><br><span class="line"><span class="comment">#ls_recurse_enable=YES</span></span><br><span class="line"><span class="comment">#开启监听,开启ipv4就禁用listen_ipv6</span></span><br><span class="line">listen=YES</span><br><span class="line"><span class="comment">#</span></span><br><span class="line">listen_ipv6=NO</span><br><span class="line"><span class="comment">#权限验证需要的加密文件</span></span><br><span class="line">pam_service_name=vsftpd.vu</span><br><span class="line"><span class="comment">#pam_service_name=vsftpd</span></span><br><span class="line">userlist_enable=YES</span><br><span class="line">tcp_wrappers=YES</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p>在&#x2F;etc&#x2F;vsftpd&#x2F;chroot_list加入虚拟用户user1和user2。这里直接用vim编辑是一样的加入配置，每行对应一个用户。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;user1&#x27;</span> &gt;&gt; /etc/vsftpd/chroot_list</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;user2&#x27;</span> &gt;&gt; /etc/vsftpd/chroot_list</span><br></pre></td></tr></table></figure>



<h3 id="2、新增用户并指定目录"><a href="#2、新增用户并指定目录" class="headerlink" title="2、新增用户并指定目录"></a>2、新增用户并指定目录</h3><p>建议：linux下赋予权限底线，<strong>在最小权限范围内满足需求即可</strong>。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#创建虚拟用户目录</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /data/&#123;user1,user2&#125;</span><br><span class="line"><span class="comment">#赋予权限，测试直接赋予最高权限了，实际工作中建议在最小权限范围内满足即可。</span></span><br><span class="line"><span class="built_in">chmod</span> -R 777 /data/user1 </span><br><span class="line"><span class="built_in">chmod</span> -R 777 /data/user2</span><br></pre></td></tr></table></figure>



<h3 id="3、设置用户名密码数据库"><a href="#3、设置用户名密码数据库" class="headerlink" title="3、设置用户名密码数据库"></a>3、设置用户名密码数据库</h3><p>下面使用的\n并非错误输入，是的，就是正常的换行。熟悉编程的小伙伴应该不陌生，在Java语言的打印输出大家应该有印象吧！</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">test</span>&#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String args)</span>&#123;</span><br><span class="line">		system.out.println(<span class="string">&quot;hello world!!!&quot;</span>);    </span><br><span class="line">	&#125;       </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>在虚拟用户存储用户名以及密码</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#用vusers.list来区分本机用户与虚拟用户配置</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;user1\n123456\nuser2\n123456&quot;</span> &gt; /etc/vsftpd/vusers.list</span><br><span class="line"><span class="comment">#切换到vsftpd配置目录</span></span><br><span class="line"><span class="built_in">cd</span> /etc/vsftpd/</span><br><span class="line"><span class="comment">#解析vusers.list到vusers.db</span></span><br><span class="line">db_load -T -t <span class="built_in">hash</span> -f vusers.list vusers.db</span><br><span class="line"><span class="comment">#赋予权限</span></span><br><span class="line"><span class="built_in">chmod</span> 600 vusers.*</span><br></pre></td></tr></table></figure>



<h3 id="4、指定认证方式"><a href="#4、指定认证方式" class="headerlink" title="4、指定认证方式"></a>4、指定认证方式</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;#%PAM-1.0\n\nauth required pam_userdb.so db=/etc/vsftpd/vusers\naccount required  pam_userdb.so db=/etc/vsftpd/vusers&quot;</span> &gt; /etc/pam.d/vsftpd.vu</span><br><span class="line"><span class="comment">#创建虚拟配置文件目录</span></span><br><span class="line"><span class="built_in">mkdir</span> /etc/vsftpd/vconf</span><br><span class="line"><span class="comment">#进入虚拟用户配置文件目录</span></span><br><span class="line"><span class="built_in">cd</span> vconf/</span><br><span class="line"><span class="comment">#新增配置</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;local_root=/data/user1&#x27;</span> &gt; user1</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;local_root=/data/user2&#x27;</span> &gt; user2</span><br><span class="line"><span class="comment">#查看配置</span></span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line">user1 user2</span><br><span class="line"><span class="comment">#查看user1与user2的主目录</span></span><br><span class="line"><span class="built_in">cat</span> user1</span><br><span class="line">local_root=/data/user1</span><br><span class="line"><span class="built_in">cat</span> user2</span><br><span class="line">local_root=/data/user2</span><br><span class="line"></span><br><span class="line"><span class="comment">#新建测试文件</span></span><br><span class="line"><span class="built_in">touch</span> /data/user1/test1</span><br><span class="line"><span class="built_in">touch</span> /data/user2/test2</span><br></pre></td></tr></table></figure>

<p>如果没有指定虚拟用户的ftp目录，默认访问目录如下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/var/ftp/pub/</span><br></pre></td></tr></table></figure>

<p>经过测试设置的虚拟用户user2禁锢在了<code>/data/user2</code> 目录下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#在Windows下访问到新增的test1、test2文件，如果没变过来多刷新几遍</span></span><br><span class="line">/data/user1/test1</span><br><span class="line">/data/user2/test2</span><br></pre></td></tr></table></figure>



<h3 id="5、ftp命令登录验证"><a href="#5、ftp命令登录验证" class="headerlink" title="5、ftp命令登录验证"></a>5、ftp命令登录验证</h3><p>Git Bash验证</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">ftp remote_ip</span><br></pre></td></tr></table></figure>

<p>或者在资源管理验证测试新增、删除、修改。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">ftp://remote_ip</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>开发运维</category>
      </categories>
      <tags>
        <tag>vsftpd</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux系统配置静态ip地址</title>
    <url>/2021/09/06/Linux%E7%B3%BB%E7%BB%9F%E9%85%8D%E7%BD%AE%E9%9D%99%E6%80%81ip%E5%9C%B0%E5%9D%80/</url>
    <content><![CDATA[<p>默认情况下，无论是Windows还是linux，一般为动态获取IP地址以及DNS。日常工作中，推荐配置静态IP地址。本文将教你如何在linux下配置IP地址。</p>
<h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><p>基于Redhat系列，使用Centos7进行讲解。</p>
<p>磁盘相关的管理命令，可以参考菜鸟教程<br><span class="exturl" data-url="aHR0cHM6Ly93d3cucnVub29iLmNvbS8=">https://www.runoob.com/<i class="fa fa-external-link-alt"></i></span>（服务端-&gt;linux-&gt;linux命令大全）</p>
<h2 id="一、设置静态IP"><a href="#一、设置静态IP" class="headerlink" title="一、设置静态IP"></a>一、设置静态IP</h2><p>在Linux服务器网卡配置文件中新增如下配置</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">IPADDR=<span class="number">192.168</span>.<span class="number">245.130</span>  <span class="comment">#静态ip地址</span></span><br><span class="line">NETMASK=<span class="number">255.225</span>.<span class="number">225.0</span>   <span class="comment">#子网掩码</span></span><br><span class="line">GATEWAY=<span class="number">192.168</span>.<span class="number">245.2</span>   <span class="comment">#网关地址</span></span><br><span class="line">DNS1=<span class="number">114.114</span>.<span class="number">114.114</span>    <span class="comment">#配置DNS 可配置多个DNS</span></span><br></pre></td></tr></table></figure>

<h3 id="1、Centos6设置静态IP"><a href="#1、Centos6设置静态IP" class="headerlink" title="1、Centos6设置静态IP"></a>1、Centos6设置静态IP</h3><p>修改网卡if-eth0，个人使用虚拟机测试。</p>
<p>使用cat命令只查看ifcfg-eth0网卡配置文件</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#使用cat命令只查看ifcfg-eth0网卡配置文件</span></span><br><span class="line"><span class="built_in">cat</span> /etc/sysconfig/network<span class="literal">-scripts</span>/ifcfg<span class="literal">-eth0</span></span><br></pre></td></tr></table></figure>
<p><strong>使用vim命令修改编辑</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#使用vim命令修改编辑</span></span><br><span class="line">vim /etc/sysconfig/network<span class="literal">-scripts</span>/ifcfg<span class="literal">-eth0</span></span><br></pre></td></tr></table></figure>
<p><strong>配置文件内容</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#配置文件内容</span></span><br><span class="line">DEVICE=eth0</span><br><span class="line">HWADDR=<span class="number">00</span>:<span class="number">0</span>C:<span class="number">29</span>:<span class="number">66</span>:<span class="number">15</span>:<span class="number">29</span></span><br><span class="line"><span class="built_in">TYPE</span>=Ethernet</span><br><span class="line">UUID=c805e85a<span class="literal">-aa4e-4e35-9eaa-9fb4457c4568</span></span><br><span class="line">ONBOOT=yes <span class="comment">#设置为yes，重启系统，可以用ifconfig查看ip在哪个网段</span></span><br><span class="line">NM_CONTROLLED=yes</span><br><span class="line">BOOTPROTO=<span class="keyword">static</span> <span class="comment">#设置为静态static，动态则为dhcp</span></span><br><span class="line">IPADDR=<span class="number">192.168</span>.<span class="number">245.130</span> <span class="comment">#静态ip地址</span></span><br><span class="line">NETMASK=<span class="number">255.225</span>.<span class="number">225.0</span> <span class="comment">#子网掩码</span></span><br><span class="line">GATEWAY=<span class="number">192.168</span>.<span class="number">245.2</span> <span class="comment">#网关地址</span></span><br><span class="line">DNS1=<span class="number">114.114</span>.<span class="number">114.114</span> <span class="comment">#配置DNS</span></span><br><span class="line">DNS2=<span class="number">8.8</span>.<span class="number">8.8</span></span><br></pre></td></tr></table></figure>


<h3 id="2、Centos7设置静态IP"><a href="#2、Centos7设置静态IP" class="headerlink" title="2、Centos7设置静态IP"></a>2、Centos7设置静态IP</h3><p>修改网卡配置文件if-ens33</p>
<p>使用vim命令修改编辑</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#使用vim命令修改编辑</span></span><br><span class="line">vim /etc/sysconfig/network<span class="literal">-scripts</span>/<span class="keyword">if</span><span class="literal">-ens33</span></span><br></pre></td></tr></table></figure>
<p><strong>配置文件内容</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#配置文件内容 </span></span><br><span class="line"><span class="built_in">TYPE</span>=Ethernet</span><br><span class="line">BOOTPROTO=<span class="keyword">static</span></span><br><span class="line">DEFROUTE=yes</span><br><span class="line">PEERDNS=yes</span><br><span class="line">PEERROUTES=yes</span><br><span class="line">IPV4_FAILURE_FATAL=no</span><br><span class="line">IPV6INIT=yes</span><br><span class="line">IPV6_AUTOCONF=yes</span><br><span class="line">IPV6_DEFROUTE=yes</span><br><span class="line">IPV6_PEERDNS=yes</span><br><span class="line">IPV6_PEERROUTES=yes</span><br><span class="line">IPV6_FAILURE_FATAL=no</span><br><span class="line">IPV6_ADDR_GEN_MODE=stable<span class="literal">-privacy</span></span><br><span class="line">NAME=ens33</span><br><span class="line">UUID=<span class="number">8</span>a75b801<span class="literal">-6f56-48e6-b351-50620a66a1a3</span></span><br><span class="line">DEVICE=ens33</span><br><span class="line">ONBOOT=yes</span><br><span class="line">IPADDR=<span class="number">192.168</span>.<span class="number">245.129</span></span><br><span class="line">NETMASK=<span class="number">255.225</span>.<span class="number">225.0</span></span><br><span class="line">GATEWAY=<span class="number">192.168</span>.<span class="number">245.2</span></span><br><span class="line">DNS1=<span class="number">114.114</span>.<span class="number">114.114</span></span><br><span class="line">ZONE=public </span><br></pre></td></tr></table></figure>


<h3 id="3、修改完重启网卡生效"><a href="#3、修改完重启网卡生效" class="headerlink" title="3、修改完重启网卡生效"></a>3、修改完重启网卡生效</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#centos6</span></span><br><span class="line">service network restart</span><br></pre></td></tr></table></figure>

<p>centos7使用systemctl，同样在redhat系列可以使用service命令</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">systemctl restart network</span><br></pre></td></tr></table></figure>


<p>顺带讲一下相关知识点。这里是区分源码包和rpm包，根据安装位置不同，以及启动方式略微不同来区分，不然容易混淆。</p>
<p><strong>这里介绍一个检测开机自启的命令，以nginx中间件为例子</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">chkconfig <span class="literal">-list</span></span><br></pre></td></tr></table></figure>

<p><strong>设置服务自启</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">chkconfig <span class="literal">-list</span> <span class="number">2345</span> nginx on</span><br></pre></td></tr></table></figure>

<p><strong>查询nginx服务启动</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ps</span> <span class="literal">-aux</span> | grep nginx</span><br></pre></td></tr></table></figure>

<p><strong>查询nginx的端口号监听</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">netstat <span class="literal">-tlunp</span> | grep nginx</span><br></pre></td></tr></table></figure>



<p><strong>linux下（通用方式）是使用绝对路径找到服务然后启动</strong><br>例如：启动源码包安装的nginx</p>
<p>绝对路径</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">/usr/local/nginx/sbin/nginx</span><br></pre></td></tr></table></figure>

<p>重新加载配置文件</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">/usr/local/nginx/sbin/nginx  <span class="literal">-s</span> reload</span><br></pre></td></tr></table></figure>

<p>测试配置文件</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">/usr/local/nginx/sbin/nginx <span class="literal">-t</span></span><br></pre></td></tr></table></figure>

<p>停止服务</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">/usr/local/nginx/sbin/nginx <span class="literal">-s</span> stop</span><br></pre></td></tr></table></figure>



<h3 id="4、测试访问外网"><a href="#4、测试访问外网" class="headerlink" title="4、测试访问外网"></a>4、测试访问外网</h3><p>ping命令的其它带参数使用，参考ping -help，或者使用man命令去查看学习。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#ping接参数，ping 5次</span></span><br><span class="line">ping baidu.com <span class="literal">-c</span> <span class="number">5</span></span><br></pre></td></tr></table></figure>

<p>接收数据成功，证明配置完好。</p>
<p>当然还有fping以及hping可以去官网找相关的源码包安装<br>这里讲到源码包安装，源码包目录有configure文件<br>一般三大步骤：<br>01、 .&#x2F;configure<br>02、 make<br>03、 make install</p>
<h2 id="二、优化篇"><a href="#二、优化篇" class="headerlink" title="二、优化篇"></a>二、优化篇</h2><h3 id="1、配置阿里源"><a href="#1、配置阿里源" class="headerlink" title="1、配置阿里源"></a>1、配置阿里源</h3><p>阿里源链接</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">http://mirrors.aliyun.com/repo/</span><br></pre></td></tr></table></figure>

<p>修改使其失效</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mv</span> /etc/yum.repos.d/CentOS<span class="literal">-Base</span>.repo /etc/yum.repos.d/CentOS<span class="literal">-Base</span>.repo.bak</span><br></pre></td></tr></table></figure>

<h3 id="2、安装wget命令"><a href="#2、安装wget命令" class="headerlink" title="2、安装wget命令"></a>2、安装wget命令</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">yum <span class="literal">-y</span> install <span class="built_in">wget</span></span><br></pre></td></tr></table></figure>

<p>下载阿里云的repo，替换掉原来的repo。<strong>替换之前做好备份</strong>。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">wget</span> <span class="literal">-O</span> /etc/yum.repos.d/CentOS<span class="literal">-Base</span>.repo http://mirrors.aliyun.com/repo/Centos<span class="literal">-7</span>.repo</span><br></pre></td></tr></table></figure>


<h3 id="3、清除缓存，生成新的缓存"><a href="#3、清除缓存，生成新的缓存" class="headerlink" title="3、清除缓存，生成新的缓存"></a>3、清除缓存，生成新的缓存</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">yum clean all </span><br><span class="line">yum makecache</span><br></pre></td></tr></table></figure>

<h3 id="4、firewalld火墙工具"><a href="#4、firewalld火墙工具" class="headerlink" title="4、firewalld火墙工具"></a>4、firewalld火墙工具</h3><p>firewalld和iptables启用其中一个就行。</p>
<p>查看防火墙状态</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">systemctl status firewalld.service</span><br></pre></td></tr></table></figure>

<p>临时关闭防火墙</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">systemctl stop firewalld.service</span><br></pre></td></tr></table></figure>

<p>开机禁止防火墙</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">systemctl disable firewalld.service</span><br></pre></td></tr></table></figure>


<h3 id="5、安装并配置启用iptables"><a href="#5、安装并配置启用iptables" class="headerlink" title="5、安装并配置启用iptables"></a>5、安装并配置启用iptables</h3><p>安装iptables</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">yum <span class="literal">-y</span> install iptables<span class="literal">-services</span>.x86_64</span><br></pre></td></tr></table></figure>
<p>启动iptable</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">start</span> iptables.service</span><br></pre></td></tr></table></figure>

<p>开机启用iptables</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">systemctl enable iptables.service</span><br></pre></td></tr></table></figure>



<h3 id="6、关闭selinux"><a href="#6、关闭selinux" class="headerlink" title="6、关闭selinux"></a>6、关闭selinux</h3><p>查看状态</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">getenforce</span><br></pre></td></tr></table></figure>

<p>临时关闭</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">setenforce <span class="number">0</span></span><br></pre></td></tr></table></figure>

<p>永久关闭<br>vim &#x2F;etc&#x2F;selinux&#x2F;config</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">selinux=disable;</span><br></pre></td></tr></table></figure>

<h3 id="7、htop工具"><a href="#7、htop工具" class="headerlink" title="7、htop工具"></a>7、htop工具</h3><p>htop工具下载地址<br><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2h0b3AtZGV2L2h0b3AvYXJjaGl2ZS9yZWZzL3RhZ3MvMy4wLjUudGFyLmd6">https://github.com/htop-dev/htop/archive/refs/tags/3.0.5.tar.gz<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>好记性不如烂笔头</strong>，积少成多，收获也颇丰。<strong>你会发现，自己的知识宝库越来越丰富</strong>。白嫖有瘾，原创不易！</p>
]]></content>
      <categories>
        <category>开发运维</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux配置全局与当前用户环境变量</title>
    <url>/2022/01/05/Linux%E9%85%8D%E7%BD%AE%E5%85%A8%E5%B1%80%E4%B8%8E%E5%BD%93%E5%89%8D%E7%94%A8%E6%88%B7%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/</url>
    <content><![CDATA[<p>今天这篇文章，讲解linux系统的全局环境变量以及当前用户环境变量的配置。</p>
<p>以前在没有遇到实际问题时，基本忽略掉思考，所有配置的环境变量都配成全局生效。这样是有弊端的，在某一次偶然的机会，我沉思的一小会，意识到全局环境变量与当前用户环境变量还是区分为好，不应一概而论。</p>
<p>直到后来我在linux服务器从Oracle11g过度到Oracle19c时。需要创建普通用户例如oracle才能安装，这时我才恍然大悟。这大概是linux操作系统的魅力所在。</p>
<p>当时遇到的国产银河麒麟操作系统，把不同用户权限区分的明明白白的，三权分立。管理员用户root、安全用户secure、普通用户user，三者之间均无法访问别人的home目录，这时我才明白原来那个root用户是假的。泾渭分明，这样做当然有优势。好处在于运维人员只需要分心维护管路员用户和安全用户。普通用户权限比较小，相对来说不会造成较为严重的后果。</p>
<h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><p>配置环境变量，并不一定需要非得配置成所有用全局的或者当前用户全局的。如果使用的中间件有配置文件，你甚至可以在当前的中间件配置文件中指定JDK安装的路径，我做测试时一般会这样配置，为了不干扰原有的环境配置而做出让步。这样会显得繁琐一些，配置全局则更为方便管理。</p>
<h2 id="一、配置全局环境变量"><a href="#一、配置全局环境变量" class="headerlink" title="一、配置全局环境变量"></a>一、配置全局环境变量</h2><h3 id="1、Redhat系列配置环境变量"><a href="#1、Redhat系列配置环境变量" class="headerlink" title="1、Redhat系列配置环境变量"></a>1、Redhat系列配置环境变量</h3><p>注意：<strong>需要root用户权限</strong>，才能编辑<code>/etc/profile</code>文件，默认配置如下图所示</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/bd1db81b028ca8354d6ae09175e5db32.png"></p>
<h4 id="1-1、永久生效"><a href="#1-1、永久生效" class="headerlink" title="1.1、永久生效"></a>1.1、永久生效</h4><p>1.1.1、配置全局环境变量，针对所有用户</p>
<p>首先需要切换到root用户模式，然后编辑全局系统环境变量配置文件，所有用户都生效，永久生效。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#切换到root用户下</span></span><br><span class="line">su root</span><br><span class="line"><span class="comment">#编辑全局系统环境变量存储配置文件，所有用户都生效，永久生效。</span></span><br><span class="line">vim /etc/profile</span><br></pre></td></tr></table></figure>
<p>例如加入配置文件，对应你安装JDK所在路径</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#例如加入JDK环境变量</span></span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/local/jdk1.8</span><br></pre></td></tr></table></figure>

<p><strong>1.2.1、source命令</strong></p>
<p>执行source命令读取并执行shell脚本配置文件，无需重启服务器。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#执行source命令使其生效</span></span><br><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure>


<h4 id="1-2、临时生效"><a href="#1-2、临时生效" class="headerlink" title="1.2、临时生效"></a>1.2、临时生效</h4><p>临时设置这种方式一般很少采取，大多数情况下都是直接编辑环境变量配置文件进行设置。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#例如配置ORACLE_HOME</span></span><br><span class="line">export ORACLE_HOME=<span class="variable">$ORACLE_BASE</span>/product/<span class="number">19</span>c/dbhome_1;</span><br></pre></td></tr></table></figure>



<h3 id="2、Ubuntu配置环境变量"><a href="#2、Ubuntu配置环境变量" class="headerlink" title="2、Ubuntu配置环境变量"></a>2、Ubuntu配置环境变量</h3><h4 id="2-1、永久生效"><a href="#2-1、永久生效" class="headerlink" title="2.1、永久生效"></a>2.1、永久生效</h4><p>2.1.1、全局环境变量，针对所有用户</p>
<p>首先需要切换到root用户模式，然后编辑全局系统环境变量配置文件，所有用户都生效，永久生效。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#切换到root用户下</span></span><br><span class="line">su root</span><br><span class="line"><span class="comment">#编辑全局系统环境变量存储配置文件，所有用户都生效，永久生效。</span></span><br><span class="line">vim /etc/profile</span><br></pre></td></tr></table></figure>

<p>2.1.2、当前用户环境变量</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#编辑当前用户环境变量</span></span><br><span class="line">vim .bashrc</span><br></pre></td></tr></table></figure>

<p>加入环境变量配置，这是以源码包安装<code>JDK</code>为例子</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#以最常见的JDK为例子,真实安装的JDK目录，一般源码包安装会这样设置</span></span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/local/java</span><br><span class="line"><span class="comment">#OPENJDK，一般情况下openjdk所在目录</span></span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/lib/jvm</span><br></pre></td></tr></table></figure>

<p>既然谈到了openjdk，我就简单的列举下<strong>Centos7.3默认安装openjdk的目录</strong>，如下图所示</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/2389802a83651e99409bd2802246b203.png"></p>
<p>如果你是开发人员，你可能还需要加入如下配置CLASS_PATH的配置，在lib目录下的dt.jar和tools.jar。在JDK5以后，貌似可以不用加此项，但是加了比较保险。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#CLASS_PATH的配置，在lib目录下的dt.jar和tools.jar</span></span><br><span class="line"><span class="built_in">export</span> CLASS_PATH=.:<span class="variable">$JAVA_HOME</span>/jre/lib/rt.jar:<span class="variable">$JAVA_HOME</span>/lib/dt.jar:<span class="variable">$JAVA_HOME</span>/lib/tools.jar</span><br></pre></td></tr></table></figure>

<p>最后配置PATH，找到bin目录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#PATH的设置，找到bin目录</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$JAVA_HOME</span>/bin</span><br></pre></td></tr></table></figure>

<h2 id="二、配置当前用户环境变量"><a href="#二、配置当前用户环境变量" class="headerlink" title="二、配置当前用户环境变量"></a>二、配置当前用户环境变量</h2><h3 id="1、切换到当前用户"><a href="#1、切换到当前用户" class="headerlink" title="1、切换到当前用户"></a>1、切换到当前用户</h3><h4 id="1-1、Redhat系列"><a href="#1-1、Redhat系列" class="headerlink" title="1.1、Redhat系列"></a>1.1、Redhat系列</h4><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#切换至当前用户的home目录</span></span><br><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line"><span class="comment">#编辑当前用户的系统环境变量</span></span><br><span class="line">vim .bash_profile </span><br></pre></td></tr></table></figure>

<h4 id="1-2、Ubuntu系列"><a href="#1-2、Ubuntu系列" class="headerlink" title="1.2、Ubuntu系列"></a>1.2、Ubuntu系列</h4><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#切换至当前用户的home目录</span></span><br><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line"><span class="comment">#编辑当前用户的系统环境变量</span></span><br><span class="line">vim .bashrc</span><br></pre></td></tr></table></figure>


<h3 id="2、Oracle为例配置环境变量"><a href="#2、Oracle为例配置环境变量" class="headerlink" title="2、Oracle为例配置环境变量"></a>2、Oracle为例配置环境变量</h3><p>下面列举的例子是新增了oracle用户，并且安装了oracle19c，然后配置oracle用户的环境变量。</p>
<h4 id="2-1、永久生效-1"><a href="#2-1、永久生效-1" class="headerlink" title="2.1、永久生效"></a>2.1、永久生效</h4><p>编辑当前用户的环境变量配置文件<code>.bash_profile</code> ，并加入如下配置，执行<code>source .bash_profile</code>生效。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#加入环境变量</span></span><br><span class="line">ORACLE_BASE=/opt/oracle;</span><br><span class="line">ORACLE_HOME=<span class="variable">$ORACLE_BASE</span>/product/19c/dbhome_1;</span><br><span class="line">PATH=<span class="variable">$ORACLE_HOME</span>/bin:<span class="variable">$PATH</span>;</span><br><span class="line">ORACLE_SID=ORCLCDB;</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> ORACLE_SID ORACLE_BASE ORACLE_HOME PATH</span><br></pre></td></tr></table></figure>



<h4 id="2-2、临时生效"><a href="#2-2、临时生效" class="headerlink" title="2.2、临时生效"></a>2.2、临时生效</h4><p>此方法在当前用户下配置环境变量只是临时生效，如果服务器不重启那可能一直有效。万一重启了，就失效了，相当于一次性的设置。建议在当前用户或者全局配置文件中写入相应的配置，效果更佳。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#例如配置ORACLE_HOME</span></span><br><span class="line"><span class="built_in">export</span> ORACLE_BASE=/opt/oracle;</span><br><span class="line"><span class="built_in">export</span> ORACLE_HOME=<span class="variable">$ORACLE_BASE</span>/product/19c/dbhome_1;</span><br></pre></td></tr></table></figure>

<p>相当于一次性的设置。建议在当前用户或者全局配置文件中写入相应的配置，效果更佳。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#例如配置ORACLE_HOME</span></span><br><span class="line"><span class="built_in">export</span> ORACLE_BASE=/opt/oracle;</span><br><span class="line"><span class="built_in">export</span> ORACLE_HOME=<span class="variable">$ORACLE_BASE</span>/product/19c/dbhome_1;</span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>开发运维</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux预防利用ssh暴力破解用户：过滤试图非法登录IP</title>
    <url>/2020/01/16/Linux%E9%A2%84%E9%98%B2%E5%88%A9%E7%94%A8ssh%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3%E7%94%A8%E6%88%B7%EF%BC%9A%E8%BF%87%E6%BB%A4%E8%AF%95%E5%9B%BE%E9%9D%9E%E6%B3%95%E7%99%BB%E5%BD%95IP/</url>
    <content><![CDATA[<p>之前买的腾讯云服务器，总是收到提醒被其它的<code>ip</code>攻击试图破解。实在是忍无可忍，自己在网上参考了一篇教程，就总结了下，防止<code>ssh</code>暴力破解<code>linux</code>用户，将试图入侵的ip达到一定次数就放入黑名单中。</p>
<p>分配文件基本权限时核心原则：<strong>在最小权限情况下能实现要求即可</strong>。</p>
<h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="一、通过awk命令记录黑名单"><a href="#一、通过awk命令记录黑名单" class="headerlink" title="一、通过awk命令记录黑名单"></a>一、通过awk命令记录黑名单</h2><p>awk命令的使用可以参考菜鸟教程，下面给出链接。</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cucnVub29iLmNvbS9saW51eC9saW51eC1jb21tLWF3ay5odG1s">https://www.runoob.com/linux/linux-comm-awk.html<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> /var/log/secure | awk <span class="string">&#x27;/Failed/&#123;print $(NF-3)&#125;&#x27;</span> | <span class="built_in">sort</span>|uniq <span class="literal">-c</span></span><br><span class="line">| awk <span class="string">&#x27;&#123;print $2&quot;=&quot;$1;&#125;&#x27;</span> &gt; /opt/black_ip/black.list</span><br></pre></td></tr></table></figure>

<h2 id="二、过滤出登录错误超过指定次数的ip"><a href="#二、过滤出登录错误超过指定次数的ip" class="headerlink" title="二、过滤出登录错误超过指定次数的ip"></a>二、过滤出登录错误超过指定次数的ip</h2><p>编辑脚本：<code>vim /usr/local/bin/secure_ssh.sh</code></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#! /bin/bash</span></span><br><span class="line"><span class="built_in">cat</span> /var/log/secure | awk <span class="string">&#x27;/Failed/&#123;print $(NF-3)&#125;&#x27;</span> | <span class="built_in">sort</span>|uniq <span class="literal">-c</span></span><br><span class="line">| awk <span class="string">&#x27;&#123;print $2&quot;=&quot;$1;&#125;&#x27;</span> &gt; /opt/black_ip/black.list</span><br><span class="line"><span class="comment"># DEFINE=1，代表你设置的允许尝试登录次数为1次，根据自己的需求设置</span></span><br><span class="line">DEFINE=<span class="string">&quot;1&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `cat /opt/black_ip/black.list`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">   IP=`echo <span class="variable">$i</span>|awk <span class="operator">-F</span>= <span class="string">&#x27;&#123;print $1&#125;&#x27;</span>` <span class="comment"># 过滤的ip地址</span></span><br><span class="line">   NUM=`echo <span class="variable">$i</span>|awk <span class="operator">-F</span>= <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>` <span class="comment"># 过滤的ip尝试登录的次数</span></span><br><span class="line">   <span class="keyword">if</span> [[ <span class="variable">$</span>&#123;<span class="type">NUM</span>&#125; -<span class="type">gt</span> <span class="variable">$</span>&#123;<span class="type">DEFINE</span>&#125; ]]; then</span><br><span class="line">        grep <span class="variable">$IP</span> /etc/hosts.deny &gt; /dev/null </span><br><span class="line">        <span class="keyword">if</span> [ <span class="variable">$</span>? -<span class="type">gt</span> <span class="number">0</span> ];then</span><br><span class="line">        	 <span class="comment"># 你可以把你常用的ip放入host.allow文件白名单，hosts.deny对应的就是黑名单</span></span><br><span class="line">             <span class="built_in">echo</span> <span class="string">&quot;sshd:<span class="variable">$IP:deny</span>&quot;</span> &gt;&gt; /etc/hosts.deny </span><br><span class="line">        fi</span><br><span class="line">    fi</span><br><span class="line">done</span><br></pre></td></tr></table></figure>
<p>思来想去还是加上一些注释，便于理解。</p>
<h2 id="三、赋予执行权限"><a href="#三、赋予执行权限" class="headerlink" title="三、赋予执行权限"></a>三、赋予执行权限</h2><p>权限目录的<strong>作用</strong></p>
<ul>
<li>r：查询目录下的文件（<code>ls</code>目命令） </li>
<li>w：修改目录的权限。例如：新建，删除，重命名，剪切，复制文件和目录（<code>touch，rm，mv，cp</code>）</li>
<li>x：进入目录（<code>cd</code>）</li>
</ul>
<p><code>chmod</code> 777（<strong>慎重赋予最高权限</strong>） 【文件】，这里就不详细讲基本权限了，后续会出相关的文章。<br>每一位对应的含义</p>
<ul>
<li>第1个7代表所有者</li>
<li>第2个7代表所属组</li>
<li>第3个7代表other</li>
</ul>
<p>使用<code>chmod 755 secure_ssh.sh</code> 命令赋予读与执行的权限。</p>
<p><strong>对文件来讲</strong>：最高权限为<code>x</code>（执行）</p>
<p><strong>对目录来讲</strong>：最高权限为<code>w</code>（写）</p>
<p>这里再啰嗦一遍，分配文件基本权限时核心原则：<strong>在最小权限情况下能实现要求即可</strong>。</p>
<h2 id="四、循环执行脚本"><a href="#四、循环执行脚本" class="headerlink" title="四、循环执行脚本"></a>四、循环执行脚本</h2><p>首先了解<code>*</code>代表的意义</p>
<p><code>* * * * *</code> 执行的任务 ，<code>&quot; * &quot;</code>的含义如下表所示：</p>
<table>
<thead>
<tr>
<th>内容</th>
<th>含义</th>
<th>范围</th>
</tr>
</thead>
<tbody><tr>
<td>第一个“ * ”号</td>
<td>一小时当中的第几分钟</td>
<td>0-59</td>
</tr>
<tr>
<td>第二个“ * ”号</td>
<td>一天当中的第几小时</td>
<td>0-23</td>
</tr>
<tr>
<td>第三个“ * ”号</td>
<td>一个月当中的第几天</td>
<td>1-31</td>
</tr>
<tr>
<td>第四个“ * ”号</td>
<td>一年当中的第几个月</td>
<td>1-12</td>
</tr>
<tr>
<td>第五个“ * ”号</td>
<td>一周当中的星期几</td>
<td>0-7（0和7都代表星期日）</td>
</tr>
</tbody></table>
<p><strong>再看看一些符号代表的含义</strong></p>
<ul>
<li>“ * ” ：代表任意时间 例如：第一个“ * ” 每分钟执行一次命令</li>
<li>“ ， ”：	代表不连续的时间 例如：“ 0  9，12，15  * *  *  命令” 每天的9:00,12:00,15:00都执行一次命令 </li>
<li>“ - “：	代表连续的时间范围 例如：“0 8 * * 1-6 命令” 每周一到周六的上午8点执行命令 </li>
<li>“ * &#x2F;n ”：代表每隔多久执行一次 例如：“*&#x2F;7 * * * *命令”  每隔7分钟执行一遍命令</li>
</ul>
<p><strong>设置每分钟执行一次</strong>：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">*/<span class="number">1</span> * * * *   /usr/local/bin/secure_ssh.sh</span><br></pre></td></tr></table></figure>

<p><strong>第一种方式</strong>：使用<code>crontab -e</code>设置循环执行脚本<br><code>crontab -e</code>，设置每隔1分钟执行一次</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">*/<span class="number">1</span> * * * *   /usr/local/bin/secure_ssh.sh</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>开发运维</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux服务器挂载硬盘详细教程</title>
    <url>/2021/09/09/Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%8C%82%E8%BD%BD%E7%A1%AC%E7%9B%98%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<p>Linux服务器挂载硬盘详细教程。</p>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本文将带来linux下的磁盘管理中的硬盘挂载，Linux操作系统挂载硬盘需要了解的一些知识。这可能是迄今为止介绍的最最最实用的linux硬盘挂载的文章了，比较详细。由于工作原因，平时使用的比较多。主要目的，只是想让更多人的了解到linux下挂载磁盘也不是那么困难。</p>
<p>有几种常见的文件系统，以前的老牌文件系统ext文件系统(ext2、ext3、ext4)。</p>
<p>在Redhat7系列还是推荐一款优秀的xfs文件系统，在性能上已经超越了ext文件系统。XFS文件系统是硅谷图形公司（Silicon Graphic Inc，简称SGI）开发的用于IRIX（一个Unix操作系统）的文件系统，后来将其移植到Linux操作系统上。XFS是一个高级日志文件系统，其优势是极具伸缩性，同样也极具健壮性。</p>
<p>还有一款btrfs（B-tree文件系统通常读作Buffer FS、Better FS、B-tree FS）文件系统同样很优秀，Redhat7安装就自带。<br>btrfs具有很多特性。例如：写快照、快照的快照、内建RAID（通常称为磁盘阵列）、子卷（subvolume），其最核心的理念是设计<br>容错、修复以及易于管理。btrfs最大容量卷为16EB，单个最大文件为16EB。</p>
<p>须知：本文全程使用的是安装选择语言是简体中文版的，所以看到的汉字显示，请不要惊讶。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/5324a76fbd054b60d2769434dc9ef136.png"></p>
<h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><p>开局一张图，文章全靠编。开个玩笑，纯属逗大家乐一乐。下面的图片，已经点明了本文的核心内容。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/06ab3c857d7db1c575a69bc7a1e2ab3c.png"></p>
<p><strong>建议：进行测试，可以使用虚拟机配合linux（Redhat系列或者Ubuntu搭建环境）测试</strong>。</p>
<h2 id="一、查看系统分区情况"><a href="#一、查看系统分区情况" class="headerlink" title="一、查看系统分区情况"></a>一、查看系统分区情况</h2><p>fdisk参数说明<br>删除存在的硬盘分区，此时会提示需要删除的序列号是哪一个。</p>
<ul>
<li><p>删除分区：d</p>
</li>
<li><p>新增分区：n</p>
</li>
<li><p>查看分区信息：p</p>
</li>
<li><p>保存分区变更信息：w</p>
</li>
<li><p>不保存并退出：q</p>
</li>
<li><p>获取帮助信息：m</p>
</li>
</ul>
<h3 id="1、列出分区表"><a href="#1、列出分区表" class="headerlink" title="1、列出分区表"></a>1、列出分区表</h3><p>列出分区表，从下面的列出的选项可以看出，原始的磁盘磁盘 &#x2F;dev&#x2F;sda：21.5 GB是初始安装linux操作系统就分配的。另外一块磁盘，是我新增的磁盘sdb用于测试演示。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">fidsk -l</span><br><span class="line">[root@cnwangk /]<span class="comment"># fdisk -l</span></span><br><span class="line"></span><br><span class="line">磁盘 /dev/sda：21.5 GB, 21474836480 字节，41943040 个扇区</span><br><span class="line">Units = 扇区 of 1 * 512 = 512 bytes</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class="line">磁盘标签类型：dos</span><br><span class="line">磁盘标识符：0x0001805e</span><br><span class="line"></span><br><span class="line">   设备 Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/sda1   *        2048      411647      204800   83  Linux</span><br><span class="line">/dev/sda2          411648     4507647     2048000   83  Linux</span><br><span class="line">/dev/sda3         4507648     8603647     2048000   82  Linux swap / Solaris</span><br><span class="line">/dev/sda4         8603648    41943039    16669696    5  Extended</span><br><span class="line">/dev/sda5         8605696    41943039    16668672   83  Linux</span><br><span class="line"></span><br><span class="line">磁盘 /dev/sdb：10.7 GB, 10737418240 字节，20971520 个扇区</span><br><span class="line">Units = 扇区 of 1 * 512 = 512 bytes</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class="line">磁盘标签类型：dos</span><br><span class="line">磁盘标识符：0x95df3b22</span><br><span class="line"></span><br><span class="line">   设备 Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/sdb2        10485760    20971519     5242880   83  Linux</span><br></pre></td></tr></table></figure>

<p>直接输入fdisk命令，中文版会提示帮助信息以及使用方法</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">fdisk [选项] &lt;磁盘&gt;    更改分区表</span><br><span class="line"><span class="comment">#例如新增的磁盘sdb</span></span><br><span class="line">fdisk /dev/sdb</span><br><span class="line">fdisk [选项] -l &lt;磁盘&gt; 列出分区表</span><br><span class="line">fdisk -s &lt;分区&gt;        给出分区大小(块数)</span><br></pre></td></tr></table></figure>



<h2 id="二、建立linux文件系统"><a href="#二、建立linux文件系统" class="headerlink" title="二、建立linux文件系统"></a>二、建立linux文件系统</h2><h3 id="1、xfs文件系统"><a href="#1、xfs文件系统" class="headerlink" title="1、xfs文件系统"></a>1、xfs文件系统</h3><p>如下所示，我将新建xfs文件系统，指向的是新增的一块磁盘文件路径&#x2F;dev&#x2F;sdb。同样也是Redhat7系列默认推荐的使用格式。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkfs.xfs  /dev/sdb </span><br></pre></td></tr></table></figure>

<p>做一个简单说明：xfs文件系统提供了备份分区工具xfsdump以供用户使用。优势在于用户不用借助第三方软件就可以实现对xfs文件系统上的数据实施备份。备份过程如下所示：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">xfsdump /backup/dump_sdc1 /sdc1</span><br></pre></td></tr></table></figure>

<h3 id="2、btrfs文件系统"><a href="#2、btrfs文件系统" class="headerlink" title="2、btrfs文件系统"></a>2、btrfs文件系统</h3><p>如下所示，我将新建btrfs文件系统，指向的是新增的一块磁盘文件路径&#x2F;dev&#x2F;sdb，下面最终演示的也是btrfs文件系统的配置。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkfs.btrfs /dev/sdb</span><br></pre></td></tr></table></figure>

<h3 id="3、ext文件系统"><a href="#3、ext文件系统" class="headerlink" title="3、ext文件系统"></a>3、ext文件系统</h3><p>在Redhat6以及之前，用的还是ext文件系统。后来到7系列推荐使用xfs文件系。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkfs.ext4 /dev/sdb</span><br></pre></td></tr></table></figure>



<h2 id="三、创建要挂载的路径"><a href="#三、创建要挂载的路径" class="headerlink" title="三、创建要挂载的路径"></a>三、创建要挂载的路径</h2><h3 id="1、创建挂载的文件data"><a href="#1、创建挂载的文件data" class="headerlink" title="1、创建挂载的文件data"></a>1、创建挂载的文件data</h3><p>使用mkdir命令创建data目录，用于后续挂载新增的磁盘。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /data</span><br></pre></td></tr></table></figure>

<p>查看创建好的挂载路径data，初始是空的</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ls</span> /data</span><br></pre></td></tr></table></figure>

<h3 id="2、使用磁盘"><a href="#2、使用磁盘" class="headerlink" title="2、使用磁盘"></a>2、使用磁盘</h3><p>写入一个简单<code>shell</code>的脚本作为演示</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;echo &quot;</span>hello linux<span class="string">&quot;\necho &quot;</span>create btrfs filesystem<span class="string">&quot;&quot;</span> &gt;&gt; /data/data.sh</span><br></pre></td></tr></table></figure>

<p>写入简单的shell脚本后，测试查看并执行这个脚本</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#再次查看data盘下的文件</span></span><br><span class="line">[root@cnwangk /]<span class="comment"># ls /data/</span></span><br><span class="line">data.sh</span><br><span class="line">sh /data/data.sh</span><br><span class="line"><span class="comment">#运行脚本</span></span><br><span class="line">[root@cnwangk /]<span class="comment"># sh /data/data.sh </span></span><br><span class="line">hello linux</span><br><span class="line">create btrfs filesystem</span><br></pre></td></tr></table></figure>

<p>从上面可以看出一个基本的磁盘的管理，会引出一些基本命令的使用，比如ls、mkdir、echo等等。本文的受众群体是需要掌握一些linux基本命令知识的。当然能看到本文的，也说明您还是有一些基础的。</p>
<h2 id="四、使用fdisk对-dev-sdb进行分区"><a href="#四、使用fdisk对-dev-sdb进行分区" class="headerlink" title="四、使用fdisk对&#x2F;dev&#x2F;sdb进行分区"></a>四、使用fdisk对&#x2F;dev&#x2F;sdb进行分区</h2><h3 id="1、分区命令fdisk"><a href="#1、分区命令fdisk" class="headerlink" title="1、分区命令fdisk"></a>1、分区命令fdisk</h3><p>使用fdisk对新增的磁盘&#x2F;dev&#x2F;sdb进行分区，之前演示我已经使用主分区2，现在演示是逻辑扩展分区，使用参数e。</p>
<ul>
<li>新增分区：n</li>
<li>新增主分区：p</li>
<li>扩展分区：e</li>
<li>注意：你可以自定义大小，也可以回车就是使用默认大小和扇区。</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">fdisk /dev/sdb</span><br><span class="line">[root@cnwangk /]<span class="comment"># fdisk /dev/sdb</span></span><br><span class="line">欢迎使用 fdisk (util-linux 2.23.2)。</span><br><span class="line"></span><br><span class="line">更改将停留在内存中，直到您决定将更改写入磁盘。</span><br><span class="line">使用写入命令前请三思。</span><br><span class="line"></span><br><span class="line">命令(输入 m 获取帮助)：n <span class="comment">#新增分区，p则为主分区，e则为扩展分区</span></span><br><span class="line">Partition <span class="built_in">type</span>:</span><br><span class="line">   p   primary (1 primary, 0 extended, 3 free)</span><br><span class="line">   e   extended</span><br><span class="line">Select (default p): e</span><br><span class="line">分区号 (1,3,4，默认 1)：1</span><br><span class="line">起始 扇区 (2048-20971519，默认为 2048)：</span><br><span class="line">将使用默认值 2048</span><br><span class="line">Last 扇区, +扇区 or +size&#123;K,M,G&#125; (2048-10485759，默认为 10485759)：</span><br><span class="line">将使用默认值 10485759</span><br><span class="line">分区 1 已设置为 Extended 类型，大小设为 5 GiB</span><br><span class="line"></span><br><span class="line">命令(输入 m 获取帮助)：p <span class="comment">#此时用参数p查看未保存的分区信息</span></span><br><span class="line"></span><br><span class="line">磁盘 /dev/sdb：10.7 GB, 10737418240 字节，20971520 个扇区</span><br><span class="line">Units = 扇区 of 1 * 512 = 512 bytes</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class="line">磁盘标签类型：dos</span><br><span class="line">磁盘标识符：0x95df3b22</span><br><span class="line"><span class="comment">#查看到新增分区的设备信息</span></span><br><span class="line">   设备 Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/sdb1            2048    10485759     5241856    5  Extended</span><br><span class="line">/dev/sdb2        10485760    20971519     5242880   83  Linux</span><br><span class="line"></span><br><span class="line">命令(输入 m 获取帮助)：w <span class="comment">#输入w参数进行保存，输入q进行不保存退出。</span></span><br><span class="line">The partition table has been altered!</span><br><span class="line"></span><br><span class="line">Calling ioctl() to re-read partition table.</span><br><span class="line"></span><br><span class="line">WARNING: Re-reading the partition table failed with error 16: 设备或资源忙.</span><br><span class="line">The kernel still uses the old table. The new table will be used at</span><br><span class="line">the next reboot or after you run partprobe(8) or kpartx(8)</span><br><span class="line">正在同步磁盘。</span><br></pre></td></tr></table></figure>



<h2 id="五、建立btrfs文件系统"><a href="#五、建立btrfs文件系统" class="headerlink" title="五、建立btrfs文件系统"></a>五、建立btrfs文件系统</h2><h3 id="1、建立文件系统"><a href="#1、建立文件系统" class="headerlink" title="1、建立文件系统"></a>1、建立文件系统</h3><p>新建btrfs文件系统，在确定进行分区之后执行此命令，最后进行挂载磁盘。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkfs.btrfs /dev/sdb2</span><br></pre></td></tr></table></figure>

<p>同样可以使用如下命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkfs -t btrfs /dev/sdb2</span><br></pre></td></tr></table></figure>



<h2 id="六、挂载文件系统"><a href="#六、挂载文件系统" class="headerlink" title="六、挂载文件系统"></a>六、挂载文件系统</h2><h3 id="1、挂载命令mount"><a href="#1、挂载命令mount" class="headerlink" title="1、挂载命令mount"></a>1、挂载命令mount</h3><p>接着上面建立好<code>btrfs</code>文件系统，此时再挂载到新建的data目录下。<strong>虽然是挂载成功了，但只是临时生效，重启会掉盘挂载后硬盘。而且卷标还会显示成字母加数字的一串长字符串，类似这种s1k544y55fsa445dda44sd4545eff4字符串</strong>。究其原因，Linux还是以文件系统为核心的。没有目录这个概念，只是方便大家理解，都习惯这样称呼。</p>
<p>1.1、使用<code>mount</code>挂载，看到的是sdb2，是因为之前已经创建了一个分区sdb1。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mount /dev/sdb2 /data</span><br></pre></td></tr></table></figure>

<p>1.2、使用umount卸载</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">umount /dev/sdb2 /data</span><br></pre></td></tr></table></figure>



<h3 id="2、写入fstab文件"><a href="#2、写入fstab文件" class="headerlink" title="2、写入fstab文件"></a>2、写入fstab文件</h3><p>2.1、<strong>永久生效需要写入&#x2F;etc&#x2F;fstab文件</strong>中，使用<code>echo</code>命令追加数据到fstab文件中。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#第一项参数/dev/sdb这里也可以写入UUID的信息</span></span><br><span class="line"><span class="comment">#	 第一项参数	 第二项参数	  第三项参数		第四项参数	第五项参数</span></span><br><span class="line"><span class="built_in">echo</span> /dev/sdb1    /data   	  btrfs    	  defaults     0 0  	&gt;&gt;  /etc/fstab</span><br><span class="line"><span class="built_in">echo</span> /dev/sdb2    /data   	  btrfs    	  defaults     0 0  	&gt;&gt;  /etc/fstab</span><br></pre></td></tr></table></figure>

<p>2.2、输入<code>blkid</code>命令查看卷标或者UUID</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># blkid命令</span></span><br><span class="line">[root@cnwangk /]<span class="comment"># blkid</span></span><br><span class="line">/dev/sda5: UUID=<span class="string">&quot;d4708f44-beed-4a9b-bb11-94706e6c0cf5&quot;</span> TYPE=<span class="string">&quot;xfs&quot;</span> </span><br><span class="line">/dev/sda1: UUID=<span class="string">&quot;7d56f743-a42d-42e2-876e-d839cc583fa7&quot;</span> TYPE=<span class="string">&quot;xfs&quot;</span> </span><br><span class="line">/dev/sda2: UUID=<span class="string">&quot;953b1070-a13a-4b67-ac63-cc376c1dee8d&quot;</span> TYPE=<span class="string">&quot;xfs&quot;</span> </span><br><span class="line">/dev/sda3: UUID=<span class="string">&quot;b075b6d0-4d37-4f18-ae59-bf380862b440&quot;</span> TYPE=<span class="string">&quot;swap&quot;</span> </span><br><span class="line">/dev/sdb2: UUID=<span class="string">&quot;294c0c25-04be-4791-ab06-520c4283cb58&quot;</span> UUID_SUB=<span class="string">&quot;a8b7194a-a694-4a8a-bee1-0ab49821e6bb&quot;</span> TYPE=<span class="string">&quot;btrfs&quot;</span> </span><br></pre></td></tr></table></figure>

<p>2.3、当然，你可以<strong>使用btrfs自带的命令查看磁盘文件的uuid</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@cnwangk /]<span class="comment"># btrfs filesystem show</span></span><br><span class="line">Label: none  uuid: 294c0c25-04be-4791-ab06-520c4283cb58</span><br><span class="line">        Total devices 1 FS bytes used 192.00KiB</span><br><span class="line">        devid    1 size 5.00GiB used 536.00MiB path /dev/sdb2</span><br></pre></td></tr></table></figure>



<h2 id="七、永久写入配置文件"><a href="#七、永久写入配置文件" class="headerlink" title="七、永久写入配置文件"></a>七、永久写入配置文件</h2><h3 id="1、配置文件fstab展示"><a href="#1、配置文件fstab展示" class="headerlink" title="1、配置文件fstab展示"></a>1、配置文件fstab展示</h3><p>注意：解决重启掉盘的问题。强调一点，<strong>一旦写入配置文件的参数出现错误异常，大概率导致服务器无法启动，所以修改时需谨慎操作</strong>。最好先做备份，再进行操作。</p>
<p>如下我的<code>/ect/fstab</code>配置文件内容，可以看到<code>/dev/sdb2</code>是我测试新增的一块盘进行分区后的配置，使用文件系统格式为<code>btrfs</code>。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># /etc/fstab</span></span><br><span class="line"><span class="comment"># Created by anaconda on Sun Jan  5 21:10:23 2020</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Accessible filesystems, by reference, are maintained under &#x27;/dev/disk&#x27;</span></span><br><span class="line"><span class="comment"># See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">UUID=d4708f44-beed-4a9b-bb11-94706e6c0cf5 /                       xfs     defaults        0 0</span><br><span class="line">UUID=7d56f743-a42d-42e2-876e-d839cc583fa7 /boot                   xfs     defaults        0 0</span><br><span class="line">UUID=953b1070-a13a-4b67-ac63-cc376c1dee8d /home                   xfs     defaults        0 0</span><br><span class="line">UUID=b075b6d0-4d37-4f18-ae59-bf380862b440 swap                    swap    defaults        0 0</span><br><span class="line">/dev/sdb2                                /data                    btrfs   defaults        0 0</span><br></pre></td></tr></table></figure>



<h3 id="2、部分参数详解"><a href="#2、部分参数详解" class="headerlink" title="2、部分参数详解"></a>2、部分参数详解</h3><p>写入卷标信息到<code>/etc/fstab</code>文件（<strong>Redhat7系列默认推荐格式为xfs</strong>，从我文中给出的展示就可看出）</p>
<ul>
<li>第一项参数：&#x2F;dev&#x2F;sdb1（原始磁盘分区路径）</li>
<li>第二项参数：&#x2F;data（新建的挂载磁盘文件路径，Linux核心是一个文件系统，所以说是文件路径）</li>
<li>第三项参数：btrfs（挂载磁盘文件系统格式）</li>
<li>第四项参数：defaults</li>
<li>第五项参数：0 0</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#第一项参数/dev/sdb这里也可以写入UUID的信息</span></span><br><span class="line"><span class="comment">#	 第一项参数	 第二项参数	  第三项参数		第四项参数	第五项参数</span></span><br><span class="line"><span class="built_in">echo</span> /dev/sdb1    /data   	  btrfs    	  defaults     0 0  	&gt;&gt;  /etc/fstab</span><br></pre></td></tr></table></figure>

<h3 id="3、修改配置文件"><a href="#3、修改配置文件" class="headerlink" title="3、修改配置文件"></a>3、修改配置文件</h3><p>可以直接编辑文件新增磁盘挂载信息：<code>vim /etc/fstab</code><br>写入到<code>/etc/fstab</code>配置文件，文件系统推荐xfs或者btrfs，具体视实际情况而定：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/dev/sdb2    /data     ext4    defaults    0 0</span><br><span class="line">/dev/sdb2    /data     xfs     defaults    0 0</span><br><span class="line">/dev/sdb2    /data     btrfs   defaults    0 0</span><br></pre></td></tr></table></figure>

<p><strong>重启生效</strong>：<code>reboot</code>  或者 <code>shutdown -r now</code></p>
<p><strong>验证挂载是否成功</strong>，此时重启系统后可以看到我的新挂载的磁盘&#x2F;dev&#x2F;sdb2已经生效了并写入了fstab配置文件。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">df</span> -h</span><br><span class="line">[root@cnwangk /]<span class="comment"># df -h</span></span><br><span class="line">文件系统        容量  已用  可用 已用% 挂载点</span><br><span class="line">devtmpfs        907M     0  907M    0% /dev</span><br><span class="line">tmpfs           917M     0  917M    0% /dev/shm</span><br><span class="line">tmpfs           917M  9.3M  908M    2% /run</span><br><span class="line">tmpfs           917M     0  917M    0% /sys/fs/cgroup</span><br><span class="line">/dev/sda5        16G  7.1G  8.9G   45% /</span><br><span class="line">/dev/sdb2       5.0G   17M  4.5G    1% /data</span><br><span class="line">/dev/sda2       2.0G   34M  2.0G    2% /home</span><br><span class="line">/dev/sda1       197M  154M   43M   79% /boot</span><br><span class="line">tmpfs           184M     0  184M    0% /run/user/0</span><br></pre></td></tr></table></figure>





<h2 id="八、磁盘管理"><a href="#八、磁盘管理" class="headerlink" title="八、磁盘管理"></a>八、磁盘管理</h2><p>其实，上面对硬盘进行分区已经使用到了磁盘管理命令格式化分区<code>mkfs</code>、分区<code>fdisk</code>，属于基本的磁盘管理。还有最常用的<code>df</code>，用来查看磁盘空间占用情况；<code>mount</code>与<code>umount</code>命令进行挂载与卸载磁盘。主要想引出的是如下的第三方ssm管理工具。</p>
<p>看到这个ssm不要与Javaweb中的框架组合ssm（Spring Springmvc Mybatis）混淆了。</p>
<h3 id="1、ssm管理工具"><a href="#1、ssm管理工具" class="headerlink" title="1、ssm管理工具"></a>1、ssm管理工具</h3><p>ssm（System Storage Manager）管理逻辑卷。默认没有安装，需要手动安装，下载rpm包或者直接yum源在线安装都行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#提供yum在线安装方式</span></span><br><span class="line">yum -y install system-storage-manager.noarch</span><br></pre></td></tr></table></figure>

<p>安装完后，如下<strong>使用ssm命令</strong>即可展示效果：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@cnwangk /]<span class="comment"># ssm list</span></span><br><span class="line">-----------------------------------------------------------------</span><br><span class="line">Device        Free       Used      Total  Pool        Mount point</span><br><span class="line">-----------------------------------------------------------------</span><br><span class="line">/dev/fd0                         4.00 KB                         </span><br><span class="line">/dev/sda                        20.00 GB                         </span><br><span class="line">/dev/sda1                      200.00 MB              /boot      </span><br><span class="line">/dev/sda2                        1.95 GB              /home      </span><br><span class="line">/dev/sda3                        1.95 GB              SWAP       </span><br><span class="line">/dev/sda4                        1.00 KB                         </span><br><span class="line">/dev/sda5                       15.90 GB              /          </span><br><span class="line">/dev/sdb                        10.00 GB                         </span><br><span class="line">/dev/sdb1                        1.00 MB                         </span><br><span class="line">/dev/sdb2  4.48 GB  536.00 MB    5.00 GB  btrfs_sdb2             </span><br><span class="line">-----------------------------------------------------------------</span><br><span class="line">-----------------------------------------------------</span><br><span class="line">Pool        Type   Devices     Free     Used    Total  </span><br><span class="line">-----------------------------------------------------</span><br><span class="line">btrfs_sdb2  btrfs  1        5.00 GB  5.00 GB  5.00 GB  </span><br><span class="line">-----------------------------------------------------</span><br><span class="line">-----------------------------------------------------------------------------------</span><br><span class="line">Volume      Pool        Volume size  FS       FS size      Free  Type   Mount point</span><br><span class="line">-----------------------------------------------------------------------------------</span><br><span class="line">btrfs_sdb2  btrfs_sdb2      5.00 GB  btrfs    5.00 GB   5.00 GB  btrfs  /data      </span><br><span class="line">/dev/sda1                 200.00 MB  xfs    196.66 MB  42.79 MB         /boot      </span><br><span class="line">/dev/sda2                   1.95 GB  xfs      1.94 GB   1.91 GB         /home      </span><br><span class="line">/dev/sda5                  15.90 GB  xfs     15.89 GB   8.87 GB         /          </span><br><span class="line">-----------------------------------------------------------------------------------</span><br></pre></td></tr></table></figure>



<h3 id="2、linux自带的磁盘命令"><a href="#2、linux自带的磁盘命令" class="headerlink" title="2、linux自带的磁盘命令"></a>2、linux自带的磁盘命令</h3><p>比如，查看磁盘空间状态，加上参数-h以（K、M、G）形式显示。虽然df可以以多种形式展示，但个人工作中最常用的，还是加上-h参数使用的最为频繁。下面以加上参数-h为例子进行展示：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">df</span> -h</span><br><span class="line">[root@cnwangk /]<span class="comment"># df -h</span></span><br><span class="line">文件系统        容量  已用  可用 已用% 挂载点</span><br><span class="line">devtmpfs        907M     0  907M    0% /dev</span><br><span class="line">tmpfs           917M     0  917M    0% /dev/shm</span><br><span class="line">tmpfs           917M  9.3M  908M    2% /run</span><br><span class="line">tmpfs           917M     0  917M    0% /sys/fs/cgroup</span><br><span class="line">/dev/sda5        16G  7.1G  8.9G   45% /</span><br><span class="line">/dev/sdb2       5.0G   17M  4.5G    1% /data</span><br><span class="line">/dev/sda2       2.0G   34M  2.0G    2% /home</span><br><span class="line">/dev/sda1       197M  154M   43M   79% /boot</span><br><span class="line">tmpfs           184M     0  184M    0% /run/user/0</span><br></pre></td></tr></table></figure>

<p>在df命令后加上-a参数，显示所有文件系统磁盘使用情况，这里就不贴输出的内容了，显示内容太长了。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">df</span> -ah</span><br></pre></td></tr></table></figure>

<p><strong>以上就是此次文章的所有内容的，希望能对你的工作有所帮助。感觉写的好，就拿出你的一键三连。如果感觉总结的不到位，也希望能留下您宝贵的意见，我会在文章中进行调整优化。</strong></p>
<p><strong>原创不易，转载也请标明出处，本文会不定期上传到gitee或者github以及VX公众平台。</strong></p>
<p>最后给出思维导图，凑合着看看吧，权当有个印象！</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/7a9b5700ab6514c606462bee53c1d837.png"></p>
]]></content>
      <categories>
        <category>开发运维</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL8.0.28安装教程全程参考MySQL官方文档</title>
    <url>/2022/01/31/MySQL8-0-28%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E5%85%A8%E7%A8%8B%E5%8F%82%E8%80%83MySQL%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3/</url>
    <content><![CDATA[<p><img data-src="https://s1.ax1x.com/2022/07/19/j7EO6s.png"></p>
<p>MySQL 文档整理合集（5.6、5.7、8.0、8.1、8.2、8.3）：</p>
<p>链接: <span class="exturl" data-url="aHR0cHM6Ly9wYW4uYmFpZHUuY29tL3MvMWpHa0dhcldaV1ZuelE5c28wRDhtYUE/cHdkPThrZmY=">https://pan.baidu.com/s/1jGkGarWZWVnzQ9so0D8maA?pwd=8kff<i class="fa fa-external-link-alt"></i></span> </p>
<p>提取码: 8kff </p>
<p><strong>阅读本篇博文与读者的约定</strong>：</p>
<ol>
<li>关于数据库（角色用户）需要开放哪些权限，需要根据职员的具体职责进行判断。</li>
<li>博文可能存在过时，仅供参考哟。</li>
</ol>
<hr>
<p>当你看到这篇教程时，MySQL 目前最新GA（稳定）版本可能已经更新到了 <span class="exturl" data-url="aHR0cHM6Ly9kZXYubXlzcWwuY29tL2Rvd25sb2Fkcy9teXNxbC8=">MySQL8.0.36<i class="fa fa-external-link-alt"></i></span> <strong>或者更高</strong>，<span class="exturl" data-url="aHR0cHM6Ly9kZXYubXlzcWwuY29tL2RvYy9yZWxub3Rlcy9teXNxbC84LjAvZW4vbmV3cy04LTAtMzYuaHRtbA==">MySQL 8.0 Release Notes Changes in MySQL 8.0.36 (2024-01-16, General Availability)<i class="fa fa-external-link-alt"></i></span>，<strong>创新版</strong> Innovation <span class="exturl" data-url="aHR0cHM6Ly9kZXYubXlzcWwuY29tL2RvYy9yZWxub3Rlcy9teXNxbC84LjMvZW4vbmV3cy04LTMtMC5odG1s">MySQL 8.3 Release Notes Changes in MySQL 8.3.0 (2024-01-16, Innovation Release)<i class="fa fa-external-link-alt"></i></span>。</p>
<p>MySQL 发行说明：<span class="exturl" data-url="aHR0cHM6Ly9kZXYubXlzcWwuY29tL2RvYy9yZWxub3Rlcy9teXNxbC84LjAvZW4v">https://dev.mysql.com/doc/relnotes/mysql/8.0/en/<i class="fa fa-external-link-alt"></i></span> 。</p>
<p><strong>注意</strong>：如果你想在 MySQL 官网获取 8.0.29 ，是找不到资源的。因为出现了重大问题，官网直接移除了下载资源。推荐跳过 MySQL 8.0.29，升级到更高的版本或者使用历史稳定版本。</p>
<blockquote>
<p>Important<br>This release is no longer available for download. It was removed due to a critical issue that could cause data in InnoDB<br>tables having added columns to be interpreted incorrectly. Please upgrade to MySQL 8.0.30 instead.</p>
</blockquote>
<p><strong>阅读本篇博文可以了解到哪些内容</strong>？MySQL8.0.28详细安装教程。Windows10 安装 MariaDB 与 MySQL8.0 同时共存，Linux发行版RHEL7系列安装MySQL8.0详细教程。Windows10下使用MSI文件安装MySQL8.0.28注意事项，多实例共存解决方法，MySQL官方示例库与文档地址。</p>
<p>如果对你有帮助，我很荣幸。如果有误导你的地方，我表示抱歉。所有总结仅供参考。</p>
<span id="more"></span>


<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><strong>MySQL8.0.28查看创建表语句</strong>：看到默认CHARSET&#x3D;utf8mb3。当时写这篇博客时，我以为是显示问题，没怎么在意，后来看了官网才知到。</p>
<p>通过下面这个链接可以看到MySQL8.0.29做了哪些改进：<br><span class="exturl" data-url="aHR0cHM6Ly9kZXYubXlzcWwuY29tL2RvYy9yZWxub3Rlcy9teXNxbC84LjAvZW4vbmV3cy04LTAtMjkuaHRtbCNteXNxbGQtOC0wLTI5LWJ1Zw==">https://dev.mysql.com/doc/relnotes/mysql/8.0/en/news-8-0-29.html#mysqld-8-0-29-bug<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>MySQL8.0.28</strong>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql&gt; show create table t\G</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">       Table: t</span><br><span class="line">Create Table: CREATE TABLE `t` (</span><br><span class="line">  `i` int DEFAULT NULL</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br></pre></td></tr></table></figure>



<p><strong>使用MySQL8.0.29对比</strong>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql&gt; create database <span class="built_in">test</span>;</span><br><span class="line">Query OK, 1 row affected (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; use <span class="built_in">test</span>;</span><br><span class="line">Database changed</span><br><span class="line">mysql&gt; create table t(<span class="built_in">id</span> int primary key,names varchar(64));</span><br><span class="line">Query OK, 0 rows affected (0.02 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; show create table t\G</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">       Table: t</span><br><span class="line">Create Table: CREATE TABLE `t` (</span><br><span class="line">  `<span class="built_in">id</span>` int NOT NULL,</span><br><span class="line">  `names` varchar(64) DEFAULT NULL,</span><br><span class="line">  PRIMARY KEY (`<span class="built_in">id</span>`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><img data-src="https://s1.ax1x.com/2023/04/04/pp5iLZT.png"></p>
<p>以目前（当时 2022-01-31）最新版本的 MySQL8.0.28 为示例进行安装与初步使用的详细讲解，面向初学者的详细教程。这也许是迄今为止全网最最最详细的 MySQL8.0.28 的安装与使用教程</p>
<p>温故而知新，可以为师矣。<strong>建议初学者多在命令行窗口下进行练习</strong>，熟能生巧。达到一定的熟练程度，再借助客户端工具提高我们的工作效率。最终目的是啥？活下去呗，提高捞金能力。当然开个玩笑，回到正题，接着往下看。</p>
<p><img data-src="https://s1.ax1x.com/2023/04/04/pp5FuQI.jpg"></p>
<p>从下载到安装，再到忘记密码解决方案。一步步使用命令行窗口学会基本操作，然后使用客户端远程连接工具。最后配合时下比较火热的Java 语言进行演示如何使用 JDBC 连接最新的 MySQL8.0 数据库，以及执行查询返回结果。</p>
<h1 id="MySQL8-0-28安装教程全程参考MySQL官方文档"><a href="#MySQL8-0-28安装教程全程参考MySQL官方文档" class="headerlink" title="MySQL8.0.28安装教程全程参考MySQL官方文档"></a>MySQL8.0.28安装教程全程参考MySQL官方文档</h1><p>咱也不多哔哔，直接上干货，要的就是实用性！</p>
<h2 id="一、MySQL8-0-28下载"><a href="#一、MySQL8-0-28下载" class="headerlink" title="一、MySQL8.0.28下载"></a>一、MySQL8.0.28下载</h2><p>你可以下载msi文件一键安装，也可以下载解压版zip文件（Archive）进行命令行初始化安装，也是个人推荐的方式。</p>
<p><strong>MySQL官网下载地址</strong></p>
<p><span class="exturl" data-url="aHR0cHM6Ly9kZXYubXlzcWwuY29tL2Rvd25sb2Fkcy9teXNxbC8=">https://dev.mysql.com/downloads/mysql/<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="1、Windows版本下载"><a href="#1、Windows版本下载" class="headerlink" title="1、Windows版本下载"></a>1、Windows版本下载</h3><p>在 Windows 下可以选择下载 msi 文件或者解压版 zip 文件。<strong>一般使用，选择我使用紫色框线选中的即可</strong>。</p>
<p>关于下面的 Debug Test Suite，是带有许多的测试套件在里面，对于有测试需求的人员可以进行下载。</p>
<p><img data-src="https://s1.ax1x.com/2023/04/04/pp5FVFe.jpg"></p>
<h3 id="2、Linux版本下载"><a href="#2、Linux版本下载" class="headerlink" title="2、Linux版本下载"></a>2、Linux版本下载</h3><p>根据自己需要的 Linux 发行版版本适配的 MySQL 进行选择。安装方式多种多样，二进制包（<strong>MySQL-*<em>$version*</em>-xx.tar.gz</strong> <strong>或者</strong> </p>
<p><strong>MySQL-$version-xx.tar.xz</strong>，打包成 tar 包然后压缩成 gz、xz 格式）、rpm包以及源码包（source）安装。选择你擅长一种方式即可，没必要纠结，但也要根据实际场景进行下载安装。</p>
<p><strong>tips：</strong> <code>$version</code> 换成具体版本，比如 8.0.28（2022-01-18 发行），或者换成彼时最新稳定版 8.0.36（2024-01-16 发行）。</p>
<p>比如，我个人选择的是自己比较熟悉的 RHEL7 （Centos7）系列进行下载。同样有 bundle 版本，包含了一些插件和依赖在里面，便于使用rpm包安装。安装单个的server服务，需要安装其它的依赖包比较繁琐。</p>
<p>对于初学者，<strong>建议直接使用官方提供的 yum 源或者其它源直接进行安装</strong>。</p>
<p>我偏不，就要折腾。那也行，请接着往下看，一样提供了详细安装步骤。</p>
<p><img data-src="https://s1.ax1x.com/2023/04/04/pp5FFeK.jpg"></p>
<h3 id="3、注意事项"><a href="#3、注意事项" class="headerlink" title="3、注意事项"></a>3、注意事项</h3><p>一般情况可能没仔细看，官方会提示登录，加了button按钮字体非常显眼，而下面的的我需要立即下载则字体很小。<strong>所以注意了，选择下面的No thanks，我需要立即下载</strong>。选择的是社区版本，免费提供下载。</p>
<p><img data-src="https://s1.ax1x.com/2023/04/04/pp5FZJH.jpg"></p>
<h3 id="4、快捷进入MySQL服务"><a href="#4、快捷进入MySQL服务" class="headerlink" title="4、快捷进入MySQL服务"></a>4、快捷进入MySQL服务</h3><p>提供一种思路，主要是为了方便，不管有没有配置环境变量，都可使用。仅仅是自己测试学习使用。</p>
<p>个人比较懒，直接在桌面新建一个 <code>start_mysql.bat</code> 文件将执行命令放入进入，双击即可进入。安装多种数据库环境：新建 bat 文件进行管理，放桌面比较方便。</p>
<p><strong>启动服务</strong>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line">d:</span><br><span class="line">D:\work\mysql-8.0.28-winx64\bin\mysqld --console</span><br></pre></td></tr></table></figure>

<p><strong>示例如下</strong>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"></span><br><span class="line">net start MySQL80</span><br><span class="line">netstat -ano | findstr 330</span><br><span class="line">d:</span><br><span class="line"><span class="built_in">cd</span> D:\work\mysql-8.0.28-winx64\bin</span><br><span class="line">mysql -uroot -p123456 -P 3306 </span><br></pre></td></tr></table></figure>






<h2 id="二、MySQL8-0安装"><a href="#二、MySQL8-0安装" class="headerlink" title="二、MySQL8.0安装"></a>二、MySQL8.0安装</h2><p><strong>关于MySQL8.0在各大平台安装教程</strong>，MySQL官方文档有很详细的使用说明可进行参考，<strong>第二章节讲解安装和升级MySQL</strong>。</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9kZXYubXlzcWwuY29tL2RvYy9yZWZtYW4vOC4wL2VuL3VwZ3JhZGluZy5odG1s">MySQL :: MySQL 8.0 Reference Manual :: 3 Upgrading MySQL<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9kZXYubXlzcWwuY29tL2RvYy9yZWZtYW4vOC4wL2VuL3dpbmRvd3MtaW5zdGFsbGF0aW9uLmh0bWw=">MySQL :: MySQL 8.0 Reference Manual :: 2.3 Installing MySQL on Microsoft Windows<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p>MySQL在Windows平台提供了多种安装形式：</p>
<ol>
<li>msi文件：直接双击进行安装，有可视化界面，安装较为容易，但不够灵活。</li>
<li>归档包（archive）：以zip格式进行压缩，类似于Linux中的二进制包。比较灵活，只需几个命令即可安装服务和实例化。</li>
<li>源码包（source package）：最灵活，可根据需求编译安装功能，难易度最高。</li>
<li>docker形式安装：其实是在容器中安装。</li>
</ol>
<p><strong>初学者尝鲜，建议在 Windows 下安装</strong>。接下来介绍的是归档包（archive）安装与使用。</p>
<p>一般情况，默认安装一个MySQL版本服务实例。也不排除预算有限，在同台服务器上安装多个实例进行测试。默认端口3306，如果在发布（生产）环境建议修改默认端口，达到不让别人一下就猜到的目的。接下来安装测试多个MySQL服务版本共存一个操作系统下，只针对于Windows下安装多个服务（没有使用虚拟机工具，真机环境下测试）。Linux下有便捷的yum源以及apt方式安装，一键安装所需依赖，但也有比较繁琐的rpm包安装。</p>
<h3 id="1、Windows下安装MySQL8-0（zip包）"><a href="#1、Windows下安装MySQL8-0（zip包）" class="headerlink" title="1、Windows下安装MySQL8.0（zip包）"></a>1、Windows下安装MySQL8.0（zip包）</h3><p>配置环境变量，编辑系统环境变量，控制面板&gt;所有控制面板项&gt;系统&gt;高级系统配置&gt;<strong>系统环境变量</strong>：</p>
<p><strong>注意</strong>：如果是 Windows10 或者 Windows11 ，直接将解压路径加入 PATH 环境变量即可。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#变量名</span></span><br><span class="line">MySQL_HOME</span><br><span class="line"><span class="comment">#变量值</span></span><br><span class="line">D:\work\mysql-8.0.28-winx64\bin</span><br></pre></td></tr></table></figure>



<p><strong>主要介绍解压版本zip的安装与实例化</strong>：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">unzip mysql<span class="literal">-8</span>.<span class="number">0.28</span><span class="literal">-winx64</span>.zip</span><br><span class="line"><span class="built_in">cd</span> mysql<span class="literal">-8</span>.<span class="number">0.28</span><span class="literal">-winx64</span>.zip</span><br></pre></td></tr></table></figure>

<p>如果没有 <strong>unzip</strong> 命令，请尝试打开 <strong>powershell</strong> 使用 <strong>Expand-Archive</strong> 命令解压。</p>
<p>示例<strong>解压到默认目录</strong>：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Expand-Archive</span> .\mysql<span class="literal">-8</span>.<span class="number">0.28</span><span class="literal">-winx64</span>.zip</span><br></pre></td></tr></table></figure>



<p>示例<strong>解压到指定目录</strong> <code>D:\work\</code>，使用参数  <code>-DestinationPath</code>：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Expand-Archive</span> .\mysql<span class="literal">-8</span>.<span class="number">0.28</span><span class="literal">-winx64</span>.zip <span class="literal">-DestinationPath</span> D:\work\</span><br></pre></td></tr></table></figure>



<p>如果你想<strong>指定压缩文件路径D:\Downloads\DBMS\MySQL\winx64\mysql-8.0.28-winx64.zip</strong></p>
<p>可以使用 <strong>-Path</strong> 参数：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Expand-Archive</span> <span class="literal">-Path</span> D:\Downloads\DBMS\MySQL\winx64\mysql<span class="literal">-8</span>.<span class="number">0.28</span><span class="literal">-winx64</span>.zip <span class="literal">-DestinationPath</span> D:\work\</span><br></pre></td></tr></table></figure>

<p><strong>可参考资料</strong>：<span class="exturl" data-url="aHR0cHM6Ly9sZWFybi5taWNyb3NvZnQuY29tL3poLWNuL3Bvd2Vyc2hlbGwvbW9kdWxlL21pY3Jvc29mdC5wb3dlcnNoZWxsLmFyY2hpdmUvZXhwYW5kLWFyY2hpdmU/dmlldz1wb3dlcnNoZWxsLTcuNA==">expand-archive<i class="fa fa-external-link-alt"></i></span></p>
<p>1.1、解压上面准备的安装包<strong>mysql-8.0.28-winx64.zip</strong></p>
<p>在解压后的 <code>D:\work\mysql-8.0.28-winx64</code> 目下新增 <code>my.ini</code> 文件，默认解压版是没有的。然后加入如下配置：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[client]</span><br><span class="line"><span class="comment"># 设置mysql客户端默认字符集</span></span><br><span class="line">default-character-set=utf8</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line"><span class="comment"># 设置3307端口,有多个服务，为了不冲突修改默认的3306端口为3307</span></span><br><span class="line">port=3307</span><br><span class="line"><span class="comment"># 设置mysql的安装目录</span></span><br><span class="line">basedir=D:\\work\\mysql-8.0.28-winx64</span><br><span class="line"><span class="comment"># 设置 mysql数据库存放目录</span></span><br><span class="line">datadir=D:\\work\\mysql-8.0.28-winx64\\data</span><br><span class="line"><span class="comment"># 允许最大连接数</span></span><br><span class="line">max_connections=20</span><br><span class="line"><span class="comment"># 服务端使用的字符集默认为8比特编码的latin1字符集</span></span><br><span class="line">character-set-server=utf8</span><br><span class="line"><span class="comment"># 创建新表时将使用的默认存储引擎</span></span><br><span class="line">default-storage-engine=INNODB</span><br></pre></td></tr></table></figure>



<p><strong>1.2、实例化</strong></p>
<p><strong>得到反馈说执行-initialize-insecure’mysqld’ 不是内部或外部命令，也不是可运行的程序或批处理文件</strong>。</p>
<p>解决方法：<code>cd D:\work\mysql-8.0.28-winx64\bin</code>，切换至上述目录执行。</p>
<p><strong>翻阅了官方文档查看到初始化的命令</strong>，命令并没有问题，查看帮助文档：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysqld --verbose --<span class="built_in">help</span></span><br></pre></td></tr></table></figure>

<ul>
<li>--initialize参数：创建一个默认的数据库并退出，然后创建一个超级用户（root）并生成随机的密码并记录到日志中；</li>
<li>--initialize-insecure参数：创建一个默认的数据库并退出，然后创建一个超级用户（root）密码为空。</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-I, --initialize    Create the default database and <span class="built_in">exit</span>. Create a super user</span><br><span class="line">                    with a random expired password and store it into the <span class="built_in">log</span>.</span><br><span class="line">--initialize-insecure </span><br><span class="line">                    Create the default database and <span class="built_in">exit</span>. Create a super user</span><br><span class="line">                    with empty password.</span><br></pre></td></tr></table></figure>

<p><strong>注意</strong>：Windows 下 zip 包解压后的 mysqld 文件在 <code>\mysql-8.0.28-winx64\bin\mysqld</code>，切换到 mysqld 所在目录中执行初始化。</p>
<p>以管理员身份运行 CMD 命令窗口，切换到 mysql 解压后的目录下：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1、第一步切换到D盘</span></span><br><span class="line">d:</span><br><span class="line"><span class="comment"># 2、第二步切换到个人安装mysql的bin目录下</span></span><br><span class="line"><span class="built_in">cd</span> D:\work\mysql<span class="literal">-8</span>.<span class="number">0.28</span><span class="literal">-winx64</span>\bin</span><br></pre></td></tr></table></figure>

<p><strong>设置为空密码</strong>，去掉不必要的麻烦。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">D:\work\mysql<span class="literal">-8</span>.<span class="number">0.28</span><span class="literal">-winx64</span>\bin&gt; mysqld <span class="literal">--initialize-insecure</span></span><br></pre></td></tr></table></figure>



<p><strong>1.3、安装服务</strong></p>
<p>在Powershell中将帮助文档输出到指定文件mysql_win_help_docs.txt：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">mysqld <span class="literal">--verbose</span> <span class="literal">--help</span> &gt; d:\work\mysql_win_help_docs.txt</span><br></pre></td></tr></table></figure>

<p><strong>参考官方文档</strong></p>
<blockquote>
<p>Usage: mysqld.exe [OPTIONS]<br>NT and Win32 specific options:<br>  –install                             Install the default service (NT).<br>  –install-manual              Install the default service started manually (NT).<br>  –install service_name        Install an optional service (NT).<br>  –install-manual service_name I    nstall an optional service started manually (NT).<br>  –remove                                  Remove the default service from the service list (NT).<br>  –remove service_name         Remove the service_name from the service list (NT).<br>  –enable-named-pipe           Only to be used for the default server (NT).<br>  –standalone                  Dummy option to start as a standalone server (NT).</p>
</blockquote>
<p><strong>进入到解压后MySQL的bin目录下</strong>，执行安装服务命令：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> D:\work\mysql<span class="literal">-8</span>.<span class="number">0.28</span><span class="literal">-winx64</span>\bin</span><br><span class="line"><span class="comment">#默认不加服务名，则为MySQL</span></span><br><span class="line">mysqld install</span><br><span class="line"><span class="comment">#可以指定服务名</span></span><br><span class="line">mysqld install MySQL8</span><br></pre></td></tr></table></figure>

<p>如果没有安装多个服务，<strong>使用mysqld install即可</strong>。可以不用指定服务名，默认的服务名为MySQL。</p>
<p><strong>1.4、服务命令使用，需要管理员身份运行CMD命令，注意看我的路径是在bin目录下执行的</strong></p>
<p>我没有配置 MySQL8 的系统环境变量，所以都在 MySQL 的 bin 目录中执行命令。</p>
<p>启动服务<strong>net start mysql</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 启动服务</span></span><br><span class="line">net <span class="built_in">start</span> mysql</span><br><span class="line">D:\work\mysql<span class="literal">-8</span>.<span class="number">0.28</span><span class="literal">-winx64</span>\bin&gt;net <span class="built_in">start</span> mysql8</span><br><span class="line">MySQL8 服务正在启动 .</span><br><span class="line">MySQL8 服务已经启动成功。</span><br></pre></td></tr></table></figure>

<p>停止服务<strong>net stop mysql</strong> </p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 停止服务</span></span><br><span class="line">net stop mysql </span><br><span class="line">D:\work\mysql<span class="literal">-8</span>.<span class="number">0.28</span><span class="literal">-winx64</span>\bin&gt;net stop mysql8</span><br><span class="line">MySQL8 服务正在停止..</span><br><span class="line">MySQL8 服务已成功停止。</span><br></pre></td></tr></table></figure>

<p>删除服务<strong>sc delete mysql</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 删除服务</span></span><br><span class="line"><span class="built_in">sc</span> delete mysql</span><br><span class="line"><span class="comment"># 或者mysqld remove删除服务,需要在mysql的bin目录下执行mysqld命令</span></span><br><span class="line">mysqld remove mysql</span><br></pre></td></tr></table></figure>



<p><strong>1.5、注意事项</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装服务指定了服务名为MySQL8</span></span><br><span class="line">计算机\HKEY_LOCAL_MACHINE\SYSTEM\ControlSet001\Services\MySQL8</span><br><span class="line"><span class="comment"># 或者是MySQL</span></span><br><span class="line">计算机\HKEY_LOCAL_MACHINE\SYSTEM\ControlSet001\Services\MySQL</span><br></pre></td></tr></table></figure>

<p>安装服务指定了服务名为MySQL8。在下面的多实例服务共存也提到过，需要将原始残留的注册表删掉，重启电脑，再进行安装即可。</p>
<p><strong>出现了丢失MSVCR120.dll，缺少组件，安装以下组件解决</strong></p>
<p>vcredist_x64.exe</p>
<p>vcredist_x86.exe</p>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cubWljcm9zb2Z0LmNvbS96aC1DTi9kb3dubG9hZC9kZXRhaWxzLmFzcHg/aWQ9NDA3ODQ=">Download Visual C++ Redistributable Packages for Visual Studio 2013 from Official Microsoft Download Center<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>注意：使用了mysqld  -initialize，密码是随机生成的，在mysql的错误日志中可以找到</strong></p>
<p>例如我的日志（mysql的data中以.err结尾的文件）</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">A temporary password <span class="keyword">is</span> generated <span class="keyword">for</span> root<span class="variable">@localhost</span>: <span class="number">6</span>hk20yueza<span class="operator">=</span>M</span><br></pre></td></tr></table></figure>

<p>修改密码的命令 <code>ALTER USER</code></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;新密码&#x27;</span></span><br></pre></td></tr></table></figure>

<p>之所以在 Windows 下介绍的如此详细，是因为我们平时的工作环境更多的是在 Windows 下进行的。就算使用 Linux 环境一般也是使用虚拟机配合 Linux 发行版，再就是云服务器了。MySQL 的一些命令都熟悉了，Linux 下安装还能难倒你么？直接翻一翻官方文档即可。</p>
<h3 id="2、Linux下安装MySQL8-0"><a href="#2、Linux下安装MySQL8-0" class="headerlink" title="2、Linux下安装MySQL8.0"></a>2、Linux下安装MySQL8.0</h3><blockquote>
<p>Installing MySQL on Linux  rpm or Using Generic Binaries </p>
</blockquote>
<p><strong>Linux 或者 Unix 安装 MySQL 其中四种方式：</strong></p>
<ol>
<li>rpm 包安装：最为简单，但不灵活，适合初学者使用。</li>
<li>二进制包（binary package）：也称归档包（archive），编译好的源码包，比rpm包更灵活。个人认为是安装多个服务最佳选择。</li>
<li>源码包（source package）：最灵活，可根据需求编译安装功能，难易度最高。</li>
<li>docker 形式安装：其实是在容器中安装。</li>
</ol>
<p>使用 rpm 包安装 MySQL 其实相对较容易，只是缺少依赖包时比较繁琐，需要提前准备好所有依赖包。建议初学者不要像我这样去安装rpm包，<strong>你可以直接下载rpm bundle，或者使用mysql官方的yum源</strong>。</p>
<p><strong>一定要注意Linux操作系统的权限问题</strong>，<strong>权限在最小范围内满足即可</strong>。</p>
<p>接下来将详细介绍在 RHEL7 系列使用rpm包形式安装 MySQL8.0.28，也是最为简单的一种方式。持续更新中，二进制包与源码包安装教程也会陆续加进来。先简单介绍二进制包安装部分步骤，详细步骤在后续更新：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$&gt; groupadd mysql     <span class="comment">#创建mysql组                  </span></span><br><span class="line">$&gt; useradd -r -g mysql -s /bin/false mysql    <span class="comment">#创建mysql用户（没有服务器主机登录权限的用户）</span></span><br><span class="line">$&gt; <span class="built_in">cd</span> /usr/local      <span class="comment">#切换到local目录                  </span></span><br><span class="line">$&gt; tar xvf /path/to/mysql-VERSION-OS.tar.xz   <span class="comment">#解压tar包mysql文件 </span></span><br><span class="line">$&gt; <span class="built_in">ln</span> -s full-path-to-mysql-VERSION-OS mysql  <span class="comment">#创建软链接</span></span><br><span class="line">$&gt; <span class="built_in">cd</span> mysql   <span class="comment">#进入到mysql目录</span></span><br><span class="line">$&gt; <span class="built_in">mkdir</span> mysql-files  <span class="comment">#创建mysql-files目录</span></span><br><span class="line">$&gt; <span class="built_in">chown</span> mysql:mysql mysql-files <span class="comment">#赋予mysql用户mysql-files目录权限</span></span><br><span class="line">$&gt; <span class="built_in">chmod</span> 750 mysql-files  <span class="comment">#赋予mysql-files权限750</span></span><br><span class="line">$&gt; bin/mysqld --initialize --user=mysql <span class="comment">#初始化并设置用户为mysql，生成随机密码会打印在字符界面（使用 --initialize-insecure则设置空密码）</span></span><br><span class="line"><span class="comment">#--defaults-file=/usr/local/mysql/my.cnf 初始化指定my.cnf路径</span></span><br><span class="line">$&gt; bin/mysqld --defaults-file=/usr/local/mysql/my.cnf  --initialize-insecure --user=mysql </span><br><span class="line">--basedir=/usr/local/mysql/ --datadir=/usr/local/mysql/data</span><br><span class="line">$&gt; bin/mysql_ssl_rsa_setup   <span class="comment">#启动ssl_rsa验证</span></span><br><span class="line">$&gt; bin/mysqld_safe --user=mysql &amp; <span class="comment">#启动服务</span></span><br><span class="line"><span class="comment"># Next command is optional  #复制mysql.server脚本服务到Linux环境init.d目录，便于管理</span></span><br><span class="line">$&gt; <span class="built_in">cp</span> support-files/mysql.server /etc/init.d/</span><br></pre></td></tr></table></figure>

<p>以龙蜥系统8.4GA进行简单说明：<br>1.必备安装包（兼容Centos8，缺少依赖包）：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$&gt; yum install libaio <span class="comment"># install library</span></span><br><span class="line">$&gt; yum install ncurses-compat-libs</span><br></pre></td></tr></table></figure>

<p>2.启动服务，可以写入脚本设置开机自启。</p>
<p>此处只做示例说明，具体使用结合实际情况。<br>vim mysql_start.sh</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">/usr/local/mysql/bin/mysqld_safe --user=mysql &amp;</span><br></pre></td></tr></table></figure>

<p>运行脚本：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chmod</span> 755 mysql_start.sh</span><br><span class="line">./mysql_start.sh</span><br></pre></td></tr></table></figure>



<p>3.登录到mysql</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql <span class="operator">-</span>uroot <span class="operator">-</span>p</span><br></pre></td></tr></table></figure>

<p>4.使用AnolisOS-8.4-minimal版本注意事项<br>如果使用AnolisOS-8.4-minimal版本，一些基本工具包没有安装，比如vim、ifconfig、wget等等。</p>
<p><strong>2.1、准备好安装包</strong></p>
<p>直接在官网下载，或者使用 <code>wget</code> 命令下载都可以，同样可以使用官网的 <code>yum</code> 源进行安装。亦或是使用 <code>apt</code> 命令获取安装。至于为什么一些 Linux 发行版将 MySQL 从默认中移除了，因为 MySQL 被 Oracle 收购后存在闭源的风险。取而代之的是她的妹妹 MariaDB，这也是为什么我在安装的时候提到了 MariaDB。</p>
<p><strong>2.2、安装rpm包</strong></p>
<p>系统会提示哪些是需要的依赖包，所以我事先<strong>准备需要的依赖包</strong>。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[mysql@localhost ~]$ rpm -ivh mysql-community-server-8.0.28-1.el7.x86_64.rpm </span><br><span class="line">警告：mysql-community-server-8.0.28-1.el7.x86_64.rpm: 头V4 RSA/SHA256 Signature, 密钥 ID 3a79bd29: NOKEY</span><br><span class="line">错误：依赖检测失败：</span><br><span class="line">    mysql-community-client(x86-64) &gt;= 8.0.11 被 mysql-community-server-8.0.28-1.el7.x86_64 需要</span><br><span class="line">    mysql-community-common(x86-64) = 8.0.28-1.el7 被 mysql-community-server-8.0.28-1.el7.x86_64 需要</span><br><span class="line">    mysql-community-icu-data-files = 8.0.28-1.el7 被 mysql-community-server-8.0.28-1.el7.x86_64 需要</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@localhost mysql]<span class="comment"># rpm -ivh mysql-community-client-8.0.28-1.el7.x86_64.rpm </span></span><br><span class="line">警告：mysql-community-client-8.0.28-1.el7.x86_64.rpm: 头V4 RSA/SHA256 Signature, 密钥 ID 3a79bd29: NOKEY</span><br><span class="line">错误：依赖检测失败：</span><br><span class="line">    mysql-community-client-plugins = 8.0.28-1.el7 被 mysql-community-client-8.0.28-1.el7.x86_64 需要</span><br><span class="line">    mysql-community-libs(x86-64) &gt;= 8.0.11 被 mysql-community-client-8.0.28-1.el7.x86_64 需要</span><br></pre></td></tr></table></figure>

<p><strong>2.2.1、安装依赖包</strong>，然后使用<code>rpm -qa | grep mysql</code>查询哪些被安装了。</p>
<p>怎么传到服务器上，简单一点scp命令即可。这里也仅限于自己测试，实际山是需要用户名密码以及网络是打通的才可进行操作。</p>
<p><strong>安装rpm包的步骤方法一</strong>，严格按照我所写的顺序来，非 root 用户使用 sudo 提权：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rpm -ivh mysql-community-client-plugins-8.0.28-1.el7.x86_64.rpm</span><br><span class="line">rpm -ivh mysql-community-common-8.0.28-1.el7.x86_64.rpm</span><br><span class="line">rpm -ivh mysql-community-icu-data-files-8.0.28-1.el7.x86_64.rpm</span><br><span class="line">yum remove mariadb-libs</span><br><span class="line">rpm -ivh mysql-community-libs-8.0.28-1.el7.x86_64.rpm</span><br><span class="line">rpm -ivh mysql-community-client-8.0.28-1.el7.x86_64.rpm</span><br><span class="line">rpm -ivh mysql-community-server-8.0.28-1.el7.x86_64.rpm</span><br></pre></td></tr></table></figure>

<p>安装完成，使用rpm命令查询mysql的rpm包：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost mysql]<span class="comment"># rpm -qa | grep mysql</span></span><br></pre></td></tr></table></figure>

<p><strong>安装rpm包的步骤方法二</strong>，使用Redhat系列提供的yum工具安装，好处在于不用挨个按提示的循序安装rpm包。</p>
<p>切换至我准备好所有必备的rpm包目录，然后使用yum命令一键安装依赖。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo yum remove mariadb-libs</span><br><span class="line">$ <span class="built_in">cd</span> /opt/soft/mysql      <span class="comment">#这一步是进入到rpm包存放目录</span></span><br><span class="line">$ sudo yum -y install mysql-community*</span><br></pre></td></tr></table></figure>

<p><strong>2.2.2、 RHEL7 系列需要卸载原有的mariadb-libs</strong>，替换为mysql-community-libs依赖</p>
<p>卸载掉原有的mariadb-libs依赖包，毕竟是担心被Oracle收购的MySQL有闭源风险，所以默认依赖包都被换成MariaDB了。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ yum remove mariadb-libs</span><br></pre></td></tr></table></figure>

<p><strong>2.2.3、正式安装server</strong></p>
<p>这一步只作为说明，如果上面安装完成，无需重复安装 <code>mysql-community-server-8.0.28-1.el7.x86_64.rpm</code> 服务。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ rpm -ivh mysql-community-server-8.0.28-1.el7.x86_64.rpm</span><br></pre></td></tr></table></figure>

<p>查看安装的版本<strong>Ver 8.0.28 for Linux on x86_64</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[sky@localhost ~]$ mysqladmin --version</span><br><span class="line">mysqladmin  Ver 8.0.28 <span class="keyword">for</span> Linux on x86_64 (MySQL Community Server - GPL)</span><br></pre></td></tr></table></figure>

<p>2.2.4、<strong>赋予mysql安装目录所有者为mysql用户</strong>，rpm包默认安装后的路径在 <code>/var/lib/mysql</code>。在授予 mysql 用户所有者和所属组权限之后，你可以使用 mysql 用户进行登录或者启动服务与关闭服务。<strong>创建 mysql 用户，推荐设置为没有服务器主机登录权限的用户</strong>。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#添加mysql组</span></span><br><span class="line">$ groupadd mysql</span><br><span class="line"><span class="comment">#创建mysql用户（没有服务器主机登录权限的用户）</span></span><br><span class="line">useradd -r -g mysql -s /bin/false mysql    </span><br><span class="line"><span class="comment">#mysql数据库存储目录的权限</span></span><br><span class="line">$ <span class="built_in">chown</span> -R mysql:mysql /var/lib/mysql</span><br><span class="line"><span class="comment">#日志的权限</span></span><br><span class="line">$ <span class="built_in">chown</span> mysql:mysql /var/log/mysqld.log</span><br></pre></td></tr></table></figure>





<p><strong>2.3、初始化</strong></p>
<p>每个人的安装环境有所差异。可以参考官方文档，关于初始化有详细的说明：</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9kZXYubXlzcWwuY29tL2RvYy9yZWZtYW4vOC4wL2VuL2RhdGEtZGlyZWN0b3J5LWluaXRpYWxpemF0aW9uLmh0bWw=">https://dev.mysql.com/doc/refman/8.0/en/data-directory-initialization.html<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p>设置密码为空，后续登录可修改密码。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ mysqld --initialize-insecure</span><br></pre></td></tr></table></figure>

<p>在进行到这一步的时候，咱可以去日志验证，能看到提示是初始化完成的。并且友好的提示，已经给你初始化完成啦，温馨提示创建了一个超级用户密码是空的。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cat</span> /var/log/mysqld.log</span><br><span class="line">[Warning] [MY-010453] [Server] root@localhost is created with an empty password ! Please consider switching off the --initialize-insecure option.</span><br></pre></td></tr></table></figure>

<p><strong>2.4、启动服务与查看服务状态</strong></p>
<p><strong>RHEL7 系列使用命令启动MySQL服务</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ systemctl start mysqld</span><br></pre></td></tr></table></figure>

<p>设置 MySQL 服务开机自启</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ systemctl <span class="built_in">enable</span> mysqld</span><br></pre></td></tr></table></figure>

<p>关闭 MySQL 服务</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ systemctl stop mysqld</span><br></pre></td></tr></table></figure>

<p>重启 MySQL 服务</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ systemctl restart mysqld</span><br></pre></td></tr></table></figure>

<p>登录 MySQL </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ mysql -uroot -p</span><br></pre></td></tr></table></figure>

<p><strong>关于启动mysqld服务出现权限不足的问题，在mysql和Oracle官方都不提倡使用root用户来管理</strong>。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@dywangk mysql]<span class="comment"># systemctl status mysqld</span></span><br><span class="line">● mysqld.service - MySQL Server</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/mysqld.service; enabled; vendor preset: disabled)</span><br><span class="line">   Active: failed (Result: exit-code) </span><br><span class="line">     Docs: man:mysqld(8)</span><br><span class="line">           http://dev.mysql.com/doc/refman/en/using-systemd.html</span><br><span class="line">  Process: 4554 ExecStart=/usr/sbin/mysqld <span class="variable">$MYSQLD_OPTS</span> (code=exited, status=1/FAILURE)</span><br><span class="line">  Process: 4516 ExecStartPre=/usr/bin/mysqld_pre_systemd (code=exited, status=0/SUCCESS)</span><br><span class="line"> Main PID: 4554 (code=exited, status=1/FAILURE)</span><br><span class="line">   Status: <span class="string">&quot;Server startup in progress&quot;</span></span><br><span class="line">    Error: 13 (权限不够)</span><br></pre></td></tr></table></figure>

<p><strong>权限越大，责任越大</strong>。</p>
<p><strong>解决方案</strong>：检查mysql数据库初始化目录和日志目录所有者和所属组。当时一在检查权限问题，<strong>忽略了日志的问题</strong>。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@mysql ~]<span class="comment"># chown -R mysql:mysql /var/lib/mysql</span></span><br><span class="line">[root@mysql ~]<span class="comment"># chown  mysql:mysql /var/log/mysqld.log </span></span><br><span class="line">[root@mysql ~]<span class="comment"># systemctl restart mysqld</span></span><br><span class="line">[root@mysql ~]<span class="comment"># systemctl status mysqld</span></span><br><span class="line">[root@mysql ~]<span class="comment"># mysql -uroot -p</span></span><br></pre></td></tr></table></figure>

<p><strong>2.5、使用防火墙管理工具 firewall</strong></p>
<p>加入 mysql 服务以及需要的端口 3306</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ firewall-cmd --zone=public --add-port=3306/tcp --permanent</span><br><span class="line">$ firewall-cmd --zone=public --add-service=mysql --permanent</span><br><span class="line">$ firewall-cmd --reload</span><br></pre></td></tr></table></figure>

<p>或者临时关闭防火墙测试</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ systemctl stop firewalld.service</span><br></pre></td></tr></table></figure>

<p><strong>2.6、测试远程登录</strong></p>
<p>开启防火墙，加入了 3306&#x2F;tcp 协议规则，加入了 mysql 服务规则。设置了以前旧的密码缓存验证规则 <code>mysql_native_password</code>,，解决<code>caching_sha2_password</code>验证插件无法被加载的问题。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;Mysql@123456&#x27;</span>; <span class="comment">-- 第一步创建用户</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">ON</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">TO</span> root@<span class="string">&#x27;%&#x27;</span>; <span class="comment">-- 第二步授权</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">WITH</span> mysql_native_password <span class="keyword">BY</span> <span class="string">&#x27;Mysql@123456&#x27;</span>; <span class="comment">-- 第三步修改密码验证方式</span></span><br><span class="line">mysql<span class="operator">&gt;</span> flush privileges; <span class="comment">-- 第四步刷新权限</span></span><br></pre></td></tr></table></figure>

<p><img data-src="https://s1.ax1x.com/2023/04/04/pp5FKyt.jpg"></p>
<h3 id="3、关于忘记密码解决方案"><a href="#3、关于忘记密码解决方案" class="headerlink" title="3、关于忘记密码解决方案"></a>3、关于忘记密码解决方案</h3><p>很多小伙伴估计都遇到过设置密码后，结果忘记密码了。本文的解决方案，完全适用目前最新版本MySQL8.0.28，<strong>亲自测试验证过</strong>。</p>
<p>参考<span class="exturl" data-url="aHR0cHM6Ly9kZXYubXlzcWwuY29tL2RvYy9yZWZtYW4vOC4wL2VuL3Bhc3N3b3JkLW1hbmFnZW1lbnQuaHRtbA==">MySQL8.0官方文档<i class="fa fa-external-link-alt"></i></span>以及<span class="exturl" data-url="aHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvMzM1MTAxODQvaG93LXRvLWNoYW5nZS10aGUtbXlzcWwtcm9vdC1hY2NvdW50LXBhc3N3b3JkLW9uLWNlbnRvczc=">stackoverflow解决方法<i class="fa fa-external-link-alt"></i></span>。结果兜兜转转回到了跳过登录密码权限验证，8.0版本之前的方法失效了，咱没跟上MySQL更新的步伐。</p>
<p>1、关闭MySQL服务:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ systemctl stop mysqld</span><br></pre></td></tr></table></figure>

<p>2、设置MySQL环境选项参数，跳过权限表验证：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ systemctl set-environment MYSQLD_OPTS=<span class="string">&quot;--skip-grant-tables&quot;</span></span><br></pre></td></tr></table></figure>

<p>或者在 <code>/etc/my.cnf</code> 文件中添加，是一样的效果。<strong>最后记得去掉跳过验证</strong>。Windows下在 my.ini 文件中加入 <code>skip-grant-tables</code>。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">skip-grant-tables</span><br></pre></td></tr></table></figure>

<p>3、使用了刚刚的设置启动mysql</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ systemctl start mysqld</span><br></pre></td></tr></table></figure>

<p>4、登录到字符命令终端</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ mysql -uroot -p</span><br></pre></td></tr></table></figure>

<p>5、使用命令更新 root 用户密码</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">UPDATE</span> mysql.user <span class="keyword">SET</span> authentication_string <span class="operator">=</span> PASSWORD(<span class="string">&#x27;MyNewPassword&#x27;</span>)</span><br><span class="line"> <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">WHERE</span> <span class="keyword">User</span> <span class="operator">=</span> <span class="string">&#x27;root&#x27;</span> <span class="keyword">AND</span> Host <span class="operator">=</span> <span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line">mysql<span class="operator">&gt;</span> FLUSH PRIVILEGES;</span><br><span class="line">mysql<span class="operator">&gt;</span> quit</span><br></pre></td></tr></table></figure>

<p>a、这种方式可能行不通</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> <span class="keyword">user</span> <span class="keyword">SET</span> authentication_string <span class="operator">=</span> PASSWORD(<span class="string">&#x27;123456&#x27;</span>) <span class="keyword">WHERE</span> <span class="keyword">User</span> <span class="operator">=</span> <span class="string">&#x27;root&#x27;</span> <span class="keyword">AND</span> Host <span class="operator">=</span> <span class="string">&#x27;localhost&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p>b、<strong>采取将密码先置空</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">update</span> <span class="keyword">user</span> <span class="keyword">set</span> authentication_string <span class="operator">=</span> <span class="string">&#x27;&#x27;</span> <span class="keyword">where</span> <span class="keyword">user</span> <span class="operator">=</span> <span class="string">&#x27;root&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p>6、修改密码，解决方案，<strong>设置更强的密码规则即可</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">As</span> mentioned my shokulei <span class="keyword">in</span> the comments, <span class="keyword">for</span> <span class="number">5.7</span><span class="number">.6</span> <span class="keyword">and</span> later, you should use </span><br><span class="line">   mysql<span class="operator">&gt;</span> <span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;123456&#x27;</span>;</span><br><span class="line"><span class="keyword">Or</span> you<span class="string">&#x27;ll get a warning</span></span><br></pre></td></tr></table></figure>

<p><strong>MySQL8.0出现这种情况</strong>，<strong>请设置更安全的密码规则比如设置密码</strong>为：Mysql@123456，即可成功。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">ERROR <span class="number">1819</span> (HY000): Your password does <span class="keyword">not</span> satisfy the <span class="keyword">current</span> policy requirements</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;Mysql@123456&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p>7、关闭 mysql 服务</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ systemctl stop mysqld</span><br></pre></td></tr></table></figure>

<p>8、重置前面设置的 mysql 环境变量参数</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ systemctl unset-environment MYSQLD_OPTS</span><br></pre></td></tr></table></figure>

<p>9、再次启动mysql</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ systemctl start mysqld</span><br></pre></td></tr></table></figure>

<p>最终成功登录到mysql</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ mysql -u root -p</span><br></pre></td></tr></table></figure>



<h3 id="4、Windows下安装MySQL8-0（MSI文件）"><a href="#4、Windows下安装MySQL8-0（MSI文件）" class="headerlink" title="4、Windows下安装MySQL8.0（MSI文件）"></a>4、Windows下安装MySQL8.0（MSI文件）</h3><p><strong>作为补充说明</strong>：详细安装不做截图，只写注意事项。</p>
<ol>
<li>MSI文件安装注意事项；</li>
<li>多个MySQL服务共存如何解决冲突。</li>
</ol>
<p><strong>注意选安装路径，Advanced Options</strong>，这行字很小，返回上一层时很有可能没注意。</p>
<p><img data-src="https://s1.ax1x.com/2023/04/04/pp5FPL6.png"></p>
<p><strong>注意：选择安装路径有空格，可能会产生影响，最好去掉。默认安装路径在C盘，我这里改为自己的管理路径</strong>。</p>
<p>方法有多种，这里采取先卸载服务，然后安装服务，最后修改注册表指定mysqld和my.ini路径。</p>
<ol>
<li><p><strong>以管理员身份运行CMD命令</strong></p>
</li>
<li><p>执行命令进入D盘</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">d:</span><br></pre></td></tr></table></figure>
</li>
<li><p>进入MySQL服务的bin目录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> D:\software\MySQL\MySQLServer8.0\bin\</span><br></pre></td></tr></table></figure>
</li>
<li><p>卸载原有MySQL80服务</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysqld remove MySQL80</span><br></pre></td></tr></table></figure>
</li>
<li><p>重新安装MySQL服务，注意服务名不要重复</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysqld install MySQL</span><br></pre></td></tr></table></figure>
</li>
<li><p>进入注册表<br>快捷键：win + r，然后输入regedit进入注册表。</p>
</li>
<li><p>修改注册表对应路径和默认my.ini路径（可能需要重启）<br>注册表路径：计算机\HKEY_LOCAL_MACHINE\SYSTEM\ControlSet001\Services\MySQL</p>
<p>修改imagePath值，<strong>注意改成你自己安装路径</strong>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;D:\software\MySQL\MySQLServer8.0\bin\mysqld.exe&quot;</span> --defaults-file=<span class="string">&quot;D:\software\MySQL\data\MySQLServer8.0\my.ini&quot;</span> MySQL</span><br></pre></td></tr></table></figure>
</li>
<li><p>登录时，选择端口（基于多个服务实例共存），-P大写P后面接在my.ini配置文件中指定的端口。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql -uroot -p -P 3366</span><br></pre></td></tr></table></figure></li>
</ol>
<p><strong>仅供参考</strong>，虽然个人在win10环境得以解决，但不一定适用你的系统环境。</p>
<h2 id="三、MySQL8-0使用"><a href="#三、MySQL8-0使用" class="headerlink" title="三、MySQL8.0使用"></a>三、MySQL8.0使用</h2><p><strong>仅供测试学习参考</strong>，具体应以实际工作场景为主。</p>
<p>主要基于Windows10进行说明，一个MariaDB服务与两个MySQL8.0服务共存。</p>
<p>使用<code>netstat</code>命令进行查找 Windows 下启动的 MySQL 服务：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">netstat -ano | findstr 3306</span><br></pre></td></tr></table></figure>

<p><img data-src="https://s1.ax1x.com/2023/04/04/pp5FMOP.png"></p>
<h3 id="1、Windows多个MySQL服务实例共存"><a href="#1、Windows多个MySQL服务实例共存" class="headerlink" title="1、Windows多个MySQL服务实例共存"></a>1、Windows多个MySQL服务实例共存</h3><p>注意修改注册表路径，解决启动 MySQL 服务意外停止的情况，提示 1067 还是1068 来着。</p>
<p><strong>执行 CMD 命令时以管理员身份运行</strong>，普通身份运行会提示拒绝访问。前提是服务已经注册到 services 中，可以 <strong>sc</strong> 或者 <strong>net</strong> 命令进行管理。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">net start mysql80</span><br><span class="line">net start mysql8</span><br><span class="line">net start mysql</span><br></pre></td></tr></table></figure>

<p>为了测试演示最新版本，我将服务名改成了MySQL8。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装服务指定了服务名为MySQL8</span></span><br><span class="line">计算机\HKEY_LOCAL_MACHINE\SYSTEM\ControlSet001\Services\MySQL8</span><br><span class="line"><span class="comment"># 或者是MySQL</span></span><br><span class="line">计算机\HKEY_LOCAL_MACHINE\SYSTEM\ControlSet001\Services\MySQL</span><br></pre></td></tr></table></figure>

<p>分享另外一种思路。<strong>当然，还可以使用其他方式实现。比如，我安装 MySQL 服务时，选择不注册服务到 services 即可。启动服务时，通过脚本去实现</strong>。</p>
<p><img data-src="https://s1.ax1x.com/2023/04/04/pp5FkdO.jpg"></p>
<p><strong>1.1、登录并指定端口</strong>3307，默认为3306，我的MariaDB已经占用了3306端口。<strong>个人测试演示多个实例共存改了端口为3307</strong>。</p>
<p>注意：在 Windows 下使用 cmd 命令窗口以管理员身份运行登录，没有配置环境变量也没关系，切换到 MySQL 安装的 bin 目录下执行命令。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-- 第一步执行d:，切换到D盘</span><br><span class="line">d:</span><br><span class="line">-- 第二步执行<span class="built_in">cd</span>命令，切换到个人安装mysql的bin目录下</span><br><span class="line"><span class="built_in">cd</span> D:\work\mysql-8.0.28-winx64\bin</span><br><span class="line">-- 执行登录命令，并指定端口</span><br><span class="line">mysql -uroot -p -P 3307</span><br><span class="line">-- 查询数据库版本</span><br><span class="line">mysql&gt; <span class="keyword">select</span> version();</span><br><span class="line">+-----------+</span><br><span class="line">| version() |</span><br><span class="line">+-----------+</span><br><span class="line">| 8.0.28    |</span><br><span class="line">+-----------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br></pre></td></tr></table></figure>



<p>总结一下：</p>
<ul>
<li>第一步执行d:，切换到D盘；</li>
<li>第二步执行 cd 命令，切换到个人安装 mysql 的 bin 目录下；</li>
<li>第三步执行登录命令，并指定端口登录到mysql；</li>
<li>最后进行简单的交互，并查询数据库版本。</li>
</ul>
<p><strong>1.2、初步使用命令行模式进行交互</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> DATABASE TEST;</span><br><span class="line">USE TEST;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> STUDY(</span><br><span class="line">    ID <span class="type">INT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">PRIMARY</span> KEY AUTO_INCREMENT,</span><br><span class="line">    NAMES <span class="type">VARCHAR</span>(<span class="number">64</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span></span><br><span class="line">)ENGINE<span class="operator">=</span>MyISAM;</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> STUDY <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="string">&#x27;mysql目前最新版本mysql8.0.28&#x27;</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> STUDY;</span><br></pre></td></tr></table></figure>






<h3 id="2、权限设置"><a href="#2、权限设置" class="headerlink" title="2、权限设置"></a>2、权限设置</h3><p><strong>2.1、参考官方文档</strong></p>
<p><strong>设置远程登录权限，以及密码校验规则，与安装数据库版本默认使用的默认认证插件有关</strong></p>
<p>参考MySQL官方文档：<span class="exturl" data-url="aHR0cHM6Ly9kZXYubXlzcWwuY29tL2RvYy9yZWZtYW4vOC4wL2VuL3VwZ3JhZGluZy1mcm9tLXByZXZpb3VzLXNlcmllcy5odG1sI3VwZ3JhZGUtY2FjaGluZy1zaGEyLXBhc3N3b3Jk">https://dev.mysql.com/doc/refman/8.0/en/upgrading-from-previous-series.html#upgrade-caching-sha2-password<i class="fa fa-external-link-alt"></i></span></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">01、Authentication plugin <span class="string">&#x27;caching_sha2_password&#x27;</span> is not supported</span><br><span class="line">02、Authentication plugin <span class="string">&#x27;caching_sha2_password&#x27;</span> cannot be loaded:</span><br><span class="line">dlopen(/usr/local/mysql/lib/plugin/caching_sha2_password.so, 2):</span><br><span class="line">image not found</span><br><span class="line">03、Warning: mysqli_connect(): The server requested authentication</span><br><span class="line">method unknown to the client [caching_sha2_password]</span><br></pre></td></tr></table></figure>

<p>使用上面这种密码缓存验证算法。描述到验证插件不支持<strong>caching_sha2_password</strong>，不能被加载，服务连接请求提出警告认证方法无法识别客户端。<strong>通俗一点解释</strong>：在使用SQLyog、MySQL workbench等客户端连接时，密码验证规则是不被允许的。需要更换验证方式，或者其它方式解决验证。下面将会给出解决方案。</p>
<p><strong>2.2、修改root用户密码</strong></p>
<p>使用 <strong>ALTER USER 语句</strong>修改用户密码：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;新密码&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p><strong>2.3、创建普通用户并授权（开发人员或者DBA使用的比较多）</strong></p>
<p><strong>初学者可以先忽略授权这一步，使用root用户将基本功练扎实</strong>。还没入门，就没这头皮发麻的授权模式给弄崩溃了，哈哈。</p>
<p>授权命令GRANT，撤销权限命令REVOKE。创建用户并授权参考官方文档：<span class="exturl" data-url="aHR0cHM6Ly9kZXYubXlzcWwuY29tL2RvYy9yZWZtYW4vOC4wL2VuL3JvbGVzLmh0bWw=">https://dev.mysql.com/doc/refman/8.0/en/roles.html<i class="fa fa-external-link-alt"></i></span></p>
<p>创建角色：<strong>CREATE ROLE命令</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> ROLE <span class="string">&#x27;app_developer&#x27;</span>, <span class="string">&#x27;app_read&#x27;</span>, <span class="string">&#x27;app_write&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p>授予角色权限：<strong>GRANT命令</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">ON</span> app_db.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;app_developer&#x27;</span>;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SELECT</span> <span class="keyword">ON</span> app_db.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;app_read&#x27;</span>;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">INSERT</span>, <span class="keyword">UPDATE</span>, <span class="keyword">DELETE</span> <span class="keyword">ON</span> app_db.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;app_write&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p>创建用户：<strong>CREATE USER命令</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;dev1&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;dev1pass&#x27;</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;read_user1&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;read_user1pass&#x27;</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;read_user2&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;read_user2pass&#x27;</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;rw_user1&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;rw_user1pass&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p>授权给创建的用户：<strong>GRANT命令</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> <span class="string">&#x27;app_developer&#x27;</span> <span class="keyword">TO</span> <span class="string">&#x27;dev1&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="string">&#x27;app_read&#x27;</span> <span class="keyword">TO</span> <span class="string">&#x27;read_user1&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span>, <span class="string">&#x27;read_user2&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="string">&#x27;app_read&#x27;</span>, <span class="string">&#x27;app_write&#x27;</span> <span class="keyword">TO</span> <span class="string">&#x27;rw_user1&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p>你还可以在<strong>my.ini或者my.cnf</strong>配置文件中指定设置：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">mandatory_roles=<span class="string">&#x27;role1,role2@localhost,r3@%.example.com&#x27;</span></span><br></pre></td></tr></table></figure>

<p>同样可以在命令模式下使用SET命令设置：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SET</span> PERSIST mandatory_roles <span class="operator">=</span> <span class="string">&#x27;role1,role2@localhost,r3@%.example.com&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p>检查角色dev1的权限，检查权限比较多，我就不一一列举。详情可以参考官方文档。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SHOW</span> GRANTS <span class="keyword">FOR</span> <span class="string">&#x27;dev1&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> Grants <span class="keyword">for</span> dev1<span class="variable">@localhost</span>                       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">GRANT</span> USAGE <span class="keyword">ON</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">TO</span> `dev1`@`localhost`        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">GRANT</span> `app_developer`@`<span class="operator">%</span>` <span class="keyword">TO</span> `dev1`@`localhost` <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------------------------------+</span></span><br></pre></td></tr></table></figure>

<p>创建用户并授权，授权全部权限：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;old_app_dev&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;old_app_devpass&#x27;</span>;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">ON</span> old_app.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;old_app_dev&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p>锁定用户：锁定：LOCK，盲猜解锁就是UNLOCK</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">&#x27;old_app_dev&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> ACCOUNT LOCK;</span><br></pre></td></tr></table></figure>

<p>授权给新的开发账号权限，授权部分权限：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;new_app_dev1&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;new_password&#x27;</span>;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="string">&#x27;old_app_dev&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> <span class="keyword">TO</span> <span class="string">&#x27;new_app_dev1&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p><strong>以上提供官方文档进行参考，与其东找找西找找，不如翻阅官方文档更直接更准确</strong>。咱缺的不是学习的途径，而是缺乏学习的方法。</p>
<h3 id="3、测试创建用户"><a href="#3、测试创建用户" class="headerlink" title="3、测试创建用户"></a>3、测试创建用户</h3><p>友情提示：关于密码验证插件请参考官方文档，第六章节安全篇  <span class="exturl" data-url="aHR0cHM6Ly9kZXYubXlzcWwuY29tL2RvYy9yZWZtYW4vOC4wL2VuL3NlY3VyaXR5LXBsdWdpbnMuaHRtbA==">Security Components and Plugins<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>3.1、创建普通用户并授权远程登录</strong></p>
<p>创建一个普通用户 test</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;test&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;123456&#x27;</span>;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<p>授予用户 test 在本地（localhost）的权限，<strong>只给查询权限</strong>（SELECT），授权所有（ALL）</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">GRANT</span> <span class="keyword">SELECT</span> <span class="keyword">ON</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">TO</span> test@<span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.01</span> sec)</span><br></pre></td></tr></table></figure>

<p><strong>3.2、给root用户授权</strong></p>
<p>创建root用户授权给所有IP都能登录，以及修改密码缓存认证方式。<strong>如果是生产环境，不建议这样操作，最小化授权即可</strong>。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;Mysql@123456&#x27;</span>;</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">ON</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">TO</span> root@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">WITH</span> mysql_native_password <span class="keyword">BY</span> <span class="string">&#x27;Mysql@123456&#x27;</span>;</span><br><span class="line">mysql<span class="operator">&gt;</span> flush privileges;</span><br></pre></td></tr></table></figure>

<p><strong>在第三方工具中验证登录结果，在localhost下可以登录成功</strong>：</p>
<p><img data-src="https://s1.ax1x.com/2023/04/04/pp5Flef.jpg"></p>
<p>目前只给了查询（select）权限，<strong>验证插入（insert）权限</strong>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">insert</span> <span class="keyword">into</span> study <span class="keyword">values</span>(<span class="number">7</span>,<span class="string">&#x27;美柑&#x27;</span>);</span><br><span class="line">ERROR <span class="number">1142</span> (<span class="number">42000</span>): <span class="keyword">INSERT</span> command denied <span class="keyword">to</span> <span class="keyword">user</span> <span class="string">&#x27;test&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> <span class="keyword">for</span> <span class="keyword">table</span> <span class="string">&#x27;study&#x27;</span></span><br></pre></td></tr></table></figure>

<p>这是在SQLyog工具下进行验证的，<strong>建议初学者多在命令行窗口下进行练习</strong>，熟能生巧。</p>
<p><strong>3.2、授权root用户远程登录，MySQL8.0授权方式</strong></p>
<p>用户授权，在MySQL8.0版本中变得更加严格，以前MySQL5.6或者5.7版本中可以执行授权的方式有了变化。经过个人亲测，操作如下。</p>
<p><strong>MySQL8.0授权方式</strong>，记得<strong>使用flush privileges</strong>刷新权限</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;Mysql@123456&#x27;</span>; <span class="comment">-- 第一步创建用户</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">ON</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">TO</span> root@<span class="string">&#x27;%&#x27;</span>; <span class="comment">-- 第二步授权</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">WITH</span> mysql_native_password <span class="keyword">BY</span> <span class="string">&#x27;Mysql@123456&#x27;</span>; <span class="comment">-- 第三步修改密码验证方式</span></span><br><span class="line">mysql<span class="operator">&gt;</span> flush privileges; <span class="comment">-- 第四步刷新权限</span></span><br></pre></td></tr></table></figure>

<p><strong>修改密码认证方式</strong>（8.0默认使用的是sha2算法缓存认证），<strong>第一种解决方案如下</strong>，这只是其中一种解决方案，<strong>亲测有效</strong>。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">WITH</span> mysql_native_password <span class="keyword">BY</span> <span class="string">&#x27;123456&#x27;</span>;</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">WITH</span> mysql_native_password <span class="keyword">BY</span> <span class="string">&#x27;123456&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p><strong>第二种解决方案</strong>：在my.ini或者my.cnf配置文件加入如下配置，重启服务并加载配置文件。经过测试没有生效，似乎没有读取到配置文件，但奇怪的是我设置的3307端口和默认存储引擎以及编码格式是生效的。（<strong>在官网看到的解决方案</strong>）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">default_authentication_plugin=mysql_native_password</span><br></pre></td></tr></table></figure>

<p>MySQL8.0官方文档默认设置的<strong>认证缓存算法是caching_sha2_password</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="keyword">user</span>(用户) IDENTIFIED <span class="keyword">WITH</span> caching_sha2_password <span class="keyword">BY</span> <span class="string">&#x27;password&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p>MySQL8.0之前的授权方式（<strong>5.6或者5.7都支持这种方式授权</strong>）</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;你的用户名&#x27;</span>@<span class="string">&#x27;你的IP地址&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;设置的密码&#x27;</span> <span class="keyword">WITH</span> <span class="keyword">GRANT</span> OPTION;</span><br></pre></td></tr></table></figure>

<p>示例：授权root户，<strong>所有IP都可连接</strong>。<strong>实际工作中，不建议这样操作，此处只作为演示说明</strong>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;123456&#x27;</span> <span class="keyword">WITH</span> <span class="keyword">GRANT</span> OPTION;</span><br></pre></td></tr></table></figure>

<p><strong>刷新权限</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">flush privileges;</span><br></pre></td></tr></table></figure>



<h3 id="4、如何高效的使用自带官方文档"><a href="#4、如何高效的使用自带官方文档" class="headerlink" title="4、如何高效的使用自带官方文档"></a>4、如何高效的使用自带官方文档</h3><p>登录到MySQL8，指定3307端口，或者使用默认端口登录。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql -uroot -p -P 3307</span><br><span class="line">mysql -uroot -p</span><br></pre></td></tr></table></figure>

<p>使用帮助命令，以? contents形式查找系统帮助命令。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">? contents;</span><br><span class="line">? <span class="keyword">create</span> <span class="keyword">user</span>;</span><br><span class="line">? <span class="keyword">create</span> database;</span><br><span class="line">? <span class="keyword">create</span> <span class="keyword">table</span>;</span><br><span class="line">? <span class="keyword">select</span>;</span><br><span class="line">? <span class="keyword">insert</span>;</span><br><span class="line">? <span class="keyword">update</span>;</span><br><span class="line">? <span class="keyword">delete</span>;</span><br><span class="line">URL: https:<span class="operator">/</span><span class="operator">/</span>dev.mysql.com<span class="operator">/</span>doc<span class="operator">/</span>refman<span class="operator">/</span><span class="number">8.0</span><span class="operator">/</span>en<span class="operator">/</span><span class="keyword">select</span><span class="operator">|</span><span class="keyword">insert</span><span class="operator">|</span><span class="keyword">update</span><span class="operator">|</span>delete.html</span><br></pre></td></tr></table></figure>

<p>在使用本地的帮助文档时，你会发现系统自动提示了官方文档的地址 <span class="exturl" data-url="aHR0cHM6Ly9kZXYubXlzcWwuY29tL2RvYyVFMyU4MCU4Mg==">https://dev.mysql.com/doc。<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>示例</strong>：查询创建表的帮助命令? create table只展示了一部分内容。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> ? <span class="keyword">create</span> <span class="keyword">table</span></span><br><span class="line">Name: <span class="string">&#x27;CREATE TABLE&#x27;</span></span><br><span class="line">Description:</span><br><span class="line">Syntax:</span><br><span class="line"><span class="keyword">CREATE</span> [TEMPORARY] <span class="keyword">TABLE</span> [IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span>] tbl_name</span><br><span class="line">    (create_definition,...)</span><br><span class="line">    [table_options]</span><br><span class="line">    [partition_options]</span><br><span class="line">data_type:</span><br><span class="line">    (see https:<span class="operator">/</span><span class="operator">/</span>dev.mysql.com<span class="operator">/</span>doc<span class="operator">/</span>refman<span class="operator">/</span><span class="number">8.0</span><span class="operator">/</span>en<span class="operator">/</span>data<span class="operator">-</span>types.html)</span><br><span class="line">index_type:</span><br><span class="line">    <span class="keyword">USING</span> &#123;BTREE <span class="operator">|</span> HASH&#125;</span><br><span class="line">index_option: &#123;</span><br><span class="line">    KEY_BLOCK_SIZE [<span class="operator">=</span>] <span class="keyword">value</span></span><br><span class="line">  <span class="operator">|</span> index_type</span><br><span class="line"> ...</span><br><span class="line">&#125;</span><br><span class="line">URL: https:<span class="operator">/</span><span class="operator">/</span>dev.mysql.com<span class="operator">/</span>doc<span class="operator">/</span>refman<span class="operator">/</span><span class="number">8.0</span><span class="operator">/</span>en<span class="operator">/</span><span class="keyword">create</span><span class="operator">-</span>table.html</span><br></pre></td></tr></table></figure>

<ul>
<li>Name：查看的帮助命令名称</li>
<li>Description：描述</li>
<li>Syntax：示例</li>
<li>data_type：支持的数据类型</li>
<li>index_type：可以使用的索引类型</li>
</ul>
<p>我只列举了部分进行说明，更详细的可以自己测试。</p>
<p><strong>在创建用户、数据库以及建表和字段全部采取的大写</strong>，因为在Linux和Unix下对大写敏感的，并不是MySQL本身对大小写敏感。</p>
<p>1、创建数据库</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> DATABASE TEST;</span><br><span class="line">USE TEST;</span><br></pre></td></tr></table></figure>

<p>2、创建表，可以通过ENGINE指定表的存储引擎，mysql5.6以及之后的版本默认为InnoDB存储引擎。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> STUDY(</span><br><span class="line">    ID <span class="type">INT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">PRIMARY</span> KEY AUTO_INCREMENT,</span><br><span class="line">    NAMES <span class="type">VARCHAR</span>(<span class="number">64</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span></span><br><span class="line">)ENGINE<span class="operator">=</span>MyISAM;</span><br></pre></td></tr></table></figure>

<p>3、插入数据</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> STUDY <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="string">&#x27;mysql目前最新版本mysql8.0.28&#x27;</span>);</span><br></pre></td></tr></table></figure>

<p>4、查询数据</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> STUDY;</span><br></pre></td></tr></table></figure>

<p>5、修改数据</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> STUDY S <span class="keyword">SET</span> S.NAMES<span class="operator">=</span><span class="string">&#x27;mysql默认的存储引擎是InnoDB&#x27;</span> <span class="keyword">WHERE</span> S.ID<span class="operator">=</span><span class="number">1</span>;</span><br></pre></td></tr></table></figure>

<p>6、删除全部数据</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> STUDY;</span><br></pre></td></tr></table></figure>

<p>至此基本的创建用户、创建数据库、增删改查都会使用了。</p>
<h3 id="5、MySQL官方文档下载地址"><a href="#5、MySQL官方文档下载地址" class="headerlink" title="5、MySQL官方文档下载地址"></a>5、MySQL官方文档下载地址</h3><p>左侧导航栏有个Download this Manual：MySQL文档下载地址。</p>
<p>以下给出四个版本下载地址：</p>
<ol>
<li><p>MySQL8.3在线文档</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9kZXYubXlzcWwuY29tL2RvYy9yZWZtYW4vOC4zL2VuLw==">MySQL :: MySQL 8.3 Reference Manual<i class="fa fa-external-link-alt"></i></span></p>
</li>
<li><p>MySQL8.3文档PDF文件下载地址</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZHMubXlzcWwuY29tL2RvY3MvcmVmbWFuLTguMy1lbi5hNC5wZGY=">downloads.mysql.com&#x2F;docs&#x2F;refman-8.3-en.a4.pdf<i class="fa fa-external-link-alt"></i></span></p>
</li>
<li><p>MySQL8.0在线文档<br><span class="exturl" data-url="aHR0cHM6Ly9kZXYubXlzcWwuY29tL2RvYy9yZWZtYW4vOC4wL2Vu">https://dev.mysql.com/doc/refman/8.0/en<i class="fa fa-external-link-alt"></i></span></p>
</li>
<li><p>MySQL8.0文档PDF文件下载地址<br><span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZHMubXlzcWwuY29tL2RvY3MvcmVmbWFuLTguMC1lbi5hNC5wZGY=">https://downloads.mysql.com/docs/refman-8.0-en.a4.pdf<i class="fa fa-external-link-alt"></i></span></p>
</li>
<li><p>MySQL5.7在线文档<br><span class="exturl" data-url="aHR0cHM6Ly9kZXYubXlzcWwuY29tL2RvYy9yZWZtYW4vNS43L2VuLw==">https://dev.mysql.com/doc/refman/5.7/en/<i class="fa fa-external-link-alt"></i></span></p>
</li>
<li><p>MySQL5.7文档PDF文件下载地址<br><span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZHMubXlzcWwuY29tL2RvY3MvcmVmbWFuLTUuNy1lbi5hNC5wZGY=">https://downloads.mysql.com/docs/refman-5.7-en.a4.pdf<i class="fa fa-external-link-alt"></i></span></p>
</li>
<li><p>MySQL5.6在线文档（注：官方已停止维护，在线文档已经移动了，PDF下载地址还可使用）<br><span class="exturl" data-url="aHR0cHM6Ly9kZXYubXlzcWwuY29tL2RvYy9yZWZtYW4vNS42L2VuLw==">https://dev.mysql.com/doc/refman/5.6/en/<i class="fa fa-external-link-alt"></i></span></p>
</li>
<li><p>MySQL5.6文档PDF文件下载地址<br><span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZHMubXlzcWwuY29tL2RvY3MvcmVmbWFuLTUuNi1lbi5hNC5wZGY=">https://downloads.mysql.com/docs/refman-5.6-en.a4.pdf<i class="fa fa-external-link-alt"></i></span></p>
</li>
</ol>
<p><strong>友情提醒</strong>：下载官方文档尽量前往官方网站下载。某网站利用用户上传的资源，却厚着脸皮需要VIP才能下载，对这种行为表示鄙视。当然，也可以在文初获取我个人整理的压缩包组合（不定期更新）。</p>
<h3 id="6、MySQL官方示例库"><a href="#6、MySQL官方示例库" class="headerlink" title="6、MySQL官方示例库"></a>6、MySQL官方示例库</h3><p>给出<strong>sakila-db数据库</strong>包含三个文件，便于大家获取与使用：</p>
<ol>
<li>sakila-schema.sql：数据库表结构；</li>
<li>sakila-data.sql：数据库示例模拟数据；</li>
<li>sakila.mwb：数据库物理模型，在MySQL workbench中可以打开查看。</li>
</ol>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZHMubXlzcWwuY29tL2RvY3Mvc2FraWxhLWRiLnppcA==">https://downloads.mysql.com/docs/sakila-db.zip<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p><strong>world-db数据库</strong>，包含三张表：city、country、countrylanguage。</p>
<p><strong>只是用于用于简单测试学习，建议使用world-db</strong>：</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZHMubXlzcWwuY29tL2RvY3Mvd29ybGQtZGIuemlw">https://downloads.mysql.com/docs/world-db.zip<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<hr>
<h2 id="四、MySQL连接工具"><a href="#四、MySQL连接工具" class="headerlink" title="四、MySQL连接工具"></a>四、MySQL连接工具</h2><p>做了超链接，方便去官网获取。</p>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9kYmVhdmVyLmlvL2Rvd25sb2FkLw==">DBeaver<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9kZXYubXlzcWwuY29tL2Rvd25sb2Fkcy93b3JrYmVuY2gv">MySQL Workbench<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>推荐几个比较常用的工具：<span class="exturl" data-url="aHR0cHM6Ly9kYmVhdmVyLmlvL2Rvd25sb2FkLw==">DBeaver<i class="fa fa-external-link-alt"></i></span>、<span class="exturl" data-url="aHR0cHM6Ly93d3cucGhwbXlhZG1pbi5uZXQv">phpMyAdmin<i class="fa fa-external-link-alt"></i></span>、<span class="exturl" data-url="aHR0cHM6Ly93ZWJ5b2cuY29tL3Byb2R1Y3Qvc3FseW9nL3RyaWFsLw==">SQLyog<i class="fa fa-external-link-alt"></i></span>、<span class="exturl" data-url="aHR0cHM6Ly9kZXYubXlzcWwuY29tL2Rvd25sb2Fkcy93b3JrYmVuY2gv">MySQL Workbench<i class="fa fa-external-link-alt"></i></span>、Navicat 可视化工具进行连接操作。工具的使用是其次的，更重要的在于对MySQL命令语句的运用。</p>
<p><strong>tips</strong>：包含了 SQLyog ，还整理了部分安装包以及 MySQL 官方提供的 <strong>sakila</strong> 、<strong>world</strong> 示例哟！</p>
<p>链接: <span class="exturl" data-url="aHR0cHM6Ly9wYW4uYmFpZHUuY29tL3MvMTFnSWxaS3hvVEc1QkNDY29YZFZKUmc=">https://pan.baidu.com/s/11gIlZKxoTG5BCCcoXdVJRg <i class="fa fa-external-link-alt"></i></span>   提取码： ntu7</p>
<p>可以使用通用数据库管理工具 DBeaver 或者 Navicat ，逆向生成的示例数据库的模型。</p>
<p><strong>如果真的要使用到建物理模型</strong>：推荐你学习 Sybase PowerDesigner 设计工具的使用，而且需要了解关系数据库设计遵循的三范式。现在数据库设计最多满足 3NF，普遍认为范式过高，虽然具有对数据关系更好的约束性，但也导致数据关系表增加而令数据库 IO 更易繁忙，原来交由数据库处理的关系约束现更多在数据库使用程序中完成。</p>
<h2 id="五、MySQL之JDBC"><a href="#五、MySQL之JDBC" class="headerlink" title="五、MySQL之JDBC"></a>五、MySQL之JDBC</h2><h3 id="1、官方connector-j"><a href="#1、官方connector-j" class="headerlink" title="1、官方connector-j"></a>1、官方connector-j</h3><p>MySQL8.0 的 maven 安装 JDBC：<span class="exturl" data-url="aHR0cHM6Ly9kZXYubXlzcWwuY29tL2RvYy9jb25uZWN0b3Itai84LjAvZW4vY29ubmVjdG9yLWotaW5zdGFsbGluZy1tYXZlbi5odG1s">https://dev.mysql.com/doc/connector-j/8.0/en/connector-j-installing-maven.html<i class="fa fa-external-link-alt"></i></span></p>
<p>JDBC 连接驱动管理：<span class="exturl" data-url="aHR0cHM6Ly9kZXYubXlzcWwuY29tL2RvYy9jb25uZWN0b3Itai84LjAvZW4vY29ubmVjdG9yLWotdXNhZ2Vub3Rlcy1jb25uZWN0LWRyaXZlcm1hbmFnZXIuaHRtbA==">https://dev.mysql.com/doc/connector-j/8.0/en/connector-j-usagenotes-connect-drivermanager.html<i class="fa fa-external-link-alt"></i></span></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">import java.sql.Connection;</span><br><span class="line">import java.sql.DriverManager;</span><br><span class="line">import java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="operator">/</span><span class="operator">/</span> Notice, do <span class="keyword">not</span> import com.mysql.cj.jdbc.<span class="operator">*</span></span><br><span class="line"><span class="operator">/</span><span class="operator">/</span> <span class="keyword">or</span> you will have problems<span class="operator">!</span></span><br><span class="line"></span><br><span class="line">public class LoadDriver &#123;</span><br><span class="line">    public <span class="keyword">static</span> void main(String[] args) &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            <span class="operator">/</span><span class="operator">/</span> The newInstance() <span class="keyword">call</span> <span class="keyword">is</span> a work around <span class="keyword">for</span> <span class="keyword">some</span></span><br><span class="line">            <span class="operator">/</span><span class="operator">/</span> broken Java implementations</span><br><span class="line">            Class.forName(&quot;com.mysql.cj.jdbc.Driver&quot;).newInstance();</span><br><span class="line">        &#125; catch (Exception ex) &#123;</span><br><span class="line">            <span class="operator">/</span><span class="operator">/</span> handle the error</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">Connection conn <span class="operator">=</span> <span class="keyword">null</span>;</span><br><span class="line">...</span><br><span class="line">try &#123;</span><br><span class="line">    conn <span class="operator">=</span> DriverManager.getConnection(&quot;jdbc:mysql://localhost/test?&quot; <span class="operator">+</span></span><br><span class="line">                                   &quot;user=root&amp;password=123456&quot;);</span><br><span class="line">    <span class="operator">/</span><span class="operator">/</span> Do something <span class="keyword">with</span> the Connection</span><br><span class="line">   ...</span><br><span class="line">&#125; catch (<span class="keyword">SQLException</span> ex) &#123;</span><br><span class="line">    <span class="operator">/</span><span class="operator">/</span> handle <span class="keyword">any</span> errors</span><br><span class="line">    System.out.println(&quot;SQLException: &quot; <span class="operator">+</span> ex.getMessage());</span><br><span class="line">    System.out.println(&quot;SQLState: &quot; <span class="operator">+</span> ex.getSQLState());</span><br><span class="line">    System.out.println(&quot;VendorError: &quot; <span class="operator">+</span> ex.getErrorCode());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="2、JDBC-测试连接-MySQL8-0-数据库"><a href="#2、JDBC-测试连接-MySQL8-0-数据库" class="headerlink" title="2、JDBC 测试连接 MySQL8.0 数据库"></a>2、JDBC 测试连接 MySQL8.0 数据库</h3><p><strong>2.1、maven 配置</strong></p>
<p>设置 <code>pom.xml</code> 配置文件，使用 MySQL 最新的版本 8.0.28 进行连接测试。maven 的镜像仓库，可以使用阿里的镜像源地址。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.28<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.28<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.protobuf<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>protobuf-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>2.2、编写Java代码</strong></p>
<p>使用编辑器sts（Spring Tool Suite4或者IDEA）</p>
<p>创建普通的 maven 项目或者 springboot 项目，然后配置 pom.xml。</p>
<p><strong>目的</strong>：使用纯 JDBC 测试，或者 ORM 框架 mybatis、hibernate都行，还可以使用对 hibernate 进行再次封装的 JPA ，最终达到对数据库进行最基本的增删改查。</p>
<p>Java 版 JDBC连接 MySQL 数据库示例代码如下:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.DriverManager;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestConnMySQL8</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException, SQLException &#123;    </span><br><span class="line">        TestSQLConnMySQL();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Logger</span> <span class="variable">log</span> <span class="operator">=</span> LoggerFactory.getLogger(TestConnMySQL8.class);</span><br><span class="line">    <span class="comment">//初始化参数</span></span><br><span class="line">    <span class="keyword">static</span> <span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">PreparedStatement</span> <span class="variable">ps</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">ResultSet</span> <span class="variable">rs</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> SQLException</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> ClassNotFoundException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">TestSQLConnMySQL</span><span class="params">()</span> <span class="keyword">throws</span> SQLException, ClassNotFoundException &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Class.forName(<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 1.获取连接参数url,username,password,默认端口是3306</span></span><br><span class="line"><span class="comment">             * MySQL：url =&quot;jdbc:mysql://127.0.0.1:3306/test&quot;;</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="comment">/** MySQL拼接url **/</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;jdbc:mysql://192.168.245.147:3306/TEST?useUnicode=true&amp;characterEncoding=utf-8&quot;</span>;</span><br><span class="line">            <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> <span class="string">&quot;root&quot;</span>;</span><br><span class="line">            <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> <span class="string">&quot;Mysql@123456&quot;</span>;</span><br><span class="line">            <span class="comment">//获取连接</span></span><br><span class="line">            conn = DriverManager.getConnection(url, username, password);</span><br><span class="line">            <span class="keyword">if</span>(<span class="literal">null</span> != conn) &#123;</span><br><span class="line">                log.info(<span class="string">&quot;connect database success...&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                log.error(<span class="string">&quot;connect database failed...&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//查询数据库</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;SELECT * FROM STUDY&quot;</span>;</span><br><span class="line">            <span class="comment">// 3.通过preparedStatement执行SQL</span></span><br><span class="line">            ps = conn.prepareStatement(sql);    </span><br><span class="line">            <span class="comment">// 4.执行查询,获取结果集</span></span><br><span class="line">            rs = ps.executeQuery();</span><br><span class="line">            <span class="comment">// 5.遍历结果集，前提是你的数据库创建了表以及有数据</span></span><br><span class="line">            <span class="keyword">while</span> (rs.next()) &#123;</span><br><span class="line">                <span class="comment">//对应数据库表中字段类型Int使用getInt，varchar使用getString</span></span><br><span class="line">                System.out.println(<span class="string">&quot;ID:&quot;</span> + rs.getInt(<span class="string">&quot;ID&quot;</span>));</span><br><span class="line">                System.out.println(<span class="string">&quot;姓名：&quot;</span> + rs.getString(<span class="string">&quot;NAMES&quot;</span>));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="comment">// 6.关闭连接 释放资源</span></span><br><span class="line">            rs.close();</span><br><span class="line">            ps.close();</span><br><span class="line">            conn.close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<p><strong>参考资料</strong>：</p>
<ul>
<li>MySQL8.0官方文档：<span class="exturl" data-url="aHR0cHM6Ly9kZXYubXlzcWwuY29tL2RvYy9yZWZtYW4vOC4wL2VuLw==">MySQL8.0官方文档<i class="fa fa-external-link-alt"></i></span></li>
<li>Windows 平台解压命令 expand-archive：<span class="exturl" data-url="aHR0cHM6Ly9sZWFybi5taWNyb3NvZnQuY29tL3poLWNuL3Bvd2Vyc2hlbGwvbW9kdWxlL21pY3Jvc29mdC5wb3dlcnNoZWxsLmFyY2hpdmUvZXhwYW5kLWFyY2hpdmU/dmlldz1wb3dlcnNoZWxsLTcuNA==">expand-archive<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>MySQL 文档整理合集（5.6、5.7、8.0、8.3）：</p>
<p>链接: <span class="exturl" data-url="aHR0cHM6Ly9wYW4uYmFpZHUuY29tL3MvMWpHa0dhcldaV1ZuelE5c28wRDhtYUE/cHdkPThrZmY=">https://pan.baidu.com/s/1jGkGarWZWVnzQ9so0D8maA?pwd=8kff<i class="fa fa-external-link-alt"></i></span> </p>
<p>提取码: 8kff </p>
<p>文档如何食用，请阅读 docs 目录的 ReadME 文件。</p>
<hr>
<h1 id="END"><a href="#END" class="headerlink" title="END"></a>END</h1><p>以上就是本次 MySQL8.0.28 安装与使用的全部内容，希望能对你的工作与学习有所帮助。大本营在公众号，关注龙腾万里sky（ID：dywangk），目前还在完善中。<strong>能看到这里的，都是帅哥靓妹</strong>。如果感觉总结的不到位，也希望能留下您宝贵的意见，我会在文章中进行调整优化。</p>
<p>原创不易，转载也请标明出处和作者。</p>
<p>最后，希望对你的生活和工作有些许帮助哟！</p>
<p>—END—</p>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows 11 和 Rocky 9 Linux 初体验 MySQL8.0.33 简易安装教程</title>
    <url>/2023/05/21/MySQL8-0-33-%E7%AE%80%E6%98%93%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<p>当你看到这篇教程时，MySQL 目前最新GA（稳定）版本可能已经更新到了 MySQL8.0.36 或者更高，<span class="exturl" data-url="aHR0cHM6Ly9kZXYubXlzcWwuY29tL2RvYy9yZWxub3Rlcy9teXNxbC84LjAvZW4vbmV3cy04LTAtMzYuaHRtbA==">MySQL :: MySQL 8.0 Release Notes :: Changes in MySQL 8.0.36 (2024-01-16, General Availability)<i class="fa fa-external-link-alt"></i></span>，创新版 Innovation <span class="exturl" data-url="aHR0cHM6Ly9kZXYubXlzcWwuY29tL2RvYy9yZWxub3Rlcy9teXNxbC84LjMvZW4vbmV3cy04LTMtMC5odG1s">MySQL :: MySQL 8.3 Release Notes :: Changes in MySQL 8.3.0 (2024-01-16, Innovation Release)<i class="fa fa-external-link-alt"></i></span>。</p>
<p>MySQL 文档整理合集（5.6、5.7、8.0、8.1、8.2、8.3）：</p>
<p>链接: <span class="exturl" data-url="aHR0cHM6Ly9wYW4uYmFpZHUuY29tL3MvMWpHa0dhcldaV1ZuelE5c28wRDhtYUE/cHdkPThrZmY=">https://pan.baidu.com/s/1jGkGarWZWVnzQ9so0D8maA?pwd=8kff<i class="fa fa-external-link-alt"></i></span> </p>
<p>提取码: 8kff </p>
<p>文档如何食用，请阅读 docs 目录的 ReadME 文件。</p>
<p>Windows 11 和 Rocky 9 Linux 初体验 MySQL8.0.33 简易安装教程。</p>
<hr>
<p>MySQL 8.0 目前最新稳定版本已经更新到了 MySQL 8.0.33，估计下一个稳定版本（大约在今年 7月份）推出。当然，这是我个人根据 MySQL 的发行注记做出的推测。</p>
<p>本篇总结作为对之前发出的MySQL系列博文 《MySQL8.0.28安装教程全程参考MySQL官方文档》补充说明。</p>
<p>MySQL 8.0.x 简易安装教程。</p>
<p><strong>注意</strong>：如果你想在 MySQL 官网获取 8.0.29 ，是找不到资源的。因为出现了重大问题，官网直接移除了下载资源。推荐跳过 MySQL 8.0.29，升级到更高的版本或者使用历史稳定版本。</p>
<blockquote>
<p>Important<br>This release is no longer available for download. It was removed due to a critical issue that could cause data in InnoDB<br>tables having added columns to be interpreted incorrectly. Please upgrade to MySQL 8.0.30 instead.</p>
</blockquote>
<span id="more"></span>



<h1 id="Windows-平台安装-MySQL"><a href="#Windows-平台安装-MySQL" class="headerlink" title="Windows 平台安装 MySQL"></a>Windows 平台安装 MySQL</h1><h2 id="部署-MySQL"><a href="#部署-MySQL" class="headerlink" title="部署 MySQL"></a>部署 MySQL</h2><p><strong>Windows install MySQL 8.0.x (Archive zip) 简易安装教程</strong></p>
<p><strong>友情提示</strong>：从 MySQL 5.7 开始，Archive zip 默认不再提供默认的 my.ini 或者 my.cnf 配置文件，需要手动构建。</p>
<p><strong>注意</strong>：x 代表使用 MySQL 8.0 某个具体版本，比如我演示：mysql-8.0.33-winx64.zip。</p>
<ol>
<li>获取 mysql-8.0.33-winx64.zip：<span class="exturl" data-url="aHR0cHM6Ly9jZG4ubXlzcWwuY29tLy9Eb3dubG9hZHMvTXlTUUwtOC4wL215c3FsLTguMC4zMy13aW54NjQuemlw">https://cdn.mysql.com//Downloads/MySQL-8.0/mysql-8.0.33-winx64.zip<i class="fa fa-external-link-alt"></i></span></li>
<li>解压免安装版 MySQL：<code>unzip mysql-8.0.x-winx64.zip</code></li>
<li>切换到 MySQL 解压目录：<code>cd mysql-8.0.x-winx64</code></li>
<li>新增 MySQL 配置文件： <code>my.ini</code>，详细配置可以参考官方文档，或者安装 msi 安装包，复制一份作为参考。</li>
<li>初始化 MySQL：<code>bin\mysqld --initialize-insecure</code> 或者 <code>bin\mysqld --initialize-insecure --console</code> </li>
<li>注册 MySQL 服务：<code>bin\mysqld --install MySQL80</code>（将 MySQL 服务注册到 service，可以使用 net 命令进行管理）</li>
<li>启动 MySQL 服务：<code>net start MySQL80</code> 或者 <code>sc start MySQL80</code></li>
<li>登录 MySQL 字符终端管理界面：<code>mysql  -uroot  -p</code></li>
</ol>
<p><strong>友情提醒</strong>，如果你在 Windows 平台原生无法使用 <code>unzip</code> 命令，请尝试打开 <strong>powershell</strong> 使用 <strong>Expand-Archive</strong> 命令解压。</p>
<p>示例<strong>解压到默认目录</strong>：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Expand-Archive</span> .\mysql<span class="literal">-8</span>.<span class="number">0.33</span><span class="literal">-winx64</span>.zip</span><br></pre></td></tr></table></figure>



<p>示例<strong>解压到指定目录</strong> <code>D:\work\</code>，使用参数  <code>-DestinationPath</code>：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Expand-Archive</span> .\mysql<span class="literal">-8</span>.<span class="number">0.33</span><span class="literal">-winx64</span>.zip <span class="literal">-DestinationPath</span> D:\work\</span><br></pre></td></tr></table></figure>



<p>如果你想<strong>指定压缩文件路径D:\Downloads\DBMS\MySQL\winx64\mysql-8.0.28-winx64.zip</strong></p>
<p>可以使用 <strong>-Path</strong> 参数：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Expand-Archive</span> <span class="literal">-Path</span> D:\Downloads\DBMS\MySQL\winx64\mysql<span class="literal">-8</span>.<span class="number">0.33</span><span class="literal">-winx64</span>.zip <span class="literal">-DestinationPath</span> D:\work\</span><br></pre></td></tr></table></figure>

<p><strong>可参考资料</strong>：<span class="exturl" data-url="aHR0cHM6Ly9sZWFybi5taWNyb3NvZnQuY29tL3poLWNuL3Bvd2Vyc2hlbGwvbW9kdWxlL21pY3Jvc29mdC5wb3dlcnNoZWxsLmFyY2hpdmUvZXhwYW5kLWFyY2hpdmU/dmlldz1wb3dlcnNoZWxsLTcuNA==">expand-archive<i class="fa fa-external-link-alt"></i></span></p>
<p>Windows 环境新建 my.ini 做如下设置，指定基本安装目录（basedir）与数据存放目录（datadir）以及端口号（port）：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">port=3307</span><br><span class="line">basedir=D:\\mysql-8.0.33-winx64</span><br><span class="line">datadir=D:\\mysql-8.0.33-winx64\\data</span><br></pre></td></tr></table></figure>



<p><strong>为了便于演示，我设置 port 端口为 3307 ，登录时通过参数 -P 指定特定端口号</strong>。  </p>
<p>复现在网上看到的一个问题，如果出现如下问题，如何解决？</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">PS D:\mysql-8.0.33-winx64&gt; bin\mysqld –initialize-insecure –console</span><br><span class="line">[System] [MY-010116] [Server] D:\mysql-8.0.33-winx64\bin\mysqld.exe (mysqld 8.0.33) starting as process 12860</span><br><span class="line">[Warning] [MY-010091] [Server] </span><br><span class="line">Can<span class="string">&#x27;t create test file D:\mysql-8.0.33-winx64\data\mysqld_tmp_file_case_insensitive_test.lower-test</span></span><br><span class="line"><span class="string">[Warning] [MY-010091] [Server] </span></span><br><span class="line"><span class="string">Can&#x27;</span>t create <span class="built_in">test</span> file D:\mysql-8.0.33-winx64\data\mysqld_tmp_file_case_insensitive_test.lower-test</span><br><span class="line">[ERROR] [MY-013376] [Server] Failed to <span class="built_in">set</span> datadir to <span class="string">&#x27;D:\mysql-8.0.33-winx64\data\&#x27;</span> (OS errno: 2 - No such file or directory)</span><br><span class="line">[ERROR] [MY-010119] [Server] Aborting</span><br><span class="line">[System] [MY-010910] [Server] D:\mysql-8.0.33-winx64\bin\mysqld.exe: Shutdown complete (mysqld 8.0.33)  MySQL Community Server - GPL.</span><br></pre></td></tr></table></figure>

<p>需要检查初始化命令参数是否有缺失：bin\mysqld.exe –initialize-insecure –console，才发现从 Windows powershell 中从文档复制过来的 <code>--</code> 变成了 – 拼接在一起的单横杠。</p>
<p><strong>注意</strong>：注意细节问题。如果出现初始化 data 目录失败，某某文件、目录无法创建等等问题。有可能是格式显示问题，复制粘贴参数时单 - 中横杠 和 <code>--</code> 双中横杠没有区分开来，如果放在代码块中正常显示。</p>
<p>如下是示例，初始化 MySQL 方式：</p>
<ol>
<li>密码随机：<code>bin\mysqld --initialize</code></li>
<li>密码置空：<code>bin\mysqld --initialize-insecure</code></li>
<li>密码置空且将信息打印在字符命令行界面上：<code>bin\mysqld --initialize-insecure --console</code></li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bin\mysqld --initialize  			<span class="comment"># 密码随机</span></span><br><span class="line">bin\mysqld --initialize-insecure 	<span class="comment"># 密码置空</span></span><br><span class="line">bin\mysqld --initialize-insecure --console 	<span class="comment"># 密码置空且将信息打印在字符命令行界面上 </span></span><br></pre></td></tr></table></figure>




<p><strong>友情提示</strong>：打开 CMD 或者 PowerShell 时，请以管理员身份运行，如果没有，安装服务时则会提示权限拒绝，如下所示。</p>
<p><strong>D:\software\mysql-8.0.33-winx64\bin&gt;mysqld –install MySQL80</strong><br><strong>Install&#x2F;Remove of the Service Denied!</strong></p>
<p><strong>Windows 11 操作系统中安装 MySQL8.0.33</strong>  (noinstall Archive zip) 步骤</p>
<p>使用 Windows 自带的终端管理工具，打开 PowerShell：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">PS D:\work&gt; <span class="built_in">cd</span> D:\work\mysql-8.0.33-winx64</span><br><span class="line">PS D:\work\mysql-8.0.33-winx64&gt; .\bin\mysqld --initialize-insecure --console</span><br><span class="line">2023-05-21T07:04:03.420220Z 0 [System] [MY-013169] [Server] D:\work\mysql-8.0.33-winx64\bin\mysqld.exe (mysqld 8.0.33) initializing of server <span class="keyword">in</span> progress as process 13344</span><br><span class="line">2023-05-21T07:04:03.465908Z 1 [System] [MY-013576] [InnoDB] InnoDB initialization has started.</span><br><span class="line">2023-05-21T07:04:03.941998Z 1 [System] [MY-013577] [InnoDB] InnoDB initialization has ended.</span><br><span class="line">2023-05-21T07:04:05.242589Z 6 [Warning] [MY-010453] [Server] root@localhost is created with an empty password ! Please consider switching off the --initialize-insecure option.</span><br><span class="line"></span><br><span class="line">D:\work\mysql-8.0.33-winx64&gt;bin\mysqld --install MySQL80</span><br><span class="line">Service successfully installed.</span><br><span class="line">D:\work\mysql-8.0.33-winx64&gt;net start MySQL80</span><br><span class="line">MySQL80 服务正在启动 .</span><br><span class="line">MySQL80 服务已经启动成功。</span><br><span class="line"></span><br><span class="line">PS D:\work\mysql-8.0.33-winx64&gt; bin\mysql -uroot -p -P 3307</span><br><span class="line">Enter password:</span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection <span class="built_in">id</span> is 8</span><br><span class="line">Server version: 8.0.33 MySQL Community Server - GPL</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2023, Oracle and/or its affiliates.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type <span class="string">&#x27;help;&#x27;</span> or <span class="string">&#x27;\h&#x27;</span> <span class="keyword">for</span> <span class="built_in">help</span>. Type <span class="string">&#x27;\c&#x27;</span> to clear the current input statement.</span><br><span class="line"></span><br><span class="line">mysql&gt;</span><br></pre></td></tr></table></figure>





<h2 id="初步使用-MySQL"><a href="#初步使用-MySQL" class="headerlink" title="初步使用 MySQL"></a>初步使用 MySQL</h2><p>默认登录：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql -uroot -p</span><br></pre></td></tr></table></figure>

<p>指定 ip 地址以及端口号：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql -uroot -p -h 192.168.245.133 -P 3307</span><br></pre></td></tr></table></figure>

<p>参数含义：</p>
<ol>
<li>-u：指定用户名（user）</li>
<li>-p：指定密码（password）</li>
<li>-h：指定主机地址（host）</li>
<li>-P：指定端口号（port）</li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">PS D:\work\mysql<span class="number">-8.0</span><span class="number">.33</span><span class="operator">-</span>winx64<span class="operator">&gt;</span> bin\mysql <span class="operator">-</span>uroot <span class="operator">-</span>p <span class="operator">-</span>P <span class="number">3307</span></span><br><span class="line">Enter password:</span><br><span class="line">Welcome <span class="keyword">to</span> the MySQL monitor.  Commands <span class="keyword">end</span> <span class="keyword">with</span> ; <span class="keyword">or</span> \g.</span><br><span class="line">Your MySQL connection id <span class="keyword">is</span> <span class="number">8</span></span><br><span class="line">Server version: <span class="number">8.0</span><span class="number">.33</span> MySQL Community Server <span class="operator">-</span> GPL</span><br><span class="line"></span><br><span class="line">Copyright (c) <span class="number">2000</span>, <span class="number">2023</span>, Oracle <span class="keyword">and</span><span class="operator">/</span><span class="keyword">or</span> its affiliates.</span><br><span class="line"></span><br><span class="line">Oracle <span class="keyword">is</span> a registered trademark <span class="keyword">of</span> Oracle Corporation <span class="keyword">and</span><span class="operator">/</span><span class="keyword">or</span> its</span><br><span class="line">affiliates. Other names may be trademarks <span class="keyword">of</span> their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type <span class="string">&#x27;help;&#x27;</span> <span class="keyword">or</span> <span class="string">&#x27;\h&#x27;</span> <span class="keyword">for</span> help. Type <span class="string">&#x27;\c&#x27;</span> <span class="keyword">to</span> clear the <span class="keyword">current</span> input statement.</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="number">990</span> <span class="operator">+</span> <span class="number">8</span> \G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line"><span class="number">990</span> <span class="operator">+</span> <span class="number">8</span>: <span class="number">998</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">create</span> database study;</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.01</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> use study;</span><br><span class="line">Database changed</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">create</span> <span class="keyword">table</span> books(books_id <span class="type">int</span> <span class="keyword">primary</span> key,books_name <span class="type">varchar</span>(<span class="number">64</span>),isbn <span class="type">varchar</span>(<span class="number">64</span>),author <span class="type">varchar</span>(<span class="number">33</span>));</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.02</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> books\G</span><br><span class="line"><span class="keyword">Empty</span> <span class="keyword">set</span> (<span class="number">0.01</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">insert</span> <span class="keyword">into</span> books(books_id,books_name,isbn,author) <span class="keyword">values</span>(<span class="number">1001</span>,<span class="string">&#x27;绝世武功秘籍&#x27;</span>,<span class="string">&#x27;22-90-12345&#x27;</span>,<span class="string">&#x27;不详&#x27;</span>);</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> books\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">  books_id: <span class="number">1001</span></span><br><span class="line">books_name: 绝世武功秘籍</span><br><span class="line">      isbn: <span class="number">22</span><span class="number">-90</span><span class="number">-12345</span></span><br><span class="line">    author: 不详</span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>



<p><strong>检查日志文件</strong> ：data directory host_name.err file.could not open the mysql.plugin table</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">711538Z 0 [System] [MY-013169] [Server] d:\mysql-8.0.33-winx64\bin\mysqld.exe (mysqld 8.0.33) initializing of server <span class="keyword">in</span> progress as process 13908</span><br><span class="line">746579Z 1 [System] [MY-013576] [InnoDB] InnoDB initialization has started.</span><br><span class="line">205845Z 1 [System] [MY-013577] [InnoDB] InnoDB initialization has ended.</span><br><span class="line">399260Z 6 [Warning] [MY-010453] [Server] root@localhost is created with an empty password ! Please consider switching off the --initialize-insecure option.**</span><br><span class="line">020963Z 0 [System] [MY-010116] [Server] D:\mysql-8.0.33-winx64\bin\mysqld (mysqld 8.0.33) starting as process 13756</span><br><span class="line">038677Z 1 [System] [MY-013576] [InnoDB] InnoDB initialization has started.</span><br><span class="line">333181Z 1 [System] [MY-013577] [InnoDB] InnoDB initialization has ended.</span><br><span class="line">552785Z 0 [Warning] [MY-010068] [Server] CA certificate ca.pem is self signed.</span><br><span class="line">553344Z 0 [System] [MY-013602] [Server] Channel mysql_main configured to support TLS. Encrypted connections are now supported <span class="keyword">for</span> this channel.</span><br><span class="line">583339Z 0 [System] [MY-011333] [Server] X Plugin ready <span class="keyword">for</span> connections. Bind-address: <span class="string">&#x27;::&#x27;</span> port: 33360</span><br><span class="line">583379Z 0 [System] [MY-010931] [Server] D:\mysql-8.0.33-winx64\bin\mysqld: ready <span class="keyword">for</span> connections. Version: <span class="string">&#x27;8.0.33&#x27;</span>  socket: <span class="string">&#x27;&#x27;</span>  port: 3307  MySQL Community Server - GPL.</span><br><span class="line">085937Z 0 [System] [MY-013105] [Server] D:\mysql-8.0.33-winx64\bin\mysqld: Normal shutdown.</span><br><span class="line">812152Z 0 [System] [MY-010910] [Server] D:\mysql-8.0.33-winx64\bin\mysqld: Shutdown complete (mysqld 8.0.33)  MySQL Community Server - GPL.</span><br></pre></td></tr></table></figure>


<p>发现问题：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">could not open the mysql.plugin table</span><br></pre></td></tr></table></figure>

<p>尝试解决问题：</p>
<ol>
<li>检查配置文件：my.ini</li>
<li>分析问题，检查初始化和安装服务：<code>mysqld --initialize</code> 或者 <code>mysqld --initialize-insecure --console</code></li>
<li>移除服务：<code>mysqld --remove MySQL80</code></li>
<li>移除数据目录：data</li>
<li>排查问题，再次初始化：<code>mysqld --initialize</code> 或者 <code>mysqld --initialize-insecure --console</code></li>
<li>再次安装服务：<code>mysqld --install MySQL80</code></li>
</ol>
<h2 id="修改密码"><a href="#修改密码" class="headerlink" title="修改密码"></a>修改密码</h2><p>登录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql -uroot -p</span><br></pre></td></tr></table></figure>

<p>修改用户密码</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;mypwd@123&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p>创建用户 root，主机地址为 localhost</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;mypwd@123&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p>创建用户 root，主机地址%，匹配所有</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;mypwd@123&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p>授权 root 用户所有权限，即可使远程登录</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">ON</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> <span class="keyword">WITH</span> <span class="keyword">GRANT</span> OPTION;</span><br></pre></td></tr></table></figure>

<p><strong>刷新权限</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">flush privileges;</span><br></pre></td></tr></table></figure>

<p>只做简单介绍，更详细设置请参考 MySQL8.0 官方文档第 6 章节 Security：  <span class="exturl" data-url="aHR0cHM6Ly9kZXYubXlzcWwuY29tL2RvYy9yZWZtYW4vOC4wL2VuL2FjY2Vzcy1jb250cm9sLmh0bWw=">6.2 Access Control and Account Management<i class="fa fa-external-link-alt"></i></span></p>
<h1 id="Linux-平台-Rocky-9-安装-MySQL"><a href="#Linux-平台-Rocky-9-安装-MySQL" class="headerlink" title="Linux 平台 Rocky 9 安装 MySQL"></a>Linux 平台 Rocky 9 安装 MySQL</h1><p>Rocky 9 Linux 平台 MySQL 安装方式：</p>
<ol>
<li>yum 源：使用 Linux 发行版自带的 yum 工具进行安装。</li>
<li>rpm 包安装：最为简单，但不灵活，适合初学者使用。</li>
<li>二进制包（binary package）：编译好的源码包，比 rpm 包更灵活。个人认为是安装多个服务最佳选择。</li>
<li>源码包（source package）：最灵活，可根据需求编译安装功能，难易度最高。</li>
<li>docker 形式安装：其实是在容器中安装。</li>
</ol>
<p>如下，介绍二进制包、rpm 包、yum 源以及源码包形式 MySQL 简易安装教程。</p>
<h2 id="binary-package"><a href="#binary-package" class="headerlink" title="binary package"></a>binary package</h2><p><strong>01	binary package：使用 Linux 平台通用的二进制包安装</strong></p>
<p>获取：mysql-8.0.33-linux-glibc2.28-x86_64.tar.gz</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9jZG4ubXlzcWwuY29tLy9Eb3dubG9hZHMvTXlTUUwtOC4wL215c3FsLTguMC4zMy1saW51eC1nbGliYzIuMjgteDg2XzY0LnRhci5neg==">https://cdn.mysql.com//Downloads/MySQL-8.0/mysql-8.0.33-linux-glibc2.28-x86_64.tar.gz<i class="fa fa-external-link-alt"></i></span></p>
<p>解压：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar -zxvf mysql-8.0.33-linux-glibc2.28-x86_64.tar.gz</span><br></pre></td></tr></table></figure>

<p>需要安装依赖包：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dnf install libaio</span><br><span class="line">dnf -y install ncurses-compat-libs</span><br></pre></td></tr></table></figure>



<p>如下是详细安装步骤：</p>
<blockquote>
<p>2.2 Installing MySQL on Unix&#x2F;Linux Using Generic Binaries</p>
</blockquote>
<ol>
<li>创建 mysql 组；</li>
<li>创建 mysql 用户（没有服务器主机登录权限的用户）； </li>
<li>切换到 local 目录；</li>
<li>解压 tar 包 mysql 文件；</li>
<li>创建软链接，full-path-to-mysql-VERSION-OS 是你解压后 mysql 文件目录名称；</li>
<li>进入到 mysql 目录；</li>
<li>创建 mysql-files 目录；</li>
<li>赋予 mysql 用户 mysql-files 所属目录与所属组为 mysql；</li>
<li>赋予 mysql-files 权限750；</li>
<li>初始化并设置用户为 mysql，生成随机密码会打印在字符界面（使用 <code>--initialize-insecure</code> 则设置空密码）；</li>
<li>启动 ssl_rsa 验证；</li>
<li>启动 MySQL 服务；</li>
<li>复制 mysql.server 脚本服务到 Linux 环境 init.d 目录，便于管理。</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$&gt; groupadd mysql                </span><br><span class="line">$&gt; useradd -r -g mysql -s /bin/false mysql   </span><br><span class="line">$&gt; <span class="built_in">cd</span> /usr/local                  </span><br><span class="line">$&gt; tar xvf /path/to/mysql-VERSION-OS.tar.xz   </span><br><span class="line">$&gt; <span class="built_in">ln</span> -s full-path-to-mysql-VERSION-OS mysql  </span><br><span class="line">$&gt; <span class="built_in">cd</span> mysql   </span><br><span class="line">$&gt; <span class="built_in">mkdir</span> mysql-files  </span><br><span class="line">$&gt; <span class="built_in">chown</span> mysql:mysql mysql-files </span><br><span class="line">$&gt; <span class="built_in">chmod</span> 750 mysql-files  </span><br><span class="line">$&gt; bin/mysqld --initialize-insecure --user=mysql </span><br><span class="line">$&gt; bin/mysql_ssl_rsa_setup   </span><br><span class="line">$&gt; bin/mysqld_safe --user=mysql &amp; </span><br><span class="line"></span><br><span class="line"><span class="comment">#Next command is optional  </span></span><br><span class="line">$&gt; <span class="built_in">cp</span> support-files/mysql.server /etc/init.d/mysql.server</span><br></pre></td></tr></table></figure>

<p>如果在 RHEL 9 中默认没有安装 chkconfig，没有软连接 &#x2F;etc&#x2F;init.d&#x2F; 目录，请安装 chkconfig 管理工具</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dnf -y install chkconfig-1.20-2.el9.x86_64</span><br></pre></td></tr></table></figure>

<p>启动 MySQL 服务</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl start mysql.server</span><br></pre></td></tr></table></figure>

<p>如果使用 systemctl 启动 MySQL 服务，出现<code>/etc/rc.d/init.d/mysql.server:行239: /usr/local/mysql/bin/my_print_defaults</code>: 权限不够，<code>Starting MySQL ERROR! Couldn&#39;t find MySQL server (/usr/local/mysql/bin/mysqld_safe)</code></p>
<p><strong>解决方案，配置 MySQL 环境变量</strong>。补充一点，此处只介绍设置全局生效环境变量，需要 root 用户权限，或者使用 sudo 提权。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost mysql]<span class="comment"># systemctl status mysql</span></span><br><span class="line">● mysql.server.service - LSB: start and stop MySQL</span><br><span class="line">     Loaded: loaded (/etc/rc.d/init.d/mysql.server; generated)</span><br><span class="line">     Active: active (exited) since Tue 2023-05-23 16:26:14 CST; 7min ago</span><br><span class="line">       Docs: man:systemd-sysv-generator(8)</span><br><span class="line">        CPU: 12ms</span><br><span class="line"></span><br><span class="line">5月 23 16:26:14 localhost.localdomain systemd[1]: Starting LSB: start and stop MySQL...</span><br><span class="line">5月 23 16:26:14 localhost.localdomain mysql.server[4244]: /etc/rc.d/init.d/mysql.server:行239: /usr/local/mysql/bin/my_print_defaults: 权限不够</span><br><span class="line">5月 23 16:26:14 localhost.localdomain mysql.server[4237]: Starting MySQL ERROR! Couldn<span class="string">&#x27;t find MySQL server (/usr/local/mysql/bin/mysqld_safe)</span></span><br><span class="line"><span class="string">5月 23 16:26:14 localhost.localdomain systemd[1]: Started LSB: start and stop MySQL.</span></span><br></pre></td></tr></table></figure>


<p>则做如下设置，编辑：vim &#x2F;etc&#x2F;profile，需要 root 用户权限，或者使用 sudo vim &#x2F;etc&#x2F;profile：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># mysql home</span></span><br><span class="line">MYSQL_HOME=/usr/local/mysql</span><br><span class="line">PATH=<span class="variable">$PATH</span>:<span class="variable">$MYSQL_HOME</span>/bin</span><br><span class="line"><span class="built_in">export</span> MYSQL_HOME PATH</span><br></pre></td></tr></table></figure>
<p>执行 <code>source /etc/profile</code> 或者 <code>sudo source /etc/profile</code> 命令，环境变量立即生效。</p>
<p>再次查看 MySQL 服务状态：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost mysql]<span class="comment"># systemctl status mysql</span></span><br><span class="line">● mysql.server.service - LSB: start and stop MySQL</span><br><span class="line">     Loaded: loaded (/etc/rc.d/init.d/mysql.server; generated)</span><br><span class="line">     Active: active (running) since Tue 2023-05-23 16:40:35 CST; 4s ago</span><br><span class="line">       Docs: man:systemd-sysv-generator(8)</span><br><span class="line">    Process: 5003 ExecStart=/etc/rc.d/init.d/mysql.server start (code=exited, status=0/SUCCESS)</span><br><span class="line">      Tasks: 39 (<span class="built_in">limit</span>: 22833)</span><br><span class="line">     Memory: 370.1M</span><br><span class="line">        CPU: 765ms</span><br><span class="line">     CGroup: /system.slice/mysql.server.service</span><br><span class="line">             ├─5014 /bin/sh /usr/local/mysql/bin/mysqld_safe --datadir=/usr/local/mysql/data --pid-file=/usr/local/mysql/data/localhost.localdo&gt;</span><br><span class="line">             └─5153 /usr/local/mysql/bin/mysqld --basedir=/usr/local/mysql --datadir=/usr/local/mysql/data --plugin-dir=/usr/local/mysql/lib/pl&gt;</span><br><span class="line"></span><br><span class="line">5月 23 16:40:34 localhost.localdomain systemd[1]: Starting LSB: start and stop MySQL...</span><br><span class="line">5月 23 16:40:35 localhost.localdomain mysql.server[5003]: Starting MySQL. SUCCESS!</span><br><span class="line">5月 23 16:40:35 localhost.localdomain systemd[1]: Started LSB: start and stop MySQL.</span><br></pre></td></tr></table></figure>


<p>设置开机自启</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> mysql.server</span><br></pre></td></tr></table></figure>

<p>当然，你还可以通过这种方式启动与关闭 MySQL 服务：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">support-files/mysql.server start</span><br><span class="line">Starting MySQL.. SUCCESS!</span><br><span class="line"></span><br><span class="line">support-files/mysql.server stop</span><br><span class="line">Shutting down MySQL. SUCCESS!</span><br></pre></td></tr></table></figure>

<p>使用 <code>mysql.server</code> 脚本，支持 <code>start|stop|restart|reload|force-reload|status</code> 多种命令操作：</p>
<ol>
<li>start：启动服务</li>
<li>stop：停止服务</li>
<li>restart：重启服务</li>
<li>reload：重载服务</li>
<li>force-reload：强制重载服务</li>
<li>status：查看服务状态</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost mysql]<span class="comment"># support-files/mysql.server</span></span><br><span class="line">Usage: mysql.server  &#123;start|stop|restart|reload|force-reload|status&#125;  [ MySQL server options ]</span><br></pre></td></tr></table></figure>


<p>登录 MySQL 字符命令终端（已经配置好环境变量）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql -uroot -p</span><br></pre></td></tr></table></figure>

<p>登录 MySQL 字符命令终端（没有环境变量），切换到部署 MySQL 根目录，<code>cd /usr/local/mysql</code>，然后执行如下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bin/mysql -uroot -p</span><br></pre></td></tr></table></figure>


<p>修改用户密码</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;Mypwd@123&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p>创建用户root，主机地址为localhost</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;Mypwd@123&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p>创建用户root，主机地址%，匹配所有</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;Mypwd@123&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p>授权root用户所有权限，即可使远程登录</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">ON</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> <span class="keyword">WITH</span> <span class="keyword">GRANT</span> OPTION;</span><br></pre></td></tr></table></figure>

<p><strong>刷新权限</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">flush privileges;</span><br></pre></td></tr></table></figure>


<p>更多权限细化设置请参考 MySQL8.0.x 官方文档第 6 章节 Security。</p>
<blockquote>
<p>6.2 Access Control and Account Management</p>
</blockquote>
<h2 id="rpm-package"><a href="#rpm-package" class="headerlink" title="rpm package"></a>rpm package</h2><p><strong>02	rpm 包安装</strong></p>
<p>Rocky 9  Linux 平台以 rpm 包形式安装 MySQL8.0.33。</p>
<p>获取：下载最新版本的 mysql-8.0.33-1.el9.x86_64.rpm-bundle.tar，将下面介绍的 rpm 包通过解压缩软件提取出来。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar -xvf mysql-8.0.33-1.el9.x86_64.rpm-bundle.tar</span><br></pre></td></tr></table></figure>

<p><strong>友情提示</strong>：如今有一部分 Linux 发行版已经将 MariaDB 作为默认数据库软件。如果安装时勾选了数据库软件选项，你可能需要卸载 MariaDB 的依赖库：yum remove mariadb-libs 。</p>
<blockquote>
<p>2.5 Installing MySQL on Linux RPM Packages</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum remove mariadb-libs</span><br><span class="line">rpm -ivh mysql-community-client-plugins-8.0.33-1.el9.x86_64.rpm</span><br><span class="line">rpm -ivh mysql-community-common-8.0.33-1.el9.x86_64.rpm</span><br><span class="line">rpm -ivh mysql-community-icu-data-files-8.0.33-1.el9.x86_64.rpm</span><br><span class="line">rpm -ivh mysql-community-libs-8.0.33-1.el9.x86_64.rpm</span><br><span class="line">dnf -y install openssl-devel-1:3.0.7-6.el9_2.x86_64</span><br><span class="line">rpm -ivh mysql-community-devel-8.0.33-1.el9.x86_64.rpm</span><br><span class="line">rpm -ivh mysql-community-client-8.0.33-1.el9.x86_64.rpm</span><br><span class="line">rpm -ivh mysql-community-server-8.0.33-1.el9.x86_64.rpm</span><br></pre></td></tr></table></figure>

<p><strong>注意</strong>：如果你安装 mysql-community-devel-8.0.33-1.el9.x86_64.rpm 提示依赖检测需要 pkgconfig ( openssl )，做如下操作</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dnf -y install openssl-devel-1:3.0.7-6.el9_2.x86_64</span><br></pre></td></tr></table></figure>

<p>启动服务</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl start mysqld</span><br></pre></td></tr></table></figure>

<p>设置开机自启</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> mysqld</span><br></pre></td></tr></table></figure>

<p>安装后，默认使用临时随机密码，保存在 &#x2F;var&#x2F;log&#x2F;mysqld.log 文件中</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[wzgy@localhost soft]$ sudo grep <span class="string">&#x27;temporary password&#x27;</span> /var/log/mysqld.log</span><br><span class="line">2023-05-21T09:07:15.482313Z 6 [Note] [MY-010454] [Server] A temporary password is generated <span class="keyword">for</span> root@localhost: WT(yyZgUB0xd</span><br></pre></td></tr></table></figure>

<p>登录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql -uroot -p</span><br></pre></td></tr></table></figure>

<p>修改 root 用户密码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ALTER USER <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED BY <span class="string">&#x27;Mypwd@833&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p><strong>友情提示</strong>：密码组成规则，必须包含一位<strong>大写字母和特殊符号</strong>，且密码长度<strong>不低于 9 位</strong>。如果密码不符合设置规则，会提醒你当前设置的密码不安全：</p>
<p><strong>ERROR 1819 (HY000): Your password does not satisfy the current policy requirements</strong></p>
<p>卸载就比较简单，可以使用 Rocky 9 Linux 自带的 dnf 管理工具：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dnf remove mysql</span><br><span class="line">dnf remove mysql-community-client-plugins-8.0.33-1.el9.x86_64</span><br><span class="line">dnf remove mysql-community-common-8.0.33-1.el9.x86_64</span><br><span class="line">dnf remove mysql-community-icu-data-files-8.0.33-1.el9.x86_64</span><br></pre></td></tr></table></figure>



<p>如果你觉得，使用 rpm 包这样安装太繁琐，尤其是缺乏相关依赖包很头疼。可以使用发行版自带的 yum 或者 dnf 工具快速安装。</p>
<h2 id="yum-源"><a href="#yum-源" class="headerlink" title="yum 源"></a>yum 源</h2><p><strong>03	yum 源安装</strong></p>
<blockquote>
<p>Installing MySQL on Linux Using the MySQL Yum Repository</p>
</blockquote>
<p>友情提示：Centos 8（RHEL 8） 或者更高版本可以使用 dnf 替代 yum </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1. 下载：mysql80-community-release-el9-1.noarch.rpm</span><br><span class="line">   click https://repo.mysql.com//mysql80-community-release-el9-1.noarch.rpm</span><br><span class="line">2. $&gt; sudo yum install platform-and-version-specific-package-name.rpm</span><br><span class="line">3. 基于 EL9 系统安装：$&gt; sudo yum install mysql80-community-release-el9-&#123;version-number&#125;.noarch.rpm</span><br><span class="line">4. 启动 MySQL Server：$&gt; systemctl start mysqld</span><br><span class="line">5. 检测 MySQL Server：$&gt; systemctl status mysqld</span><br><span class="line">6. 登录 mysql：$&gt; mysql -uroot -p</span><br><span class="line">7. 修改密码：$&gt; ALTER USER <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED BY <span class="string">&#x27;MyNewPwd833!&#x27;</span>;</span><br></pre></td></tr></table></figure>



<h2 id="source-package"><a href="#source-package" class="headerlink" title="source package"></a>source package</h2><p><strong>04	Source：源码包安装</strong></p>
<blockquote>
<p>2.9 Installing MySQL from Source</p>
</blockquote>
<ol>
<li>新增 mysql 管理组</li>
<li>新增 mysql 用户</li>
<li>解压 mysql 安装包</li>
<li>创建 bld 目录</li>
<li>切换到 bld 目录</li>
<li>编译安装：cmake .. make make install</li>
<li>进入源码包安装后的 mysql 目录</li>
<li>创建目录 mysql-files</li>
<li>赋予 mysql-files 目录所属组和所属用户为 mysql</li>
<li>赋予 mysql-files 目录 750 权限</li>
<li>执行安全命令：<code>bin/mysql_ssl_rsa_setup</code></li>
<li>启动 mysql 服务：<code>bin/mysqld_safe --user=mysql &amp;</code></li>
<li>复制 mysql.server 脚本服务到 Linux 环境 init.d 目录，便于管理</li>
</ol>
<p>简易安装命令参考如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#Preconfiguration setup</span></span><br><span class="line"></span><br><span class="line">$&gt; groupadd mysql</span><br><span class="line">$&gt; useradd -r -g mysql -s /bin/false mysql</span><br><span class="line"></span><br><span class="line"><span class="comment">#Beginning of source-build specific instructions</span></span><br><span class="line"></span><br><span class="line">$&gt; tar zxvf mysql-VERSION.tar.gz</span><br><span class="line">$&gt; <span class="built_in">cd</span> mysql-VERSION</span><br><span class="line">$&gt; <span class="built_in">mkdir</span> bld</span><br><span class="line">$&gt; <span class="built_in">cd</span> bld</span><br><span class="line">$&gt; cmake ..</span><br><span class="line">$&gt; make</span><br><span class="line">$&gt; make install</span><br><span class="line"></span><br><span class="line"><span class="comment">#End of source-build specific instructions</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Postinstallation setup</span></span><br><span class="line"></span><br><span class="line">$&gt; <span class="built_in">cd</span> /usr/local/mysql</span><br><span class="line">$&gt; <span class="built_in">mkdir</span> mysql-files</span><br><span class="line">$&gt; <span class="built_in">chown</span> mysql:mysql mysql-files</span><br><span class="line">$&gt; <span class="built_in">chmod</span> 750 mysql-files</span><br><span class="line">$&gt; bin/mysqld --initialize --user=mysql</span><br><span class="line">$&gt; bin/mysql_ssl_rsa_setup</span><br><span class="line">$&gt; bin/mysqld_safe --user=mysql &amp;</span><br><span class="line"></span><br><span class="line"><span class="comment">#Next command is optional</span></span><br><span class="line"></span><br><span class="line">$&gt; <span class="built_in">cp</span> support-files/mysql.server /etc/init.d/mysql.server</span><br></pre></td></tr></table></figure>

<p>启动服务</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl start mysql.server</span><br></pre></td></tr></table></figure>

<p>设置开机自启</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> mysql.server</span><br></pre></td></tr></table></figure>

<p>登录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql -uroot -p</span><br></pre></td></tr></table></figure>



<h1 id="MySQL官方文档下载地址"><a href="#MySQL官方文档下载地址" class="headerlink" title="MySQL官方文档下载地址"></a>MySQL官方文档下载地址</h1><p>左侧导航栏有个Download this Manual：MySQL文档下载地址。</p>
<p>以下给出四个版本下载地址：</p>
<ol>
<li><p>MySQL8.3在线文档</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9kZXYubXlzcWwuY29tL2RvYy9yZWZtYW4vOC4zL2VuLw==">MySQL :: MySQL 8.3 Reference Manual<i class="fa fa-external-link-alt"></i></span></p>
</li>
<li><p>MySQL8.3文档PDF文件下载地址</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZHMubXlzcWwuY29tL2RvY3MvcmVmbWFuLTguMy1lbi5hNC5wZGY=">downloads.mysql.com&#x2F;docs&#x2F;refman-8.3-en.a4.pdf<i class="fa fa-external-link-alt"></i></span></p>
</li>
<li><p>MySQL8.0在线文档<br><span class="exturl" data-url="aHR0cHM6Ly9kZXYubXlzcWwuY29tL2RvYy9yZWZtYW4vOC4wL2Vu">https://dev.mysql.com/doc/refman/8.0/en<i class="fa fa-external-link-alt"></i></span></p>
</li>
<li><p>MySQL8.0文档PDF文件下载地址<br><span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZHMubXlzcWwuY29tL2RvY3MvcmVmbWFuLTguMC1lbi5hNC5wZGY=">https://downloads.mysql.com/docs/refman-8.0-en.a4.pdf<i class="fa fa-external-link-alt"></i></span></p>
</li>
<li><p>MySQL5.7在线文档<br><span class="exturl" data-url="aHR0cHM6Ly9kZXYubXlzcWwuY29tL2RvYy9yZWZtYW4vNS43L2VuLw==">https://dev.mysql.com/doc/refman/5.7/en/<i class="fa fa-external-link-alt"></i></span></p>
</li>
<li><p>MySQL5.7文档PDF文件下载地址<br><span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZHMubXlzcWwuY29tL2RvY3MvcmVmbWFuLTUuNy1lbi5hNC5wZGY=">https://downloads.mysql.com/docs/refman-5.7-en.a4.pdf<i class="fa fa-external-link-alt"></i></span></p>
</li>
<li><p>MySQL5.6在线文档（注：官方已停止维护，在线文档已经移动了，PDF下载地址还可使用）<br><span class="exturl" data-url="aHR0cHM6Ly9kZXYubXlzcWwuY29tL2RvYy9yZWZtYW4vNS42L2VuLw==">https://dev.mysql.com/doc/refman/5.6/en/<i class="fa fa-external-link-alt"></i></span></p>
</li>
<li><p>MySQL5.6文档PDF文件下载地址<br><span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZHMubXlzcWwuY29tL2RvY3MvcmVmbWFuLTUuNi1lbi5hNC5wZGY=">https://downloads.mysql.com/docs/refman-5.6-en.a4.pdf<i class="fa fa-external-link-alt"></i></span></p>
</li>
</ol>
<p><strong>友情提醒</strong>：下载官方文档尽量前往官方网站下载。某网站利用用户上传的资源，却厚着脸皮需要VIP才能下载，对这种行为表示鄙视。当然，也可以在文初获取我个人整理的压缩包组合（不定期更新）。</p>
<p>以上总结，仅供参考哟！希望对你的学习或者工作有所帮助。</p>
<p><strong>参考资料</strong>：</p>
<p>MySQL 官方文档第二章节： <span class="exturl" data-url="aHR0cHM6Ly9kZXYubXlzcWwuY29tL2RvYy9yZWZtYW4vOC4wL2VuL2luc3RhbGxpbmcuaHRtbA==">Chapter 2 Installing and Upgrading MySQL<i class="fa fa-external-link-alt"></i></span></p>
<p>MySQL8.0.x 官方文档第 6 章节 Security：  <span class="exturl" data-url="aHR0cHM6Ly9kZXYubXlzcWwuY29tL2RvYy9yZWZtYW4vOC4wL2VuL2FjY2Vzcy1jb250cm9sLmh0bWw=">6.2 Access Control and Account Management<i class="fa fa-external-link-alt"></i></span></p>
<p>Windows 平台解压命令 expand-archive：<span class="exturl" data-url="aHR0cHM6Ly9sZWFybi5taWNyb3NvZnQuY29tL3poLWNuL3Bvd2Vyc2hlbGwvbW9kdWxlL21pY3Jvc29mdC5wb3dlcnNoZWxsLmFyY2hpdmUvZXhwYW5kLWFyY2hpdmU/dmlldz1wb3dlcnNoZWxsLTcuNA==">expand-archive<i class="fa fa-external-link-alt"></i></span></p>
<p>—END—</p>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL8.0.x 简易安装教程</title>
    <url>/2023/03/15/MySQL8-0-x-%E7%AE%80%E6%98%93%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<p>当你看到这篇教程时，MySQL 目前最新GA（稳定）版本可能已经更新到了 MySQL8.0.36 或者更高，<span class="exturl" data-url="aHR0cHM6Ly9kZXYubXlzcWwuY29tL2RvYy9yZWxub3Rlcy9teXNxbC84LjAvZW4vbmV3cy04LTAtMzYuaHRtbA==">MySQL :: MySQL 8.0 Release Notes :: Changes in MySQL 8.0.36 (2024-01-16, General Availability)<i class="fa fa-external-link-alt"></i></span>，创新版 Innovation <span class="exturl" data-url="aHR0cHM6Ly9kZXYubXlzcWwuY29tL2RvYy9yZWxub3Rlcy9teXNxbC84LjMvZW4vbmV3cy04LTMtMC5odG1s">MySQL :: MySQL 8.3 Release Notes :: Changes in MySQL 8.3.0 (2024-01-16, Innovation Release)<i class="fa fa-external-link-alt"></i></span>。</p>
<p>MySQL 文档整理合集（5.6、5.7、8.0、8.1、8.2、8.3）：</p>
<p>链接: <span class="exturl" data-url="aHR0cHM6Ly9wYW4uYmFpZHUuY29tL3MvMWpHa0dhcldaV1ZuelE5c28wRDhtYUE/cHdkPThrZmY=">https://pan.baidu.com/s/1jGkGarWZWVnzQ9so0D8maA?pwd=8kff<i class="fa fa-external-link-alt"></i></span> </p>
<p>提取码: 8kff </p>
<p>文档如何食用，请阅读 docs 目录的 ReadME 文件。</p>
<p>MySQL 8.0.x 简易教程。</p>
<p><strong>注意</strong>：如果你想在 MySQL 官网获取 8.0.29 ，是找不到资源的。因为出现了重大问题，官网直接移除了下载资源。推荐跳过 MySQL 8.0.29，升级到更高的版本或者使用历史稳定版本。</p>
<blockquote>
<p>Important<br>This release is no longer available for download. It was removed due to a critical issue that could cause data in InnoDB<br>tables having added columns to be interpreted incorrectly. Please upgrade to MySQL 8.0.30 instead.</p>
</blockquote>
<span id="more"></span>

<h1 id="Windows-平台安装-MySQL"><a href="#Windows-平台安装-MySQL" class="headerlink" title="Windows 平台安装 MySQL"></a>Windows 平台安装 MySQL</h1><h2 id="Windows-install-MySQL8-0-x-Archive-zip"><a href="#Windows-install-MySQL8-0-x-Archive-zip" class="headerlink" title="Windows install MySQL8.0.x (Archive zip)"></a>Windows install MySQL8.0.x (Archive zip)</h2><p>注意：x 代表使用 MySQL8.0 某个具体版本。</p>
<ol>
<li>解压免安装版 MySQL：<code>unzip mysql-8.0.x-winx64.zip</code></li>
<li>切换到 MySQL 解压目录：<code>cd mysql-8.0.x-winx64</code></li>
<li>新增 MySQL 配置文件： <code>my.ini</code></li>
<li>初始化 MySQL：<code>bin\mysqld --initialize-insecure</code> 或者 <code>bin\mysqld --initialize-insecure --console</code> </li>
<li>注册 MySQL 服务：<code>bin\mysqld --install MySQL80</code>（将 MySQL 服务注册到 service，可以使用 net 命令进行管理）</li>
<li>启动 MySQL 服务：<code>net start MySQL80</code> 或者 <code>sc start MySQL80</code></li>
<li>登录 MySQL 字符终端管理界面：<code>mysql -uroot -p</code></li>
</ol>
<p><strong>友情提醒</strong>，如果你在 Windows 平台原生无法使用 <code>unzip</code> 命令，请尝试打开 <strong>powershell</strong> 使用 <strong>Expand-Archive</strong> 命令解压。</p>
<p>示例<strong>解压到默认目录</strong>：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Expand-Archive</span> .\mysql<span class="literal">-8</span>.<span class="number">0</span>.x<span class="literal">-winx64</span>.zip</span><br></pre></td></tr></table></figure>



<p>示例<strong>解压到指定目录</strong> **D:\work\，使用参数 ** <code>-DestinationPath</code>：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Expand-Archive</span> .\mysql<span class="literal">-8</span>.<span class="number">0</span>.x<span class="literal">-winx64</span>.zip <span class="literal">-DestinationPath</span> D:\work\</span><br></pre></td></tr></table></figure>



<p>如果你想<strong>指定压缩文件路径D:\Downloads\DBMS\MySQL\winx64\mysql-8.0.28-winx64.zip</strong></p>
<p>可以使用 <strong>-Path</strong> 参数：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Expand-Archive</span> <span class="literal">-Path</span> D:\Downloads\DBMS\MySQL\winx64\mysql<span class="literal">-8</span>.<span class="number">0</span>.x<span class="literal">-winx64</span>.zip <span class="literal">-DestinationPath</span> D:\work\</span><br></pre></td></tr></table></figure>

<p><strong>可参考资料</strong>：<span class="exturl" data-url="aHR0cHM6Ly9sZWFybi5taWNyb3NvZnQuY29tL3poLWNuL3Bvd2Vyc2hlbGwvbW9kdWxlL21pY3Jvc29mdC5wb3dlcnNoZWxsLmFyY2hpdmUvZXhwYW5kLWFyY2hpdmU/dmlldz1wb3dlcnNoZWxsLTcuNA==">expand-archive<i class="fa fa-external-link-alt"></i></span></p>
<p>复现在网上看到的一个问题，如果出现如下问题，如何解决？</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">PS D:\mysql-8.0.30-winx64&gt; bin\mysqld.exe –initialize-insecure –console</span><br><span class="line">[System] [MY-010116] [Server] D:\mysql-8.0.30-winx64\bin\mysqld.exe (mysqld 8.0.30) starting as process 12860</span><br><span class="line">[Warning] [MY-010091] [Server] </span><br><span class="line">Can<span class="string">&#x27;t create test file D:\mysql-8.0.30-winx64\data\mysqld_tmp_file_case_insensitive_test.lower-test</span></span><br><span class="line"><span class="string">[Warning] [MY-010091] [Server] </span></span><br><span class="line"><span class="string">Can&#x27;</span>t create <span class="built_in">test</span> file D:\mysql-8.0.30-winx64\data\mysqld_tmp_file_case_insensitive_test.lower-test</span><br><span class="line">[ERROR] [MY-013276] [Server] Failed to <span class="built_in">set</span> datadir to <span class="string">&#x27;D:\mysql-8.0.30-winx64\data\&#x27;</span> (OS errno: 2 - No such file or directory)</span><br><span class="line">[ERROR] [MY-010119] [Server] Aborting</span><br><span class="line">[System] [MY-010910] [Server] D:\mysql-8.0.30-winx64\bin\mysqld.exe: Shutdown complete (mysqld 8.0.30)  MySQL Community Server - GPL.</span><br></pre></td></tr></table></figure>

<p>需要检查初始化命令参数是否有缺失：bin\mysqld.exe –initialize-insecure –console，才发现 Windows powershell 中从文档复制过来的 <code>--</code> 变成了 – 拼接在一起的单横杠。</p>
<p><strong>注意</strong>：注意细节问题。如果出现初始化 data 目录失败，某某文件、目录无法创建等等问题。有可能是格式显示问题，复制粘贴参数时单 - 中横杠 和 <code>--</code> 双中横杠没有区分开来，如果放在代码块中正常显示：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bin\mysqld --initialize  			<span class="comment"># 密码随机</span></span><br><span class="line">bin\mysqld --initialize-insecure 	<span class="comment"># 密码置空</span></span><br><span class="line">bin\mysqld --initialize-insecure --console 	<span class="comment"># 密码置空且将信息打印在字符命令行界面上 </span></span><br></pre></td></tr></table></figure>


<p>Windows环境新建my.ini做如下设置，指定基本安装目录与数据存放目录：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">basedir=D:\\mysql-8.0.32-winx64</span><br><span class="line">datadir=D:\\mysql-8.0.32-winx64\\data</span><br></pre></td></tr></table></figure>



<p><strong>tips</strong>：打开 CMD 或者 PowerShell 时，请以管理员身份运行，如果没有，安装服务时则会提示权限拒绝，如下所示。</p>
<p><strong>D:\software\mysql-8.0.32-winx64\bin&gt;mysqld –install MySQL80</strong><br><strong>Install&#x2F;Remove of the Service Denied!</strong></p>
<p><strong>Windows11操作系统中安装MySQL8.0.32</strong> (noinstall Archive zip)步骤</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">D:\software\mysql-8.0.32-winx64\bin&gt;mysqld --initialize-insecure --console</span><br><span class="line">D:\software\mysql-8.0.32-winx64\bin&gt;mysqld --install MySQL80</span><br><span class="line">Service successfully installed.</span><br><span class="line">D:\software\mysql-8.0.32-winx64\bin&gt;net start mysql80</span><br><span class="line">MySQL80 服务正在启动 .</span><br><span class="line">MySQL80 服务已经启动成功。</span><br></pre></td></tr></table></figure>



<h2 id="初步使用-MySQL"><a href="#初步使用-MySQL" class="headerlink" title="初步使用 MySQL"></a>初步使用 MySQL</h2><p>默认登录：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql -uroot -p</span><br></pre></td></tr></table></figure>

<p>指定 ip 地址以及端口号：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql -uroot -p -h 192.168.245.132 -P 3306</span><br></pre></td></tr></table></figure>
<p>参数含义：</p>
<ol>
<li>-u：指定用户名（user）</li>
<li>-p：指定密码（password）</li>
<li>-h：指定主机地址（host）</li>
<li>-P：指定端口号（port）</li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">D:\software\mysql<span class="number">-8.0</span><span class="number">.32</span><span class="operator">-</span>winx64\bin<span class="operator">&gt;</span>mysql <span class="operator">-</span>uroot <span class="operator">-</span>p</span><br><span class="line">Enter password:</span><br><span class="line">Welcome <span class="keyword">to</span> the MySQL monitor.  Commands <span class="keyword">end</span> <span class="keyword">with</span> ; <span class="keyword">or</span> \g.</span><br><span class="line">Your MySQL connection id <span class="keyword">is</span> <span class="number">8</span></span><br><span class="line">Server version: <span class="number">8.0</span><span class="number">.32</span> MySQL Community Server <span class="operator">-</span> GPL</span><br><span class="line"></span><br><span class="line">Copyright (c) <span class="number">2000</span>, <span class="number">2022</span>, Oracle <span class="keyword">and</span><span class="operator">/</span><span class="keyword">or</span> its affiliates.</span><br><span class="line"></span><br><span class="line">Oracle <span class="keyword">is</span> a registered trademark <span class="keyword">of</span> Oracle Corporation <span class="keyword">and</span><span class="operator">/</span><span class="keyword">or</span> its</span><br><span class="line">affiliates. Other names may be trademarks <span class="keyword">of</span> their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type <span class="string">&#x27;help;&#x27;</span> <span class="keyword">or</span> <span class="string">&#x27;\h&#x27;</span> <span class="keyword">for</span> help. Type <span class="string">&#x27;\c&#x27;</span> <span class="keyword">to</span> clear the <span class="keyword">current</span> input statement.</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="number">1</span>\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line"><span class="number">1</span>: <span class="number">1</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">create</span> database study;</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.01</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> use study;</span><br><span class="line">Database changed</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">create</span> <span class="keyword">table</span> books(books_id <span class="type">int</span> <span class="keyword">primary</span> key,books_name <span class="type">varchar</span>(<span class="number">64</span>),isbn <span class="type">varchar</span>(<span class="number">64</span>),author <span class="type">varchar</span>(<span class="number">32</span>));</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.02</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> books\G</span><br><span class="line"><span class="keyword">Empty</span> <span class="keyword">set</span> (<span class="number">0.01</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">insert</span> <span class="keyword">into</span> books(books_id,books_name,isbn,author) <span class="keyword">values</span>(<span class="number">1001</span>,<span class="string">&#x27;绝世武功秘籍&#x27;</span>,<span class="string">&#x27;22-90-12345&#x27;</span>,<span class="string">&#x27;不详&#x27;</span>);</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> books\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">  books_id: <span class="number">1001</span></span><br><span class="line">books_name: 绝世武功秘籍</span><br><span class="line">      isbn: <span class="number">22</span><span class="number">-90</span><span class="number">-12345</span></span><br><span class="line">    author: 不详</span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>



<p><strong>检查日志文件</strong> </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">data directory host_name.err file.could not open the mysql.plugin table</span><br><span class="line"></span><br><span class="line">2023-01-17T22:48:19.711538Z 0 [System] [MY-013169] [Server] d:\mysql-8.0.32-winx64\bin\mysqld.exe (mysqld 8.0.32) initializing of server <span class="keyword">in</span> progress as process 13908</span><br><span class="line">2023-01-17T22:48:19.746579Z 1 [System] [MY-013576] [InnoDB] InnoDB initialization has started.</span><br><span class="line">2023-01-17T22:48:20.205845Z 1 [System] [MY-013577] [InnoDB] InnoDB initialization has ended.</span><br><span class="line">**2023-01-17T22:48:21.399260Z 6 [Warning] [MY-010453] [Server] root@localhost is created with an empty password ! Please consider switching off the --initialize-insecure option.**</span><br><span class="line">2023-01-17T22:48:26.020963Z 0 [System] [MY-010116] [Server] D:\mysql-8.0.32-winx64\bin\mysqld (mysqld 8.0.32) starting as process 13756</span><br><span class="line">2023-01-17T22:48:26.038677Z 1 [System] [MY-013576] [InnoDB] InnoDB initialization has started.</span><br><span class="line">2023-01-17T22:48:26.323181Z 1 [System] [MY-013577] [InnoDB] InnoDB initialization has ended.</span><br><span class="line">2023-01-17T22:48:26.552785Z 0 [Warning] [MY-010068] [Server] CA certificate ca.pem is self signed.</span><br><span class="line">2023-01-17T22:48:26.553244Z 0 [System] [MY-013602] [Server] Channel mysql_main configured to support TLS. Encrypted connections are now supported <span class="keyword">for</span> this channel.</span><br><span class="line">2023-01-17T22:48:26.583209Z 0 [System] [MY-011323] [Server] X Plugin ready <span class="keyword">for</span> connections. Bind-address: <span class="string">&#x27;::&#x27;</span> port: 33060</span><br><span class="line">2023-01-17T22:48:26.583079Z 0 [System] [MY-010931] [Server] D:\mysql-8.0.32-winx64\bin\mysqld: ready <span class="keyword">for</span> connections. Version: <span class="string">&#x27;8.0.32&#x27;</span>  socket: <span class="string">&#x27;&#x27;</span>  port: 3308  MySQL Community Server - GPL.</span><br><span class="line">2023-01-17T22:53:43.085937Z 0 [System] [MY-013105] [Server] D:\mysql-8.0.32-winx64\bin\mysqld: Normal shutdown.</span><br><span class="line">2023-01-17T22:53:43.812152Z 0 [System] [MY-010910] [Server] D:\mysql-8.0.32-winx64\bin\mysqld: Shutdown complete (mysqld 8.0.32)  MySQL Community Server - GPL.</span><br></pre></td></tr></table></figure>


<p>发现问题：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">could not open the mysql.plugin table</span><br></pre></td></tr></table></figure>

<p>尝试解决问题：</p>
<ol>
<li>检查配置文件：my.ini</li>
<li>分析问题，检查初始化和安装服务：<code>mysqld --initialize</code> 或者 <code>mysqld --initialize-insecure --console</code></li>
<li>移除服务：<code>mysqld --remove=MySQL80</code></li>
<li>移除数据目录：data</li>
<li>排查问题，再次初始化：<code>mysqld --initialize</code> 或者 <code>mysqld --initialize-insecure --console</code></li>
<li>再次安装服务：<code>mysqld --install MySQL80</code></li>
</ol>
<h2 id="修改密码"><a href="#修改密码" class="headerlink" title="修改密码"></a>修改密码</h2><p>登录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql -uroot -p</span><br></pre></td></tr></table></figure>

<p>修改用户密码</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;mypwd@123&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p>创建用户root，主机地址为localhost</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;mypwd@123&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p>创建用户root，主机地址%，匹配所有</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;mypwd@123&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p>授权root用户所有权限，即可使远程登录</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">ON</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> <span class="keyword">WITH</span> <span class="keyword">GRANT</span> OPTION;</span><br></pre></td></tr></table></figure>

<p>刷新权限</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">flush privileges;</span><br></pre></td></tr></table></figure>

<p>更详细设置请参考 MySQL8.0 官方文档第 6 章节 Security：  <span class="exturl" data-url="aHR0cHM6Ly9kZXYubXlzcWwuY29tL2RvYy9yZWZtYW4vOC4wL2VuL2FjY2Vzcy1jb250cm9sLmh0bWw=">6.2 Access Control and Account Management<i class="fa fa-external-link-alt"></i></span></p>
<h1 id="Linux-平台-Centos7-安装-MySQL"><a href="#Linux-平台-Centos7-安装-MySQL" class="headerlink" title="Linux 平台 Centos7 安装 MySQL"></a>Linux 平台 Centos7 安装 MySQL</h1><h2 id="binary-package：二进制包安装"><a href="#binary-package：二进制包安装" class="headerlink" title="binary package：二进制包安装"></a>binary package：二进制包安装</h2><p><strong>友情提示</strong>：部署二进制包与源码包版本时，需要配置 MySQL 环境变量，可以减少一些困扰，如何配置可在站内搜索 MySQL 8.0.33。</p>
<blockquote>
<p>Linux for Centos7 MySQL8.0.32(binary package) | 2.2 Installing MySQL on Unix&#x2F;Linux Using Generic Binaries</p>
</blockquote>
<ol>
<li>创建 mysql 组</li>
<li>创建 mysql 用户（没有服务器主机登录权限的用户）</li>
<li>切换到 local 目录</li>
<li>解压 tar包 mysql 文件</li>
<li>创建软链接</li>
<li>进入到 mysql 目录</li>
<li>创建 mysql-files 目录</li>
<li>赋予 mysql 用户 mysql-files 所属目录与所属组为 mysql</li>
<li>赋予 mysql-files 权限750</li>
<li>初始化并设置用户为 mysql，生成随机密码会打印在字符界面（使用 <code>--initialize-insecure</code> 则设置空密码）</li>
<li>启动 ssl_rsa 验证</li>
<li>启动 MySQL 服务</li>
<li>复制 mysql.server 脚本服务到 Linux 环境 init.d 目录，便于管理</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$&gt; groupadd mysql     <span class="comment">#创建mysql组                  </span></span><br><span class="line">$&gt; useradd -r -g mysql -s /bin/false mysql    <span class="comment">#创建mysql用户（没有服务器主机登录权限的用户）</span></span><br><span class="line">$&gt; <span class="built_in">cd</span> /usr/local      <span class="comment">#切换到local目录                  </span></span><br><span class="line">$&gt; tar xvf /path/to/mysql-VERSION-OS.tar.xz   <span class="comment">#解压tar包mysql文件 </span></span><br><span class="line">$&gt; <span class="built_in">ln</span> -s full-path-to-mysql-VERSION-OS mysql  <span class="comment">#创建软链接</span></span><br><span class="line">$&gt; <span class="built_in">cd</span> mysql   <span class="comment">#进入到mysql目录</span></span><br><span class="line">$&gt; <span class="built_in">mkdir</span> mysql-files  <span class="comment">#创建mysql-files目录</span></span><br><span class="line">$&gt; <span class="built_in">chown</span> mysql:mysql mysql-files <span class="comment">#赋予mysql用户mysql-files所属目录与所属组为mysql</span></span><br><span class="line">$&gt; <span class="built_in">chmod</span> 750 mysql-files  <span class="comment">#赋予mysql-files权限750</span></span><br><span class="line">$&gt; bin/mysqld --initialize --user=mysql <span class="comment">#初始化并设置用户为mysql，生成随机密码会打印在字符界面（使用 --initialize-insecure则设置空密码）</span></span><br><span class="line"><span class="comment">#--defaults-file=/usr/local/mysql/my.cnf 初始化指定my.cnf路径</span></span><br><span class="line">$&gt; bin/mysqld --defaults-file=/usr/local/mysql/my.cnf  --initialize-insecure --user=mysql </span><br><span class="line">--basedir=/usr/local/mysql/ --datadir=/usr/local/mysql/data</span><br><span class="line">$&gt; bin/mysql_ssl_rsa_setup   <span class="comment">#启动ssl_rsa验证</span></span><br><span class="line">$&gt; bin/mysqld_safe --user=mysql &amp; <span class="comment">#启动服务</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Next command is optional  </span></span><br><span class="line"><span class="comment">#复制mysql.server脚本服务到Linux环境init.d目录，便于管理</span></span><br><span class="line">$&gt; <span class="built_in">cp</span> support-files/mysql.server /etc/init.d/</span><br></pre></td></tr></table></figure>
<p>启动服务</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl start mysql.server</span><br></pre></td></tr></table></figure>

<p>设置开机自启</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> mysql.server</span><br></pre></td></tr></table></figure>

<p>登录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql -uroot -p</span><br></pre></td></tr></table></figure>

<p>修改用户密码</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;mypwd@123&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p>创建用户root，主机地址为localhost</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;mypwd@123&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p>创建用户root，主机地址%，匹配所有</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;mypwd@123&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p>授权root用户所有权限，即可使远程登录</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">ON</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> <span class="keyword">WITH</span> <span class="keyword">GRANT</span> OPTION;</span><br></pre></td></tr></table></figure>

<p>刷新权限</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">flush privileges;</span><br></pre></td></tr></table></figure>


<p>更多权限细化设置请参考 MySQL8.0.x 官方文档第 6 章节 Security。</p>
<blockquote>
<p>6.2 Access Control and Account Management</p>
</blockquote>
<h2 id="rpm-包安装"><a href="#rpm-包安装" class="headerlink" title="rpm 包安装"></a>rpm 包安装</h2><p>Linux for Centos7 MySQL8.0.32(rpm package) </p>
<blockquote>
<p>2.5 Installing MySQL on Linux</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rpm -ivh mysql-community-client-plugins-8.0.28-1.el7.x86_64.rpm</span><br><span class="line">rpm -ivh mysql-community-common-8.0.28-1.el7.x86_64.rpm</span><br><span class="line">rpm -ivh mysql-community-icu-data-files-8.0.28-1.el7.x86_64.rpm</span><br><span class="line">yum remove mariadb-libs</span><br><span class="line">rpm -ivh mysql-community-libs-8.0.28-1.el7.x86_64.rpm</span><br><span class="line">rpm -ivh mysql-community-client-8.0.28-1.el7.x86_64.rpm</span><br><span class="line">rpm -ivh mysql-community-server-8.0.28-1.el7.x86_64.rpm</span><br></pre></td></tr></table></figure>

<p>或者使用 yum 命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1. yum remove mariadb-libs</span><br><span class="line">2. sudo yum install mysql-community-*</span><br></pre></td></tr></table></figure>

<p>启动服务</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl start mysql.service</span><br></pre></td></tr></table></figure>

<p>设置开机自启</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> mysql.service</span><br></pre></td></tr></table></figure>

<p>登录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql -uroot -p</span><br></pre></td></tr></table></figure>



<h2 id="yum-源安装"><a href="#yum-源安装" class="headerlink" title="yum 源安装"></a>yum 源安装</h2><p>Linux for Centos7 MySQL8.0.32(yum) | Installing MySQL on Linux Using the MySQL Yum Repository<br>tips:Centos8或者更高版本可以使用 dnf 替代 yum </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1. download：mysql80-community-release-el7-6.noarch.rpm</span><br><span class="line">   click https://repo.mysql.com//mysql80-community-release-el7-6.noarch.rpm</span><br><span class="line">2. $&gt; sudo yum install platform-and-version-specific-package-name.rpm</span><br><span class="line">3. For an EL7-based system：$&gt; sudo yum install mysql80-community-release-el7-&#123;version-number&#125;.noarch.rpm</span><br><span class="line">4. Starting the MySQL Server：$&gt; systemctl start mysqld</span><br><span class="line">5. check Starting the MySQL Server：$&gt; systemctl status mysqld</span><br><span class="line">6. login mysql：$&gt; mysql -uroot -p</span><br><span class="line">7. update password：$&gt; ALTER USER <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED BY <span class="string">&#x27;MyNewPwd832!&#x27;</span>;</span><br></pre></td></tr></table></figure>



<h2 id="Source：源码包安装"><a href="#Source：源码包安装" class="headerlink" title="Source：源码包安装"></a>Source：源码包安装</h2><p>Linux for Centos7 MySQL8.0.32(source package) | 2.9 Installing MySQL from Source</p>
<ol>
<li>新增 mysql 管理组</li>
<li>新增 mysql 用户</li>
<li>解压 mysql 安装包</li>
<li>创建 bld 目录</li>
<li>切换到 bld 目录</li>
<li>编译安装：cmake .. make make install</li>
<li>进入源码包安装后的 mysql 目录</li>
<li>创建目录 mysql-files</li>
<li>赋予 mysql-files 目录所属组和所属用户为 mysql</li>
<li>赋予 mysql-files 目录 750 权限</li>
<li>执行安全命令：<code>bin/mysql_ssl_rsa_setup</code></li>
<li>启动 mysql 服务：<code>bin/mysqld_safe --user=mysql &amp;</code></li>
<li>复制 mysql.server 脚本服务到 Linux 环境 init.d 目录，便于管理</li>
</ol>
<p>简易安装命令参考如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#Preconfiguration setup</span></span><br><span class="line"></span><br><span class="line">$&gt; groupadd mysql</span><br><span class="line">$&gt; useradd -r -g mysql -s /bin/false mysql</span><br><span class="line"></span><br><span class="line"><span class="comment">#Beginning of source-build specific instructions</span></span><br><span class="line"></span><br><span class="line">$&gt; tar zxvf mysql-VERSION.tar.gz</span><br><span class="line">$&gt; <span class="built_in">cd</span> mysql-VERSION</span><br><span class="line">$&gt; <span class="built_in">mkdir</span> bld</span><br><span class="line">$&gt; <span class="built_in">cd</span> bld</span><br><span class="line">$&gt; cmake ..</span><br><span class="line">$&gt; make</span><br><span class="line">$&gt; make install</span><br><span class="line"></span><br><span class="line"><span class="comment">#End of source-build specific instructions</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Postinstallation setup</span></span><br><span class="line"></span><br><span class="line">$&gt; <span class="built_in">cd</span> /usr/local/mysql</span><br><span class="line">$&gt; <span class="built_in">mkdir</span> mysql-files</span><br><span class="line">$&gt; <span class="built_in">chown</span> mysql:mysql mysql-files</span><br><span class="line">$&gt; <span class="built_in">chmod</span> 750 mysql-files</span><br><span class="line">$&gt; bin/mysqld --initialize --user=mysql</span><br><span class="line">$&gt; bin/mysql_ssl_rsa_setup</span><br><span class="line">$&gt; bin/mysqld_safe --user=mysql &amp;</span><br><span class="line"></span><br><span class="line"><span class="comment">#Next command is optional</span></span><br><span class="line"></span><br><span class="line">$&gt; <span class="built_in">cp</span> support-files/mysql.server /etc/init.d/mysql.server</span><br></pre></td></tr></table></figure>

<p>启动服务</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl start mysql.server</span><br></pre></td></tr></table></figure>

<p>设置开机自启</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> mysql.server</span><br></pre></td></tr></table></figure>

<p>登录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql -uroot -p</span><br></pre></td></tr></table></figure>

<p>以上总结，仅供参考哟！希望对你的学习或者工作帮助。</p>
<p><strong>参考资料</strong>：</p>
<p>MySQL 官方文档第二章节： <span class="exturl" data-url="aHR0cHM6Ly9kZXYubXlzcWwuY29tL2RvYy9yZWZtYW4vOC4wL2VuL2luc3RhbGxpbmcuaHRtbA==">Chapter 2 Installing and Upgrading MySQL<i class="fa fa-external-link-alt"></i></span></p>
<p>MySQL8.0.x 官方文档第 6 章节 Security：  <span class="exturl" data-url="aHR0cHM6Ly9kZXYubXlzcWwuY29tL2RvYy9yZWZtYW4vOC4wL2VuL2FjY2Vzcy1jb250cm9sLmh0bWw=">6.2 Access Control and Account Management<i class="fa fa-external-link-alt"></i></span></p>
<p>Windows 平台解压命令 expand-archive：<span class="exturl" data-url="aHR0cHM6Ly9sZWFybi5taWNyb3NvZnQuY29tL3poLWNuL3Bvd2Vyc2hlbGwvbW9kdWxlL21pY3Jvc29mdC5wb3dlcnNoZWxsLmFyY2hpdmUvZXhwYW5kLWFyY2hpdmU/dmlldz1wb3dlcnNoZWxsLTcuNA==">expand-archive<i class="fa fa-external-link-alt"></i></span></p>
<p>—END—</p>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux（银河麒麟V10）部署VNC服务端并且使用客户端连接</title>
    <url>/2021/07/27/Linux%EF%BC%88%E9%93%B6%E6%B2%B3%E9%BA%92%E9%BA%9FV10%EF%BC%89%E9%83%A8%E7%BD%B2VNC%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%B9%B6%E4%B8%94%E4%BD%BF%E7%94%A8%E5%AE%A2%E6%88%B7%E7%AB%AF%E8%BF%9E%E6%8E%A5/</url>
    <content><![CDATA[<p><em>注意：这篇文章对于定制版本的系统并不适用，有可能导致系统环境变量被破坏。这里测试用root用户没大多关系，正式环境能不用尽量别用root测试，使用普通用户提权。再提一句，某些定制Linux系统可能做过安全标记，也是不能随便动权限的。</em></p>
<h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="一、银河麒麟安装VNC服务"><a href="#一、银河麒麟安装VNC服务" class="headerlink" title="一、银河麒麟安装VNC服务"></a>一、银河麒麟安装VNC服务</h2><p>这里我并不推荐使用root用户，尽量用普通用户，通过提取权限即可。我这里用root，只是为了方便使用。<strong>赋予权限的宗旨是在最小范围内满足即可。</strong></p>
<p>银河麒麟V10部署vncserver，使用如下yum命令安装：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install tigervnc-server tigervnc-server-module</span><br></pre></td></tr></table></figure>

<p><strong>新建vncserver@.service</strong><br><img data-src="https://img-blog.csdnimg.cn/d5688877690449ef81f28266364814e5.jpg?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70#" alt="在这里插入图片描述"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#使用vim命令新建vncserver@.service</span></span><br><span class="line"><span class="comment">#执行这个脚本在定制系统上可能会破坏系统环境变量，导致基本命令无法使用。</span></span><br><span class="line">vim /etc/systemd/system/vncserver@.service</span><br></pre></td></tr></table></figure>

<p><strong>下面为具体配置文件内容</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Remote desktop service (VNC)</span><br><span class="line">After=syslog.target network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line"><span class="comment">#必须设置为simple，设置其它的报错</span></span><br><span class="line">Type=simple</span><br><span class="line">WorkingDirectory=/root/</span><br><span class="line"><span class="comment">#必须为root</span></span><br><span class="line">User=root</span><br><span class="line">Group=root</span><br><span class="line"></span><br><span class="line"><span class="comment">#ExecStart=/usr/bin/vncserver :1 -geometry 1920x1080</span></span><br><span class="line"><span class="comment">#Clean any existing files in /tmp/.X11-unix environment                                                                    </span></span><br><span class="line">ExecStartPre=/bin/sh -c <span class="string">&#x27;/usr/bin/vncserver -kill %i &gt; /dev/null 2&gt;&amp;1 || :&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#ExecStart=/usr/sbin/runuser -l appadmin -c &quot;/usr/bin/vncserver %i -geometry 1280x1024&quot;  </span></span><br><span class="line"><span class="comment">#必须为root</span></span><br><span class="line">ExecStart=/usr/sbin/runuser -l root -c <span class="string">&quot;/usr/bin/vncserver %i&quot;</span>  </span><br><span class="line"><span class="comment">#必须为root</span></span><br><span class="line">PIDFile=/root/.vnc/%H%i.pid  </span><br></pre></td></tr></table></figure>


<p><strong>重新加载systemctl</strong><br><img data-src="https://img-blog.csdnimg.cn/4d816a034e204d24945dece6e94e1523.jpg#" alt="在这里插入图片描述"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#执行这个命令，在定制linux系统可能导致基本命令无法使用</span></span><br><span class="line">systemctl daemon-reload</span><br></pre></td></tr></table></figure>

<p><strong>停止vnc服务</strong><br><img data-src="https://img-blog.csdnimg.cn/7fad776f6aab4075ac3dc9e3db087898.jpg#" alt="在这里插入图片描述"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl stop vncserver@:1.service</span><br></pre></td></tr></table></figure>

<p><strong>启动vnc服务</strong><br><img data-src="https://img-blog.csdnimg.cn/5018eb34cf7b42019f351516a166b71f.jpg#" alt="在这里插入图片描述"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl start vncserver@:1.service</span><br></pre></td></tr></table></figure>

<p><strong>查看vnc服务状态</strong><br><img data-src="https://img-blog.csdnimg.cn/df4b8eefdfc24a869bdc4e1877550503.jpg?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70#" alt="在这里插入图片描述"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl status vncserver@:1.service</span><br></pre></td></tr></table></figure>

<p><strong>开机启用vnc服务</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> vncserver@:1.service</span><br></pre></td></tr></table></figure>


<p><strong>修改vnc密码</strong>，如果没修改密码，启动VNC也存在报错情况</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vncpasswd</span><br></pre></td></tr></table></figure>


<h2 id="二、本机安装VNC客户端"><a href="#二、本机安装VNC客户端" class="headerlink" title="二、本机安装VNC客户端"></a>二、本机安装VNC客户端</h2><p>官网提供了很多版本的下载地址<br><span class="exturl" data-url="aHR0cHM6Ly93d3cucmVhbHZuYy5jb20vZW4vY29ubmVjdC9kb3dubG9hZC92aWV3ZXIv">https://www.realvnc.com/en/connect/download/viewer/<i class="fa fa-external-link-alt"></i></span></p>
<p>1、安装完后，点击File-&gt;使用Ctrl+N快捷键打开new connection<br><img data-src="https://img-blog.csdnimg.cn/fc3f55d0bb4e4255b7debc5a7b8d2ea6.jpg?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70#" alt="在这里插入图片描述"></p>
<p>2、配置vnc连接</p>
<p><img data-src="https://img-blog.csdnimg.cn/85f53e9dee97486aa75dab1e73e3a4e3.jpg?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70#" alt="在这里插入图片描述"></p>
<p>3、输入ip地址以及端口，输入服务器配置的vnc服务密码<br><img data-src="https://img-blog.csdnimg.cn/58a7a813d4754477862ef35eb65dbfa5.jpg?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70#" alt="在这里插入图片描述"></p>
<p>4、成功登陆到银河麒麟V10<br><img data-src="https://img-blog.csdnimg.cn/65b824ebae094e9ea612d50320e8d902.jpg?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70#" alt="在这里插入图片描述"></p>
<h2 id="三、关闭原有的firewalld防火墙，启用iptables并开放5901"><a href="#三、关闭原有的firewalld防火墙，启用iptables并开放5901" class="headerlink" title="三、关闭原有的firewalld防火墙，启用iptables并开放5901"></a>三、关闭原有的firewalld防火墙，启用iptables并开放5901</h2><p>永久关闭firewalld</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl disabled firewalld.service</span><br></pre></td></tr></table></figure>
<p>临时关闭firewalld</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl stop firewalld.service</span><br></pre></td></tr></table></figure>

<p><strong>开启iptables</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> iptables.service</span><br></pre></td></tr></table></figure>

<p><strong>修改iptables配置文件</strong><br><img data-src="https://img-blog.csdnimg.cn/cef62f850fc94784b0af39901b85a2eb.jpg#" alt="在这里插入图片描述"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/sysconfig/ipatbles</span><br></pre></td></tr></table></figure>
<p><strong>添加如下图片红线框出来的配置</strong><br><img data-src="https://img-blog.csdnimg.cn/b41380556df24875875b64d99482920f.jpg?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70#" alt="在这里插入图片描述"></p>
<p><strong>重启iptables服务</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart iptables.service</span><br></pre></td></tr></table></figure>
<p><img data-src="https://img-blog.csdnimg.cn/2ae38547f2214b80b5e8791bebc09dde.jpg#" alt="在这里插入图片描述"></p>
<h2 id="四、权限问题"><a href="#四、权限问题" class="headerlink" title="四、权限问题"></a>四、权限问题</h2><p>出现权限不足，赋予vncserver@.service权限755，通过root提权</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chmod</span> 755  /etc/systemd/system/vncserver@.service</span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>开发运维</category>
      </categories>
      <tags>
        <tag>VNC</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL优化技巧：RAND()和WITH ROLLUP、Bit GROUP以及外键注意事项</title>
    <url>/2022/04/07/MySQL%E4%BC%98%E5%8C%96%E6%8A%80%E5%B7%A7%EF%BC%9ARAND()%E5%92%8CWITH%20ROLLUP%E3%80%81Bit%20GROUP%E4%BB%A5%E5%8F%8A%E5%A4%96%E9%94%AE%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/</url>
    <content><![CDATA[<p>常用SQL技巧主要介绍有：MySQL正则表达式。提取随机行函数RAND()。WITH ROLLUP子句。Bit GROUP Functions 做统计。数据库库名、表名大小写注意事项。使用外键注意事项。</p>
<p>只停留在看上面，提升效果甚微。应该带着思考去测试佐证，或者使用（同类书籍）新版本进行对比，这样带来的效果更好。最重要的一环，<strong>养成阅读官方文档</strong>，是一个良好的习惯。能编写官方文档，至少证明他们在这个领域是有很高的造诣，对用法足够熟练。</p>
<p><strong>tips</strong>：图片资源可能被防盗链（寄）了，可以<strong>右键属性复制地址在地址栏查看</strong>哈。</p>
<span id="more"></span>

<p>示例数据库使用MySQL官方提供的sakila（模拟电影出租信息管理系统）和world数据库，类似于Oracle的scott用户。</p>
<p>如果没有进行特别说明，一般是基于MySQL8.0.28进行测试验证。官方文档非常具有参考意义。你可以将这篇博文，当成过度到MySQL8.0的参考资料。<strong>友情提示：经验是用来参考，不是拿来即用</strong>。如果您能看到并分享这篇文章，我很荣幸。如果有误导您的地方，我表示抱歉。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/acf1fd88c4b72660309388d03852a999.png"></p>
<p><strong>注意</strong>：在某些情况，你自己测试的结果可能与我演示有所不同，我省略了查询结果的部分参数。</p>
<p>如果你是从MySQL5.6或者5.7版本过渡到MySQL8.0。学习之前，建议线看官方文档这一章节：1.3 What Is New MySQL8.0 。在做对比的时候，<strong>文档中带有Note标识是你应该注意的地方</strong>。比如下面这张截图：</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/17d4943de92930dea49aa6fe2eaeac55.png"></p>
<h3 id="MySQL优化技巧——常用-SQL-技巧"><a href="#MySQL优化技巧——常用-SQL-技巧" class="headerlink" title="MySQL优化技巧——常用 SQL 技巧"></a>MySQL优化技巧——常用 SQL 技巧</h3><p>常用SQL技巧主要介绍有：正则表达式。正则表达式泛用性比较广，无论在数据库SQL中还是Java语言以及Linux操作系统grep搜索匹配都用得上，甚至网页爬虫也很实用。提取随机行函数RAND()。WITH ROLLUP子句。Bit GROUP Functions 做统计。数据库库名、表名大小写注意事项。使用外键注意事项。</p>
<h4 id="1-使用正则表达式"><a href="#1-使用正则表达式" class="headerlink" title="1  使用正则表达式"></a>1  使用正则表达式</h4><p>在MySQL8.0文档中，你可以找到参考使用方法：12.8.2 Regular Expression Function and Operator Descriptions</p>
<p>正则表达式（Regular Expression）是指用来描述或匹配一系列符合某个句法规则的字符串的单个字符串。在多数文本编辑器或其它工具里，正则表达式通常被用来检索或替换哪些符合某个模式的文本内容。许多程序语言都支持利用正则表达式进行字符串操作。例如，在Perl中就内建了一个功能强大的正则表达式引擎。正则表达式最初是由UNIX中的工具软件（例如SED和GREP）普及开来，通常写成REGEX 或者 REGEXP。</p>
<p>在linux操作系统中输入pcretest即可进入练习使用正则表达式（新版本pcre2test）：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ wget https://download.fastgit.org/PhilipHazel/pcre2/releases/download/pcre2-10.39/pcre2-10.39.tar.gz</span><br><span class="line">$ tar -zxvf pcre2-10.39.tar.gz</span><br><span class="line">$ <span class="built_in">cd</span> pcre2-10.39</span><br><span class="line">$ ./configure</span><br><span class="line">$ make &amp;&amp; make install</span><br><span class="line">$ pcre2test</span><br></pre></td></tr></table></figure>



<p>MySQL利用REGEXP命令提供给用户扩展正则表达式功能，REGEXP实现的功能类似于UNIX上GREP和SED功能，并且REGEXP在进行模式匹配是是区分大小写的。熟悉掌握REGEXP用法，可以使模式匹配事半功倍。接下来将介绍一些在MySQL中的用法。</p>
<p>正则表达式函数和操作符如下表格所示：</p>
<table>
<thead>
<tr>
<th>名称</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>NOT REGEXP</td>
<td>否定的REGEXP</td>
</tr>
<tr>
<td>REGEXP</td>
<td>正则表达式是否匹配字符串</td>
</tr>
<tr>
<td>REGEXP_INSTR()</td>
<td>匹配正则表达式子字符串的起始索引</td>
</tr>
<tr>
<td>REGEXP_LIKE()</td>
<td>正则表达式是否匹配字符串</td>
</tr>
<tr>
<td>REGEXP_REPLACE()</td>
<td>替换正则表达式匹配的子字符串</td>
</tr>
<tr>
<td>REGEXP_SUBSTR()</td>
<td>返回正则表达式匹配的子字符串</td>
</tr>
<tr>
<td>RLIKE</td>
<td>正则表达式是否匹配字符串</td>
</tr>
</tbody></table>
<p>在MySQL中一些正则表达式匹配符号含义：</p>
<table>
<thead>
<tr>
<th>符号</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>^</td>
<td>在字符开始处进行匹配（行首）</td>
</tr>
<tr>
<td>$</td>
<td>字符串末尾进行匹配（行尾）</td>
</tr>
<tr>
<td>.</td>
<td>匹配任意单个字符，包括换行符</td>
</tr>
<tr>
<td>[……]</td>
<td>匹配括号中任意字符</td>
</tr>
<tr>
<td>[^……]</td>
<td>匹配不包含括号中任意字符</td>
</tr>
<tr>
<td>a*</td>
<td>匹配0个或多个a（包含空串）</td>
</tr>
<tr>
<td>a+</td>
<td>匹配1个或多个a（不包含空串）</td>
</tr>
<tr>
<td>a?</td>
<td>匹配1个或0个a</td>
</tr>
<tr>
<td>a1 | a2</td>
<td>匹配a1或a2</td>
</tr>
<tr>
<td>a(m)</td>
<td>匹配m个a</td>
</tr>
<tr>
<td>(……)</td>
<td>将模式元素组成单一元素</td>
</tr>
</tbody></table>
<p>下面将带来实际示例<code>REGEXP</code>用法：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="string">&#x27;Michael!&#x27;</span> REGEXP <span class="string">&#x27;.*&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="string">&#x27;Michael!&#x27;</span> REGEXP <span class="string">&#x27;.*&#x27;</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------+</span></span><br><span class="line"><span class="operator">|</span>                      <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------+</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">&#x27;new*\n*line&#x27;</span> REGEXP <span class="string">&#x27;new\\*.\\*line&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="string">&#x27;new*\n*line&#x27;</span> REGEXP <span class="string">&#x27;new\\*.\\*line&#x27;</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------------------+</span></span><br><span class="line"><span class="operator">|</span>                                     <span class="number">0</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------------------+</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">&#x27;a&#x27;</span> REGEXP <span class="string">&#x27;^[a-d]&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="string">&#x27;a&#x27;</span> REGEXP <span class="string">&#x27;^[a-d]&#x27;</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+</span></span><br><span class="line"><span class="operator">|</span>                   <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+</span></span><br></pre></td></tr></table></figure>

<p><code>REGEXP_INSTR</code>用法：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> REGEXP_INSTR(<span class="string">&#x27;dog cat dog&#x27;</span>, <span class="string">&#x27;dog&#x27;</span>);    <span class="comment">-- 返回结果: 1</span></span><br><span class="line"><span class="keyword">SELECT</span> REGEXP_INSTR(<span class="string">&#x27;dog cat dog&#x27;</span>, <span class="string">&#x27;dog&#x27;</span>, <span class="number">2</span>); <span class="comment">-- 返回结果: 9</span></span><br><span class="line"><span class="keyword">SELECT</span> REGEXP_INSTR(<span class="string">&#x27;aa aaa aaaa&#x27;</span>, <span class="string">&#x27;a&#123;2&#125;&#x27;</span>);   <span class="comment">-- 返回结果: 1</span></span><br><span class="line"><span class="keyword">SELECT</span> REGEXP_INSTR(<span class="string">&#x27;aa aaa aaaa&#x27;</span>, <span class="string">&#x27;a&#123;4&#125;&#x27;</span>);   <span class="comment">-- 返回结果: 8</span></span><br></pre></td></tr></table></figure>

<p><code>REGEXP_LIKE</code>用法：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> REGEXP_LIKE(<span class="string">&#x27;CamelCase&#x27;</span>, <span class="string">&#x27;CAMELCASE&#x27;</span>); <span class="comment">-- 返回结果:1</span></span><br></pre></td></tr></table></figure>



<p>不做过多演示，使用比较容易上手，可以参考官方文档。</p>
<h4 id="2-RAND-提取随机行"><a href="#2-RAND-提取随机行" class="headerlink" title="2  RAND() 提取随机行"></a>2  RAND() 提取随机行</h4><p>大多数数据库都会提供产生随机数的包或者函数，通过这些包或者函数可以产生用户需要的随机数。也可以从数据表中抽取随机产生的记录，这对抽样分析有一定的帮助。个人在MySQL开发篇进行测试生成1kw条数据，就用到了随机数RAND()函数。在Oracle数据库中可以使用DBMS_RANDOM包产生随机数。例如在Oracle中学表随机生成1kw条数据：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 创建表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> test.student</span><br><span class="line">(</span><br><span class="line">    ID NUMBER <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">primary</span> key,</span><br><span class="line">    STU_NAME VARCHAR2(<span class="number">60</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">    STU_AGE NUMBER(<span class="number">4</span>,<span class="number">0</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    STU_SEX VARCHAR2(<span class="number">2</span>) <span class="keyword">not</span> <span class="keyword">null</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 学生表随机生成1kw数据</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> test.student</span><br><span class="line"><span class="keyword">select</span> rownum,dbms_random.string(<span class="string">&#x27;*&#x27;</span>,dbms_random.value(<span class="number">6</span>,<span class="number">10</span>)),dbms_random.value(<span class="number">14</span>,<span class="number">16</span>),</span><br><span class="line"><span class="string">&#x27;女&#x27;</span> <span class="keyword">from</span> dual</span><br><span class="line"><span class="keyword">connect</span> <span class="keyword">by</span> level<span class="operator">&lt;=</span><span class="number">10000000</span></span><br></pre></td></tr></table></figure>

<p>上面只是提一下穿插一点Oracle中的用法，主要介绍重点是MySQL。在MySQL中，产生随机数是RAND() 函数。 </p>
<p>创建表 t 以及插入测试数据。提示：不用创建表，你也可以直接在RAND后面圆括号中加入数字进行测试。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> t (i <span class="type">INT</span>);</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.02</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">INSERT</span> <span class="keyword">INTO</span> t <span class="keyword">VALUES</span>(<span class="number">1</span>),(<span class="number">2</span>),(<span class="number">3</span>);</span><br><span class="line">Query OK, <span class="number">3</span> <span class="keyword">rows</span> affected (<span class="number">0.01</span> sec)</span><br><span class="line">Records: <span class="number">3</span>  Duplicates: <span class="number">0</span>  Warnings: <span class="number">0</span></span><br></pre></td></tr></table></figure>

<p>演示查询RAND()：最普通的用法</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> i, RAND() <span class="keyword">FROM</span> t;</span><br><span class="line"><span class="operator">+</span><span class="comment">------+---------------------+</span></span><br><span class="line"><span class="operator">|</span> i    <span class="operator">|</span> RAND()              <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+---------------------+</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">1</span> <span class="operator">|</span>  <span class="number">0.9726958740248306</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">2</span> <span class="operator">|</span>  <span class="number">0.2550815932965666</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">3</span> <span class="operator">|</span> <span class="number">0.35732037514198606</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+---------------------+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<p>演示查询 RAND(X) 加入参数：X&#x3D;3</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> i, RAND(<span class="number">3</span>) <span class="keyword">FROM</span> t;</span><br><span class="line"><span class="operator">+</span><span class="comment">------+---------------------+</span></span><br><span class="line"><span class="operator">|</span> i    <span class="operator">|</span> RAND(<span class="number">3</span>)             <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+---------------------+</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">1</span> <span class="operator">|</span>  <span class="number">0.9057697559760601</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">2</span> <span class="operator">|</span> <span class="number">0.37307905813034536</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">3</span> <span class="operator">|</span> <span class="number">0.14808605345719125</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+---------------------+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<p>RAND()函数用法有好几种，如下：</p>
<ol>
<li>RAND()：最原始用法，不加参数；</li>
<li>RAND(X)：加入一个X参数，比如RAND(3)；</li>
<li>RAND(X,D)：加入两个参数表示范围，比如RAND(1，2)；</li>
</ol>
<p><strong>示例</strong>：RAND(X,D)用法</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> ROUND(<span class="number">1.298</span>, <span class="number">1</span>);</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">ROUND(<span class="number">1.298</span>, <span class="number">1</span>): <span class="number">1.3</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>



<p><strong>补充一点</strong>：<code>RAND</code>() 可以配合 <code>ORDER BY</code> 和 <code>GROUP BY</code> 以及 <code>LIMIT</code> 进行使用。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> tbl_name <span class="keyword">ORDER</span> <span class="keyword">BY</span> RAND();</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> table1, table2 <span class="keyword">WHERE</span> a<span class="operator">=</span>b <span class="keyword">AND</span> c<span class="operator">&lt;</span>d <span class="keyword">ORDER</span> <span class="keyword">BY</span> RAND() LIMIT <span class="number">1000</span>;</span><br></pre></td></tr></table></figure>





<h4 id="3-GROUP-BY-与-WITH-ROLLUP-子句"><a href="#3-GROUP-BY-与-WITH-ROLLUP-子句" class="headerlink" title="3  GROUP BY 与 WITH ROLLUP 子句"></a>3  GROUP BY 与 WITH ROLLUP 子句</h4><p>在SQL语句中，使用<code>GROUP BY</code>配合<code>WITH ROLLUP</code> 子句可以检索出更多分组聚合信息，不仅仅局限于GROUP BY检索出各组聚合信息，而且还能检索出本组类的整体聚合信息，创建实例如下所示。</p>
<p>创建一张某产品销售利润统计表进行演示：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> sales</span><br><span class="line">(</span><br><span class="line"><span class="keyword">year</span> <span class="type">INT</span>,</span><br><span class="line">country <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">product <span class="type">VARCHAR</span>(<span class="number">32</span>),</span><br><span class="line">profit <span class="type">INT</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure>

<p>根据年度进行分组，然后查询统计年度某产品利润：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="keyword">year</span>, <span class="built_in">SUM</span>(profit) <span class="keyword">AS</span> profit <span class="keyword">FROM</span> sales <span class="keyword">GROUP</span> <span class="keyword">BY</span> <span class="keyword">year</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">------+--------+</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">year</span> <span class="operator">|</span> profit <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+--------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2022</span> <span class="operator">|</span>    <span class="number">666</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2021</span> <span class="operator">|</span>    <span class="number">555</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2020</span> <span class="operator">|</span>    <span class="number">455</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+--------+</span></span><br></pre></td></tr></table></figure>

<p>使用ROLLUP检索出更多信息。显示每年的总利润，要确定所有年份的总利润，必须自己加起来，或者运行一个额外的查询。或者您可以使用ROLLUP，它提供两种级别的分析。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="keyword">year</span>, <span class="built_in">SUM</span>(profit) <span class="keyword">AS</span> profit <span class="keyword">FROM</span> sales <span class="keyword">GROUP</span> <span class="keyword">BY</span> <span class="keyword">year</span> <span class="keyword">WITH</span> <span class="keyword">ROLLUP</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">------+--------+</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">year</span> <span class="operator">|</span> profit <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+--------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2020</span> <span class="operator">|</span>    <span class="number">455</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2021</span> <span class="operator">|</span>    <span class="number">555</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2022</span> <span class="operator">|</span>    <span class="number">666</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span>   <span class="number">1676</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+--------+</span></span><br></pre></td></tr></table></figure>

<p>配合<code>WITH ROLLUP</code>使用<code>GROUP BY</code>分组后面可以接多个字段使用，以及使用IF条件加入<code>GROUPING</code>进行统计，这里不做演示。</p>
<p><strong>注意事项</strong>：以前，MySQL不允许在带有<code>WITH ROLLUP</code>选项的查询中使用<code>DISTINCT</code>或<code>ORDER BY</code>。这个限制在MySQL 8.0.12及更高版本中被取消（Bug #87450，Bug #86311，Bug #26640100，Bug #26073513）。此外，<code>LIMIT</code>在ROLLUP后面。</p>
<p><strong>我所展示版本是MySQL8.0.28</strong>，支持<code>WITH ROLLUP</code>选项的查询中使用<code>DISTINCT</code>或<code>ORDER BY</code>。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span>(<span class="keyword">SELECT</span> <span class="keyword">year</span>, <span class="built_in">SUM</span>(profit) <span class="keyword">AS</span> profit </span><br><span class="line">       <span class="keyword">FROM</span> sales <span class="keyword">GROUP</span> <span class="keyword">BY</span> <span class="keyword">year</span> <span class="keyword">WITH</span> <span class="keyword">ROLLUP</span>) <span class="keyword">AS</span> dt <span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="keyword">year</span> <span class="keyword">ASC</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">------+--------+</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">year</span> <span class="operator">|</span> profit <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+--------+</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span>   <span class="number">1676</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2020</span> <span class="operator">|</span>    <span class="number">455</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2021</span> <span class="operator">|</span>    <span class="number">555</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2022</span> <span class="operator">|</span>    <span class="number">666</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+--------+</span></span><br></pre></td></tr></table></figure>





<h4 id="4-Bit-GROUP-Functions-做统计"><a href="#4-Bit-GROUP-Functions-做统计" class="headerlink" title="4  Bit GROUP Functions 做统计"></a>4  Bit GROUP Functions 做统计</h4><p>你可以找到参考文档：12.13 Bit Functions and Operators</p>
<p>此处，不做详细解释，只展示具体使用。</p>
<p>以下演示GROUP BY语句和BIT_OR、BIT_AND函数完成统计工作。这两个函数一般用于做数值间的逻辑运算，当将它们与GROUP BY子句联合使用时可以做一些其它的任务。</p>
<p>以下是创建一张示例表t2并插入6条测试数据：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> t2 (</span><br><span class="line"><span class="keyword">year</span> <span class="keyword">YEAR</span>, </span><br><span class="line"><span class="keyword">month</span> <span class="type">INT</span> UNSIGNED,</span><br><span class="line"><span class="keyword">day</span> <span class="type">INT</span> UNSIGNED</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> t2 <span class="keyword">VALUES</span>(<span class="number">2000</span>,<span class="number">1</span>,<span class="number">1</span>),(<span class="number">2000</span>,<span class="number">1</span>,<span class="number">20</span>),(<span class="number">2000</span>,<span class="number">1</span>,<span class="number">30</span>),(<span class="number">2000</span>,<span class="number">2</span>,<span class="number">2</span>),(<span class="number">2000</span>,<span class="number">2</span>,<span class="number">23</span>),(<span class="number">2000</span>,<span class="number">2</span>,<span class="number">23</span>);</span><br></pre></td></tr></table></figure>

<p>使用BIT_COUNT以及BIT_OR、BIT_AND进行查询：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="keyword">year</span>,<span class="keyword">month</span>,BIT_COUNT(BIT_OR(<span class="number">1</span><span class="operator">&lt;&lt;</span><span class="keyword">day</span>)) <span class="keyword">AS</span> days <span class="keyword">FROM</span> t2 <span class="keyword">GROUP</span> <span class="keyword">BY</span> <span class="keyword">year</span>,<span class="keyword">month</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">------+-------+------+</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">year</span> <span class="operator">|</span> <span class="keyword">month</span> <span class="operator">|</span> days <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+-------+------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2000</span> <span class="operator">|</span>     <span class="number">1</span> <span class="operator">|</span>    <span class="number">3</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2000</span> <span class="operator">|</span>     <span class="number">2</span> <span class="operator">|</span>    <span class="number">2</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+-------+------+</span></span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="keyword">year</span>,<span class="keyword">month</span>,BIT_AND(<span class="keyword">day</span>) <span class="keyword">AS</span> days <span class="keyword">FROM</span> t2 <span class="keyword">GROUP</span> <span class="keyword">BY</span> <span class="keyword">year</span>,<span class="keyword">month</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">------+-------+------+</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">year</span> <span class="operator">|</span> <span class="keyword">month</span> <span class="operator">|</span> days <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+-------+------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2000</span> <span class="operator">|</span>     <span class="number">1</span> <span class="operator">|</span>    <span class="number">0</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2000</span> <span class="operator">|</span>     <span class="number">2</span> <span class="operator">|</span>    <span class="number">2</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+-------+------+</span></span><br></pre></td></tr></table></figure>



<h4 id="5-数据库库名、表名大小写问题"><a href="#5-数据库库名、表名大小写问题" class="headerlink" title="5  数据库库名、表名大小写问题"></a>5  数据库库名、表名大小写问题</h4><p>MySQL数据库对应操作系统下的数据目录。数据库中每张表至少对应数据库目录中一个文件（也可能是多个，存储引擎类型不同，有所差异）。因此，使用的操作系统大小写敏感性决定了数据库名、表名大小写的敏感性。在Unix操作系统中，操作系统对大小敏感，导致数据库名、表名对大小写敏感。而Windows平台MySQL数据库对大小写不敏感，因为操作系统本身对大小写不敏感。</p>
<p>列、索引、存储子程序和触发器名在任何平台上对大小写不敏感。默认情况，表别名在Unix中对对大小敏感，但在Windows平台对大小写并不敏感。如下在Linux平台进行演示，<strong>由于区分大小写，所以抛出错误提示</strong>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> girl;</span><br><span class="line">ERROR <span class="number">1146</span> (<span class="number">42</span>S02): <span class="keyword">Table</span> <span class="string">&#x27;test.girl&#x27;</span> doesn<span class="string">&#x27;t exist</span></span><br></pre></td></tr></table></figure>

<p><strong>正常情况，使用大写表名进行查找</strong>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> GIRL;</span><br><span class="line"><span class="operator">+</span><span class="comment">------+-----------+----------+----------+</span></span><br><span class="line"><span class="operator">|</span> ID   <span class="operator">|</span> GIRE_NAME <span class="operator">|</span> GIRL_AGE <span class="operator">|</span> CUP_SIZE <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+-----------+----------+----------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1001</span> <span class="operator">|</span> 梦梦       <span class="operator">|</span> <span class="number">14</span>       <span class="operator">|</span> C        <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+-----------+----------+----------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.02</span> sec)</span><br></pre></td></tr></table></figure>

<p>如上报错以及正常返结果查询操作在Windows平台都可以正常执行。如果想尽可能避免出现差错，统一规范，例如创建时统一使用小写创建库名、表名。</p>
<p>MySQL数据库中，如何在硬盘中保存使用表名、数据库名是由<code>lower_case_table_names</code>系统变量决定的，用户可以在启动MySQL服务之前设置系统变量值（由于Dynamic&#x3D;no，非动态）。具体设置对应操作系统、以及含义如下表格：</p>
<table>
<thead>
<tr>
<th>参数值</th>
<th>操作系统</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>0</td>
<td>Unix默认值</td>
<td>如果设置为0，表名将按指定的方式存储，并且比较是区分大小写的。对大小写敏感。如果在不区分大小写的文件系统上强制使用0，并使用不同字母大小写访问MyISAM表，可能会导致索引损坏。</td>
</tr>
<tr>
<td>1</td>
<td>Windows默认值</td>
<td>如果设置为1，表名在磁盘上以小写存储，MySQL在存储和查找时将所有表名转换为小写。同样使用数据库名和别名。</td>
</tr>
<tr>
<td>2</td>
<td>macOS默认值</td>
<td>如果设置为2，表名将以给定的形式存储，比较时使用小写。MySQL将其转换为小写以便查找，适用于不区分大小写的文件系统。</td>
</tr>
</tbody></table>
<p>例如：Windows平台使用如下SQL语句进行查询系统默认设置<code>lower_case_table_names</code>值，返回结果是1</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> @<span class="variable">@lower_case_table_names</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------+</span></span><br><span class="line"><span class="operator">|</span> @<span class="variable">@lower_case_table_names</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------+</span></span><br><span class="line"><span class="operator">|</span>                        <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<p>设置<code>--lower-case-table-names</code>[&#x3D;#]参数值，在Windows平台直接编辑my.ini文件，在Linux操作系统可以使用vim编辑&#x2F;etc&#x2F;my.cnf中新增如下设置：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># my.cnf or my.ini</span></span><br><span class="line">[mysqld]</span><br><span class="line"><span class="comment">## --lower-case-table-names[=#] #命令行格式：参数值可以为0 1 2，根据系统平台设定</span></span><br><span class="line"><span class="comment">#example</span></span><br><span class="line">lower-case-table-names=1  <span class="comment"># Windows平台默认值</span></span><br><span class="line">lower-case-table-names=0  <span class="comment"># Linux默认值为0，设置0和1都可以成功启动</span></span><br></pre></td></tr></table></figure>

<p><strong>tips</strong>：如果在单个平台使用，影响不是很大。使用时尽可能在同一查询中使用相同大小写来引用数据库名或表名，养成一个良好习惯。</p>
<h4 id="6-使用外键注意事项"><a href="#6-使用外键注意事项" class="headerlink" title="6  使用外键注意事项"></a>6  使用外键注意事项</h4><p>在MySQL中，InnoDB存储引擎支持对外部关键字约束条件检查。对于其它类型存储引擎的表，当使用<code>REFERENCES tbl_name</code>(col_name,…)子句定义列时可以使用外部关键字，但该子句没有实际效果，可以作为注释提醒用户目前定义的列指向另一表中的一个列。具体语法在此处，不做演示，在第三章节锁问题（InnoDB锁问题：外键与锁有说明）。</p>
<p>接下来，演示不同类型存储引擎使用外键效果，具体也只演示MyISAM和InnoDB存储引擎使用外键创建父（parent）表和子（child）表。示例如下：</p>
<p><strong>6.1 MyISAM存储引擎建立有外键父表与子表</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> parent (</span><br><span class="line">id <span class="type">INT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY (id)</span><br><span class="line">) ENGINE<span class="operator">=</span>MyISAM;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建子表child，并加入给update与delete条件加入CASCADE</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> child (</span><br><span class="line">id <span class="type">INT</span>,</span><br><span class="line">parent_id <span class="type">INT</span>,</span><br><span class="line">INDEX par_ind (parent_id),</span><br><span class="line"><span class="keyword">FOREIGN</span> KEY (parent_id)</span><br><span class="line"><span class="keyword">REFERENCES</span> parent(id)</span><br><span class="line"><span class="keyword">ON</span> <span class="keyword">UPDATE</span> CASCADE</span><br><span class="line"><span class="keyword">ON</span> <span class="keyword">DELETE</span> CASCADE</span><br><span class="line">) ENGINE<span class="operator">=</span>MyISAM;</span><br></pre></td></tr></table></figure>

<p><strong>测试插入数据</strong>：父表（parent）插入一条演示数据，子表（child）插入3条演示数据，有级联关系。如果父表内容被修改，子表三条关联外键内容也应该修改过来。实际上MyISAM存储引擎并不支持外键，所以不生效。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> parent (id) <span class="keyword">VALUES</span> (<span class="number">1</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> child (id,parent_id) <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="number">1</span>),(<span class="number">2</span>,<span class="number">1</span>),(<span class="number">3</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">UPDATE</span> parent <span class="keyword">SET</span> id <span class="operator">=</span> <span class="number">2</span> <span class="keyword">WHERE</span> id <span class="operator">=</span> <span class="number">1</span>;</span><br></pre></td></tr></table></figure>

<p>最后验证查询有关联的子表，数据并没有变化：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> child;</span><br><span class="line"><span class="operator">+</span><span class="comment">------+-----------+</span></span><br><span class="line"><span class="operator">|</span> id   <span class="operator">|</span> parent_id <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+-----------+</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">1</span> <span class="operator">|</span>         <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">2</span> <span class="operator">|</span>         <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">3</span> <span class="operator">|</span>         <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+-----------+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<p>你还可以使用语句<code>show create table tbl_name</code>命令查看创建的表child并没有显示外键信息，而InnoDB存储引擎会显示外键信息。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> child\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">       <span class="keyword">Table</span>: child</span><br><span class="line"><span class="keyword">Create</span> <span class="keyword">Table</span>: <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `child` (</span><br><span class="line">  `id` <span class="type">int</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `parent_id` <span class="type">int</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  KEY `par_ind` (`parent_id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>MyISAM <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4</span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> test.child\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">       <span class="keyword">Table</span>: child</span><br><span class="line"><span class="keyword">Create</span> <span class="keyword">Table</span>: <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `child` (</span><br><span class="line">  `id` <span class="type">int</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `parent_id` <span class="type">int</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  KEY `par_ind` (`parent_id`),</span><br><span class="line">  <span class="keyword">CONSTRAINT</span> `child_ibfk_1` <span class="keyword">FOREIGN</span> KEY (`parent_id`) <span class="keyword">REFERENCES</span> `parent` (`id`) <span class="keyword">ON</span> <span class="keyword">DELETE</span> CASCADE <span class="keyword">ON</span> <span class="keyword">UPDATE</span> CASCADE</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4</span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>





<p><strong>6.2 InnoDB存储引擎建立有外键父表与子表</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> parent;<span class="comment">-- 删除原有创建子表parent</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> parent (</span><br><span class="line">id <span class="type">INT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY (id)</span><br><span class="line">) ENGINE<span class="operator">=</span>INNODB;</span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> child;<span class="comment">-- 删除原有创建子表child</span></span><br><span class="line"><span class="comment">-- 重新创建子表child，并加入给update与delete条件加入CASCADE</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> child (</span><br><span class="line">id <span class="type">INT</span>,</span><br><span class="line">parent_id <span class="type">INT</span>,</span><br><span class="line">INDEX par_ind (parent_id),</span><br><span class="line"><span class="keyword">FOREIGN</span> KEY (parent_id)</span><br><span class="line"><span class="keyword">REFERENCES</span> parent(id)</span><br><span class="line"><span class="keyword">ON</span> <span class="keyword">UPDATE</span> CASCADE</span><br><span class="line"><span class="keyword">ON</span> <span class="keyword">DELETE</span> CASCADE</span><br><span class="line">) ENGINE<span class="operator">=</span>INNODB;</span><br></pre></td></tr></table></figure>

<p><strong>测试插入数据</strong>：父表（parent）插入一条演示数据，子表（child）插入3条演示数据，有级联关系。如果父表内容被修改，子表三条关联外键内容也应该修改过来。InnoDB存储引擎支持外键，所以级联修改起作用，parent_id值被集体修改为2。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> parent (id) <span class="keyword">VALUES</span> (<span class="number">1</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> child (id,parent_id) <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="number">1</span>),(<span class="number">2</span>,<span class="number">1</span>),(<span class="number">3</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">UPDATE</span> parent <span class="keyword">SET</span> id <span class="operator">=</span> <span class="number">2</span> <span class="keyword">WHERE</span> id <span class="operator">=</span> <span class="number">1</span>;</span><br></pre></td></tr></table></figure>

<p>最后验证查询有关联的子表，查询演示数据：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> child;</span><br><span class="line"><span class="operator">+</span><span class="comment">------+-----------+</span></span><br><span class="line"><span class="operator">|</span> id   <span class="operator">|</span> parent_id <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+-----------+</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">1</span> <span class="operator">|</span>         <span class="number">2</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">2</span> <span class="operator">|</span>         <span class="number">2</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">3</span> <span class="operator">|</span>         <span class="number">2</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+-----------+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>



<p>更加详细演示，在下面外键与锁章节描述比较详细。也可以参考官方文档示例：product_order、product、customer这三张表之间使用外键进行操作。模拟产品（product）、顾客（customer）、订单（product_order）三张表关联关系，订单表设置级联（CASCADE）关系，并且同时引用产品与顾客相应字段作为外键引用。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> product (</span><br><span class="line">category <span class="type">INT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>, </span><br><span class="line">id <span class="type">INT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">price <span class="type">DECIMAL</span>,</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY(category, id)</span><br><span class="line">) ENGINE<span class="operator">=</span>INNODB;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> customer (</span><br><span class="line">id <span class="type">INT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY (id)</span><br><span class="line">) ENGINE<span class="operator">=</span>INNODB;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> product_order (</span><br><span class="line"><span class="keyword">no</span> <span class="type">INT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">product_category <span class="type">INT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">product_id <span class="type">INT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">customer_id <span class="type">INT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY(<span class="keyword">no</span>),</span><br><span class="line">INDEX (product_category, product_id),</span><br><span class="line">INDEX (customer_id),</span><br><span class="line"><span class="keyword">FOREIGN</span> KEY (product_category, product_id)</span><br><span class="line"><span class="keyword">REFERENCES</span> product(category, id)</span><br><span class="line"><span class="keyword">ON</span> <span class="keyword">UPDATE</span> CASCADE <span class="keyword">ON</span> <span class="keyword">DELETE</span> RESTRICT,</span><br><span class="line"><span class="keyword">FOREIGN</span> KEY (customer_id)</span><br><span class="line"><span class="keyword">REFERENCES</span> customer(id)</span><br><span class="line">) ENGINE<span class="operator">=</span>INNODB;</span><br></pre></td></tr></table></figure>



<h3 id="MySQL官方示例数据库"><a href="#MySQL官方示例数据库" class="headerlink" title="MySQL官方示例数据库"></a>MySQL官方示例数据库</h3><p>给出<strong>sakila-db数据库</strong>包含三个文件，便于大家获取与使用：</p>
<ol>
<li>sakila-schema.sql：数据库表结构；</li>
<li>sakila-data.sql：数据库示例模拟数据；</li>
<li>sakila.mwb：数据库物理模型，在MySQL workbench中可以打开查看。</li>
</ol>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZHMubXlzcWwuY29tL2RvY3Mvc2FraWxhLWRiLnppcA==">https://downloads.mysql.com/docs/sakila-db.zip<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p><strong>只是用于用于简单测试学习，建议使用world-db</strong>：</p>
<p><strong>world-db数据库</strong>，包含三张表：city、country、countrylanguage。</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZHMubXlzcWwuY29tL2RvY3Mvd29ybGQtZGIuemlw">https://downloads.mysql.com/docs/world-db.zip<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p>最后附上官方示例数据库，<strong>sakila-db数据库</strong>一个非常完整的示例。包含：视图、函数、触发器以及存储过程，当然也存在使用外键。</p>
<p><strong>参考资料&amp;鸣谢</strong>：</p>
<ul>
<li>《深入浅出MySQL 第2版 数据库开发、优化与管理维护》。</li>
<li>《MySQL技术内幕InnoDB存储引擎 第2版》。</li>
<li>MySQL8.0官网文档：refman-8.0-en.pdf，如果学习新版本，官方文档是非常不错的选择。</li>
</ul>
<p>虽然书籍年份比较久远（停留在MySQL5.6.x版本），但仍然具有借鉴意义。</p>
<p>最后，对以上书籍和官方文档所有作者表示衷心感谢。让我充分体会到：前人栽树，后人乘凉。</p>
<h1 id="莫问收获，但问耕耘"><a href="#莫问收获，但问耕耘" class="headerlink" title="莫问收获，但问耕耘"></a>莫问收获，但问耕耘</h1><p><strong>能看到这里的，都是帅哥靓妹</strong>。以上是本次MySQL优化篇（上部分）全部内容，希望能对你的工作与学习有所帮助。感觉写的好，就拿出你的一键三连。如果感觉总结的不到位，也希望能留下您宝贵的意见，我会在文章中定期进行调整优化。<strong>好记性不如烂笔头，多实践多积累</strong>。<strong>你会发现，自己的知识宝库越来越丰富</strong>。原创不易，转载也请标明出处和作者，尊重原创。</p>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL优化数据库对象</title>
    <url>/2022/04/07/MySQL%E4%BC%98%E5%8C%96%E6%96%B9%E6%B3%95-%E4%BC%98%E5%8C%96%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AF%B9%E8%B1%A1/</url>
    <content><![CDATA[<p>﻿﻿﻿MySQL优化方法——优化数据库对象</p>
<p>如果没有进行特别说明，一般是基于MySQL8.0.28进行测试验证。官方文档非常具有参考意义。你可以将这篇博文，当成过度到MySQL8.0的参考资料。<strong>友情提示：经验是用来参考，不是拿来即用</strong>。如果您能看到并分享这篇文章，我很荣幸。如果有误导您的地方，我表示抱歉。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/acf1fd88c4b72660309388d03852a999.png"></p>
<p><strong>tips</strong>：图片资源可能被防盗链（寄）了，可以<strong>右键属性复制地址在地址栏查看</strong>哈。</p>
<span id="more"></span>

<h1 id="MySQL优化方法——优化数据库对象"><a href="#MySQL优化方法——优化数据库对象" class="headerlink" title="MySQL优化方法——优化数据库对象"></a>MySQL优化方法——优化数据库对象</h1><p><strong>注意</strong>：在某些情况，你自己测试的结果可能与我演示有所不同，我省略了查询结果的部分参数。</p>
<p><strong>本文侧重点在SQL优化流程以及MySQL锁问题</strong>（MyISAM和InnoDB存储引擎）。图片可能会挂，演示时尽量使用SQL查询语句返回结果进行示例。篇幅很长，因此使用markdown语法加了目录。</p>
<p>起初，也只是想看MySQL8.0.28有哪些变化，后面索性结合书籍和官方文档总结了一篇。花了将近两周，基本是每天完善一点，因为个人只有晚上和周末有时间总结并测试验证。如果有错别字，也请多多担待。如果你能看到并分享这篇文章，我很荣幸。如果有误导你的地方，我表示抱歉。</p>
<p>如果你是从MySQL5.6或者5.7版本过渡到MySQL8.0。学习之前，建议线看官方文档这一章节：1.3 What Is New MySQL8.0 。在做对比的时候，<strong>文档中带有Note标识是你应该注意的地方</strong>。比如下面这张截图：</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/17d4943de92930dea49aa6fe2eaeac55.png"></p>
<h2 id="优化数据库对象"><a href="#优化数据库对象" class="headerlink" title="优化数据库对象"></a>优化数据库对象</h2><p>第二部分，优化数据库对象。看看就行，因为没做过多示例介绍，以理论知识居多。</p>
<p>面对数据库设计过程，用户可能会遇到这类问题。是否完全遵循数据库设计三范式设计表结构？表的字段值大小到底设置为多长合适？这些问题看似很小，但设计不当则可能会给将来的应用带来很多性能问题。</p>
<h3 id="01-优化表数据类型"><a href="#01-优化表数据类型" class="headerlink" title="01 优化表数据类型"></a>01 优化表数据类型</h3><p>设计表的时候，需要给定字段类型。</p>
<p>表需要使用何种数据类型应该依据实际应用来判断。当然，考虑到应用字段留有冗余是一个不错的选择。但并不推荐所有字段留有大量的冗余，因为浪费磁盘存储空间，同时在操作应用时也浪费物理内存。</p>
<p>在MySQL中，可以使用函数procedure analyse()对当前应用的表进行分析。该函数可以对数据表中列的数据类型提出优化建议，可以根据实际情况进行优化。</p>
<p><strong>示例</strong>：MariaDB 10.5.6中使用procedure analyse()</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [test]<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> student <span class="keyword">procedure</span> analyse()\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">             Field_name: test.student.ID</span><br><span class="line">              Min_value: <span class="number">1</span></span><br><span class="line">              Max_value: <span class="number">1000000</span></span><br><span class="line">             Min_length: <span class="number">1</span></span><br><span class="line">             Max_length: <span class="number">7</span></span><br><span class="line">       Empties_or_zeros: <span class="number">0</span></span><br><span class="line">                  Nulls: <span class="number">0</span></span><br><span class="line">Avg_value_or_avg_length: <span class="number">500000.5000</span></span><br><span class="line">                    Std: <span class="number">577357.8230</span></span><br><span class="line">      Optimal_fieldtype: MEDIUMINT(<span class="number">7</span>) UNSIGNED <span class="keyword">NOT</span> <span class="keyword">NULL</span></span><br></pre></td></tr></table></figure>

<p>最终给出的优化建议Optimal_fieldtype：MEDIUMINT(7) UNSIGNED NOT NULL，字段类型MEDIUMINT(7) 。</p>
<p><strong>注意</strong>：在MySQL 5.x版本和MariaDB 10.5.6还可以使用。但在MySQL8.0.x版本已经被移除了，暂时没看到替代的方式。</p>
<blockquote>
<p>PROCEDURE ANALYSE() syntax is removed.</p>
<p>摘自第1.3章节：Features Removed in MySQL 8.0</p>
</blockquote>
<h3 id="02-拆分表提高访问效率"><a href="#02-拆分表提高访问效率" class="headerlink" title="02 拆分表提高访问效率"></a>02 拆分表提高访问效率</h3><p>看小标题已经描述很清晰，通过对数据表进行拆分。</p>
<p>假如针对MyISAM类型表进行，有如下两种方式：</p>
<ol>
<li><p><strong>垂直拆分</strong>：将主列和一些列存放至一张表中，然后将主列和另外的列存放到另一张表中。如果不好理解，可以想象一下垂直平分线的方式。如果一张表某些列常用，而另一些列不常用，则可以采取垂直拆分。</p>
<p>垂直拆分可以使数据行变小，一个数据页可以存放更多数据，查询时会减少I&#x2F;O次数。缺点在于需要管理冗余列，查询所有数据需要联合（union）操作。</p>
</li>
<li><p><strong>水平拆分</strong>：根据一列或多列数据的值将数据行放入两张独立的表中。<br> 水平拆分通常在以下几种场景下使用：<br><br> <strong>表很大</strong>，分割后可以降低在查询时需要读取的数据和索引页数。同时降低索引层数，提高查询速度。</p>
<p> <strong>表中数据本就有独立性</strong>。比如，表中数据记录着不同地区的数据或者不同时间段的数据。区分常用数据和不常用数据，需要将数据存		放在多个介质上。</p>
</li>
</ol>
<p>水平拆分会给应用增加复杂度，查询时通常需要联结多个表，查询所有数据需要使用UNION操作。考虑是否进行水平拆分，可以依据应用实际数据增长速率进行酌情处理。</p>
<h3 id="03-逆规范"><a href="#03-逆规范" class="headerlink" title="03 逆规范"></a>03 逆规范</h3><p>谈到逆规范，第一时间会想到规范，其次想到表中加入冗余字段便于操作。</p>
<p>从我们学习数据库知识起，已经深入到脑海里并理解满足规范设计的重要性。</p>
<p><strong>是不是满足数据设计规范越高越好呢</strong>？以前数据库没那么多范式，最多满足3范式，现在到了N范式。个人理解，应该根据实际需求定，不应一概而论。规范越高，关系相对越复杂，表之间联结操作越频繁。如果是查询统计较多的应用，则大大影响查询性能。</p>
<p><strong>设计逆规范时</strong>，我们想达到的目的是啥？降低联结操作需求、减少索引数目，也许还会减少表数目。如果带来数据完整性问题，如何处理。做逆规范，理应权衡利弊；弊大于利，则适得其反。如果优质索引可以解决，则不必增加逆规范。</p>
<p><strong>使用逆规范前的思考</strong>：</p>
<ul>
<li>数据存储需求；</li>
<li>常用表大小；</li>
<li>特殊计算（比如合计）；</li>
<li>物理存储位置。</li>
</ul>
<p>常用逆规范技术手段：增加<strong>冗余列</strong>、<strong>派生列</strong>、<strong>重新组表和分割表</strong>。</p>
<p>使用逆规范操作，<strong>往往有一种比较友好的方式来应对处理</strong>，那就是<strong>触发器</strong>。对数据任何修改立即出发对复制列或派生列的相应修改。触发器是实时的，相应处理逻辑只在一个地方出现，易于维护。</p>
<h3 id="04-中间表提高统计查询效率"><a href="#04-中间表提高统计查询效率" class="headerlink" title="04 中间表提高统计查询效率"></a>04 中间表提高统计查询效率</h3><p>曾几何时，你在面试时遇到是否有海量数据处理经验。如果是你来应对，如何处理，思考过如何回答么？</p>
<p>仔细想想，其实可以从单表存储数据过多，会带来哪些缺点进行思考。</p>
<p>对于数据量较大的表，进行统计查询通常效率会降低，并且还要考虑统计查询是否影响在线应用（负面影响）。通常在这种情况下，使用中间表可以提高查询效率。考虑前提，对转移（复制）当前表时间进行忽略。</p>
<p><strong>使用方法进行示例</strong>：只需两步完成操作</p>
<p>1、创建新表使用源表数据结构（<strong>你也可以适当优化，比如常用字段加单独索引</strong>）。当时考虑Oracle中分批次生成1kw数据想到这种方法。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> test.student01 <span class="keyword">as</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> test.student;</span><br></pre></td></tr></table></figure>

<p>2、然后插入源表数据，这样做确实很方便。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> test.student01 <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> test.student;</span><br></pre></td></tr></table></figure>

<p>做完之后，数据转移到中间表上进行统计，得到结果。既不影响在线应用，也可以快速查询统计。</p>
<p><strong>中间表做统计查询优点</strong>：</p>
<ol>
<li>复制源表部分数据，与源表隔离，中间表做统计查询不影响在线应用使用。</li>
<li>灵活添加索引，增加临时字段，最终达到提高统计查询效率。</li>
</ol>
<p><strong>参考资料&amp;鸣谢</strong>：</p>
<ul>
<li>《深入浅出MySQL 第2版 数据库开发、优化与管理维护》。</li>
<li>《MySQL技术内幕InnoDB存储引擎 第2版》。</li>
<li>MySQL8.0官网文档：refman-8.0-en.pdf，如果学习新版本，官方文档是非常不错的选择。</li>
</ul>
<p>虽然书籍年份比较久远（停留在MySQL5.6.x版本），但仍然具有借鉴意义。</p>
<p>最后，对以上书籍和官方文档所有作者表示衷心感谢。让我充分体会到：前人栽树，后人乘凉。</p>
<h1 id="莫问收获，但问耕耘"><a href="#莫问收获，但问耕耘" class="headerlink" title="莫问收获，但问耕耘"></a>莫问收获，但问耕耘</h1><p>只停留在看上面，提升效果甚微。应该带着思考去测试佐证，或者使用（同类书籍）新版本进行对比，这样带来的效果更好。最重要的一环，<strong>养成阅读官方文档</strong>，是一个良好的习惯。能编写官方文档，至少证明他们在这个领域是有很高的造诣，对用法足够熟练。</p>
<p><strong>能看到这里的，都是帅哥靓妹</strong>。以上是本次MySQL优化篇（上部分）全部内容，希望能对你的工作与学习有所帮助。感觉写的好，就拿出你的一键三连。如果感觉总结的不到位，也希望能留下您宝贵的意见，我会在文章中定期进行调整优化。<strong>好记性不如烂笔头，多实践多积累</strong>。<strong>你会发现，自己的知识宝库越来越丰富</strong>。原创不易，转载也请标明出处和作者，尊重原创。</p>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL优化流程：使用索引典型场景AND索引失效场景</title>
    <url>/2022/04/07/MySQL%E4%BC%98%E5%8C%96%E6%B5%81%E7%A8%8B%EF%BC%9A%E4%BD%BF%E7%94%A8%E7%B4%A2%E5%BC%95%E5%85%B8%E5%9E%8B%E5%9C%BA%E6%99%AFAND%E7%B4%A2%E5%BC%95%E5%A4%B1%E6%95%88%E5%9C%BA%E6%99%AF/</url>
    <content><![CDATA[<p>MySQL优化流程索引问题：MySQL中使用索引典型场景，存在但不能使用索引的场景。</p>
<p><strong>友情提示</strong>：在某些情况，你测试的结果可能与我演示有所不同，我省略了查询结果的部分参数。</p>
<p>如果你是从MySQL5.6或者5.7版本过渡到MySQL8.0。学习之前，建议线看官方文档这一<strong>1.3 What Is New MySQL8.0</strong> 。在做对比的时候，<strong>文档中带有Note标识是你应该注意的地方</strong>。比如下面这张截图：</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/17d4943de92930dea49aa6fe2eaeac55.png"></p>
<h2 id="MySQL优化流程——MySQL索引问题"><a href="#MySQL优化流程——MySQL索引问题" class="headerlink" title="MySQL优化流程——MySQL索引问题"></a>MySQL优化流程——MySQL索引问题</h2><p>索引问题，是一个老生常谈的问题。如果是数据库优化场景，职场面试中经常被提到。</p>
<p><strong>索引是在MySQL存储引擎中实现，而不是在服务器层实现</strong>。</p>
<p>每种存储引擎索引不一定完全相同，并不是所有存储引擎支持索引类型都一致。</p>
<p><strong>tips</strong>：图片资源可能被防盗链（寄）了，可以<strong>右键属性复制地址在地址栏查看</strong>哈。</p>
<span id="more"></span>

<p><strong>以下列举几种常见索引介绍（索引存储分类）</strong>：</p>
<ol>
<li><strong>B-Tree索引</strong>：最常见的使索引类型，大部分存储引擎都支持B树索引。</li>
<li><strong>HASH索引</strong>：MEMORY、HEAP、NDB支持，使用场景较为简单。</li>
<li><strong>R-Tree索引</strong>（空间索引）：空间索引是MyISAM存储引擎一个特殊索引类型，主要用于地理空间数据类型，一般使用较少。</li>
<li><strong>Full-text</strong>（全文索引）：全文索引是MyISAM存储引擎一个特殊索引类型，主要用于全文索引。<strong>在MySQL5.6版本开始对InnoDB提供全文索引支持</strong>。</li>
</ol>
<p><strong>注意</strong>：索引类型子句不能用于FULLTEXT（全文索引）或(在MySQL 8.0.12之前)空间索引规范。<strong>全文索引的实现依赖于存储引擎</strong>。空间索引实现为R-tree索引。</p>
<h3 id="1-索引介绍"><a href="#1-索引介绍" class="headerlink" title="1   索引介绍"></a>1   索引介绍</h3><p><strong>几种常见的MySQL存储引擎支持索引类型</strong>：</p>
<table>
<thead>
<tr>
<th>序号</th>
<th>存储引擎</th>
<th>支持索引</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>InnoDB</td>
<td>BTREE</td>
</tr>
<tr>
<td>2</td>
<td>MyISAM</td>
<td>BTREE</td>
</tr>
<tr>
<td>3</td>
<td>MEMORY&#x2F;HEAP</td>
<td>HASH, BTREE</td>
</tr>
<tr>
<td>4</td>
<td>NDB</td>
<td>HASH, BTREE</td>
</tr>
</tbody></table>
<p><strong>以上四种存储引擎支持索引特点对比</strong>：Primary key（主键索引），Unique（唯一索引），key（普通索引），FULLTEXT（全文索引），SPATIAL（空间索引）。</p>
<p><strong>InnoDB存储引擎</strong>：</p>
<table>
<thead>
<tr>
<th>索引类别</th>
<th>索引类型</th>
<th>Stores NULL 值</th>
<th>Permits Multiple NULL 值</th>
<th>IS NULL 扫描类型</th>
<th>IS NOT NULL 扫描类型</th>
</tr>
</thead>
<tbody><tr>
<td>Primary key</td>
<td>BTREE</td>
<td>No</td>
<td>No</td>
<td>N&#x2F;A</td>
<td>N&#x2F;A</td>
</tr>
<tr>
<td>Unique</td>
<td>BTREE</td>
<td>Yes</td>
<td>Yes</td>
<td>Index</td>
<td>Index</td>
</tr>
<tr>
<td>Key</td>
<td>BTREE</td>
<td>Yes</td>
<td>Yes</td>
<td>Index</td>
<td>Index</td>
</tr>
<tr>
<td>FULLTEXT</td>
<td>N&#x2F;A</td>
<td>Yes</td>
<td>Yes</td>
<td>Table</td>
<td>Table</td>
</tr>
<tr>
<td>SPATIAL</td>
<td>N&#x2F;A</td>
<td>No</td>
<td>No</td>
<td>N&#x2F;A</td>
<td>N&#x2F;A</td>
</tr>
</tbody></table>
<p><strong>MyISAM存储引擎</strong>：</p>
<table>
<thead>
<tr>
<th>索引类别</th>
<th>索引类型</th>
<th>Stores NULL 值</th>
<th>Permits Multiple NULL 值</th>
<th>IS NULL 扫描类型</th>
<th>IS NOT NULL 扫描类型</th>
</tr>
</thead>
<tbody><tr>
<td>Primary key</td>
<td>BTREE</td>
<td>No</td>
<td>No</td>
<td>N&#x2F;A</td>
<td>N&#x2F;A</td>
</tr>
<tr>
<td>Unique</td>
<td>BTREE</td>
<td>Yes</td>
<td>Yes</td>
<td>Index</td>
<td>Index</td>
</tr>
<tr>
<td>Key</td>
<td>BTREE</td>
<td>Yes</td>
<td>Yes</td>
<td>Index</td>
<td>Index</td>
</tr>
<tr>
<td>FULLTEXT</td>
<td>N&#x2F;A</td>
<td>Yes</td>
<td>Yes</td>
<td>Table</td>
<td>Table</td>
</tr>
<tr>
<td>SPATIAL</td>
<td>N&#x2F;A</td>
<td>No</td>
<td>No</td>
<td>N&#x2F;A</td>
<td>N&#x2F;A</td>
</tr>
</tbody></table>
<p><strong>MEMORY存储引擎</strong>：</p>
<table>
<thead>
<tr>
<th>索引类别</th>
<th>索引类型</th>
<th>Stores NULL 值</th>
<th>Permits Multiple NULL 值</th>
<th>IS NULL 扫描类型</th>
<th>IS NOT NULL 扫描类型</th>
</tr>
</thead>
<tbody><tr>
<td>Primary key</td>
<td>BTREE</td>
<td>No</td>
<td>No</td>
<td>N&#x2F;A</td>
<td>N&#x2F;A</td>
</tr>
<tr>
<td>Unique</td>
<td>BTREE</td>
<td>Yes</td>
<td>Yes</td>
<td>Index</td>
<td>Index</td>
</tr>
<tr>
<td>Key</td>
<td>BTREE</td>
<td>Yes</td>
<td>Yes</td>
<td>Index</td>
<td>Index</td>
</tr>
<tr>
<td>Primary key</td>
<td>HASH</td>
<td>No</td>
<td>No</td>
<td>N&#x2F;A</td>
<td>N&#x2F;A</td>
</tr>
<tr>
<td>Unique</td>
<td>HASH</td>
<td>Yes</td>
<td>Yes</td>
<td>Index</td>
<td>Index</td>
</tr>
<tr>
<td>Key</td>
<td>HASH</td>
<td>Yes</td>
<td>Yes</td>
<td>Index</td>
<td>Index</td>
</tr>
</tbody></table>
<p><strong>NDB存储引擎</strong>：</p>
<table>
<thead>
<tr>
<th>索引类别</th>
<th>索引类型</th>
<th>Stores NULL 值</th>
<th>Permits Multiple NULL 值</th>
<th>IS NULL 扫描类型</th>
<th>IS NOT NULL 扫描类型</th>
</tr>
</thead>
<tbody><tr>
<td>Primary key</td>
<td>BTREE</td>
<td>No</td>
<td>No</td>
<td>Index</td>
<td>Index</td>
</tr>
<tr>
<td>Unique</td>
<td>BTREE</td>
<td>Yes</td>
<td>Yes</td>
<td>Index</td>
<td>Index</td>
</tr>
<tr>
<td>Key</td>
<td>BTREE</td>
<td>Yes</td>
<td>Yes</td>
<td>Index</td>
<td>Index</td>
</tr>
<tr>
<td>Primary key</td>
<td>HASH</td>
<td>No</td>
<td>No</td>
<td>Table</td>
<td>Table</td>
</tr>
<tr>
<td>Unique</td>
<td>HASH</td>
<td>Yes</td>
<td>Yes</td>
<td>Table</td>
<td>Table</td>
</tr>
<tr>
<td>Key</td>
<td>HASH</td>
<td>Yes</td>
<td>Yes</td>
<td>Table</td>
<td>Table</td>
</tr>
</tbody></table>
<p><strong>关于更多用法介绍，你可以找到参考内容</strong>：</p>
<blockquote>
<p>8.3.9 Comparison of B-Tree and Hash Indexes</p>
<p>12.10 Full-Text Search Functions</p>
<p>13.1 Index Types Per Storage Engine</p>
<p>13.1.15 CREATE INDEX Statement</p>
<p>– 摘自MySQL8.0官方文档：refman-8.0-en</p>
</blockquote>
<h3 id="2-MySQL如何使用索引"><a href="#2-MySQL如何使用索引" class="headerlink" title="2 MySQL如何使用索引"></a>2 MySQL如何使用索引</h3><p>InnoDB存储引擎Information Schema一些视图脚本名称更新（MySQL8.0.3或者更高版本）：</p>
<table>
<thead>
<tr>
<th>旧名称</th>
<th>新名称</th>
</tr>
</thead>
<tbody><tr>
<td>INNODB_SYS_COLUMNS</td>
<td><strong>INNODB_COLUMNS</strong></td>
</tr>
<tr>
<td>INNODB_SYS_DATAFILES</td>
<td><strong>INNODB_DATAFILES</strong></td>
</tr>
<tr>
<td>INNODB_SYS_FIELDS</td>
<td><strong>INNODB_FIELDS</strong></td>
</tr>
<tr>
<td>INNODB_SYS_FOREIGN</td>
<td><strong>INNODB_FOREIGN</strong></td>
</tr>
<tr>
<td>INNODB_SYS_FOREIGN_COLS</td>
<td><strong>INNODB_FOREIGN_COLS</strong></td>
</tr>
<tr>
<td>INNODB_SYS_INDEXES</td>
<td><strong>INNODB_INDEXES</strong></td>
</tr>
<tr>
<td>INNODB_SYS_TABLES</td>
<td><strong>INNODB_TABLES</strong></td>
</tr>
<tr>
<td>INNODB_SYS_TABLESPACES</td>
<td><strong>INNODB_TABLESPACES</strong></td>
</tr>
<tr>
<td>INNODB_SYS_TABLESTATS</td>
<td><strong>INNODB_TABLESTATS</strong></td>
</tr>
<tr>
<td>INNODB_SYS_VIRTUAL</td>
<td><strong>INNODB_VIRTUAL</strong></td>
</tr>
</tbody></table>
<p><strong>tips</strong>：如果你升级到MySQL8.0.3或者更高版本：会发现与MySQL绑定的zlib库版本从版本1.2.3提升到版本1.2.11。</p>
<h4 id="2-1-InnoDB存储引擎索引"><a href="#2-1-InnoDB存储引擎索引" class="headerlink" title="2.1  InnoDB存储引擎索引"></a>2.1  InnoDB存储引擎索引</h4><p>一般情况，针对InnoDB存储引擎进行描述索引使用，因为MySQL5.5.5开始默认存储引擎是InnoDB。</p>
<p>InnoDB存储引擎支持索引：</p>
<ul>
<li>B-tree indexs（B+树索引）；</li>
<li>Full-text search indexes（全文索引）：需要在MySQL5.6或者更高的版本中使用。</li>
</ul>
<p>本不支持HASH indexs（NO Support），用户没有控制权，<strong>但InnoDB内部利用哈希索引来实现自适应哈希索引特性</strong>。</p>
<p>B+树索引是传统意义上的索引，目前关系型数据库系统中查找最为常用和最为有效地的引。B+树索引构造类似于二叉树，根据键值（Key Value）快速查找数据。</p>
<p><strong>注意</strong>：B+树中的B不是代表二叉树（binary），而是平衡树（balance），因为B+树是从平衡二叉树演化而来，但B+树也不是一个二叉树。B+树索引并不能找到一个给定键值的具体行，能找到的是被查找数据行所在页。然后数据库通过将页读到内存，再从内存中进行查找，最后得到要查找的数据。</p>
<p>上面简单介绍了下InnoDB存储引擎支持的索引，以及部分新特性，以及B+树索引。如果想深入理解B+树索引，可以从算法角度去分析，但不是此次内容的重点，可以私下查找文档去了解。<strong>接着讨论如何使用索引</strong>。</p>
<h4 id="2-2-MySQL中使用索引典型场景"><a href="#2-2-MySQL中使用索引典型场景" class="headerlink" title="2.2  MySQL中使用索引典型场景"></a>2.2  MySQL中使用索引典型场景</h4><ol>
<li><strong>匹配全值</strong>（Match the whole value）。对索引中所有列都指定具体指，即索引所有列都有等值匹配条件。</li>
<li><strong>匹配范围查询</strong>（March range）。对索引值能够进行范围查找。</li>
<li><strong>匹配最左前缀</strong>（Matches the leftmost prefix）。仅仅使用到索引中的最左边列进行查找。</li>
<li><strong>仅仅对索引查询</strong>（Only for index queries）。当查询列都在索引字段中，查询效率更高。</li>
<li><strong>匹配列前缀</strong>（Match a column prefix ），仅仅使用索引中的第一列，并且只包含索引第一列开头一部分。</li>
<li><strong>索引匹配部分精确</strong>，其它部分范围匹配（ Match  a part）。</li>
<li><strong>如果列名是索引</strong>，使用column_name is null就会使用索引。</li>
</ol>
<p>以上是对7种使用到索引场景进行说明，<strong>下面将使用explain执行计划进行详细示例</strong>。</p>
<p><strong>匹配全值</strong>（Match the whole value）。对索引中所有列都指定具体指，即索引所有列都有等值匹配条件。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> sakila.rental <span class="keyword">where</span> rental_date<span class="operator">=</span><span class="string">&#x27;2005-05-27 07:33:54&#x27;</span> <span class="keyword">and</span> customer_id<span class="operator">=</span><span class="number">134</span> <span class="keyword">and</span> inventory_id<span class="operator">=</span><span class="number">360</span>\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">           id: <span class="number">1</span></span><br><span class="line">  select_type: SIMPLE</span><br><span class="line">        <span class="keyword">table</span>: rental</span><br><span class="line">   partitions: <span class="keyword">NULL</span></span><br><span class="line">         type: const</span><br><span class="line">possible_keys: uk_rental_date,idx_fk_inventory_id,idx_fk_customer_id</span><br><span class="line">          key: uk_rental_date</span><br><span class="line">      key_len: <span class="number">10</span></span><br><span class="line">          <span class="keyword">ref</span>: const,const,const</span><br><span class="line">         <span class="keyword">rows</span>: <span class="number">1</span></span><br><span class="line">     filtered: <span class="number">100.00</span></span><br><span class="line">        Extra: <span class="keyword">NULL</span></span><br></pre></td></tr></table></figure>

<p>通过观察explain输出结果，发现type&#x3D;const。表示常量；字段key值为uk_rental_date，表示优化器使用索引uk_rental_date进行扫描。</p>
<p><strong>匹配范围查询</strong>（March range）。对索引值能够进行范围查找。例如，查找租赁表rental中客户编号customer_id在指定范围记录：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> sakila.rental <span class="keyword">where</span> customer_id<span class="operator">&gt;=</span><span class="number">366</span> <span class="keyword">and</span> customer_id<span class="operator">&lt;=</span><span class="number">399</span>\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">           id: <span class="number">1</span></span><br><span class="line">  select_type: SIMPLE</span><br><span class="line">        <span class="keyword">table</span>: rental</span><br><span class="line">   partitions: <span class="keyword">NULL</span></span><br><span class="line">         type: <span class="keyword">range</span></span><br><span class="line">possible_keys: idx_fk_customer_id</span><br><span class="line">          key: idx_fk_customer_id</span><br><span class="line">      key_len: <span class="number">2</span></span><br><span class="line">          <span class="keyword">ref</span>: <span class="keyword">NULL</span></span><br><span class="line">         <span class="keyword">rows</span>: <span class="number">925</span></span><br><span class="line">     filtered: <span class="number">100.00</span></span><br><span class="line">        Extra: <span class="keyword">Using</span> index <span class="keyword">condition</span></span><br></pre></td></tr></table></figure>

<p>通过explain分析，发现type&#x3D;range以及Extra: Using index condition。使用到范围性查找，以及索引下放操作。</p>
<p><strong>匹配最左前缀</strong>（Matches the leftmost prefix）。仅仅使用到索引中的最左边列进行查找，比如在多个字段（col1、col2、col3）字段上的联合索引能够被包含col1、（col1、col2）、（col1、col2、col3）的等值查询利用到，但是不能被（col2、col3）、col2的等值查询利用到。以sakila数据库中支付（payment）表进行示例。</p>
<p>下面创建组合索引 <code>idx_payment_date</code>便于测示：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">ALTER</span> <span class="keyword">TABLE</span> sakila.payment <span class="keyword">add</span> index idx_payment_date(payment_date,amount,last_update);</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.07</span> sec)</span><br><span class="line">Records: <span class="number">0</span>  Duplicates: <span class="number">0</span>  Warnings: <span class="number">0</span></span><br></pre></td></tr></table></figure>

<p>使用explain执行分析：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> sakila.payment <span class="keyword">where</span> payment_date<span class="operator">=</span><span class="string">&#x27;2005-06-15 21:08:46&#x27;</span> <span class="keyword">and</span> last_update<span class="operator">=</span><span class="string">&#x27;2005-06-15 21:08:46&#x27;</span>\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">           id: <span class="number">1</span></span><br><span class="line">  select_type: SIMPLE</span><br><span class="line">        <span class="keyword">table</span>: payment</span><br><span class="line">   partitions: <span class="keyword">NULL</span></span><br><span class="line">         type: <span class="keyword">ref</span></span><br><span class="line">possible_keys: idx_payment_date</span><br><span class="line">          key: idx_payment_date</span><br><span class="line">      key_len: <span class="number">5</span></span><br><span class="line">          <span class="keyword">ref</span>: const</span><br><span class="line">         <span class="keyword">rows</span>: <span class="number">1</span></span><br><span class="line">     filtered: <span class="number">10.00</span></span><br><span class="line">        Extra: <span class="keyword">Using</span> index <span class="keyword">condition</span></span><br></pre></td></tr></table></figure>

<p>通过观察执行结果，发现 type&#x3D;ref 以及Extra: Using index condition，根据最左匹配原则，你会发现payment_date处于索引1号位，此时扫描利用到组合索引idx_payment_date。</p>
<p>如果使用last_update和amount进行测试分析：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> sakila.payment <span class="keyword">where</span> last_update<span class="operator">=</span><span class="string">&#x27;2005-06-15 21:08:46&#x27;</span> <span class="keyword">and</span> amount<span class="operator">=</span><span class="number">9.99</span>\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">           id: <span class="number">1</span></span><br><span class="line">  select_type: SIMPLE</span><br><span class="line">        <span class="keyword">table</span>: payment</span><br><span class="line">   partitions: <span class="keyword">NULL</span></span><br><span class="line">         type: <span class="keyword">ALL</span></span><br><span class="line">possible_keys: <span class="keyword">NULL</span></span><br><span class="line">          key: <span class="keyword">NULL</span></span><br><span class="line">      key_len: <span class="keyword">NULL</span></span><br><span class="line">          <span class="keyword">ref</span>: <span class="keyword">NULL</span></span><br><span class="line">         <span class="keyword">rows</span>: <span class="number">16086</span></span><br><span class="line">     filtered: <span class="number">1.00</span></span><br><span class="line">        Extra: <span class="keyword">Using</span> <span class="keyword">where</span></span><br></pre></td></tr></table></figure>

<p>通过观察查询结果，发现type&#x3D;ALL走全表扫描，索引没有使用到。</p>
<p><strong>仅仅对索引查询</strong>（Only for index queries）。当查询列都在索引字段中，查询效率更高。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> last_update <span class="keyword">from</span> sakila.payment <span class="keyword">where</span> payment_date<span class="operator">=</span><span class="string">&#x27;2005-06-15 21:08:46&#x27;</span> <span class="keyword">and</span> amount<span class="operator">=</span><span class="number">9.99</span>\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">           id: <span class="number">1</span></span><br><span class="line">  select_type: SIMPLE</span><br><span class="line">        <span class="keyword">table</span>: payment</span><br><span class="line">   partitions: <span class="keyword">NULL</span></span><br><span class="line">         type: <span class="keyword">ref</span></span><br><span class="line">possible_keys: idx_payment_date</span><br><span class="line">          key: idx_payment_date</span><br><span class="line">      key_len: <span class="number">8</span></span><br><span class="line">          <span class="keyword">ref</span>: const,const</span><br><span class="line">         <span class="keyword">rows</span>: <span class="number">1</span></span><br><span class="line">     filtered: <span class="number">100.00</span></span><br><span class="line">        Extra: <span class="keyword">Using</span> index</span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span>, <span class="number">1</span> warning (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<p>Extra: Using index，意味着现在直接访问索引就足够获取到所有需要的数据，无需索引回表，Using index也是通常所说的覆盖索引扫描。只访问必须访问的数据，一般而言，减少不必要数据访问可以提高效率。</p>
<p><strong>匹配列前缀</strong>（Match a column prefix ），仅仅使用索引中的第一列，并且只包含索引第一列开头一部分。例如，查询出标题是AGENT开头的电影信息。</p>
<p>创建列前缀索引：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">create</span> index idx_title_desc_part <span class="keyword">on</span> sakila.film_text(title(<span class="number">10</span>),description(<span class="number">20</span>));</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.03</span> sec)</span><br><span class="line">Records: <span class="number">0</span>  Duplicates: <span class="number">0</span>  Warnings: <span class="number">0</span></span><br></pre></td></tr></table></figure>

<p>执行explain进行分析，<strong>注意</strong>：在B-tree索引中使用时，<strong>不要以通配符 % 开头</strong>，不然索引会失效。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> title <span class="keyword">from</span> sakila.`film_text` <span class="keyword">where</span> title <span class="keyword">like</span> <span class="string">&#x27;AGENT%&#x27;</span>\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">           id: <span class="number">1</span></span><br><span class="line">  select_type: SIMPLE</span><br><span class="line">        <span class="keyword">table</span>: film_text</span><br><span class="line">   partitions: <span class="keyword">NULL</span></span><br><span class="line">         type: <span class="keyword">range</span></span><br><span class="line">possible_keys: idx_title_desc_part,idx_title_description</span><br><span class="line">          key: idx_title_desc_part</span><br><span class="line">      key_len: <span class="number">42</span></span><br><span class="line">          <span class="keyword">ref</span>: <span class="keyword">NULL</span></span><br><span class="line">         <span class="keyword">rows</span>: <span class="number">1</span></span><br><span class="line">     filtered: <span class="number">100.00</span></span><br><span class="line">        Extra: <span class="keyword">Using</span> <span class="keyword">where</span></span><br></pre></td></tr></table></figure>

<p><strong>分析执行计划，看到idx_title_desc_part被利用到</strong>，type&#x3D;range，使用范围性查询。Extra: Using where表示优化器需要通过索引回表查询数据。</p>
<p><strong>索引匹配部分精确</strong>，其它部分范围匹配（Match  a part）。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> inventory_id <span class="keyword">from</span> sakila.rental <span class="keyword">where</span> rental_date<span class="operator">=</span><span class="string">&#x27;2006-02-14 15:16:03&#x27;</span> <span class="keyword">and</span> customer_id<span class="operator">&gt;=</span><span class="number">300</span> <span class="keyword">and</span> customer_id<span class="operator">&lt;=</span><span class="number">400</span>\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">           id: <span class="number">1</span></span><br><span class="line">  select_type: SIMPLE</span><br><span class="line">        <span class="keyword">table</span>: rental</span><br><span class="line">   partitions: <span class="keyword">NULL</span></span><br><span class="line">         type: <span class="keyword">ref</span></span><br><span class="line">possible_keys: uk_rental_date,idx_fk_customer_id</span><br><span class="line">          key: uk_rental_date</span><br><span class="line">      key_len: <span class="number">5</span></span><br><span class="line">          <span class="keyword">ref</span>: const</span><br><span class="line">         <span class="keyword">rows</span>: <span class="number">182</span></span><br><span class="line">     filtered: <span class="number">16.86</span></span><br><span class="line">        Extra: <span class="keyword">Using</span> <span class="keyword">where</span>; <span class="keyword">Using</span> index</span><br></pre></td></tr></table></figure>

<p>上面通过explain分析，查询出出租日期（rental_date）、指定日期的客户编号（customer_id）指定范围的库存。根据type&#x3D;ref，以及key&#x3D;uk_rental_date，优化器建议走唯一索引。</p>
<p><strong>如果列名是索引</strong>，使用column_name is null就会使用索引。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> sakila.payment <span class="keyword">where</span> rental_id <span class="keyword">is</span> <span class="keyword">null</span>\G</span><br><span class="line">         type: <span class="keyword">ref</span></span><br><span class="line">possible_keys: fk_payment_rental</span><br><span class="line">          key: fk_payment_rental</span><br><span class="line">      key_len: <span class="number">5</span></span><br><span class="line">        Extra: <span class="keyword">Using</span> index <span class="keyword">condition</span></span><br></pre></td></tr></table></figure>

<p>通过explain执行分析，查询支付表（payment）租赁编号（rental_id）字段为空的记录使用到了索引。</p>
<p><strong>MySQL5.6以及更高版本支持Index Condition Pushdown</strong> (ICP)特性，索引条件下放操作，进一步优化了查询。某些情况操作下放到存储引擎。</p>
<ol>
<li>ICP可以用于InnoDB和MyISAM表，包括分区的InnoDB和MyISAM表。</li>
<li>当需要访问全表时，ICP用于range、ref、eq_ref和ref或null访问方法。</li>
<li>对于InnoDB表，ICP仅用于二级索引（次索引、辅助索引）。ICP的目标是减少全行读取的数量，从而减少I&#x2F;O操作。对于InnoDB聚集索引，完整的记录已经被读取到InnoDB缓冲区。在这种情况下使用ICP不会减少I&#x2F;O。</li>
<li>如果在虚拟列上创建二级索引，则不支持ICP。InnoDB支持在虚拟列上建立二级索引。</li>
<li>引用到子查询条件不能使用操作下放。</li>
<li>引用存储函数的条件不支持操作下放，存储引擎无法调用存储函数。</li>
<li>使用触发器（触发的条件），不能使用操作下放。</li>
</ol>
<p>如下示例，查询支付表，强制使用索引查询内容。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> sakila.payment force index(fk_payment_rental) <span class="keyword">where</span> rental_id <span class="operator">&gt;</span> <span class="number">1</span>\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">           id: <span class="number">1</span></span><br><span class="line">  select_type: SIMPLE</span><br><span class="line">        <span class="keyword">table</span>: payment</span><br><span class="line">   partitions: <span class="keyword">NULL</span></span><br><span class="line">         type: <span class="keyword">range</span></span><br><span class="line">possible_keys: fk_payment_rental</span><br><span class="line">          key: fk_payment_rental</span><br><span class="line">      key_len: <span class="number">5</span></span><br><span class="line">          <span class="keyword">ref</span>: <span class="keyword">NULL</span></span><br><span class="line">         <span class="keyword">rows</span>: <span class="number">8043</span></span><br><span class="line">     filtered: <span class="number">100.00</span></span><br><span class="line">        Extra: <span class="keyword">Using</span> index <span class="keyword">condition</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span>, <span class="number">1</span> warning (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<p>经过explain分析，看到Extra值为Using index condition，表示MySQL使用了ICP进一步优化查询，在检索时，将条件rental_id过滤操作下推到到存储引擎层来完成，可以降低不必要的IO访问。</p>
<p><strong>注意</strong>：前缀限制以字节为单位，而CREATE TABLE、ALTER TABLE 和 CREATE INDEX语句中的前缀长度，被解析为非二进制字符串类型(CHAR、VARCHAR、TEXT)的字符数，和二进制字符串类型(binary、VARBINARY、BLOB)的字节数。使用多字节字符集的非二进制字符串列指定前缀长度时，请考虑这一点。</p>
<h4 id="2-3-存在但不能使用索引的场景"><a href="#2-3-存在但不能使用索引的场景" class="headerlink" title="2.3  存在但不能使用索引的场景"></a>2.3  存在但不能使用索引的场景</h4><ol>
<li><strong>以 % 开头 LIKE 查询不能够利用B-Tree索引</strong>。</li>
<li><strong>数据类型出现隐式转换时不会使用索引</strong>，如果列类型是字符串，使用where条件记得将字符常量用引号引起来。</li>
<li><strong>复合索引场景下</strong>，如果查询条件不包含索引列最左部分，<strong>即不满足最左原则</strong>（LeftMost），不会利用到复合索引。</li>
<li><strong>如果 MySQL 判断使用索引比扫描全表慢，则不会使用索引</strong>。</li>
<li><strong>使用 OR 分割开的条件</strong>，如果OR条件前列有索引，OR后列没有索引，那么涉及到的索引都不会被利用。</li>
</ol>
<p>以上总结了5中存在索引，但不适合使用索引的场景。<strong>下面将给出explain分析示例</strong>。</p>
<p>B-Tree索引可用于使用&#x3D;、&gt;、&gt;&#x3D;、&lt;、&lt;&#x3D;或BETWEEN操作符表达式中的列做比较。如果LIKE的参数是一个不以通配符开头的常量字符串，则索引也可以用于LIKE比较。例如，下面的SELECT语句使用索引场景：</p>
<p><strong>以 % 开头 LIKE 查询不能够利用B-Tree索引</strong>，执行计划中Key值为NULL表示没有使用索引。如下示例：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 没有利用到索引场景</span></span><br><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> world.city <span class="keyword">where</span> countrycode <span class="keyword">like</span> <span class="string">&#x27;%A%&#x27;</span>\G</span><br><span class="line">     type: <span class="keyword">ALL</span>  </span><br><span class="line">possible_keys: <span class="keyword">NULL</span></span><br><span class="line">          key: <span class="keyword">NULL</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 索引生效场景</span></span><br><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> world.city <span class="keyword">where</span> countrycode <span class="keyword">like</span> <span class="string">&#x27;A%&#x27;</span>\G </span><br><span class="line">     type: <span class="keyword">range</span></span><br><span class="line">possible_keys: CountryCode</span><br><span class="line">          key: CountryCode</span><br></pre></td></tr></table></figure>

<p>第一种场景，使用explain执行优化分析后：key&#x3D;NULL，没有利用到索引。第二种场景，以 % 结束，执行explain优化分析，明显索引起作用了，type&#x3D;range，属于范围性扫描。</p>
<p>因为B-Tree索引结构特性，以通配符（%）开头的查询自然无法利用到索引，一般建议使用全文索引（fulltext）来解决类似问题。或者考虑利用InnoDB聚簇表特点，采用一种轻量级别解决方式：一般情况，索引比表小，扫描索引比扫描表更快。</p>
<p><strong>数据类型出现隐式转换时不会使用索引</strong>，如果列类型是字符串，使用where条件记得将字符常量用引号引起来。MySQL默认将输入的常量值进行转换以后才进行检索。</p>
<p><strong>如下示例</strong>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 场景一</span></span><br><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> world.city <span class="keyword">where</span> countrycode<span class="operator">=</span><span class="number">1</span>\G</span><br><span class="line">         type: <span class="keyword">ALL</span></span><br><span class="line">possible_keys: CountryCode</span><br><span class="line">          key: <span class="keyword">NULL</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 场景二</span></span><br><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> world.city <span class="keyword">where</span> countrycode<span class="operator">=</span><span class="string">&#x27;1&#x27;</span>\G</span><br><span class="line">         type: <span class="keyword">ref</span></span><br><span class="line">possible_keys: CountryCode</span><br><span class="line">          key: CountryCode</span><br><span class="line">      key_len: <span class="number">12</span></span><br></pre></td></tr></table></figure>

<p>在场景二中，字符串（char）类型将1引起来，通过explain分析使用到索引。场景一中没有加引号，索引没有利用，从而走全表扫描。</p>
<p><strong>复合索引场景下</strong>，如果查询条件不包含索引列最左部分，<strong>即不满足最左原则</strong>（LeftMost），不会利用到符合索引：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> sakila.payment <span class="keyword">where</span> amount<span class="operator">=</span><span class="number">9.99</span> <span class="keyword">and</span> last_update<span class="operator">=</span><span class="string">&#x27;2006-02-15 22:12:30&#x27;</span>\G</span><br><span class="line">         type: <span class="keyword">ALL</span></span><br><span class="line">possible_keys: <span class="keyword">NULL</span></span><br><span class="line">          key: <span class="keyword">NULL</span></span><br></pre></td></tr></table></figure>



<p><strong>如果 MySQL 判断使用索引比扫描全表慢，则不会使用索引</strong>。比如，返回记录很大，但使用索引扫描更费时间，优化器更倾向于使用全表扫描，这样代价更低，效率更高。（使用Trace可以追踪更多信息，前面也提到过）</p>
<p><strong>使用 OR 分割开的条件</strong>，如果OR条件前列有索引，OR后列没有索引，那么涉及到的索引都不会被利用。 </p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> sakila.payment <span class="keyword">where</span> customer_id<span class="operator">=</span><span class="number">9</span> <span class="keyword">or</span> amount<span class="operator">=</span><span class="number">9.99</span>\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">           id: <span class="number">1</span></span><br><span class="line">  select_type: SIMPLE</span><br><span class="line">        <span class="keyword">table</span>: payment</span><br><span class="line">         type: <span class="keyword">ALL</span></span><br><span class="line">possible_keys: idx_fk_customer_id</span><br><span class="line">          key: <span class="keyword">NULL</span></span><br><span class="line">         <span class="keyword">rows</span>: <span class="number">16086</span></span><br><span class="line">     filtered: <span class="number">10.15</span></span><br><span class="line">        Extra: <span class="keyword">Using</span> <span class="keyword">where</span></span><br></pre></td></tr></table></figure>

<p>因为 OR 后列没有索引，那么后继查询需要走全表扫描。存在全表扫描情况下，也没必要多走一次索引扫描增加磁盘I&#x2F;O访问。如果前面列无索引，后面列有索引，执行结果一样走全表扫描。（在接下来的优化OR查询部分，进行了对比）</p>
<h3 id="3-查看索引使用情况"><a href="#3-查看索引使用情况" class="headerlink" title="3 查看索引使用情况"></a>3 查看索引使用情况</h3><p>查看 <code>Handler_read_key</code> 值判断索引工作频率，基于键值读取一行的请求数。如果这个值（Handler_read_key）很高，说明您的表在查询时已经建立了适当的索引。读取一行请求数值很低，则表明增加索引改善并不明显，索引没有经常使用。</p>
<p>可以通过<code>show status like</code> ‘Handler_read%’查询参数值，分析索引使用状况。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> status <span class="keyword">like</span> <span class="string">&#x27;Handler_read%&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name         <span class="operator">|</span> <span class="keyword">Value</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> Handler_read_first    <span class="operator">|</span> <span class="number">2</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Handler_read_key      <span class="operator">|</span> <span class="number">74</span>    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Handler_read_last     <span class="operator">|</span> <span class="number">0</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Handler_read_next     <span class="operator">|</span> <span class="number">147</span>   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Handler_read_prev     <span class="operator">|</span> <span class="number">0</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Handler_read_rnd      <span class="operator">|</span> <span class="number">30</span>    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Handler_read_rnd_next <span class="operator">|</span> <span class="number">32</span>    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------+-------+</span></span><br></pre></td></tr></table></figure>

<p>初始时（索引还未工作），上述查询出默认值为零，当你使用索引后，这些参数会有变化。</p>
<p><code>Handler_read_rnd</code>：基于固定位置读取一行的请求数。如果执行大量需要对结果进行排序的查询，则该值会很高。你可能有大量需要MySQL扫描全表的查询，或者你没有合理地使用键连接。</p>
<p><code>Handler_read_rnd_next</code>：读取数据文件中下一行的请求数。如果要进行大量的表扫描，这个值就会很高。一般来说，这意味着您的表没有正确索引，或者说是写入查询没有利用到索引。</p>
<h3 id="4-MySQL官方示例数据库"><a href="#4-MySQL官方示例数据库" class="headerlink" title="4 MySQL官方示例数据库"></a>4 MySQL官方示例数据库</h3><p>给出<strong>sakila-db数据库</strong>包含三个文件，便于大家获取与使用：</p>
<ol>
<li>sakila-schema.sql：数据库表结构；</li>
<li>sakila-data.sql：数据库示例模拟数据；</li>
<li>sakila.mwb：数据库物理模型，在MySQL workbench中可以打开查看。</li>
</ol>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZHMubXlzcWwuY29tL2RvY3Mvc2FraWxhLWRiLnppcA==">https://downloads.mysql.com/docs/sakila-db.zip<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p><strong>只是用于用于简单测试学习，建议使用world-db</strong>：</p>
<p><strong>world-db数据库</strong>，包含三张表：city、country、countrylanguage。</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZHMubXlzcWwuY29tL2RvY3Mvd29ybGQtZGIuemlw">https://downloads.mysql.com/docs/world-db.zip<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p>最后附上官方示例数据库，<strong>sakila-db数据库</strong>一个非常完整的示例。包含：视图、函数、触发器以及存储过程，当然也存在使用外键。</p>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL和Oracle主流数据库如何生成千万级别数据大表</title>
    <url>/2021/12/15/MySQL%E5%92%8COracle%E4%B8%BB%E6%B5%81%E6%95%B0%E6%8D%AE%E5%BA%93%E5%A6%82%E4%BD%95%E7%94%9F%E6%88%90%E5%8D%83%E4%B8%87%E7%BA%A7%E5%88%AB%E6%95%B0%E6%8D%AE%E5%A4%A7%E8%A1%A8/</url>
    <content><![CDATA[<p>这篇文章可以和我前段时间写的《MySQL开发篇，存储引擎的选择真的很重要吗？》结合参考。</p>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>还在为面试官问你处理有过百万数据或者千万级数据的经验而烦恼吗？<br>还在为想测试大量数据苦于没有环境而烦恼吗？<br>还在为有了环境，不知如何生成大量数据而烦恼吗？<br>看了这篇文章，这个小伙子有点东西啊！</p>
<h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="一、MySQL-or-MariaDB随机生成1000w数据"><a href="#一、MySQL-or-MariaDB随机生成1000w数据" class="headerlink" title="一、MySQL or MariaDB随机生成1000w数据"></a>一、MySQL or MariaDB随机生成1000w数据</h2><p>MySQL随机生成1kw条数据相对而言麻烦一点，没有rownum这个字段确实很蛋疼。<br>提供一个思路当然可以采取曾经火遍半边天的Python去随机生成大量数据，然后使用工具或者命令导入到MySQL数据库。<br>其次，还可以在Oracle生成大量数据，然后使用迁移工具转数据到MySQL<br>(当时，偷懒不想写函数和存储过程。我就是用这种方法的，利用DM数据迁移工具即可实现。)</p>
<h3 id="01-使用工具SQLyog"><a href="#01-使用工具SQLyog" class="headerlink" title="01 使用工具SQLyog"></a>01 使用工具SQLyog</h3><p><strong>创建表tolove</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">/** 创建表tolove **/</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> test.`tolove` (</span><br><span class="line">  `ID` <span class="type">INT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">PRIMARY</span> KEY AUTO_INCREMENT,</span><br><span class="line">  `GIRE_NAME` <span class="type">VARCHAR</span>(<span class="number">64</span>) <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `GIRL_AGE` <span class="type">VARCHAR</span>(<span class="number">64</span>) <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `CUP_SIZE` <span class="type">VARCHAR</span>(<span class="number">10</span>) <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span></span><br><span class="line">) ENGINE<span class="operator">=</span>INNODB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8_bin</span><br></pre></td></tr></table></figure>

<p><strong>创建函数rand_numbe</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">/** 创建函数rand_number,生成随机数字 **/</span></span><br><span class="line">DELIMITER $</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">FUNCTION</span> rand_number() <span class="keyword">RETURNS</span> <span class="type">INT</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">	<span class="keyword">DECLARE</span> i <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">SET</span> i<span class="operator">=</span> <span class="built_in">FLOOR</span>(<span class="number">1</span><span class="operator">+</span>RAND()<span class="operator">*</span><span class="number">100</span>);</span><br><span class="line">	<span class="keyword">RETURN</span> i;</span><br><span class="line"><span class="keyword">END</span> $</span><br><span class="line">DELIMITER $</span><br></pre></td></tr></table></figure>

<p><strong>创建函数rand_name</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">/** 创建函数rand_name,随机字符串 **/</span></span><br><span class="line">DELIMITER $</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">FUNCTION</span> rand_name(n <span class="type">INT</span>) <span class="keyword">RETURNS</span> <span class="type">VARCHAR</span>(<span class="number">255</span>)</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">	<span class="keyword">DECLARE</span> chars_str <span class="type">VARCHAR</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&#x27;</span>;</span><br><span class="line">	<span class="keyword">DECLARE</span> return_str <span class="type">VARCHAR</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">	<span class="keyword">DECLARE</span> i <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">0</span>;</span><br><span class="line">	WHILE i <span class="operator">&lt;</span> n DO</span><br><span class="line">	<span class="keyword">SET</span> return_str <span class="operator">=</span> CONCAT(return_str,<span class="built_in">SUBSTRING</span>(chars_str,<span class="built_in">FLOOR</span>(<span class="number">1</span><span class="operator">+</span>RAND()<span class="operator">*</span><span class="number">52</span>),<span class="number">1</span>));</span><br><span class="line">	<span class="keyword">SET</span> i <span class="operator">=</span> i<span class="operator">+</span><span class="number">1</span>;</span><br><span class="line">	<span class="keyword">END</span> WHILE;</span><br><span class="line">	<span class="keyword">RETURN</span> return_str;	</span><br><span class="line"><span class="keyword">END</span> $</span><br><span class="line">DELIMITER $</span><br></pre></td></tr></table></figure>

<p><strong>创建存储过程insert_tolove</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">/** 创建存储过程insert_tolove **/</span></span><br><span class="line">DELIMITER $</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> insert_tolove(<span class="keyword">IN</span> max_num <span class="type">INT</span>(<span class="number">10</span>))</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">	<span class="keyword">DECLARE</span> i <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">DECLARE</span> EXIT HANDLER <span class="keyword">FOR</span> <span class="keyword">SQLEXCEPTION</span> <span class="keyword">ROLLBACK</span>;</span><br><span class="line">	<span class="keyword">START</span> TRANSACTION;</span><br><span class="line">	WHILE i<span class="operator">&lt;</span> max_num DO</span><br><span class="line">	<span class="keyword">INSERT</span> <span class="keyword">INTO</span> test.`tolove`(ID,GIRL_NAME,GIRL_AGE,CUP_SIZE) <span class="keyword">VALUES</span>(<span class="keyword">NULL</span>,rand_name(<span class="number">5</span>),rand_number(),<span class="keyword">NULL</span>);</span><br><span class="line">	<span class="keyword">SET</span> i <span class="operator">=</span> i <span class="operator">+</span> <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">END</span> WHILE;</span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br><span class="line"><span class="keyword">END</span> $</span><br><span class="line">DELIMITER $</span><br></pre></td></tr></table></figure>

<p><strong>测试验证</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">/** 测试验证 **/</span></span><br><span class="line"><span class="keyword">SET</span> <span class="keyword">GLOBAL</span> event_scheduler<span class="operator">=</span><span class="number">1</span>;</span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> mysql.`event`;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">FUNCTION</span> STATUS;</span><br><span class="line"><span class="keyword">UPDATE</span> mysql.`proc` <span class="keyword">SET</span>  Security_type<span class="operator">=</span><span class="string">&#x27;INVOKER&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p><strong>调用存储过程insert_tolove</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">/** 调用存储过程insert_tolove **/</span></span><br><span class="line"><span class="keyword">CALL</span> insert_tolove(<span class="number">1000</span><span class="operator">*</span><span class="number">10000</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> test.`tolove` t <span class="keyword">WHERE</span> t.girl_age<span class="operator">=</span><span class="string">&#x27;16&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p><strong>验证插入语句</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">/** 验证是否输错 **/</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> test.`tolove`(ID,GIRL_NAME,GIRL_AGE,CUP_SIZE) <span class="keyword">VALUES</span>(<span class="keyword">NULL</span>,<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;A&#x27;</span>);</span><br></pre></td></tr></table></figure>

<h3 id="02-通过第三方工具迁移数据"><a href="#02-通过第三方工具迁移数据" class="headerlink" title="02 通过第三方工具迁移数据"></a>02 通过第三方工具迁移数据</h3><p><strong>DM8迁移工具DTS</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">/** 通过DM数据库迁移工具迁移的数据 **/</span></span><br><span class="line"><span class="comment">/** student 100w**/</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> test.`student`;</span><br><span class="line"><span class="keyword">UPDATE</span> test.`student` s <span class="keyword">SET</span> s.`stu_age`<span class="operator">=</span><span class="string">&#x27;18&#x27;</span> <span class="keyword">WHERE</span> s.`stu_name` <span class="keyword">LIKE</span> <span class="string">&#x27;A%&#x27;</span>;</span><br><span class="line"><span class="keyword">UPDATE</span> test.`student` s <span class="keyword">SET</span> s.`stu_sex`<span class="operator">=</span><span class="string">&#x27;女&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> test.student t <span class="keyword">WHERE</span> t.`stu_name` <span class="keyword">LIKE</span> <span class="string">&#x27;A%&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/** test 1000w **/</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> test.`test`;</span><br><span class="line"></span><br></pre></td></tr></table></figure>


<h2 id="二、Oracle生成1kw数据大表"><a href="#二、Oracle生成1kw数据大表" class="headerlink" title="二、Oracle生成1kw数据大表"></a>二、Oracle生成1kw数据大表</h2><h3 id="01-使用工具plsql-developer"><a href="#01-使用工具plsql-developer" class="headerlink" title="01 使用工具plsql developer"></a>01 使用工具plsql developer</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">/** Oracle11g R2 for Windows10 测试随机生成200w数据的表 **/</span></span><br><span class="line"><span class="comment">/** 此次测试对DM8数据库同样适用 **/</span></span><br><span class="line"><span class="comment">--创建表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> test.student</span><br><span class="line">(</span><br><span class="line">    ID NUMBER <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">primary</span> key,</span><br><span class="line">    STU_NAME VARCHAR2(<span class="number">60</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">    STU_AGE NUMBER(<span class="number">4</span>,<span class="number">0</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    STU_SEX VARCHAR2(<span class="number">2</span>) <span class="keyword">not</span> <span class="keyword">null</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--学生表随机生成200w数据</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> test.student</span><br><span class="line"><span class="keyword">select</span> rownum,dbms_random.string(<span class="string">&#x27;*&#x27;</span>,dbms_random.value(<span class="number">6</span>,<span class="number">10</span>)),dbms_random.value(<span class="number">14</span>,<span class="number">16</span>),</span><br><span class="line"><span class="string">&#x27;女&#x27;</span> <span class="keyword">from</span> dual</span><br><span class="line"><span class="keyword">connect</span> <span class="keyword">by</span> level<span class="operator">&lt;=</span><span class="number">2000000</span></span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> test.student t <span class="keyword">where</span> t.stu_age<span class="operator">=</span><span class="string">&#x27;16&#x27;</span>;</span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> t.<span class="operator">*</span>, t.rowid <span class="keyword">from</span> TEST.STUDENT t <span class="keyword">where</span> t.stu_age<span class="operator">&lt;</span><span class="number">16</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">update</span> test.student <span class="keyword">set</span> stuid<span class="operator">=</span>rownum <span class="keyword">where</span> <span class="number">1</span><span class="operator">=</span><span class="number">1</span></span><br><span class="line"><span class="comment">--修改年龄随机14-16岁之间</span></span><br><span class="line"><span class="keyword">update</span> test.student <span class="keyword">set</span> stu_age<span class="operator">=</span>dbms_random.value(<span class="number">14</span>,<span class="number">16</span>) <span class="keyword">where</span> <span class="number">1</span><span class="operator">=</span><span class="number">1</span></span><br></pre></td></tr></table></figure>

<p><strong>提交</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--提交</span></span><br><span class="line"><span class="keyword">commit</span>;</span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">/** Oracle11g R2 for Windows10 测试随机生成1000w数据的大表 **/</span></span><br><span class="line"><span class="comment">/** 此次测试对DM8数据库同样适用 **/</span></span><br><span class="line"><span class="comment">/** 测试插入1kw数据 ---begin **/</span></span><br><span class="line"><span class="comment">--创建表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> test.test</span><br><span class="line">(</span><br><span class="line">    id NUMBER <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">primary</span> key,</span><br><span class="line">    stu_name NVARCHAR2(<span class="number">60</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">    score NUMBER(<span class="number">4</span>,<span class="number">0</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    createtime <span class="type">TIMESTAMP</span> (<span class="number">6</span>) <span class="keyword">not</span> <span class="keyword">null</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--模拟插入200w级数据(36s)</span></span><br><span class="line"><span class="comment">--模拟插入1kw数据出现提示connect by内存不足。也许是机器性能不够,也许是需要做参数调整。</span></span><br><span class="line"><span class="comment">--DM8直接改成10000000，毫无压力</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> test.test</span><br><span class="line"><span class="keyword">select</span> rownum,dbms_random.string(<span class="string">&#x27;*&#x27;</span>,dbms_random.value(<span class="number">6</span>,<span class="number">20</span>)),dbms_random.value(<span class="number">0</span>,<span class="number">20</span>),</span><br><span class="line">sysdate <span class="keyword">from</span> dual</span><br><span class="line"><span class="keyword">connect</span> <span class="keyword">by</span> level<span class="operator">&lt;=</span><span class="number">2000000</span></span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--统计(初始200w数据)</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> test.test;</span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--提交</span></span><br><span class="line"><span class="keyword">commit</span>;</span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 将test表结构以及数据复制到test01中</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> test.test01 <span class="keyword">as</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> test.test;</span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--执行4次，分分钟变出一张1kw级的数据大表，这个小伙子有点东西啊！</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> test.test01 <span class="keyword">as</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> test.test</span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--统计</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="keyword">distinct</span> id) <span class="keyword">from</span> test.test01</span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--统计(生成1000w数据完毕)</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> test.test01;</span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--优化id</span></span><br><span class="line"><span class="keyword">update</span> test.test01 <span class="keyword">set</span> id<span class="operator">=</span>rownum <span class="keyword">where</span> <span class="number">1</span><span class="operator">=</span><span class="number">1</span></span><br><span class="line"><span class="comment">--设置id为主键</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> test.test01 <span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> constraint_test01 <span class="keyword">PRIMARY</span> KEY (id);</span><br><span class="line"><span class="comment">/** 测试插入1kw数据 ---end **/</span></span><br><span class="line"><span class="comment">/** Oracle11g R2 for Windows10测试 **/</span></span><br></pre></td></tr></table></figure>






<h2 id="三、DM8数据库生成1kw数据大表"><a href="#三、DM8数据库生成1kw数据大表" class="headerlink" title="三、DM8数据库生成1kw数据大表"></a>三、DM8数据库生成1kw数据大表</h2><h3 id="01-使用工具，DM管理客户端"><a href="#01-使用工具，DM管理客户端" class="headerlink" title="01 使用工具，DM管理客户端"></a>01 使用工具，DM管理客户端</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">1、dm8数据库创建用户test</span></span><br><span class="line"><span class="comment">2、创建表student</span></span><br><span class="line"><span class="comment">3、插入1000w测试数据</span></span><br><span class="line"><span class="comment">4、commit提交</span></span><br><span class="line"><span class="comment">5、count统计数据</span></span><br><span class="line"><span class="comment">**/</span></span><br></pre></td></tr></table></figure>


<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">/** 创建学生表begin  **/</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> test.student</span><br><span class="line">(</span><br><span class="line">    ID NUMBER <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">primary</span> key,</span><br><span class="line">    STU_NAME VARCHAR2(<span class="number">60</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">    STU_AGE NUMBER(<span class="number">4</span>,<span class="number">0</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">    STU_SEX VARCHAR2(<span class="number">2</span>) <span class="keyword">not</span> <span class="keyword">null</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--学生表随机生成1000w数据大约8s，测试插入1kw条数据花了90s左右</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> test.student</span><br><span class="line"><span class="keyword">select</span> rownum,dbms_random.string(<span class="string">&#x27;*&#x27;</span>,dbms_random.value(<span class="number">6</span>,<span class="number">10</span>)),dbms_random.value(<span class="number">14</span>,<span class="number">16</span>),</span><br><span class="line"><span class="string">&#x27;女&#x27;</span> <span class="keyword">from</span> dual</span><br><span class="line"><span class="keyword">connect</span> <span class="keyword">by</span> level<span class="operator">&lt;=</span><span class="number">10000000</span></span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">/** 统计数据 **/</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> test.student t <span class="keyword">where</span> t.stu_age<span class="operator">=</span><span class="string">&#x27;16&#x27;</span>;</span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> t.<span class="operator">*</span>, t.rowid <span class="keyword">from</span> test.student t <span class="keyword">where</span> t.stu_age<span class="operator">&lt;</span><span class="number">16</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">update</span> test.student <span class="keyword">set</span> stuid<span class="operator">=</span>rownum <span class="keyword">where</span> <span class="number">1</span><span class="operator">=</span><span class="number">1</span></span><br><span class="line"><span class="comment">--修改年龄随机14-16岁之间</span></span><br><span class="line"><span class="keyword">update</span> test.student <span class="keyword">set</span> stu_age<span class="operator">=</span>dbms_random.value(<span class="number">14</span>,<span class="number">16</span>) <span class="keyword">where</span> <span class="number">1</span><span class="operator">=</span><span class="number">1</span></span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--(1000w)</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> test.student;</span><br><span class="line"><span class="comment">--优化id</span></span><br><span class="line"><span class="keyword">update</span> test.student <span class="keyword">set</span> id<span class="operator">=</span>rownum <span class="keyword">where</span> <span class="number">1</span><span class="operator">=</span><span class="number">1</span></span><br><span class="line"><span class="comment">--设置id为主键</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> test.student <span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> constraint_student <span class="keyword">PRIMARY</span> KEY (id);</span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--提交</span></span><br><span class="line"><span class="keyword">commit</span>;</span><br><span class="line"><span class="comment">/** 创建学生表---end  **/</span></span><br><span class="line"><span class="comment">/** DM8 for Windows10测试 **/</span></span><br></pre></td></tr></table></figure>




<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**DM8 for Windows10测试 **/</span></span><br><span class="line"><span class="comment">/** 测试插入1kw数据 ---begin **/</span></span><br><span class="line"><span class="comment">--创建表test</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> test.test</span><br><span class="line">(</span><br><span class="line">    id NUMBER <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">primary</span> key,</span><br><span class="line">    stu_name NVARCHAR2(<span class="number">60</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">    score NUMBER(<span class="number">4</span>,<span class="number">0</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    createtime <span class="type">TIMESTAMP</span> (<span class="number">6</span>) <span class="keyword">not</span> <span class="keyword">null</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--学生表随机生成200w数据</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> test.test</span><br><span class="line"><span class="keyword">select</span> rownum,dbms_random.string(<span class="string">&#x27;*&#x27;</span>,dbms_random.value(<span class="number">6</span>,<span class="number">10</span>)),dbms_random.value(<span class="number">14</span>,<span class="number">16</span>),</span><br><span class="line"><span class="string">&#x27;女&#x27;</span> <span class="keyword">from</span> dual</span><br><span class="line"><span class="keyword">connect</span> <span class="keyword">by</span> level<span class="operator">&lt;=</span><span class="number">2000000</span></span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">/** 分次数创建1kw数据 **/</span></span><br><span class="line"><span class="comment">--创建test</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> test.test <span class="keyword">as</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> users.student;</span><br><span class="line"></span><br><span class="line"><span class="comment">--执行4次。每次插入200w，算上初始的200w，刚好1kw数据</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> test.test <span class="keyword">as</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> users.student</span><br><span class="line"><span class="comment">--统计</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="keyword">distinct</span> id) <span class="keyword">from</span> test.test</span><br></pre></td></tr></table></figure>



<h2 id="四、优化篇"><a href="#四、优化篇" class="headerlink" title="四、优化篇"></a>四、优化篇</h2><p>目前只提供优化的思路。</p>
<h3 id="01-Oracle11g"><a href="#01-Oracle11g" class="headerlink" title="01 Oracle11g"></a>01 Oracle11g</h3><p>提供思路：优化SQL语句<br>1、建议：不使用”*”代表所有列名。<br>2、使用TRUNCATE代替DELETE<br>3、在确保完整的情况下多用commit语句<br>4、尽量减少表的查询次数<br>5、使用NOT EXISTS代替NOT IN<br>6、表连接优化<br>7、合理使用索引<br>8、避免全表扫描大表<br>9、优化器的使用：比如EXPLAIN PLAN执行计划<br>10、SQL调优顾问</p>
<h3 id="02-MySQL"><a href="#02-MySQL" class="headerlink" title="02 MySQL"></a>02 MySQL</h3><p>同样可以使用大家熟知的EXPLAIN执行计划</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">/** sakila是MySQL官网自己出的示例，类似于Oracle的scott以及</span></span><br><span class="line"><span class="comment">DM的（PERSON、PRODUCTION、PURCHASING、RESOURCES、SALES）**/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 新增唯一索引</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> sakila.`customer` <span class="keyword">add</span> <span class="keyword">unique</span> index uk_email(email); </span><br><span class="line"><span class="comment">-- 执行计划，type=const</span></span><br><span class="line">EXPLAIN <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span>  sakila.`customer` </span><br><span class="line">sc <span class="keyword">WHERE</span> sc.`email`<span class="operator">=</span><span class="string">&#x27;MARY.SMITH@sakilacustomer.org&#x27;</span>;</span><br></pre></td></tr></table></figure>


<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">/** 列举其中的部分 **/</span></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment">type：ALL index range ref eq_ref const,system NULL,效率从左自有递增</span></span><br><span class="line"><span class="comment">    type=ALL:全表扫描</span></span><br><span class="line"><span class="comment">    type=index:索引全扫描</span></span><br><span class="line"><span class="comment">    type=range:索引范围扫描,常见于&lt;、&lt;=、&gt;、&gt;=、between、等操作符</span></span><br><span class="line"><span class="comment">    type=ref:使用非唯一索引扫描或者唯一索引的前缀扫描，返回匹配某个单独值得记录行</span></span><br><span class="line"><span class="comment">    type=eq_ref:类似ref,区别在于使用的索引是唯一索引,对于每个索引键值,表中只有一条记录匹配;</span></span><br><span class="line"><span class="comment">    type=eq_ref,简述：多表连接中使用primary key或者unique index作为关联条件。</span></span><br><span class="line"><span class="comment">    type=const,system:单表中最多有一个匹配行，查询起来非常迅速。所以这个匹配行中的其它列的值可以</span></span><br><span class="line"><span class="comment">    被优化器在当前查询中当做常量处理，例如：根据主键primary key或者唯一索引unique index进行的查询 </span></span><br><span class="line"><span class="comment">    type=NULL:MySQL不用访问表或索引，直接就能得到结果。</span></span><br><span class="line"><span class="comment">    **/</span></span><br></pre></td></tr></table></figure>

<h3 id="03-DM8"><a href="#03-DM8" class="headerlink" title="03 DM8"></a>03 DM8</h3><p>参考Oracle数据库优化，国产达梦数据库和Oracle有很多相似之处，基本兼容的。</p>
<p>希望对你的工作有所帮助！</p>
<p>—END—</p>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL优化方法：optimize、INSERT、ORDER BY、GROUP BY和OR 以及分页和嵌套查询</title>
    <url>/2022/04/07/MySQL%E4%BC%98%E5%8C%96%E6%96%B9%E6%B3%95%EF%BC%9Aoptimize%E3%80%81INSERT%E3%80%81ORDER%20BY%E3%80%81GROUP%20BY%E5%92%8COR%20%E4%BB%A5%E5%8F%8A%E5%88%86%E9%A1%B5%E5%92%8C%E5%B5%8C%E5%A5%97%E6%9F%A5%E8%AF%A2/</url>
    <content><![CDATA[<p>主要介绍：MySQL定期分析表、定期优化表；批量（大量）插入数据优化技巧；优化 INSERT、ORDER BY、GROUP BY 语句、优化 OR 条件；优化嵌套查询、分页查询；使用SQL提示。</p>
<p>只停留在看上面，提升效果甚微。应该带着思考去测试佐证，或者使用（同类书籍）新版本进行对比，这样带来的效果更好。最重要的一环，<strong>养成阅读官方文档</strong>，是一个良好的习惯。能编写官方文档，至少证明他们在这个领域是有很高的造诣，对用法足够熟练。</p>
<p><strong>tips</strong>：图片资源可能被防盗链（寄）了，可以<strong>右键属性复制地址在地址栏查看</strong>哈。</p>
<span id="more"></span>

<p>示例数据库使用MySQL官方提供的sakila（模拟电影出租信息管理系统）和world数据库，类似于Oracle的scott用户。</p>
<p>你可以将这篇博文，当成过度到MySQL8.0的参考资料。<strong>友情提示：经验是用来参考，不是拿来即用</strong>。如果您能看到并分享这篇文章，我很荣幸。如果有误导您的地方，我表示抱歉。</p>
<p>如果没有进行特别说明，一般是基于MySQL8.0.28进行测试验证。官方文档非常具有参考意义。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/acf1fd88c4b72660309388d03852a999.png"></p>
<p><strong>注意</strong>：在某些情况，你自己测试的结果可能与我演示有所不同，我省略了查询结果的部分参数。</p>
<p>如果你是从MySQL5.6或者5.7版本过渡到MySQL8.0。学习之前，建议线看官方文档这一章节：1.3 What Is New MySQL8.0 。在做对比的时候，<strong>文档中带有Note标识是你应该注意的地方</strong>。比如下面这张截图：</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/17d4943de92930dea49aa6fe2eaeac55.png"></p>
<h1 id="MySQL优化——SQL语句常用优化方法"><a href="#MySQL优化——SQL语句常用优化方法" class="headerlink" title="MySQL优化——SQL语句常用优化方法"></a>MySQL优化——SQL语句常用优化方法</h1><h3 id="01-简单优化方法"><a href="#01-简单优化方法" class="headerlink" title="01 简单优化方法"></a>01 简单优化方法</h3><p>对于开发人员来说，可能只需掌握简单实用的优化方法。比较复杂的优化，一般交给DBA来管理。</p>
<ol>
<li><code>analyze</code>：分析表，analyze table table_name;</li>
<li><code>check</code>：检查表，check table table_name;</li>
<li><code>checksum table</code>：检查表；</li>
<li><code>optimize table</code>：优化表，同时支持MyISAM和InnoDB表。回收删除操作造成的空洞，比如回收索引。</li>
<li><code>repair table</code>：修复表，支持 MyISAM，ARCHIVE以及CSV 表。</li>
</ol>
<h4 id="1-1-定期分析表和检查表"><a href="#1-1-定期分析表和检查表" class="headerlink" title="1.1  定期分析表和检查表"></a>1.1  定期分析表和检查表</h4><p>定期分析与检查主要有两个关键命令：</p>
<ol>
<li><code>analyze</code>：分析表，analyze table table_name;</li>
<li><code>check</code>：检查表，check table table_name;</li>
</ol>
<p><strong>分析（analyze）表语法</strong>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">ANALYZE [NO_WRITE_TO_BINLOG <span class="operator">|</span> <span class="keyword">LOCAL</span>]</span><br><span class="line"><span class="keyword">TABLE</span> tbl_name [, tbl_name] ...</span><br><span class="line"></span><br><span class="line">ANALYZE [NO_WRITE_TO_BINLOG <span class="operator">|</span> <span class="keyword">LOCAL</span>]</span><br><span class="line"><span class="keyword">TABLE</span> tbl_name</span><br><span class="line"></span><br><span class="line"><span class="keyword">UPDATE</span> HISTOGRAM <span class="keyword">ON</span> col_name [, col_name] ...</span><br><span class="line">[<span class="keyword">WITH</span> N BUCKETS]</span><br><span class="line"></span><br><span class="line">ANALYZE [NO_WRITE_TO_BINLOG <span class="operator">|</span> <span class="keyword">LOCAL</span>]</span><br><span class="line"><span class="keyword">TABLE</span> tbl_name</span><br><span class="line"><span class="keyword">DROP</span> HISTOGRAM <span class="keyword">ON</span> col_name [, col_name] ...</span><br></pre></td></tr></table></figure>

<p><strong>示例分析表</strong>：可以使用官方示例库进行分析，个人使用自己创建test数据库进行测试tolove表</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">analyze <span class="keyword">table</span> test.tolove;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+---------+----------+-----------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">Table</span>       <span class="operator">|</span> Op      <span class="operator">|</span> Msg_type <span class="operator">|</span> Msg_text                    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+---------+----------+-----------------------------+</span></span><br><span class="line"><span class="operator">|</span> test.tolove <span class="operator">|</span> analyze <span class="operator">|</span> status   <span class="operator">|</span> <span class="keyword">Table</span> <span class="keyword">is</span> already up <span class="keyword">to</span> <span class="type">date</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+---------+----------+-----------------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.01</span> sec)</span><br></pre></td></tr></table></figure>



<p><strong>总结</strong>：analyze语句用于分析存储表关键字分布，分析结果使系统得到更准确的信息，SQL生成预期执行计划。如果你感觉实际执行计划没有达到预期结果，不妨尝试执行一次分析表计划。</p>
<p><strong>检查（check）表语法</strong>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CHECK</span> <span class="keyword">TABLE</span> tbl_name [, tbl_name] ... [option] ...</span><br><span class="line">option: &#123;</span><br><span class="line"><span class="keyword">FOR</span> UPGRADE</span><br><span class="line"><span class="operator">|</span> QUICK <span class="operator">|</span> FAST  <span class="operator">|</span> MEDIUM</span><br><span class="line"><span class="operator">|</span> EXTENDED  <span class="operator">|</span> CHANGED</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p><strong>示例检查表</strong>：这张tolove表创建后修改为<code>MyISAM</code>存储引擎进行测试，<strong>数据量1kw</strong>，所以分析起来有点耗时。</p>
<p><strong>tips</strong>：同时测试使用InnoDB表，数据量1kw，花了5.21sec，这里就不贴出来了。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">check</span> <span class="keyword">table</span> test.tolove;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+-------+----------+----------+</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">Table</span>       <span class="operator">|</span> Op    <span class="operator">|</span> Msg_type <span class="operator">|</span> Msg_text <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+-------+----------+----------+</span></span><br><span class="line"><span class="operator">|</span> test.tolove <span class="operator">|</span> <span class="keyword">check</span> <span class="operator">|</span> status   <span class="operator">|</span> OK       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+-------+----------+----------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">1.63</span> sec)</span><br></pre></td></tr></table></figure>



<p><strong>check table作用</strong>：用于检查一张或多张表是否有错误，前面提到过，同时支持MyISAM和InnoDB表。同样支持检查视图，这里不做示范，可以自行参考文档进行测试验证。</p>
<h4 id="1-2-定期优化表"><a href="#1-2-定期优化表" class="headerlink" title="1.2  定期优化表"></a>1.2  定期优化表</h4><p><strong>优化（optimize ）表语法</strong>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">OPTIMIZE [NO_WRITE_TO_BINLOG <span class="operator">|</span> <span class="keyword">LOCAL</span>]</span><br><span class="line"><span class="keyword">TABLE</span> tbl_name [, tbl_name] ...</span><br></pre></td></tr></table></figure>

<p>如果已经删除了表中一大部分数据，或已经对含有可变长度行的表（例如含有：varchar、blob或者txt列的表）进行很多更改，则可以使用<code>optimize table</code>命令 进行优化表。</p>
<p><strong>作用</strong>：<code>optimize</code>命令可以将表中空间碎片进行合并，消除由于删除或者更新造成的空间浪费。<strong>同样支持MyISAM和InnoDB表</strong>。</p>
<p><strong>示例（optimize）优化表</strong>：演示的tolove表前面说过指定MyISAM存储引擎</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> optimize <span class="keyword">table</span> test.tolove\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">   <span class="keyword">Table</span>: test.tolove</span><br><span class="line">      Op: optimize</span><br><span class="line">Msg_type: status</span><br><span class="line">Msg_text: <span class="keyword">Table</span> <span class="keyword">is</span> already up <span class="keyword">to</span> <span class="type">date</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.01</span> sec)</span><br></pre></td></tr></table></figure>



<p><strong>测试test表使用InnoDB存储引擎</strong>。对于InnoDB存储引擎，通过设置<code>innodb_file_per_table</code>参数（默认值为1），改为独立表空间模式，每个数据库每张表会生成独立ibd文件，用于存储表和索引，可以在一定程度上减轻 InnoDB表回收空间问题。此外，在删除大量数据后，可以通过<code>alter table</code>命令不修改表引擎方式回收不用的空间：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> optimize <span class="keyword">table</span> test.test\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">   <span class="keyword">Table</span>: test.test</span><br><span class="line">      Op: optimize</span><br><span class="line">Msg_type: note</span><br><span class="line">Msg_text: <span class="keyword">Table</span> does <span class="keyword">not</span> support optimize, doing recreate <span class="operator">+</span> analyze instead</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">2.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">   <span class="keyword">Table</span>: test.test</span><br><span class="line">      Op: optimize</span><br><span class="line">Msg_type: status</span><br><span class="line">Msg_text: OK</span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">17.85</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">alter</span> <span class="keyword">table</span> test.test engine<span class="operator">=</span>innodb;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">20.30</span> sec)</span><br><span class="line">Records: <span class="number">0</span>  Duplicates: <span class="number">0</span>  Warnings: <span class="number">0</span></span><br></pre></td></tr></table></figure>

<p><strong>注意</strong>：<code>analyze</code>、<code>check</code>、<code>optimize</code>以及<code>alter table</code><strong>执行期间将对表进行锁定</strong>，<strong>一定要注意在数据库不频繁使用期间，再进行相关操作</strong>。</p>
<p><strong>提到优化方法</strong>，在MySQL8.0文档中你可以找到参考内容：</p>
<blockquote>
<p>1.7 MySQL Standards Compliance</p>
<p>13.7.3 Table Maintenance Statements</p>
</blockquote>
<h3 id="02-常用SQL优化"><a href="#02-常用SQL优化" class="headerlink" title="02 常用SQL优化"></a>02 常用SQL优化</h3><p>在某种场景下，查询使用很频繁，针对查询优化确实很有必要。</p>
<p>但实际开发中，还会面临使用其它常用SQL，比如insert、group by、order by等等。</p>
<h4 id="2-1-批量（大量）插入数据"><a href="#2-1-批量（大量）插入数据" class="headerlink" title="2.1  批量（大量）插入数据"></a>2.1  批量（大量）插入数据</h4><p>在使用load命令导入数据时，适当进行设置可以提高导入效率。</p>
<p>对于MyISAM表可以通过以下方式快速导入大量数据。</p>
<p><strong>操作命令</strong>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> tbl_name DISABLE KEYS;  <span class="comment">-- 禁用MyISAM表非唯一索引更新</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> tbl_name ENABLE KEYS; <span class="comment">-- 开启MyISAM表非唯一索引更新</span></span><br></pre></td></tr></table></figure>

<p>disable keys和enable keys用于开启和关闭MyISAM表非唯一索引更新。</p>
<p>MyISAM存储引擎默认，导入大量数据至一张空MyISAM表，默认先导入数据，然后创建索引，不用进行设置。</p>
<p><strong>示例导入数据语句</strong>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">load data infile <span class="string">&#x27;file_name&#x27;</span> <span class="keyword">into</span> <span class="keyword">table</span> tbl_name;</span><br></pre></td></tr></table></figure>

<p>自行测试时，可以先手动开启非唯一索引，然后关闭非唯一索引进行对比导入时间。</p>
<p>通过测试关闭唯一索引，导入数据效率确实要高很多。<strong>这是对MyISAM表进行测试优化，对InnoDB类型表上述方式作用不是很大</strong>。</p>
<p><strong>InnoDB表导入表同样也有相应优化措施</strong>：</p>
<ol>
<li>导入数据按主键顺序排列，可以提高效率。（<strong>InnoDB表是按主键顺序排列</strong>）</li>
<li>导入数据前执行set unique_checks&#x3D;0，关闭唯一性校验；导入完成，再设置set unique_checks&#x3D;1，恢复唯一性校验。从而提高导入效率。</li>
<li>如果应用使用自动提交（autocommit），建议导入前执行set autocommit&#x3D;0，关闭自动提交。导入数据后，再设置set autocommit&#x3D;1，开启自动提交，同样可以提高导入效率。</li>
</ol>
<p>MyISAM表和InnoDB表导入数据语句是一样的。以上介绍MyISAM表和InnoDB表导入数据优化方式，可进行参考测试验证。</p>
<p>更多关于MyISAM表插入数据优化方法可以参考如下引用说明： <strong>对于文档理应善于使用搜索Ctrl + f</strong></p>
<blockquote>
<p>8.5 Optimizing for InnoDB Tables  </p>
<p>8.6 Optimizing for MyISAM Tables</p>
<p>13.2.7 LOAD DATA Statement</p>
</blockquote>
<h4 id="2-2-优化-INSERT、ORDER-BY、GROUP-BY-语句"><a href="#2-2-优化-INSERT、ORDER-BY、GROUP-BY-语句" class="headerlink" title="2.2  优化 INSERT、ORDER BY、GROUP BY 语句"></a>2.2  优化 INSERT、ORDER BY、GROUP BY 语句</h4><p>你可以找到参考内容：</p>
<blockquote>
<p>13.2.6 INSERT Statement</p>
<p>8.2.1.16 ORDER BY Optimization</p>
<p>8.2.1.17 GROUP BY Optimization</p>
</blockquote>
<p><strong>2.2.1 INSERT语句</strong></p>
<p>当进行数据库<code>INSERT</code>操作时，可以考虑以下几种优化方式。</p>
<p>如果同时从同一用户表插入多行，应尽量<strong>使用多个值表的INSERT语句</strong>，这种方式大大缩减客户端与数据库之间的连接、关闭等消耗。一般情况下，比单个执行INSERT语句效率要高得多，但也分场景。下面给出一次插入多值示例：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tbl_name(a,b,c) <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>), (<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>), (<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>);</span><br></pre></td></tr></table></figure>

<p>上述演示，指定字段。从安全角度考虑，实际开发过程中也是推荐指定字段，因为这种方式更加安全。多年前，我还是一位菜鸡开发人员，虽然现在也是一名菜鸟。当时不是很理解，为何在DAO中非要在前面指明字段。直到某天翻阅实体书籍时，才意识到。</p>
<p>如果从不同用户插入多行。<strong>使用到DELAYED语句，需要注意了</strong>，在MySQL5.6之前版本还没被移除，<strong>从MySQL5.6开始已经弃用</strong>。使用<strong>DELAYED之所以快，其实数据被存放在内存队列中，并没有真正写入从磁盘</strong>。</p>
<p><strong>注意事项</strong>：<code>DELAYED</code>关键字计划在未来的版本中删除。延迟插入（ DELAYED INSERT ）和替换在MySQL 5.6中已弃用。在MySQL 8.0中，不支持DELAYED。服务器可以识别，但会忽略DELAYED关键字，将插入处理视为非延迟插入，并生成ER_WARN_LEGACY_SYNTAX_CONVERTED 警告：INSERT DELAYED is no longer supported. The statement was converted to INSERT。</p>
<p><strong>可以将索引文件与数据文件在不同的磁盘上存放，建表时可以选择</strong>。</p>
<p>如果进行批量插入，可以通过增减<code>bulk_insert_buffer_size</code>变量值的方法来提高速度。对MyISAM表有效，MyISAM使用一种特殊的树状缓存，使批量插入更快。 INSERT … SELECT，INSERT … VALUES (…)，(…)，…，和LOAD DATA在添加数据到非空表时。这个变量以每个线程的字节为单位限制缓存树的大小。将其设置为0将禁用此优化。默认值为8MB。</p>
<p><strong>注意事项</strong>：从MySQL 8.0.14开始，设置<code>bulk_insert_buffer_size</code>这个系统变量的会话值是一个受限制的操作。会话用户必须具有设置受限制会话变量的权限。</p>
<p><strong>当从一个文本装载一张表时，使用LOAD DATA INFILE，一般比使用INSERT语句快得多</strong>。</p>
<p>从MySQL 8.0.19版本开始，你也可以使用INSERT…TABLE在MySQL 8.0.19及以后版本中插入一行，使用TABLE替换SELECT。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> tb (i <span class="type">INT</span>);</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.02</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">INSERT</span> <span class="keyword">INTO</span> tb <span class="keyword">TABLE</span> t;</span><br><span class="line">Query OK, <span class="number">3</span> <span class="keyword">rows</span> affected (<span class="number">0.01</span> sec)</span><br><span class="line">Records: <span class="number">3</span>  Duplicates: <span class="number">0</span>  Warnings: <span class="number">0</span></span><br></pre></td></tr></table></figure>

<p>以上演示，是将表 t 中所有记录插入到 tb 表中，与之前<code>insert into tb select * from t</code>用法是一样的执行效果。</p>
<p><strong>2.2.2 ORDER BY语句</strong></p>
<p>看到<code>ORDER BY</code>语句，可以联想到排序方式。那么，了解一下MySQL中的排序方式。</p>
<p>查看world数据库中city表索引情况：此处省略掉了一些参数值，全部展示篇幅太长。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> index <span class="keyword">from</span> city\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">        <span class="keyword">Table</span>: city</span><br><span class="line">   Non_unique: <span class="number">0</span></span><br><span class="line">     Key_name: <span class="keyword">PRIMARY</span></span><br><span class="line"> Seq_in_index: <span class="number">1</span></span><br><span class="line">  Column_name: ID</span><br><span class="line">    <span class="keyword">Collation</span>: A</span><br><span class="line">  <span class="keyword">Cardinality</span>: <span class="number">4046</span></span><br><span class="line">   Index_type: BTREE</span><br><span class="line">      Visible: YES</span><br><span class="line">   Expression: <span class="keyword">NULL</span></span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">2.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">        <span class="keyword">Table</span>: city</span><br><span class="line">   Non_unique: <span class="number">1</span></span><br><span class="line">     Key_name: CountryCode</span><br><span class="line"> Seq_in_index: <span class="number">1</span></span><br><span class="line">  Column_name: CountryCode</span><br><span class="line">    <span class="keyword">Collation</span>: A</span><br><span class="line">  <span class="keyword">Cardinality</span>: <span class="number">232</span></span><br><span class="line">   Index_type: BTREE</span><br><span class="line">      Visible: YES</span><br><span class="line">   Expression: <span class="keyword">NULL</span></span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.01</span> sec)</span><br></pre></td></tr></table></figure>



<p><strong>MySQL中有两种排序方式</strong>：</p>
<ol>
<li>Use of Indexes to Satisfy ORDER BY，使用using index。</li>
<li>Use of filesort to Satisfy ORDER BY，使用filesort。</li>
</ol>
<p>在某些情况下，MySQL可能会使用索引来满足ORDER BY子句，从而避免执行filesort操作时涉及的额外排序。<strong>第一种通过有序使用顺序扫描直接返回有序数据</strong>，这种方式在使用explain分析查询时显示<code>Using index</code>，无需额外排序，操作效率较高，示例如下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> id <span class="keyword">from</span> city <span class="keyword">order</span> <span class="keyword">by</span> id\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">           id: <span class="number">1</span></span><br><span class="line">  select_type: SIMPLE</span><br><span class="line">        <span class="keyword">table</span>: city</span><br><span class="line">   partitions: <span class="keyword">NULL</span></span><br><span class="line">         type: index</span><br><span class="line">possible_keys: <span class="keyword">NULL</span></span><br><span class="line">          key: <span class="keyword">PRIMARY</span></span><br><span class="line">      key_len: <span class="number">4</span></span><br><span class="line">          <span class="keyword">ref</span>: <span class="keyword">NULL</span></span><br><span class="line">         <span class="keyword">rows</span>: <span class="number">4046</span></span><br><span class="line">     filtered: <span class="number">100.00</span></span><br><span class="line">        Extra: <span class="keyword">Using</span> index</span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span>, <span class="number">1</span> warning (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>



<p>如果索引不能满足ORDER BY子句，MySQL执行一个filesort操作，读取表行并对它们排序。filesort在查询执行中构成一个额外的排序阶段。<strong>第二种是通过对返回数据进行排序</strong>，也是通常所说的<code>filesort</code>排序，所有不是通过索引直接返回结果的排序都称为filesort排序。</p>
<p>filesort并不代表通过磁盘文件进行排序，只是说明进行了一个排序操作，至于操作是否使用了磁盘文件或者临时表等，则取决于MySQL服务器对排序参数的设置和需要排序数据的大小。</p>
<p>如果结果集太大，无法装入内存，则 filesort 操作将根据需要使用临时磁盘文件。有些类型的查询特别适合于完全在内存中的filesort操作。例如，优化器可以使用filesort在内存中有效地处理，而不需要临时文件。示例：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> ... <span class="keyword">FROM</span> single_table ... <span class="keyword">ORDER</span> <span class="keyword">BY</span> non_index_column [<span class="keyword">DESC</span>] LIMIT [M,]N;</span><br></pre></td></tr></table></figure>

<p>以下给出使用 Using filesort 情况示例：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> store_id,email,customer_id <span class="keyword">from</span> sakila.customer <span class="keyword">order</span> <span class="keyword">by</span> email\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">           id: <span class="number">1</span></span><br><span class="line">  select_type: SIMPLE</span><br><span class="line">        <span class="keyword">table</span>: customer</span><br><span class="line">   partitions: <span class="keyword">NULL</span></span><br><span class="line">         type: index</span><br><span class="line">possible_keys: <span class="keyword">NULL</span></span><br><span class="line">          key: idx_storeid_email</span><br><span class="line">      key_len: <span class="number">204</span></span><br><span class="line">          <span class="keyword">ref</span>: <span class="keyword">NULL</span></span><br><span class="line">         <span class="keyword">rows</span>: <span class="number">599</span></span><br><span class="line">     filtered: <span class="number">100.00</span></span><br><span class="line">        Extra: <span class="keyword">Using</span> index; <span class="keyword">Using</span> filesort</span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span>, <span class="number">1</span> warning (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<p><strong>注意</strong>：为了获得 filesort 操作的内存，<strong>从MySQL 8.0.12开始，优化器根据需要增量分配内存缓冲区(sort_buffer_size )<strong>，直到由排序缓冲区大小系统变量指示的大小，而不是像在</strong>MySQL 8.0.12之前那样，预先分配固定数量的排序缓冲区(sort_buffer_size )大小字节</strong>。这使用户可以将排序缓冲区大小设置为更大的值，以加快更大的排序，而不用担心小排序会占用过多的内存。(这种好处可能不会出现在Windows上的多个并发排序，因为Windows有一个弱多线程malloc。）</p>
<p>了解MySQL排序方式后，优化目的清晰了：<strong>尽量减少额外排序，通过索引直接返回数据</strong>。</p>
<p>添加组合索引，然后使用explain执行测试：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">ALTER</span> <span class="keyword">TABLE</span> sakila.customer <span class="keyword">ADD</span> INDEX idx_storeid_email(store_id,email);</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.04</span> sec)</span><br><span class="line">Records: <span class="number">0</span>  Duplicates: <span class="number">0</span>  Warnings: <span class="number">0</span></span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> store_id,email,customer_id <span class="keyword">from</span> sakila.customer <span class="keyword">where</span> store_id<span class="operator">=</span><span class="number">1</span> <span class="keyword">order</span> <span class="keyword">by</span> email <span class="keyword">desc</span>\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">           id: <span class="number">1</span></span><br><span class="line">  select_type: SIMPLE</span><br><span class="line">        <span class="keyword">table</span>: customer</span><br><span class="line">   partitions: <span class="keyword">NULL</span></span><br><span class="line">         type: <span class="keyword">ref</span></span><br><span class="line">possible_keys: idx_fk_store_id,idx_storeid_email</span><br><span class="line">          key: idx_storeid_email</span><br><span class="line">      key_len: <span class="number">1</span></span><br><span class="line">          <span class="keyword">ref</span>: const</span><br><span class="line">         <span class="keyword">rows</span>: <span class="number">326</span></span><br><span class="line">     filtered: <span class="number">100.00</span></span><br><span class="line">        Extra: Backward index scan; <span class="keyword">Using</span> index</span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span>, <span class="number">1</span> warning (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<p>依据上面测试演示结果，可以分析出返回索引扫描。如果是在8.0之前显示有所区别，比如在MySQL5.7出现的是Extra: Using where; Using index。</p>
<p>查询商店编号store_id大于等于1小于等于3，按照email进行排序记录主键customer_id时，由于优化器评估使用索引idx_storeid_email进行范围扫描const最低，所以最终对索引进行扫描的结果，进行额外email逆序操作：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> store_id,email,customer_id <span class="keyword">from</span> sakila.customer <span class="keyword">where</span> store_id<span class="operator">&gt;=</span><span class="number">1</span> <span class="keyword">and</span> store_id<span class="operator">&lt;=</span><span class="number">3</span> <span class="keyword">order</span> <span class="keyword">by</span> email <span class="keyword">desc</span>\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">           id: <span class="number">1</span></span><br><span class="line">  select_type: SIMPLE</span><br><span class="line">        <span class="keyword">table</span>: customer</span><br><span class="line">   partitions: <span class="keyword">NULL</span></span><br><span class="line">         type: index</span><br><span class="line">possible_keys: idx_fk_store_id,idx_storeid_email</span><br><span class="line">          key: idx_storeid_email</span><br><span class="line">      key_len: <span class="number">204</span></span><br><span class="line">          <span class="keyword">ref</span>: <span class="keyword">NULL</span></span><br><span class="line">         <span class="keyword">rows</span>: <span class="number">599</span></span><br><span class="line">     filtered: <span class="number">100.00</span></span><br><span class="line">        Extra: <span class="keyword">Using</span> <span class="keyword">where</span>; <span class="keyword">Using</span> index; <span class="keyword">Using</span> filesort</span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span>, <span class="number">1</span> warning (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>



<p><strong>优化filesort</strong>：通过建立合适的索引减少 filesort 出现，但在某种情况下，条件限制无法让 filesort 消失，可以想办法加快 filesort 操作。如何加快，可以通过控制<code>sort_buffer_size</code> 和  <code>max_length_for_sort_data</code>（max_sort_length ） 大小进行优化。</p>
<p><strong>注意</strong>：对于没有使用filesort的慢<code>ORDER BY</code>查询，尝试将排序数据系统变量（max_length_for_sort_data）的最大长度降低到适合触发filesort的值。(将此变量值设置过高的一个症状是高磁盘活动和低CPU活动的结合。)这种技术只适用于MySQL 8.0.20之前。从8.0.20开始，排序数据的最大长度已弃用，因为优化器的更改使其过时且无效。</p>
<p><strong>2.2.3 GROUP BY语句</strong></p>
<p>满足<code>GROUP BY</code>子句的最常用方法是扫描全表，并创建一个新的临时表，其中每个组中所有行都是连续的，然后使用这个临时表来发现组并应用聚合函数(如果存在的话)。在某些情况下，MySQL能够做得更好，并通过使用索引访问避免创建临时表。</p>
<p>GROUP BY使用索引最重要的前提条件：所有GROUP BY列引用来自同一索引的属性，并且该索引按顺序存储其键(例如，对于BTREE索引是这样，但对于HASH索引则不同)。临时表的使用是否可以被索引访问替代，还取决于查询中使用索引的哪些部分、为这些部分指定的条件以及所选的聚合函数。</p>
<p><strong>访问索引执行 GROUP BY 两种扫描方式</strong>：</p>
<ol>
<li>松散索引扫描（Loose Index Scan）</li>
<li>密集索引扫描（Tight Index Scan）</li>
</ol>
<p>默认情况下，MySQL对所有<code>GROUP BY</code> c1，c2，…字段进行排序，与查询中指定<code>ORDER BY</code>  c1，c2，…类似。因此，如果显示包括一个相同列的<code>ORDER BY</code>子句，对MySQL实际执行性能没有什么影响。</p>
<p>如果查询包括GROUP BY，但用户想避免排序结果的消耗，则可以指定ORDER BY NULL禁止排序。如下示例：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> payment_date,<span class="built_in">sum</span>(amount) <span class="keyword">from</span> sakila.payment <span class="keyword">group</span> <span class="keyword">by</span> payment_date\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">           id: <span class="number">1</span></span><br><span class="line">  select_type: SIMPLE</span><br><span class="line">        <span class="keyword">table</span>: payment</span><br><span class="line">   partitions: <span class="keyword">NULL</span></span><br><span class="line">         type: <span class="keyword">ALL</span></span><br><span class="line">possible_keys: <span class="keyword">NULL</span></span><br><span class="line">          key: <span class="keyword">NULL</span></span><br><span class="line">      key_len: <span class="keyword">NULL</span></span><br><span class="line">          <span class="keyword">ref</span>: <span class="keyword">NULL</span></span><br><span class="line">         <span class="keyword">rows</span>: <span class="number">16086</span></span><br><span class="line">     filtered: <span class="number">100.00</span></span><br><span class="line">        Extra: <span class="keyword">Using</span> temporary</span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span>, <span class="number">1</span> warning (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<p>分析查询出来的结果，发现Extra: Using temporary，使用一个临时表。type&#x3D;ALL，执行全表扫描。</p>
<p><strong>注意</strong>：在MySQL5.7或者更低的版本中使用 <code>ORDER BY NULL</code>有显示优化作用，<code>GROUP BY</code>在特定条件下隐式排序。在MySQL8.0中不再出现这种情况，所以在最后指定 ORDER BY NULL 来抑制隐式排序，就没有必要了。但是，查询结果可能与之前的MySQL版本有所不同。要生成给定的排序顺序，请使用 ORDER BY子句。</p>
<p>即使在MySQL8.0中显示使用<code>ORDER BY NULL</code> 来抑制隐式排序，结果并没变化。但在MySQL5.7或者MariaDB10.5.6中使用时有变化，而且你会发现执行结果出现：Extra: Using temporary; Using filesort。对于filesort吗，上面也给出了简单处理方法。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> payment_date,<span class="built_in">sum</span>(amount) <span class="keyword">from</span> sakila.payment <span class="keyword">group</span> <span class="keyword">by</span> payment_date <span class="keyword">order</span> <span class="keyword">by</span> <span class="keyword">null</span>\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">           id: <span class="number">1</span></span><br><span class="line">  select_type: SIMPLE</span><br><span class="line">        <span class="keyword">table</span>: payment</span><br><span class="line">   partitions: <span class="keyword">NULL</span></span><br><span class="line">         type: <span class="keyword">ALL</span></span><br><span class="line">possible_keys: <span class="keyword">NULL</span></span><br><span class="line">          key: <span class="keyword">NULL</span></span><br><span class="line">      key_len: <span class="keyword">NULL</span></span><br><span class="line">          <span class="keyword">ref</span>: <span class="keyword">NULL</span></span><br><span class="line">         <span class="keyword">rows</span>: <span class="number">16086</span></span><br><span class="line">     filtered: <span class="number">100.00</span></span><br><span class="line">        Extra: <span class="keyword">Using</span> temporary</span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span>, <span class="number">1</span> warning (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>





<h4 id="2-3-优化嵌套查询、分页查询"><a href="#2-3-优化嵌套查询、分页查询" class="headerlink" title="2.3  优化嵌套查询、分页查询"></a>2.3  优化嵌套查询、分页查询</h4><p><strong>2.3.1 嵌套查询</strong></p>
<p>你可以找到参考内容：8.2.1 Optimizing SELECT Statements</p>
<p>MySQL4.1中开始支持SQL子查询。这个技术可以使用SELECT语句来创建一个单列的查询结果，然后将查询的结果作为过滤条件作用在另一个查询中。使子查询可以一次性完成更多逻辑上需要多个步骤才能完成的SQL操作，同时可以表面事务或者表锁死，编写相对容易。但在某些情况下，使用连接（join）效率更高，可以被替代。</p>
<p><strong>示例</strong>：在顾客表查询排除支付表中的所有顾客信息，使用子查询实现。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> EXPLAIN <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> sakila.`customer` <span class="keyword">WHERE</span> customer_id</span><br><span class="line">  <span class="keyword">NOT</span> <span class="keyword">IN</span>(<span class="keyword">SELECT</span> customer_id <span class="keyword">FROM</span> sakila.`payment`)\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">           id: <span class="number">1</span></span><br><span class="line">  select_type: SIMPLE</span><br><span class="line">        <span class="keyword">table</span>: customer</span><br><span class="line">   partitions: <span class="keyword">NULL</span></span><br><span class="line">         type: <span class="keyword">ALL</span></span><br><span class="line">possible_keys: <span class="keyword">NULL</span></span><br><span class="line">          key: <span class="keyword">NULL</span></span><br><span class="line">      key_len: <span class="keyword">NULL</span></span><br><span class="line">          <span class="keyword">ref</span>: <span class="keyword">NULL</span></span><br><span class="line">         <span class="keyword">rows</span>: <span class="number">599</span></span><br><span class="line">     filtered: <span class="number">100.00</span></span><br><span class="line">        Extra: <span class="keyword">NULL</span></span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">2.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">           id: <span class="number">1</span></span><br><span class="line">  select_type: SIMPLE</span><br><span class="line">        <span class="keyword">table</span>: payment</span><br><span class="line">   partitions: <span class="keyword">NULL</span></span><br><span class="line">         type: <span class="keyword">ref</span></span><br><span class="line">possible_keys: idx_fk_customer_id</span><br><span class="line">          key: idx_fk_customer_id</span><br><span class="line">      key_len: <span class="number">2</span></span><br><span class="line">          <span class="keyword">ref</span>: sakila.customer.customer_id</span><br><span class="line">         <span class="keyword">rows</span>: <span class="number">26</span></span><br><span class="line">     filtered: <span class="number">100.00</span></span><br><span class="line">        Extra: <span class="keyword">Using</span> <span class="keyword">where</span>; <span class="keyword">Not</span> <span class="keyword">exists</span>; <span class="keyword">Using</span> index</span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span>, <span class="number">1</span> warning (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<p>可使用join进行改进，我提供思路，用left join进行连接查询，主要以customer表为主，也是以左表为主。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">EXPLAIN <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> sakila.`customer` a <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> sakila.`payment` b <span class="keyword">ON</span></span><br><span class="line">a.`customer_id`<span class="operator">=</span>b.`customer_id` <span class="keyword">WHERE</span> b.`customer_id` <span class="keyword">IS</span> <span class="keyword">NULL</span>\G</span><br></pre></td></tr></table></figure>

<p><strong>注意</strong>：当时还纳闷测试看不出index_subquery。查询后，发现在MySQL8.0.16之前可以看到type由index_subquery变为ref，而在MySQL8.0.16开始优化器调整并做优化（in和exists），与上面子查询得到结果并无区别。</p>
<p>连接（join）之所以效率更高，因为MySQL不需要在内存中创建临时表来完成这个逻辑上需要两个步骤完成的工作。</p>
<p><strong>2.3.2 分页查询</strong></p>
<p>你可以找到参考内容：8.2.1.19 LIMIT Query Optimization</p>
<p>一般分页查询时，通过创建覆盖索引能够比较好地提高性能。一个很头痛的分页场景：limit 996,20，此时MySQL排序出前996记录后仅仅只需要返回第996到1016条记录，前996条记录会被抛弃，查询和排序代价非常高。</p>
<p>通过分析上述描述场景，使用explain进行分析：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> world.city limit <span class="number">996</span>,<span class="number">20</span>\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">           id: <span class="number">1</span></span><br><span class="line">  select_type: SIMPLE</span><br><span class="line">        <span class="keyword">table</span>: city</span><br><span class="line">   partitions: <span class="keyword">NULL</span></span><br><span class="line">         type: <span class="keyword">ALL</span></span><br><span class="line">possible_keys: <span class="keyword">NULL</span></span><br><span class="line">          key: <span class="keyword">NULL</span></span><br><span class="line">      key_len: <span class="keyword">NULL</span></span><br><span class="line">          <span class="keyword">ref</span>: <span class="keyword">NULL</span></span><br><span class="line">         <span class="keyword">rows</span>: <span class="number">4046</span></span><br><span class="line">     filtered: <span class="number">100.00</span></span><br><span class="line">        Extra: <span class="keyword">NULL</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span>, <span class="number">1</span> warning (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<p>可以看出，type&#x3D;ALL，优化分析器走了全表扫描。</p>
<p><strong>第一种优化思路</strong>：在索引上完成排序分页操作，最后根据关联原表查询所需要的其它列内容。</p>
<p>通过思考，对上面SQL语句进行调整优化：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> world.city c <span class="keyword">inner</span> <span class="keyword">join</span>(<span class="keyword">select</span> id <span class="keyword">from</span> world.city <span class="keyword">order</span> <span class="keyword">by</span> countrycode limit <span class="number">996</span>,<span class="number">20</span>)a <span class="keyword">on</span> c.id<span class="operator">=</span>a.id\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">           id: <span class="number">1</span></span><br><span class="line">  select_type: <span class="keyword">PRIMARY</span></span><br><span class="line">  ...</span><br><span class="line">         type: <span class="keyword">ALL</span></span><br><span class="line">        Extra: <span class="keyword">NULL</span></span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">2.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">           id: <span class="number">1</span></span><br><span class="line">  select_type: <span class="keyword">PRIMARY</span></span><br><span class="line">  ...</span><br><span class="line">         type: eq_ref</span><br><span class="line">        Extra: <span class="keyword">NULL</span></span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">3.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">           id: <span class="number">2</span></span><br><span class="line">  select_type: DERIVED</span><br><span class="line">        <span class="keyword">table</span>: city</span><br><span class="line">   partitions: <span class="keyword">NULL</span></span><br><span class="line">         type: index</span><br><span class="line">possible_keys: <span class="keyword">NULL</span></span><br><span class="line">          key: CountryCode</span><br><span class="line">      key_len: <span class="number">12</span></span><br><span class="line">          <span class="keyword">ref</span>: <span class="keyword">NULL</span></span><br><span class="line">         <span class="keyword">rows</span>: <span class="number">1016</span></span><br><span class="line">     filtered: <span class="number">100.00</span></span><br><span class="line">        Extra: <span class="keyword">Using</span> index</span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span>, <span class="number">1</span> warning (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<p>上述结果，前两页省略掉了一些内容。这种方式使MySQL扫描尽可能少的页面来提高分页效率，缺点是SQL语句变长了。</p>
<p><strong>第二种优化思路</strong>：将limit查询转换成某个位置的查询，实际上是将limit m,n转换为limit n查询，只适合排序字段不会出现重复值的特定环境，能减轻分页翻页压力。如果排序字段现大量重复值，则不适合进行这种优化，因为会丢失部分记录。</p>
<p><strong>注意</strong>：对于带有ORDER BY或GROUP BY和LIMIT子句的查询，优化器在默认情况下尝试选择一个有序索引，这样做会加快查询的执行速度。在MySQL 8.0.21之前，即使在使用一些其它优化，可能更快的情况下，没有办法覆盖这种行为。从MySQL 8.0.21开始，可以通过设置优化器开关（optimizer_switch）系统变量的优先排序索引（prefer_ordering_index）标志来关闭这种优化。</p>
<p>默认情况<code>optimizer_switch</code> 和 <code>prefer_ordering_index</code>是开启的：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> @<span class="variable">@optimizer_switch</span> <span class="keyword">LIKE</span> <span class="string">&#x27;%prefer_ordering_index=on%&#x27;</span>\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">@<span class="variable">@optimizer_switch</span> <span class="keyword">LIKE</span> <span class="string">&#x27;%prefer_ordering_index=on%&#x27;</span>: <span class="number">1</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>



<h4 id="2-4-优化-OR-条件"><a href="#2-4-优化-OR-条件" class="headerlink" title="2.4  优化 OR 条件"></a>2.4  优化 OR 条件</h4><p>你可以查找到参考内容：12.4.3 Logical Operators</p>
<p>在介绍OR条件时，可以先了解MySQL中的逻辑操作符（Logical Operators）。有如下几种：</p>
<ul>
<li>AND, &amp;&amp;：逻辑与、并且，在两个条件中必须都满足。</li>
<li>NOT, !：否定、取反。</li>
<li>OR, ||：逻辑或、在两个条件中满足一个条件即可。</li>
<li>XOR：逻辑XOR。如果是NULL，返回NULL；如果是non-NULL，返回1；如果奇数个非零操作数，则计算结果为1，否则返回0。</li>
</ul>
<p>示例XOR：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="number">1</span> XOR <span class="number">1</span>\G    <span class="comment">-- return:0</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="number">1</span> XOR <span class="number">0</span>\G    <span class="comment">-- return:1</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="number">1</span> XOR <span class="keyword">NULL</span>\G   <span class="comment">-- return:NULL</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="number">1</span> XOR <span class="number">1</span> XOR <span class="number">1</span>\G  <span class="comment">-- return:1</span></span><br></pre></td></tr></table></figure>

<p>对于含有OR查询的子句，如果要利用索引、则OR之间的每个条件列都必须用到索引，如果没有索引，应该考虑增加索引。</p>
<p>可以使用show index from tal_name语句查看表索引情况：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> index <span class="keyword">from</span> city\G</span><br><span class="line">...</span><br><span class="line">Column_name: city_id</span><br><span class="line">Column_name: country_id</span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<p>然后查询存在索引的两列，并使用OR条件联合查询：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> city <span class="keyword">where</span> city_id<span class="operator">=</span><span class="number">6</span> <span class="keyword">or</span> country_id<span class="operator">=</span><span class="number">101</span>\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">           id: <span class="number">1</span></span><br><span class="line">  select_type: SIMPLE</span><br><span class="line">        <span class="keyword">table</span>: city</span><br><span class="line">   partitions: <span class="keyword">NULL</span></span><br><span class="line">         type: index_merge</span><br><span class="line">possible_keys: <span class="keyword">PRIMARY</span>,idx_fk_country_id</span><br><span class="line">          key: <span class="keyword">PRIMARY</span>,idx_fk_country_id</span><br><span class="line">      key_len: <span class="number">2</span>,<span class="number">2</span></span><br><span class="line">          <span class="keyword">ref</span>: <span class="keyword">NULL</span></span><br><span class="line">         <span class="keyword">rows</span>: <span class="number">4</span></span><br><span class="line">     filtered: <span class="number">100.00</span></span><br><span class="line">        Extra: <span class="keyword">Using</span> <span class="keyword">union</span>(<span class="keyword">PRIMARY</span>,idx_fk_country_id); <span class="keyword">Using</span> <span class="keyword">where</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span>, <span class="number">1</span> warning (<span class="number">0.01</span> sec)</span><br></pre></td></tr></table></figure>

<p>可以发现查询正确地使用到索引，并且从执行计划描述中，发现MySQL在处理含有OR子句查询时，实际对OR各个字段分别查询后的结果进行了union操作。</p>
<p>在有复合索引的列上做OR操作，却无法使用到索引，查询结果如下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> inventory <span class="keyword">where</span> inventory_id<span class="operator">=</span><span class="number">6</span> <span class="keyword">or</span> store_id<span class="operator">=</span><span class="number">2</span>\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">           id: <span class="number">1</span></span><br><span class="line">  select_type: SIMPLE</span><br><span class="line">        <span class="keyword">table</span>: inventory</span><br><span class="line">   partitions: <span class="keyword">NULL</span></span><br><span class="line">         type: <span class="keyword">ALL</span></span><br><span class="line">possible_keys: <span class="keyword">PRIMARY</span>,idx_store_id_film_id</span><br><span class="line">          key: <span class="keyword">NULL</span></span><br><span class="line">      key_len: <span class="keyword">NULL</span></span><br><span class="line">          <span class="keyword">ref</span>: <span class="keyword">NULL</span></span><br><span class="line">         <span class="keyword">rows</span>: <span class="number">4581</span></span><br><span class="line">     filtered: <span class="number">50.01</span></span><br><span class="line">        Extra: <span class="keyword">Using</span> <span class="keyword">where</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span>, <span class="number">1</span> warning (<span class="number">0.01</span> sec)</span><br></pre></td></tr></table></figure>





<h4 id="2-5-使用-SQL-提示"><a href="#2-5-使用-SQL-提示" class="headerlink" title="2.5  使用 SQL 提示"></a>2.5  使用 SQL 提示</h4><p>可以找到参考的内容：8.9.4 Index Hints</p>
<p>SQL提示（SQL Hints）是优化数据库的一项重要手段，简单说是在SQL语句中<strong>加入一些人为的提示达到优化目的</strong>。下面将给出一个使用SQL提示的示例：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> SQL_BUFFER_RESULT <span class="keyword">FROM</span> t1...</span><br></pre></td></tr></table></figure>

<p>其默认值为0，即是关闭状态，设置为1则启用。如果启用，SQL_BUFFER_RESULT将强制SELECT语句的结果放入临时表中。在需要很长时间向客户端发送结果的情况下，帮助比较大，因为这有助于MySQL尽早释放表锁。</p>
<p><strong>以下介绍一些在MySQL中常用的SQL提示：索引提示</strong>（Index Hints）</p>
<p><strong>索引提示语法</strong>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">tbl_name [[<span class="keyword">AS</span>] alias] [index_hint_list]</span><br><span class="line"></span><br><span class="line">index_hint_list:</span><br><span class="line">    index_hint [index_hint] ...</span><br><span class="line">    </span><br><span class="line">index_hint:</span><br><span class="line">  USE &#123;INDEX<span class="operator">|</span>KEY&#125;</span><br><span class="line">    [<span class="keyword">FOR</span> &#123;<span class="keyword">JOIN</span><span class="operator">|</span><span class="keyword">ORDER</span> <span class="keyword">BY</span><span class="operator">|</span><span class="keyword">GROUP</span> <span class="keyword">BY</span>&#125;] ([index_list])</span><br><span class="line">    <span class="operator">|</span> &#123;IGNORE<span class="operator">|</span>FORCE&#125; &#123;INDEX<span class="operator">|</span>KEY&#125;</span><br><span class="line">    [<span class="keyword">FOR</span> &#123;<span class="keyword">JOIN</span><span class="operator">|</span><span class="keyword">ORDER</span> <span class="keyword">BY</span><span class="operator">|</span><span class="keyword">GROUP</span> <span class="keyword">BY</span>&#125;] (index_list)</span><br><span class="line"></span><br><span class="line">index_list:</span><br><span class="line">    index_name [, index_name] ...</span><br></pre></td></tr></table></figure>

<p>看完提示语法，可以了解到索引提示三种技巧USE INDEX、IGNORE INDEX以及FORCE INDEX。</p>
<p><strong>2.5.1 USE INDEX</strong></p>
<p>在查询语句中表名的背后，使用USE INDEX希望MySQL去参考索引列表，此时达到不让MySQL去参考其它可用索引的目的。</p>
<p><strong>示例</strong>：使用explain进行分析</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> countrylanguage use index(CountryCode)\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">           id: <span class="number">1</span></span><br><span class="line">  select_type: SIMPLE</span><br><span class="line">        <span class="keyword">table</span>: countrylanguage</span><br><span class="line">   partitions: <span class="keyword">NULL</span></span><br><span class="line">         type: index</span><br><span class="line">possible_keys: <span class="keyword">NULL</span></span><br><span class="line">          key: CountryCode</span><br><span class="line">      key_len: <span class="number">12</span></span><br><span class="line">          <span class="keyword">ref</span>: <span class="keyword">NULL</span></span><br><span class="line">         <span class="keyword">rows</span>: <span class="number">984</span></span><br><span class="line">     filtered: <span class="number">100.00</span></span><br><span class="line">        Extra: <span class="keyword">Using</span> index</span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span>, <span class="number">1</span> warning (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<p>根据上面分析结果，可以看出type&#x3D;index，走索引扫描；Extra内容是Using index，达到我们预期要求。</p>
<p><strong>2.5.2 IGNORE INDEX</strong></p>
<p>如果用户只是单纯地想让MySQL忽略某一个或多个索引，则可以使用<code>IGNORE INDEX</code>作为索引提示（HINTS）。</p>
<p>下面使用IGNORE INDEX进行演示：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> countrylanguage ignore index(CountryCode)\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">           id: <span class="number">1</span></span><br><span class="line">  select_type: SIMPLE</span><br><span class="line">        <span class="keyword">table</span>: countrylanguage</span><br><span class="line">   partitions: <span class="keyword">NULL</span></span><br><span class="line">         type: index</span><br><span class="line">possible_keys: <span class="keyword">NULL</span></span><br><span class="line">          key: <span class="keyword">PRIMARY</span></span><br><span class="line">      key_len: <span class="number">132</span></span><br><span class="line">          <span class="keyword">ref</span>: <span class="keyword">NULL</span></span><br><span class="line">         <span class="keyword">rows</span>: <span class="number">984</span></span><br><span class="line">     filtered: <span class="number">100.00</span></span><br><span class="line">        Extra: <span class="keyword">Using</span> index</span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span>, <span class="number">1</span> warning (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<p>通过上述执行分析，放弃了默认索引，此时走的索引是PRIMARY。</p>
<p><strong>2.5.3 FORCE INDEX</strong></p>
<p>强制MySQL使用一个特定索引，可以在查询中使用<code>FORCE INDEX</code>作为HINTS。</p>
<p>例如，不强制使用索引时，此时支付表中大部分rental_id都是大于1的，因此MySQL默认会全表扫描，而不使用索引。如下所示：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> sakila.payment <span class="keyword">where</span> rental_id <span class="operator">&gt;</span> <span class="number">1</span>\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">           id: <span class="number">1</span></span><br><span class="line">  select_type: SIMPLE</span><br><span class="line">        <span class="keyword">table</span>: payment</span><br><span class="line">   partitions: <span class="keyword">NULL</span></span><br><span class="line">         type: <span class="keyword">ALL</span></span><br><span class="line">possible_keys: fk_payment_rental</span><br><span class="line">          key: <span class="keyword">NULL</span></span><br><span class="line">      key_len: <span class="keyword">NULL</span></span><br><span class="line">          <span class="keyword">ref</span>: <span class="keyword">NULL</span></span><br><span class="line">         <span class="keyword">rows</span>: <span class="number">16086</span></span><br><span class="line">     filtered: <span class="number">50.00</span></span><br><span class="line">        Extra: <span class="keyword">Using</span> <span class="keyword">where</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span>, <span class="number">1</span> warning (<span class="number">0.01</span> sec)</span><br></pre></td></tr></table></figure>

<p>此时，尝试指定使用索引fk_payment_rental，发现MySQL依旧走全表扫描。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> sakila.payment use index(fk_payment_rental) <span class="keyword">where</span> rental_id <span class="operator">&gt;</span> <span class="number">1</span>\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">           id: <span class="number">1</span></span><br><span class="line">  select_type: SIMPLE</span><br><span class="line">        <span class="keyword">table</span>: payment</span><br><span class="line">   partitions: <span class="keyword">NULL</span></span><br><span class="line">         type: <span class="keyword">ALL</span></span><br><span class="line">possible_keys: fk_payment_rental</span><br><span class="line">          key: <span class="keyword">NULL</span></span><br><span class="line">      key_len: <span class="keyword">NULL</span></span><br><span class="line">          <span class="keyword">ref</span>: <span class="keyword">NULL</span></span><br><span class="line">         <span class="keyword">rows</span>: <span class="number">16086</span></span><br><span class="line">     filtered: <span class="number">50.00</span></span><br><span class="line">        Extra: <span class="keyword">Using</span> <span class="keyword">where</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span>, <span class="number">1</span> warning (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<p>当使用<code>FORCE INDEX</code>进行提示时，即使使用索引效率不是最高，MySQL还是选择使用索引，这是MySQL将选择执行计划的权利交给了用户。加入FORCE INDEX进行测试索引提示：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> sakila.payment force index(fk_payment_rental) <span class="keyword">where</span> rental_id <span class="operator">&gt;</span> <span class="number">1</span>\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">           id: <span class="number">1</span></span><br><span class="line">  select_type: SIMPLE</span><br><span class="line">        <span class="keyword">table</span>: payment</span><br><span class="line">   partitions: <span class="keyword">NULL</span></span><br><span class="line">         type: <span class="keyword">range</span></span><br><span class="line">possible_keys: fk_payment_rental</span><br><span class="line">          key: fk_payment_rental</span><br><span class="line">      key_len: <span class="number">5</span></span><br><span class="line">          <span class="keyword">ref</span>: <span class="keyword">NULL</span></span><br><span class="line">         <span class="keyword">rows</span>: <span class="number">8043</span></span><br><span class="line">     filtered: <span class="number">100.00</span></span><br><span class="line">        Extra: <span class="keyword">Using</span> index <span class="keyword">condition</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span>, <span class="number">1</span> warning (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<p>通过测试验证，发现MySQL确实强制走了索引，印证了MySQL将选择计划使用索引提示权利交给了用户。</p>
<p><strong>注意</strong>：在MySQL8.0.20版本，此时服务支持index-level分析优化提示这些索引：JOIN_INDEX，GROUP_INDEX，ORDER_INDEX以及 INDEX。它们相当于取代了FORCE INDEX提示，同样地NO JOIN INDEX、NO GROUP INDEX、NO ORDER INDEX和NO INDEX优化器提示，它们相当于并打算取代IGNORE INDEX索引提示。因此，你应该预料到使用USE INDEX、FORCE INDEX和IGNORE INDEX会在未来的MySQL版本中被弃用，并且在以后的某个时候会被完全删除。</p>
<h3 id="03-MySQL官方示例数据库"><a href="#03-MySQL官方示例数据库" class="headerlink" title="03  MySQL官方示例数据库"></a>03  MySQL官方示例数据库</h3><p>给出<strong>sakila-db数据库</strong>包含三个文件，便于大家获取与使用：</p>
<ol>
<li>sakila-schema.sql：数据库表结构；</li>
<li>sakila-data.sql：数据库示例模拟数据；</li>
<li>sakila.mwb：数据库物理模型，在MySQL workbench中可以打开查看。</li>
</ol>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZHMubXlzcWwuY29tL2RvY3Mvc2FraWxhLWRiLnppcA==">https://downloads.mysql.com/docs/sakila-db.zip<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p><strong>只是用于用于简单测试学习，建议使用world-db</strong>：</p>
<p><strong>world-db数据库</strong>，包含三张表：city、country、countrylanguage。</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZHMubXlzcWwuY29tL2RvY3Mvd29ybGQtZGIuemlw">https://downloads.mysql.com/docs/world-db.zip<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p>最后附上官方示例数据库，<strong>sakila-db数据库</strong>一个非常完整的示例。包含：视图、函数、触发器以及存储过程，当然也存在使用外键。</p>
<p><strong>参考资料&amp;鸣谢</strong>：</p>
<ul>
<li>《深入浅出MySQL 第2版 数据库开发、优化与管理维护》。</li>
<li>《MySQL技术内幕InnoDB存储引擎 第2版》。</li>
<li>MySQL8.0官网文档：refman-8.0-en.pdf，如果学习新版本，官方文档是非常不错的选择。</li>
</ul>
<p>虽然书籍年份比较久远（停留在MySQL5.6.x版本），但仍然具有借鉴意义。</p>
<p>最后，对以上书籍和官方文档所有作者表示衷心感谢。让我充分体会到：前人栽树，后人乘凉。</p>
<h1 id="莫问收获，但问耕耘"><a href="#莫问收获，但问耕耘" class="headerlink" title="莫问收获，但问耕耘"></a>莫问收获，但问耕耘</h1><p><strong>能看到这里的，都是帅哥靓妹</strong>。以上是本次MySQL优化篇（上部分）全部内容，希望能对你的工作与学习有所帮助。感觉写的好，就拿出你的一键三连。如果感觉总结的不到位，也希望能留下您宝贵的意见，我会在文章中定期进行调整优化。<strong>好记性不如烂笔头，多实践多积累</strong>。<strong>你会发现，自己的知识宝库越来越丰富</strong>。原创不易，转载也请标明出处和作者，尊重原创。</p>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL优化流程：定位低效率SQL、explain分析、show profile分析以及trace追踪</title>
    <url>/2022/04/07/MySQL%E4%BC%98%E5%8C%96%E6%B5%81%E7%A8%8B%EF%BC%9A%E5%AE%9A%E4%BD%8D%E4%BD%8E%E6%95%88%E7%8E%87SQL%E3%80%81explain%E5%88%86%E6%9E%90%E3%80%81show%20profile%E5%88%86%E6%9E%90%E4%BB%A5%E5%8F%8Atrace%E8%BF%BD%E8%B8%AA/</url>
    <content><![CDATA[<p>MySQL优化流程SQL优化流程：show status查询SQL执行频率、explain分析、show profile分析和trace追踪。</p>
<p>﻿<strong>MySQL优化流程——SQL优化流程</strong>。MySQL优化篇（基于MySQL8.0.28测试验证）。</p>
<p>只停留在看上面，提升效果甚微。应该带着思考去测试佐证，或者使用（同类书籍）新版本进行对比，这样带来的效果更好。最重要的一环，<strong>养成阅读官方文档</strong>，是一个良好的习惯。能编写官方文档，至少证明他们在这个领域是有很高的造诣，对用法足够熟练。</p>
<p><strong>我</strong>：我可以和您多聊几句吗？<br><strong>面试官</strong>：就你那点小心思，我还不知道吗？面试官微微一笑：一样揍得你鼻青脸肿。</p>
<p><strong>我</strong>：只是想借点技能过来，多学点总归没坏处。<br><strong>面试官</strong>：小伙子，真不错，年纪轻轻，挺有觉悟的。</p>
<p><strong>面试官</strong>：对SQL语句优化流程，你了解多少。<br><strong>我</strong>：会那么一丢丢，也总结了一些。</p>
<p><strong>面试官</strong>：请开始你的表演。<br><strong>我</strong>：很荣幸与你展开讨论，请看继续往下看。</p>
<p>在对MySQL进行举例并使用到数据库表，大多数情况使用MySQL官方提供的sakila（模拟电影出租信息管理系统）和world数据库，类似于Oracle的scott用户。</p>
<p><strong>tips</strong>：图片资源可能被防盗链（寄）了，可以<strong>右键属性复制地址在地址栏查看</strong>哈。</p>
<span id="more"></span>

<p>你可以将这篇博文，当成过度到MySQL8.0的参考资料。<strong>友情提示：经验是用来参考，不是拿来即用</strong>。如果您能看到并分享这篇文章，我很荣幸。如果有误导您的地方，我表示抱歉。</p>
<p>如果没有进行特别说明，一般是基于MySQL8.0.28进行测试验证。官方文档非常具有参考意义。目前市面上针对MySQL8.0书籍还比较少，部分停留在5.6.x和5.7.x版本，但仍然具有借鉴意义。</p>
<p><img data-src="https://img-blog.csdnimg.cn/c31371bb6fe54667a734649308365ddd.png?x-oss-process=,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6b6Z6IW-5LiH6YeMc2t5,size_18,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p>
<p>个人理解有限，难免出现错误偏差。<strong>所有测试，仅供参考</strong>。</p>
<p>如果感觉对你起到作用，有参考意义，想获取原markdown文件，那就看完文章在文末给出的仓库链接进行获取吧。</p>
<p>[toc]</p>
<h1 id="MySQL优化流程——SQL语句优化流程"><a href="#MySQL优化流程——SQL语句优化流程" class="headerlink" title="MySQL优化流程——SQL语句优化流程"></a>MySQL优化流程——SQL语句优化流程</h1><p><strong>注意</strong>：在某些情况，你自己测试的结果可能与我演示有所不同，我省略了查询结果的部分参数。</p>
<p><strong>本文侧重点在SQL优化流程以及MySQL锁问题</strong>（MyISAM和InnoDB存储引擎）。图片可能会挂，演示时尽量使用SQL查询语句返回结果进行示例。篇幅很长，因此使用markdown语法加了目录。</p>
<p>起初，也只是想看MySQL8.0.28有哪些变化，后面索性结合书籍和官方文档总结了一篇。花了将近两周，基本是每天完善一点，因为个人只有晚上和周末有时间总结并测试验证。如果有错别字，也请多多担待。如果你能看到并分享这篇文章，我很荣幸。如果有误导你的地方，我表示抱歉。</p>
<p>如果你是从MySQL5.6或者5.7版本过渡到MySQL8.0。学习之前，建议线看官方文档这一章节：1.3 What Is New MySQL8.0 。在做对比的时候，<strong>文档中带有Note标识是你应该注意的地方</strong>。比如下面这张截图：</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/17d4943de92930dea49aa6fe2eaeac55.png"></p>
<h2 id="01-优化SQL语句流程"><a href="#01-优化SQL语句流程" class="headerlink" title="01 优化SQL语句流程"></a>01 优化SQL语句流程</h2><p><strong>登录到mysql字符命令界面</strong>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql <span class="operator">-</span>uroot <span class="operator">-</span>p</span><br></pre></td></tr></table></figure>

<p>登录时指定端口和主机地址方式：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql <span class="operator">-</span>h <span class="number">192.168</span><span class="number">.245</span><span class="number">.147</span> <span class="operator">-</span>uroot <span class="operator">-</span>p <span class="operator">-</span>P <span class="number">3307</span></span><br></pre></td></tr></table></figure>

<p>使用？ show帮助命令查询<strong>show status用法</strong>，<strong>截取部分语法如下</strong>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">? <span class="keyword">show</span></span><br><span class="line"><span class="keyword">SHOW</span> [<span class="keyword">GLOBAL</span> <span class="operator">|</span> SESSION] STATUS [like_or_where]</span><br></pre></td></tr></table></figure>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/b78f03ed8efd1d3d48f17a646350ca55.png"></p>
<h3 id="1-通过show-status查询SQL执行频率"><a href="#1-通过show-status查询SQL执行频率" class="headerlink" title="1  通过show status查询SQL执行频率"></a>1  通过show status查询SQL执行频率</h3><p>如果不加参数，默认采用session级别，也可以加上global参数进行测试一下。</p>
<p>使用session与global参数区别：</p>
<ul>
<li><p>session：当前连接统计的结果，默认为session级别；</p>
</li>
<li><p>global：上次数据库启动至今统计结果，需要手动那个指定global参数。</p>
</li>
</ul>
<p><strong>下面就列举示例进行说明</strong>，分别使用<code>like</code>去查询所有以及匹配CURD操作（select、insert、update、delete）：</p>
<p><strong>查询当前session所有统计记录</strong>，如果直接在字符命令界面去查询，共有175条记录，大多数情况会采用工具去执行：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">show</span> status <span class="keyword">LIKE</span> <span class="string">&#x27;com_%&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name                       <span class="operator">|</span> <span class="keyword">Value</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> Com_admin_commands                  <span class="operator">|</span> <span class="number">0</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Com_assign_to_keycache              <span class="operator">|</span> <span class="number">0</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Com_alter_db                        <span class="operator">|</span> <span class="number">0</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Com_commit                <span class="operator">|</span> <span class="number">0</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Com_rollback                    <span class="operator">|</span> <span class="number">0</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------------------+-------+</span></span><br><span class="line">...</span><br><span class="line"><span class="number">175</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<p><img data-src="https://img-blog.csdnimg.cn/img_convert/1aa0bee7b72cbf9b7bfc8dd12223a68c.png"></p>
<p><strong>Com_xx部分参数作用说明</strong>：</p>
<ol>
<li>Com_xx：代表某某语句执行次数，一般我们关心的是CURD操作（select、insert、update、delete）。</li>
<li>Com_select：执行select操作次数，每次累加1次。</li>
<li>Com_insert：执行insert操作次数，对于批量执行插入的insert操作只累加1次。</li>
<li>Com_update：执行update操作次数。</li>
<li>Com_delete：执行delete操作次数。</li>
</ol>
<p>以上这些参数对所有存储引擎表操作均会进行累计。但也有一些参数只针对InnoDB存储引擎，累加算法有些许不同。</p>
<p>查询innodb参数如下，列举部分：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">show</span> status <span class="keyword">LIKE</span> <span class="string">&#x27;innodb_rows%&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------------------+--------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name                         <span class="operator">|</span> <span class="keyword">Value</span>                                            <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------------------+--------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> Innodb_rows_deleted                   <span class="operator">|</span> <span class="number">0</span>                                                <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Innodb_rows_inserted                  <span class="operator">|</span> <span class="number">0</span>                                                <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Innodb_rows_read                      <span class="operator">|</span> <span class="number">0</span>                                                <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Innodb_rows_updated                   <span class="operator">|</span> <span class="number">0</span>                                                <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------------------+--------------------------------------------------+</span></span><br><span class="line">...</span><br><span class="line"><span class="number">61</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>



<ul>
<li>InnoDB_rows_read：执行select查询返回行数。</li>
<li>InnoDB_rows_inserted：执行insert插入操作返回行数。</li>
<li>InnoDB_rows_updated：执行update更新操作返回行数。</li>
<li>InnoDB_rows_deleted：执行delete删除操作返回行数。</li>
</ul>
<p>通过上面几个参数，可以轻松了解当前数据库应用是以插入更新为主还是查询操作为主，以及各种SQL大概执行比例是多少。</p>
<p><strong>对于更新操作执行次数计数，无论是提交还是回滚都会进行累加</strong>。</p>
<p>对于事务型应用，可以通过<code>Com_commit</code>和<code>Com_rollback</code>了解事务提交与回滚情况。对回滚操作非常频繁的数据库，可能存在应用编写问题。</p>
<p>有几个参数<strong>便于用户了解数据库情况</strong>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">show</span> status <span class="keyword">LIKE</span> <span class="string">&#x27;conn%&#x27;</span>;</span><br><span class="line"><span class="keyword">show</span> status <span class="keyword">LIKE</span> <span class="string">&#x27;upti%&#x27;</span>;</span><br><span class="line"><span class="keyword">show</span> status <span class="keyword">LIKE</span> <span class="string">&#x27;slow_q%&#x27;</span>;</span><br></pre></td></tr></table></figure>



<ul>
<li>Connections：试图连接MySQL服务器次数。</li>
<li>Uptime：服务器工作时间。</li>
<li>Slow_queries：慢查询次数。</li>
</ul>
<p>对优化SQL语句流程就介绍这么多，主要对关心的（CURD以及事务）各个参数熟练操作运用。</p>
<h3 id="2-定位执行效率较低的SQL语句"><a href="#2-定位执行效率较低的SQL语句" class="headerlink" title="2 定位执行效率较低的SQL语句"></a>2 定位执行效率较低的SQL语句</h3><p>可以通过两种方式定位执行效率较低SQL语句：</p>
<ol>
<li>使用参数：--log-slow-queries [&#x3D;file_name]，MySQL会将long_query_time的SQL语句日志写入文件；</li>
<li>使用参数<code>show  processlist</code>：查询MySQL线程状态、是否锁表。</li>
</ol>
<p>慢查询日志在查询结束以后才记录，在应用反映执行效率问题时查询慢查询慢查询日志并不能定位问题。可以使用show  processlist，查看当前MySQL在进行的线程：线程状态、是否锁表，实时查看SQL执行状态。</p>
<h3 id="3-使用explain分析执行效率低的SQL语句"><a href="#3-使用explain分析执行效率低的SQL语句" class="headerlink" title="3 使用explain分析执行效率低的SQL语句"></a>3 使用explain分析执行效率低的SQL语句</h3><p>参考mysql8.0官方文档explain：</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9kZXYubXlzcWwuY29tL2RvYy9yZWZtYW4vOC4wL2VuL2V4cGxhaW4tb3V0cHV0Lmh0bWw=">https://dev.mysql.com/doc/refman/8.0/en/explain-output.html<i class="fa fa-external-link-alt"></i></span></p>
<p><a href="(https://dev.mysql.com/doc/refman/8.0/en/explain.html)">(https://dev.mysql.com/doc/refman/8.0/en/explain.html) </a></p>
</blockquote>
<p>通过上述步骤查询到低效率SQL语句，然后使用<code>explain</code>或者<code>desc</code>命令获取MySQL如何执行查询select语句。</p>
<p><strong>语法</strong>：<code>explain</code> [SQL语句]</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">explain [<span class="keyword">SQL</span>语句]</span><br><span class="line"><span class="comment">-- 例如</span></span><br><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> sakila.city\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">           id: <span class="number">1</span></span><br><span class="line">  select_type: SIMPLE</span><br><span class="line">        <span class="keyword">table</span>: city</span><br><span class="line">   partitions: <span class="keyword">NULL</span></span><br><span class="line">         type: <span class="keyword">ALL</span></span><br><span class="line">possible_keys: <span class="keyword">NULL</span></span><br><span class="line">          key: <span class="keyword">NULL</span></span><br><span class="line">      key_len: <span class="keyword">NULL</span></span><br><span class="line">          <span class="keyword">ref</span>: <span class="keyword">NULL</span></span><br><span class="line">         <span class="keyword">rows</span>: <span class="number">600</span></span><br><span class="line">     filtered: <span class="number">100.00</span></span><br><span class="line">        Extra: <span class="keyword">NULL</span></span><br></pre></td></tr></table></figure>



<p><strong>desc语法</strong>：<code>desc</code> [SQL语句 &amp; 表名]</p>
<p>world数据库是官方提供，文初有给链接。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 示例查询world数据库city表结构</span></span><br><span class="line"><span class="keyword">desc</span> world.city;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+----------+------+-----+---------+----------------+</span></span><br><span class="line"><span class="operator">|</span> Field       <span class="operator">|</span> Type     <span class="operator">|</span> <span class="keyword">Null</span> <span class="operator">|</span> Key <span class="operator">|</span> <span class="keyword">Default</span> <span class="operator">|</span> Extra          <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+----------+------+-----+---------+----------------+</span></span><br><span class="line"><span class="operator">|</span> ID          <span class="operator">|</span> <span class="type">int</span>      <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span> PRI <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span> auto_increment <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Name        <span class="operator">|</span> <span class="type">char</span>(<span class="number">35</span>) <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span>         <span class="operator">|</span>                <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> CountryCode <span class="operator">|</span> <span class="type">char</span>(<span class="number">3</span>)  <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span> MUL <span class="operator">|</span>         <span class="operator">|</span>                <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> District    <span class="operator">|</span> <span class="type">char</span>(<span class="number">20</span>) <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span>         <span class="operator">|</span>                <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Population  <span class="operator">|</span> <span class="type">int</span>      <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> <span class="number">0</span>       <span class="operator">|</span>                <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+----------+------+-----+---------+----------------+</span></span><br><span class="line"><span class="number">5</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 分析查询语句信息</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">desc</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> world.city\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">           id: <span class="number">1</span></span><br><span class="line">  select_type: SIMPLE</span><br><span class="line">        <span class="keyword">table</span>: city</span><br><span class="line">   partitions: <span class="keyword">NULL</span></span><br><span class="line">         type: <span class="keyword">ALL</span></span><br><span class="line">possible_keys: <span class="keyword">NULL</span></span><br><span class="line">          key: <span class="keyword">NULL</span></span><br><span class="line">      key_len: <span class="keyword">NULL</span></span><br><span class="line">          <span class="keyword">ref</span>: <span class="keyword">NULL</span></span><br><span class="line">         <span class="keyword">rows</span>: <span class="number">4046</span></span><br><span class="line">     filtered: <span class="number">100.00</span></span><br><span class="line">        Extra: <span class="keyword">NULL</span></span><br></pre></td></tr></table></figure>

<p>以上是对explain与desc语法的介绍，以及简单使用。侧重点不在desc，主要以explain进行说明。</p>
<p><strong>接下来对各个参数进行演示说明</strong>：</p>
<table>
<thead>
<tr>
<th>序号</th>
<th>explain &amp; desc参数</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>id</td>
<td>查询标识符。</td>
</tr>
<tr>
<td>2</td>
<td>select_type</td>
<td>select类型，一般有simple、primary、union、subquery。</td>
</tr>
<tr>
<td>3</td>
<td>table</td>
<td>输出结果集表。查询的表名，如果使用了别名，则显示别名。</td>
</tr>
<tr>
<td>4</td>
<td>partitions</td>
<td>对分区的支持。</td>
</tr>
<tr>
<td>5</td>
<td>type</td>
<td>执行计划分析使用<strong>访问类型</strong>，ALL代表全表扫描。</td>
</tr>
<tr>
<td>6</td>
<td>possible_keys</td>
<td>查询时可使用的索引。</td>
</tr>
<tr>
<td>7</td>
<td>key</td>
<td>实际使用到的索引。</td>
</tr>
<tr>
<td>8</td>
<td>key_len</td>
<td>使用到索引字段长度。</td>
</tr>
<tr>
<td>9</td>
<td>ref</td>
<td>与索引比较的列。在type中类型的一种，使用到索引。</td>
</tr>
<tr>
<td>10</td>
<td>rows</td>
<td>扫描行数，并不代表实际使用count(*)检索的所有行数，是一个估值。</td>
</tr>
<tr>
<td>11</td>
<td>filtered</td>
<td>过滤恒定成立条件。</td>
</tr>
<tr>
<td>12</td>
<td>Extra</td>
<td>执行情况说明和描述，包含不适合在其它列中显示，但对执行计划有帮助的额外信息。</td>
</tr>
</tbody></table>
<p><strong>常见访问类型（type）</strong>：</p>
<p><img data-src="https://img-blog.csdnimg.cn/c8fe3652f71146d69da660db55c137d4.png#pic_center" alt="在这里插入图片描述"></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator">+</span><span class="comment">------+--------+--------+------+---------+---------------+----------+</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">ALL</span>  <span class="operator">|</span> index  <span class="operator">|</span> <span class="keyword">range</span>  <span class="operator">|</span> <span class="keyword">ref</span>  <span class="operator">|</span> eq_ref  <span class="operator">|</span> const,<span class="keyword">system</span>  <span class="operator">|</span>   <span class="keyword">NULL</span>   <span class="operator">|</span> </span><br><span class="line"><span class="operator">+</span><span class="comment">------+--------+--------+------+---------+---------------+----------+</span></span><br></pre></td></tr></table></figure>

<p><strong>性能天梯排行榜</strong>：<strong>由左至右，依次递增</strong>。</p>
<p><strong>3.1、type&#x3D;ALL</strong>：代表全表扫描，MySQL遍历全表匹配行。</p>
<p><strong>示例</strong>：演示type为ALL执行计划</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> world.city;</span><br></pre></td></tr></table></figure>

<p><img data-src="https://img-blog.csdnimg.cn/1d9ab46b817d47b79c0dd84d6bfcbb0a.png#pic_center" alt="在这里插入图片描述"></p>
<p><strong>3.2、type&#x3D;index</strong>：索引全扫描，MySQL遍历整个索引匹配行。</p>
<p>如果不清除哪一个是主键或者是index，使用desc命令查看，<code>desc world.city</code></p>
<p><strong>示例</strong>：演示type为index执行计划</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">explain <span class="keyword">select</span> id <span class="keyword">from</span> world.city;</span><br></pre></td></tr></table></figure>

<p><img data-src="https://img-blog.csdnimg.cn/8940892215ba4482939f98cc1e091dae.png#pic_center" alt="在这里插入图片描述"></p>
<p><strong>3.3、type&#x3D;range</strong>：索引范围扫描，常见于&lt;、&lt;&#x3D;、&gt;、&gt;&#x3D;、between等操作符。</p>
<blockquote>
<p> &#x3D;, &lt;&gt;, &gt;, &gt;&#x3D;, &lt;,&lt;&#x3D;, IS NULL, &lt;&#x3D;&gt;, BETWEEN, LIKE, or IN()</p>
<p> 8.8.2 explain output format range介绍</p>
</blockquote>
<p><strong>示例</strong>：演示type为range执行计划</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> world.city c <span class="keyword">where</span> c.id<span class="operator">&lt;</span><span class="number">6</span>;</span><br></pre></td></tr></table></figure>

<p><img data-src="https://img-blog.csdnimg.cn/img_convert/17261baa29a2a75703bf7b353f18ae21.png"></p>
<p><strong>3.4、type&#x3D;ref</strong>：使用非唯一索引扫描或唯一索引的前缀扫描，返回某个单独值匹配记录行。</p>
<p><strong>示例</strong>：演示type为ref执行计划</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> world.city <span class="keyword">where</span> countrycode<span class="operator">=</span><span class="string">&#x27;AFG&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p><img data-src="https://img-blog.csdnimg.cn/7e0ec0745b6742c2973db31d6ec96c7b.png#pic_center" alt="在这里插入图片描述"></p>
<p><strong>ref往往还经常出现在join操作中</strong>。</p>
<p><strong>示例</strong>：演示type为ref执行计划，使用inner join内连接</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> world.city t1 <span class="keyword">inner</span> <span class="keyword">join</span> world.countrylanguage t2 <span class="keyword">on</span> t1.countrycode<span class="operator">=</span>t2.countrycode;</span><br></pre></td></tr></table></figure>

<p><img data-src="https://img-blog.csdnimg.cn/img_convert/8790eef2b206aaa39ce8eefec5e3d448.png"></p>
<p><strong>3.5、type&#x3D;eq_ref</strong>：与ref类似，区别eq_ref使用唯一索引。每个索引键值，表中只有一条匹配记录行。简单来说，在多表连接查询中使用<code>primary key</code>或者<code>unique index</code>作为<strong>关联条件</strong>。</p>
<p><strong>示例</strong>：演示type为eq_ref执行计划</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> sakila.film t1,sakila.film_text t2 <span class="keyword">where</span> t1.film_id<span class="operator">=</span>t2.film_id;</span><br></pre></td></tr></table></figure>

<p><img data-src="https://img-blog.csdnimg.cn/b207db6a34eb419997f6e419881415b5.png#pic_center" alt="在这里插入图片描述"></p>
<p><strong>3.6、type&#x3D;const&amp;system</strong>：单表中最多有一条匹配行，查询速度很快。这条匹配行中其它列值可以被优化器在当前查询中当做常量来处理。例如，根据主键<code>primary key</code>或者唯一索引<code>unique key</code>进行查询。</p>
<p><strong>示例</strong>：演示type为const执行计划</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> world.city t <span class="keyword">where</span> t.id<span class="operator">=</span><span class="number">7</span>;</span><br></pre></td></tr></table></figure>

<p><img data-src="https://img-blog.csdnimg.cn/img_convert/1b03276c215792cd95734f6bcaf9fb39.png"></p>
<p><strong>3.7、type&#x3D;NULL</strong>：MySQL不用访问表或索引，直接得到结果。</p>
<p><strong>示例</strong>：演示type为NULL执行计划</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">explain <span class="keyword">select</span> <span class="number">1</span>;</span><br></pre></td></tr></table></figure>

<p><img data-src="https://img-blog.csdnimg.cn/img_convert/216ef482816324d89eae93d9450b347e.png"></p>
<p>以前，只知道统计查询表使用MyISAM存储引擎非常快，但不知其原理。使用explain分析了下，看到访问类型（type）是NULL，瞬间有点明白了。<strong>下图是使用InnoDB与MyISAM存储引擎表的对比</strong>：</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/3e8a204178603f84a6d1c2dcb181e7d2.png"></p>
<p>个人只演示常见的几种。官方示例比较多，比如：ref_or_null、index_merge以及index_subquery等等。</p>
<p>你可以找到参考文档：</p>
<blockquote>
<p>8.8.3 Extended EXPLAIN Output Format</p>
</blockquote>
<p><strong>tips</strong>：在MySQL8.0中移除了<code>explain extended</code>，使用这条命令分析SQL语句会报（1064（42000））。</p>
<p>某种场景下，使用explain并不能满足我们需求，需要更高效定位问题，此时可以配合<code>show profile</code>命令联合分析。</p>
<h3 id="4-show-profile分析SQL"><a href="#4-show-profile分析SQL" class="headerlink" title="4 show profile分析SQL"></a>4 show profile分析SQL</h3><p>查看当前MySQL版本对<code>profile</code>是否支持：<strong>如果是YES，代表是支持的</strong>。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> @<span class="variable">@have_profiling</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+</span></span><br><span class="line"><span class="operator">|</span> @<span class="variable">@have_profiling</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+</span></span><br><span class="line"><span class="operator">|</span> YES              <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span>, <span class="number">1</span> warning (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>



<p><strong>默认show profiling是关闭的</strong>，可以通过set命令设置session级别开启profiling：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> @<span class="variable">@profiling</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+</span></span><br><span class="line"><span class="operator">|</span> @<span class="variable">@profiling</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+</span></span><br><span class="line"><span class="operator">|</span>           <span class="number">0</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span>, <span class="number">1</span> warning (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<p><strong>开启profiling</strong>：设置profiling参数值为1，默认是0。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">set</span> profiling<span class="operator">=</span><span class="number">1</span>;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected, <span class="number">1</span> warning (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> @<span class="variable">@profiling</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+</span></span><br><span class="line"><span class="operator">|</span> @<span class="variable">@profiling</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+</span></span><br><span class="line"><span class="operator">|</span>           <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span>, <span class="number">1</span> warning (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<p><strong>示例</strong>：</p>
<ol>
<li>统计查询world数据库city表行记录数；</li>
<li>执行show profiles命令分析SQL。</li>
</ol>
<p><strong>统计city表记录</strong>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> world.city;</span><br><span class="line"><span class="operator">+</span><span class="comment">----------+</span></span><br><span class="line"><span class="operator">|</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+</span></span><br><span class="line"><span class="operator">|</span>     <span class="number">4079</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.01</span> sec)</span><br></pre></td></tr></table></figure>



<p><strong>使用show profiles命令分析</strong>：</p>
<p><strong>示例</strong>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> profiles;</span><br><span class="line"><span class="operator">+</span><span class="comment">----------+------------+---------------------------------+</span></span><br><span class="line"><span class="operator">|</span> Query_ID <span class="operator">|</span> Duration   <span class="operator">|</span> Query                           <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+------------+---------------------------------+</span></span><br><span class="line"><span class="operator">|</span>        <span class="number">1</span> <span class="operator">|</span> <span class="number">0.00017800</span> <span class="operator">|</span> <span class="keyword">select</span> @<span class="variable">@profiling</span>              <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>        <span class="number">2</span> <span class="operator">|</span> <span class="number">0.00115675</span> <span class="operator">|</span> <span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> world.city <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+------------+---------------------------------+</span></span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span>, <span class="number">1</span> warning (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>



<p>使用<code>show profile for query</code>语句可以<strong>查询到执行过程中线程更多信息</strong>：状态、消耗时间</p>
<p><strong>示例</strong>：截取部分参数作为演示。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> profile <span class="keyword">for</span> query <span class="number">2</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------------+----------+</span></span><br><span class="line"><span class="operator">|</span> Status                         <span class="operator">|</span> Duration <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------------+----------+</span></span><br><span class="line"><span class="operator">|</span> starting                       <span class="operator">|</span> <span class="number">0.000059</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Executing hook <span class="keyword">on</span> transaction  <span class="operator">|</span> <span class="number">0.000003</span> <span class="operator">|</span></span><br><span class="line">...</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------------+----------+</span></span><br><span class="line"><span class="number">17</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span>, <span class="number">1</span> warning (<span class="number">0.01</span> sec)</span><br></pre></td></tr></table></figure>



<p> <strong>更具上面查到的参数值，可以进一步分析是哪些影响到查询效率</strong>。</p>
<p><strong>更多用法请参考官方文档</strong>：</p>
<blockquote>
<p>13.7.7.30 SHOW PROFILE Statement</p>
<p>13.7.7.31 SHOW PROFILES Statement</p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> PROFILE [type [, type] ... ]</span><br><span class="line">[<span class="keyword">FOR</span> QUERY n]</span><br><span class="line">[LIMIT row_count [<span class="keyword">OFFSET</span> <span class="keyword">offset</span>]]</span><br><span class="line">type: &#123;</span><br><span class="line"><span class="keyword">ALL</span></span><br><span class="line"><span class="operator">|</span> BLOCK IO <span class="operator">|</span> CONTEXT SWITCHES <span class="operator">|</span> CPU   <span class="operator">|</span> IPC</span><br><span class="line"><span class="operator">|</span> MEMORY   <span class="operator">|</span> PAGE FAULTS      <span class="operator">|</span> SOURCE  <span class="operator">|</span> SWAPS</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>比如从BLOCK IO（锁输入和输出操作）、CPU（用户系统CPU消耗时间）、内存等等着手分析。</p>
<p><strong>判断用户CPU消耗时间</strong>，<strong>可以统计数据量大一点的表</strong>：我统计这张表模拟数据为1kw条。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">show</span> profile CPU <span class="keyword">for</span> query <span class="number">1</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------------+----------+----------+------------+</span></span><br><span class="line"><span class="operator">|</span> Status                         <span class="operator">|</span> Duration <span class="operator">|</span> CPU_user <span class="operator">|</span> CPU_system <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------------+----------+----------+------------+</span></span><br><span class="line"><span class="operator">|</span> executing                      <span class="operator">|</span> <span class="number">1.685893</span> <span class="operator">|</span> <span class="number">5.593750</span> <span class="operator">|</span>   <span class="number">0.375000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------------+----------+----------+------------+</span></span><br></pre></td></tr></table></figure>



<h3 id="5-使用trace分析优化器如何选择执行计划"><a href="#5-使用trace分析优化器如何选择执行计划" class="headerlink" title="5 使用trace分析优化器如何选择执行计划"></a>5 使用trace分析优化器如何选择执行计划</h3><p>查看trace是否开启：<code>OPTIMIZER_TRACE</code></p>
<ul>
<li>enabled：默认为off。on代表开启，off代表关闭。</li>
<li>one_line：json格式显示，是否以一行显示。on代表一行显示，off代表多行显示（格式化）。</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> @<span class="variable">@OPTIMIZER_TRACE</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------+</span></span><br><span class="line"><span class="operator">|</span> @<span class="variable">@OPTIMIZER_TRACE</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------+</span></span><br><span class="line"><span class="operator">|</span> enabled<span class="operator">=</span><span class="keyword">on</span>,one_line<span class="operator">=</span><span class="keyword">on</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------+</span></span><br></pre></td></tr></table></figure>



<p><strong>示例</strong>：临时开启<code>trace</code>，在字符命令行中使用，测试建议还是使用一行显示比较好。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">set</span> OPTIMIZER_TRACE<span class="operator">=</span>&quot;enabled=on,one_line=on&quot;;</span><br></pre></td></tr></table></figure>

<p><strong>示例</strong>：</p>
<ol>
<li>查询world数据库city（城市）表前两行记录。</li>
<li>然后使用trace（optimizer_trace分析）追踪。</li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 1. 查询world数据库city（城市）表前两行记录。</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> world.city limit <span class="number">0</span>,<span class="number">2</span>;</span><br><span class="line"><span class="comment">-- 2. 然后使用trace追踪。</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> information_schema.optimizer_trace\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">                            QUERY: <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> world.city limit <span class="number">0</span>,<span class="number">2</span></span><br><span class="line">                            TRACE: &#123;&quot;steps&quot;: [&#123;&quot;join_preparation&quot;: &#123;&quot;select#&quot;: <span class="number">1</span>,&quot;steps&quot;: [&#123;&quot;expanded_query&quot;: &quot;/* select#1 */ select `world`.`city`.`ID` AS `ID`,`world`.`city`.`Name` AS `Name`,`world`.`city`.`CountryCode` AS `CountryCode`,`world`.`city`.`District` AS `District`,`world`.`city`.`Population` AS `Population` from `world`.`city` limit 0,2&quot;&#125;]&#125;&#125;,&#123;&quot;join_optimization&quot;: &#123;&quot;select#&quot;: <span class="number">1</span>,&quot;steps&quot;: [&#123;&quot;table_dependencies&quot;: [&#123;&quot;table&quot;: &quot;`world`.`city`&quot;,&quot;row_may_be_null&quot;: <span class="literal">false</span>,&quot;map_bit&quot;: <span class="number">0</span>,&quot;depends_on_map_bits&quot;: []&#125;]&#125;,&#123;&quot;rows_estimation&quot;: [&#123;&quot;table&quot;: &quot;`world`.`city`&quot;,&quot;table_scan&quot;: &#123;&quot;rows&quot;: <span class="number">4046</span>,&quot;cost&quot;: <span class="number">9.375</span>&#125;&#125;]&#125;,&#123;&quot;considered_execution_plans&quot;: [&#123;&quot;plan_prefix&quot;: [],&quot;table&quot;: &quot;`world`.`city`&quot;,&quot;best_access_path&quot;: &#123;&quot;considered_access_paths&quot;: [&#123;&quot;rows_to_scan&quot;: <span class="number">4046</span>,&quot;access_type&quot;: &quot;scan&quot;,&quot;resulting_rows&quot;: <span class="number">4046</span>,&quot;cost&quot;: <span class="number">413.975</span>,&quot;chosen&quot;: <span class="literal">true</span>&#125;]&#125;,&quot;condition_filtering_pct&quot;: <span class="number">100</span>,&quot;rows_for_plan&quot;: <span class="number">4046</span>,&quot;cost_for_plan&quot;: <span class="number">413.975</span>,&quot;chosen&quot;: <span class="literal">true</span>&#125;]&#125;,&#123;&quot;attaching_conditions_to_tables&quot;: &#123;&quot;original_condition&quot;: <span class="keyword">null</span>,&quot;attached_conditions_computation&quot;: [],&quot;attached_conditions_summary&quot;: [&#123;&quot;table&quot;: &quot;`world`.`city`&quot;,&quot;attached&quot;: <span class="keyword">null</span>&#125;]&#125;&#125;,&#123;&quot;finalizing_table_conditions&quot;: []&#125;,&#123;&quot;refine_plan&quot;: [&#123;&quot;table&quot;: &quot;`world`.`city`&quot;&#125;]&#125;]&#125;&#125;,&#123;&quot;join_execution&quot;: &#123;&quot;select#&quot;: <span class="number">1</span>,&quot;steps&quot;: []&#125;&#125;]&#125;</span><br><span class="line">MISSING_BYTES_BEYOND_MAX_MEM_SIZE: <span class="number">0</span></span><br><span class="line">          INSUFFICIENT_PRIVILEGES: <span class="number">0</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>



<h3 id="6-定位问题后采取相应优化方法"><a href="#6-定位问题后采取相应优化方法" class="headerlink" title="6 定位问题后采取相应优化方法"></a>6 定位问题后采取相应优化方法</h3><p><strong>建立索引</strong>：在常用字段上建立，不常用字段（应该考虑是否建立）。</p>
<p>经过上述步骤第3步explain分析SQL查询语句，使用explain执行计划发现使用全表扫描（大量数据）非常耗时间。</p>
<p><strong>在相应字段建立索引</strong>，然后进行分析，扫描行数明细减少，大大提高数据库访问速度。</p>
<h2 id="02-MySQL官方示例数据库"><a href="#02-MySQL官方示例数据库" class="headerlink" title="02 MySQL官方示例数据库"></a>02 MySQL官方示例数据库</h2><p>给出<strong>sakila-db数据库</strong>包含三个文件，便于大家获取与使用：</p>
<ol>
<li>sakila-schema.sql：数据库表结构；</li>
<li>sakila-data.sql：数据库示例模拟数据；</li>
<li>sakila.mwb：数据库物理模型，在MySQL workbench中可以打开查看。</li>
</ol>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZHMubXlzcWwuY29tL2RvY3Mvc2FraWxhLWRiLnppcA==">https://downloads.mysql.com/docs/sakila-db.zip<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p><strong>只是用于用于简单测试学习，建议使用world-db</strong>：</p>
<p><strong>world-db数据库</strong>，包含三张表：city、country、countrylanguage。</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZHMubXlzcWwuY29tL2RvY3Mvd29ybGQtZGIuemlw">https://downloads.mysql.com/docs/world-db.zip<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p>最后附上官方示例数据库，<strong>sakila-db数据库</strong>一个非常完整的示例。包含：视图、函数、触发器以及存储过程，当然也存在使用外键。</p>
<p>关于MySQL索引问题，会在后续博文中进行总结。</p>
<p><strong>参考资料&amp;鸣谢</strong>：</p>
<ul>
<li>《深入浅出MySQL 第2版 数据库开发、优化与管理维护》</li>
<li>《MySQL技术内幕InnoDB存储引擎 第2版》</li>
<li>MySQL8.0官网文档：refman-8.0-en.pdf，<strong>如果学习新版本，官方文档是非常不错的选择</strong>。</li>
</ul>
<p>虽然书籍年份比较久远（停留在MySQL5.6.x版本），但仍然具有借鉴意义。</p>
<p>最后，对以上书籍和官方文档所有作者表示衷心感谢。让我充分体会到：前人栽树，后人乘凉。</p>
<h1 id="莫问收获，但问耕耘"><a href="#莫问收获，但问耕耘" class="headerlink" title="莫问收获，但问耕耘"></a>莫问收获，但问耕耘</h1><p><strong>能看到这里的，都是帅哥靓妹</strong>。以上是本次MySQL优化流程——SQL语句优化流程的全部内容，希望能对你的工作与学习有所帮助。感觉写的好，就拿出你的一键三连。如果感觉总结的不到位，也希望能留下您宝贵的意见，我会在文章中定期进行调整优化。<strong>好记性不如烂笔头，多实践多积累</strong>。<strong>你会发现，自己的知识宝库越来越丰富</strong>。原创不易，转载也请标明出处和作者，尊重原创。</p>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL和Oracle联合查询以及聚合函数</title>
    <url>/2022/02/18/MySQL%E5%92%8COracle%E8%81%94%E5%90%88%E6%9F%A5%E8%AF%A2%E4%BB%A5%E5%8F%8A%E8%81%9A%E5%90%88%E5%87%BD%E6%95%B0/</url>
    <content><![CDATA[<p>系列文章已收录至github仓库:</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2Nud2FuZ2svd2FuZ2stc3RpY2s=">https://github.com/cnwangk/wangk-stick<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>如果不想自己去新建示例，也想找一个完整的示例进行测试练习，MySQL官网有提供示例数据库。</p>
<p><strong>官方提供的sakila和world数据库</strong>，官网下载地址已经提供，可以下载进行参考学习。</p>
<p><strong>sakila-db数据库包含三个文件</strong>：</p>
<ul>
<li>sakila-schema.sql：数据库表结构</li>
<li>sakila-data.sql：数据库示例模拟数据</li>
<li>sakila.mwb：数据库物理模型，在MySQL workbench中可以打开查看。</li>
</ul>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZHMubXlzcWwuY29tL2RvY3Mvc2FraWxhLWRiLnppcA==">https://downloads.mysql.com/docs/sakila-db.zip<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p><strong>world-db数据库</strong>，表结构与data数据包含在一起：</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZHMubXlzcWwuY29tL2RvY3Mvd29ybGQtZGIuemlw">https://downloads.mysql.com/docs/world-db.zip<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p>Oracle11g安装后自带有scott用户，可以用来练习。主要用到的是EMP和DEPT表，想起了当年用Java的ssh框架写的第一个CURD的demo示例就是Oracle的这两张表，因为这两表有关联关系。</p>
<ul>
<li>EMP：员工表；</li>
<li>DEPT：部门表；</li>
</ul>
<p>软件实施系列文章第二弹，本来在去年就想写出来的，一直鸽到现在，哈哈。</p>
<p><strong>tips</strong>：图片资源可能被防盗链（寄）了，可以<strong>右键属性复制地址在地址栏查看</strong>哈。</p>
<span id="more"></span>


<h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><p>比摆烂，谁最强，自己一次比一次强。现在回顾自己以前写的那些博客，虽然也是自己真实实践和验证过才发出来的，但自己都感觉稀烂。虽然我写的文档很烂，但是比之前有进步就行了，一两年之后你会发现的进步是可观的，知识宝库越来丰富。</p>
<p>多思考，多练习。不要只停留在想上面，而要立即动起来。亲自去实践，去求证。多问一个为什么，思考事情的本质。看一万遍，不如自己亲手实践一遍来的效果好。</p>
<p><strong>我的测试环境基于</strong>：</p>
<ul>
<li>操作系统：Windows10；</li>
<li>数据库：MySQL8.0.28和Oracle11g；</li>
<li>使用查询工具：MySQL8.0自带命令行以及Oracle自带的SQLplus；</li>
<li>第三方工具SQLyog和PLSQL Developer。</li>
</ul>
<h2 id="一、联合查询"><a href="#一、联合查询" class="headerlink" title="一、联合查询"></a>一、联合查询</h2><p><strong>图解联合查询</strong></p>
<p><strong>内连接</strong>：统计的内容是table1和table2的重合部分。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> <span class="keyword">on</span></span><br></pre></td></tr></table></figure>



<p><strong>左外连接</strong>：可以省略掉<code>outer</code>，统计的内容是以table1为主的部分。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">left</span> <span class="keyword">outer</span> <span class="keyword">join</span> <span class="keyword">on</span></span><br></pre></td></tr></table></figure>


<p><strong>右外连接</strong>：同样可以省略掉<code>outer</code>，统计的内容是以table2为主的部分。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">right</span> <span class="keyword">outer</span> <span class="keyword">join</span> <span class="keyword">on</span></span><br></pre></td></tr></table></figure>


<h3 id="1、联合查询"><a href="#1、联合查询" class="headerlink" title="1、联合查询"></a>1、联合查询</h3><h4 id="1-1、MySQL中的联合查询示例"><a href="#1-1、MySQL中的联合查询示例" class="headerlink" title="1.1、MySQL中的联合查询示例"></a>1.1、MySQL中的联合查询示例</h4><ul>
<li>inner join on：内连接</li>
<li>right join on：右外连接</li>
<li>left join on：左外连接</li>
</ul>
<p>MySQL中的内连接查询关键字：<code>inner join on</code>，只作为演示，就不执行explain执行计划去判断执行效率了。小小的建议，在测试这些个联合查询的时候，可以不用带太多的过滤条件看看三种联合查询的区别。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> c.`ID`,c.`CountryCode`,cl.`CountryCode`,cl.`<span class="keyword">Language</span>` </span><br><span class="line"><span class="keyword">FROM</span> world.`city` c <span class="keyword">INNER</span> <span class="keyword">JOIN</span> world.`countrylanguage` cl </span><br><span class="line"><span class="keyword">ON</span> c.`CountryCode`<span class="operator">=</span>cl.`CountryCode` <span class="keyword">WHERE</span> c.`ID`<span class="operator">&gt;</span><span class="number">120</span> <span class="keyword">AND</span> c.`ID` LIMIT <span class="number">0</span>,<span class="number">5</span>; </span><br></pre></td></tr></table></figure>



<p>MySQL中的左外连接查询查询关键字：<code>LEFT OUTER JOIN</code></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> c.`ID`,c.`Name`,c.`CountryCode`,cl.`IsOfficial`,cl.`CountryCode`,cl.`<span class="keyword">Language</span>` </span><br><span class="line"><span class="keyword">FROM</span> world.`city` c <span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> world.`countrylanguage` cl </span><br><span class="line"><span class="keyword">ON</span> c.`CountryCode`<span class="operator">=</span>cl.`CountryCode` LIMIT <span class="number">0</span>,<span class="number">5</span>;</span><br></pre></td></tr></table></figure>



<p>MySQL中的右外连接查询关键字：<code>RIGHT OUTER JOIN</code></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> c.`ID`,c.`Name`,c.`CountryCode`,cl.`IsOfficial`,cl.`CountryCode`,cl.`<span class="keyword">Language</span>` </span><br><span class="line"><span class="keyword">FROM</span> world.`city` c <span class="keyword">RIGHT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> world.`countrylanguage` cl </span><br><span class="line"><span class="keyword">ON</span> c.`CountryCode`<span class="operator">=</span>cl.`CountryCode` LIMIT <span class="number">0</span>,<span class="number">5</span>;</span><br></pre></td></tr></table></figure>





<h4 id="1-2、Oracle中的联合查询示例"><a href="#1-2、Oracle中的联合查询示例" class="headerlink" title="1.2、Oracle中的联合查询示例"></a>1.2、Oracle中的联合查询示例</h4><p>主要以SCOTT用户作为示例，查看SCOTT用户下有哪些表，这种方式需要以dba管理员身份运行SQL语句查询：</p>
<p>ower代表了用户名，所以直接查找SCOTT用户，TABLE_NAME：代表了表名。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> t.OWNER,t.TABLE_NAME,t.TABLESPACE_NAME <span class="keyword">from</span> dba_tables t <span class="keyword">where</span> t.OWNER<span class="operator">=</span><span class="string">&#x27;SCOTT&#x27;</span>; </span><br></pre></td></tr></table></figure>



<p>Oracle中的联合查询，同样以员工表（emp）和部门表（dept）进行演示操作。</p>
<p><strong>Oracle中的内连接</strong>：<code>inner join on</code></p>
<p>根据部门编号进行关联查询，进行分页查询，每页显示5条数据：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> e.ename,e.empno,d.deptno,d.dname <span class="keyword">from</span> scott.emp e </span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> scott.dept d <span class="keyword">on</span> e.deptno<span class="operator">=</span>d.deptno <span class="keyword">where</span> rownum<span class="operator">&lt;=</span><span class="number">5</span>; </span><br></pre></td></tr></table></figure>



<p><strong>左外连接</strong>：<code>left outer join on</code></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> e.ename,e.empno,d.deptno,d.dname <span class="keyword">from</span> scott.emp e </span><br><span class="line"><span class="keyword">left</span> <span class="keyword">outer</span> <span class="keyword">join</span> scott.dept d <span class="keyword">on</span> e.deptno<span class="operator">=</span>d.deptno <span class="keyword">where</span> rownum<span class="operator">&lt;=</span><span class="number">5</span>; </span><br></pre></td></tr></table></figure>



<p><strong>右外连接</strong>：<code>right outer join on</code></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> e.ename,e.empno,d.deptno,d.dname <span class="keyword">from</span> scott.emp e </span><br><span class="line"><span class="keyword">right</span> <span class="keyword">outer</span> <span class="keyword">join</span> scott.dept d <span class="keyword">on</span> e.deptno<span class="operator">=</span>d.deptno <span class="keyword">where</span> rownum<span class="operator">&lt;=</span><span class="number">5</span>;</span><br></pre></td></tr></table></figure>



<p><strong>全连接</strong>：<code>full join on</code></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> e.ename,e.empno,d.deptno,d.dname <span class="keyword">from</span> scott.emp e </span><br><span class="line"><span class="keyword">full</span> <span class="keyword">join</span> scott.dept d <span class="keyword">on</span> e.deptno<span class="operator">=</span>d.deptno <span class="keyword">where</span> rownum<span class="operator">&lt;=</span><span class="number">5</span>;</span><br></pre></td></tr></table></figure>



<p><strong>组合查询</strong>：<code>union</code></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> e.ename,e.empno <span class="keyword">from</span> scott.emp e <span class="keyword">where</span> rownum<span class="operator">&lt;=</span><span class="number">5</span> <span class="keyword">union</span> <span class="keyword">select</span> e.ename,e.empno <span class="keyword">from</span> scott.emp e  </span><br><span class="line"><span class="keyword">where</span> e.ename <span class="keyword">like</span> <span class="string">&#x27;%ARC%&#x27;</span>; </span><br></pre></td></tr></table></figure>



<p><strong>组合查询</strong>：<code>union all</code></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> e.ename,e.empno <span class="keyword">from</span> scott.emp e <span class="keyword">where</span> rownum<span class="operator">&lt;=</span><span class="number">5</span> <span class="keyword">union</span> <span class="keyword">all</span> <span class="keyword">select</span> e.ename,e.empno <span class="keyword">from</span> scott.emp e  </span><br><span class="line"><span class="keyword">where</span> e.ename <span class="keyword">like</span> <span class="string">&#x27;%ARC%&#x27;</span>; </span><br></pre></td></tr></table></figure>



<p><strong>union和union all</strong>是有区别的，我列举的例子进行了模糊匹配，没演示出来效果。使用<code>union all</code>后DBMS不会取消重复的行。</p>
<p><strong>去掉后面的like条件，使用union统计的数据为14行，使用union all统计的数据为19行</strong>，其实不难理解，all就是全部。</p>
<h3 id="2、分页查询"><a href="#2、分页查询" class="headerlink" title="2、分页查询"></a>2、分页查询</h3><h4 id="2-1、MySQL的分页查询使用limit关键字"><a href="#2-1、MySQL的分页查询使用limit关键字" class="headerlink" title="2.1、MySQL的分页查询使用limit关键字"></a>2.1、MySQL的分页查询使用limit关键字</h4><p><strong>tips</strong>：Windows中CMD命令窗口使用<code>color a</code>即可调用出黑色背景绿色字体，<code>color f0</code>则是快速调出白色背景黑色字体哟！</p>
<p>护眼色：R：181    G：230    B：181</p>
<p><strong>示例</strong>：使用world数据库中city表进行演示分页查询，<strong>通过desc展示数据结构</strong>，尤其是配合开发进行联调的时候很常用：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">desc</span> world.city;</span><br></pre></td></tr></table></figure>



<p><strong>查询world数据库中的city表前5条数据</strong>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> city limit <span class="number">0</span>,<span class="number">5</span>;</span><br></pre></td></tr></table></figure>



<h4 id="2-2、Oracle的分页查询使用rownum伪列"><a href="#2-2、Oracle的分页查询使用rownum伪列" class="headerlink" title="2.2、Oracle的分页查询使用rownum伪列"></a>2.2、Oracle的分页查询使用rownum伪列</h4><p>同样使用<code>desc</code>关键字查询emp表结构：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SQL</span><span class="operator">&gt;</span> <span class="keyword">desc</span> scott.emp;</span><br></pre></td></tr></table></figure>



<p><strong>分页查询示例</strong>：使用<code>rownum</code>关键字进行演示Oracle中的分页查询。</p>
<p>查询scott用户中emp（员工表）的员工empno：编号、ename：员工姓名以及伪列rowid，只查询前5条数据：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SQL</span><span class="operator">&gt;</span> <span class="keyword">select</span> t.rowid,t.empno,t.ename <span class="keyword">from</span> scott.emp t <span class="keyword">where</span> rownum <span class="operator">&lt;=</span><span class="number">5</span>;</span><br></pre></td></tr></table></figure>



<p><strong>Oracle进行分页查询常用方式一</strong>，查询第6~11数据通过嵌套子查询，使用到关键字<code>rownum</code>和<code>where</code>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 统计emp数据总条目数</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> scott.emp;  </span><br><span class="line"><span class="comment">-- 查询第6~11数据通过嵌套子查询，使用到关键字rownum和where</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> (<span class="keyword">select</span> scott.emp.empno,rownum r <span class="keyword">from</span> scott.emp <span class="keyword">Where</span> rownum<span class="operator">&lt;=</span><span class="number">11</span>)<span class="keyword">where</span> r<span class="operator">&gt;=</span><span class="number">6</span>;</span><br></pre></td></tr></table></figure>
<p><strong>Oracle进行分页查询常用方式二，先进行order by排序，再分页查询</strong>，查询第6~11数据：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 先进行排序</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span>  emp e <span class="keyword">order</span> <span class="keyword">by</span> e.empno <span class="keyword">Desc</span>;</span><br><span class="line"><span class="comment">-- 再进行分页</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> (<span class="keyword">select</span> e.<span class="operator">*</span>,rownum r_num <span class="keyword">from</span>(<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> scott.emp e <span class="keyword">order</span> <span class="keyword">by</span> e.empno <span class="keyword">desc</span> )e)b <span class="keyword">where</span> b.r_num <span class="keyword">between</span> <span class="number">6</span> <span class="keyword">and</span> <span class="number">11</span>;</span><br></pre></td></tr></table></figure>

<h2 id="二、聚合函数（Aggregate）"><a href="#二、聚合函数（Aggregate）" class="headerlink" title="二、聚合函数（Aggregate）"></a>二、聚合函数（Aggregate）</h2><p>下面所讲的函数大多数标准SQL数据库是支持的，但也要依据实际情况做测试验证，个人主要验证的是MySQL和Oracle。</p>
<p><strong>重点</strong>：count、sum函数在我们如果要迁移数据的时候，避免不了需要手动去统计求和对比迁移前后数据的一致性。</p>
<h3 id="1、常见的聚合函数"><a href="#1、常见的聚合函数" class="headerlink" title="1、常见的聚合函数"></a>1、常见的聚合函数</h3><p><strong>介绍几个聚合函数</strong>：</p>
<ul>
<li>count函数用于统计条目数；</li>
<li>sum函数用于求和；</li>
<li>substr函数用于截取；</li>
<li>avg函数用于取平均值；</li>
<li>max函数用于取最大值；</li>
<li>min函数用于取最小值。</li>
</ul>
<p>如下则演示同时使用多个函数，查询Oracle数据库scott用户的emp表：</p>
<p><strong>查询出来的结果</strong>：count统计员工总数，sum求和所有员工的薪水总额，avg统计所有员工平均薪水，substr则是截取到小数点后两位数。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- count:统计条目数,sum:求和,substr:截取,avg:取平均值</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>), <span class="built_in">sum</span>(t.sal), substr(<span class="built_in">avg</span>(t.sal), <span class="number">0</span>, <span class="number">7</span>) <span class="keyword">from</span> scott.emp t;</span><br></pre></td></tr></table></figure>



<p><strong>返回平均值avg</strong>，一般配合substr关键字去截取，通过计算保留小数点后两位。</p>
<p>统计某公司员工的平均薪资：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- avg:取平均值</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">avg</span>(t.sal) <span class="keyword">from</span> scott.emp t;</span><br><span class="line"><span class="keyword">select</span> substr(<span class="built_in">avg</span>(t.sal), <span class="number">0</span>, <span class="number">7</span>) <span class="keyword">from</span> scott.emp t;</span><br></pre></td></tr></table></figure>



<p><strong>返回统计行数count</strong></p>
<p>统计某公司员工总数：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 统计函数count:统计emp表条目数量14</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> scott.emp;</span><br></pre></td></tr></table></figure>



<p><strong>返回总数（求和）sum</strong>，sum函数一般会配合decode函数使用。上面的黑色背景看久了眼睛累，特意换了一种护眼色。字体颜色就没有特意更换，字体稍微点大了一丢丢，看的更舒服。</p>
<p>统计某公司所有员工薪资总和：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 求和函数sum的使用</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">sum</span>(t.sal) <span class="keyword">from</span> scott.emp t;</span><br><span class="line"><span class="comment">-- 配合decode函数使用</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">sum</span>(decode(ename, <span class="string">&#x27;SMITH&#x27;</span>, sal, <span class="number">0</span>)) SMITH,<span class="built_in">sum</span>(decode(ename, <span class="string">&#x27;ALLEN&#x27;</span>, sal, <span class="number">0</span>)) ALLEN,</span><br><span class="line">	   <span class="built_in">sum</span>(decode(ename, <span class="string">&#x27;WARD&#x27;</span>, sal, <span class="number">0</span>)) WARD,<span class="built_in">sum</span>(decode(ename, <span class="string">&#x27;JONES&#x27;</span>, sal, <span class="number">0</span>)) JONES,</span><br><span class="line">	   <span class="built_in">sum</span>(decode(ename, <span class="string">&#x27;MARTIN&#x27;</span>, sal, <span class="number">0</span>)) MARTIN,<span class="built_in">sum</span>(decode(ename, <span class="string">&#x27;BLAKE&#x27;</span>, sal, <span class="number">0</span>)) BLAKE,</span><br><span class="line">	   <span class="built_in">sum</span>(decode(ename, <span class="string">&#x27;CLARK&#x27;</span>, sal, <span class="number">0</span>)) CLARK,<span class="built_in">sum</span>(decode(ename, <span class="string">&#x27;SCOTT&#x27;</span>, sal, <span class="number">0</span>)) SCOTT,</span><br><span class="line">	   <span class="built_in">sum</span>(decode(ename, <span class="string">&#x27;KING&#x27;</span>, sal, <span class="number">0</span>)) KING,<span class="built_in">sum</span>(decode(ename, <span class="string">&#x27;TURNER&#x27;</span>, sal, <span class="number">0</span>)) TURNER</span><br><span class="line"><span class="keyword">from</span> scott.emp;</span><br></pre></td></tr></table></figure>



<p><strong>tips</strong>：count函数在工作中使用的很频繁，你不清楚某张表中有多少条记录，需要统计一下再处理。</p>
<p><strong>返回最大值max</strong></p>
<p>查看员工中薪水最高的那一位：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- max函数的使用</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">max</span>(t.sal) <span class="keyword">from</span> scott.emp t;</span><br></pre></td></tr></table></figure>



<p><strong>返回最小值min</strong></p>
<p>查看员工中薪水最低的那一位：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">min</span>(t.sal) <span class="keyword">from</span> scott.emp t;</span><br></pre></td></tr></table></figure>



<p><strong>Oracle中的rownum伪列</strong></p>
<p>统计公司员工中的最后一条记录，通过<code>rownum</code>实现：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> t.sal <span class="keyword">from</span> scott.emp t <span class="keyword">where</span> rownum <span class="operator">&lt;=</span><span class="number">1</span>;</span><br><span class="line"><span class="keyword">select</span> t.sal <span class="keyword">from</span> scott.emp t <span class="keyword">where</span> rownum <span class="operator">&lt;=</span><span class="number">1</span> <span class="keyword">order</span> <span class="keyword">by</span> t.sal <span class="keyword">desc</span>;</span><br></pre></td></tr></table></figure>



<p><strong>MySQL中的分页limit关键字</strong></p>
<p>通过<code>limit</code>关键字实现，根据sakila数据库中的actor（演员表）为例子返回最后三条记录，使用actor_id进行排序。</p>
<p><strong>注意</strong>：<strong>limit属于MySQL扩展SQL92后的语法，在其它数据库中不能通用</strong>。Oracle的分页可以通过rownum来实现，上面也介绍了。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> t.`first_name`,t.`actor_id` <span class="keyword">FROM</span> sakila.`actor` t <span class="keyword">ORDER</span> <span class="keyword">BY</span> t.`actor_id` <span class="keyword">DESC</span> LIMIT <span class="number">0</span>,<span class="number">3</span>;</span><br></pre></td></tr></table></figure>



<h3 id="2、着重掌握的函数"><a href="#2、着重掌握的函数" class="headerlink" title="2、着重掌握的函数"></a>2、着重掌握的函数</h3><ul>
<li>group by函数用于分组；</li>
<li>having函数用于过滤，对分组后内容进行过滤。</li>
</ul>
<p><strong>group by函数</strong></p>
<p>配合聚合函数<code>sum</code>使用，查询Oracle中scott用户下的emp表。使用<code>group by</code>进行分组，然后<strong>统计公司各部门员工的薪资</strong>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> t.deptno, <span class="built_in">SUM</span>(t.sal) <span class="keyword">AS</span> sals <span class="keyword">FROM</span> scott.emp t <span class="keyword">GROUP</span> <span class="keyword">BY</span> t.deptno;</span><br></pre></td></tr></table></figure>



<p><strong>having函数</strong></p>
<p><strong>区别</strong>：having和where的区别在于，having是对聚合后的结果进行条件的过滤，而where是在聚合前就对记录进行过滤。如果逻辑允许，应尽可能用where先过滤记录，由于结果集的减小，对聚合的效率明显提升。最后再依据逻辑判断是否用having再次过滤。</p>
<p>配合聚合函数使用，Oracle中的scott用户下emp与dept表。</p>
<p>先对部门名称进行分组，然后使用<code>having</code>过滤出薪水总和大于10000的部门：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> d.dname, <span class="built_in">SUM</span>(e.sal) <span class="keyword">AS</span> sals <span class="keyword">FROM</span> scott.emp e</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> scott.dept d <span class="keyword">ON</span> e.deptno<span class="operator">=</span>d.deptno</span><br><span class="line"><span class="keyword">WHERE</span> e.deptno <span class="operator">&lt;</span> <span class="number">30</span> <span class="keyword">GROUP</span> <span class="keyword">BY</span> d.dname  <span class="keyword">HAVING</span> <span class="built_in">SUM</span>(e.sal) <span class="operator">&gt;</span> <span class="number">10000</span>;</span><br></pre></td></tr></table></figure>



<h2 id="三、SQL核心知识"><a href="#三、SQL核心知识" class="headerlink" title="三、SQL核心知识"></a>三、SQL核心知识</h2><p>凡事应以实际工作场景而定。个人的以一些理解仅仅是建议，最终的应用还需结合实际应用场景。软件实施对SQL的函数、触发器和存储过程没有太高的要求，但也需要会基本的运用。在某些特殊的场景下，使用这些SQL的核心知识将有助于提高我们的工作效率。</p>
<h3 id="1、函数"><a href="#1、函数" class="headerlink" title="1、函数"></a>1、函数</h3><p><strong>函数关键字</strong>：<code>FUNCTION</code></p>
<p>使用第三方客户端工具新建函数，会自动生成一些模板：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">DELIMITER $$  <span class="comment">-- 声明关键字DELIMITER</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="comment">-- 创建函数的关键字create</span></span><br><span class="line">    <span class="comment">/*[DEFINER = &#123; user | CURRENT_USER &#125;]*/</span></span><br><span class="line">    <span class="keyword">FUNCTION</span> `study`.`stu_num`() <span class="comment">-- 设置函数名称</span></span><br><span class="line">    <span class="keyword">RETURNS</span> TYPE <span class="comment">-- 返回值的类型</span></span><br><span class="line">    <span class="comment">/*LANGUAGE SQL</span></span><br><span class="line"><span class="comment">    | [NOT] DETERMINISTIC</span></span><br><span class="line"><span class="comment">    | &#123; CONTAINS SQL | NO SQL | READS SQL DATA | MODIFIES SQL DATA &#125;</span></span><br><span class="line"><span class="comment">    | SQL SECURITY &#123; DEFINER | INVOKER &#125;</span></span><br><span class="line"><span class="comment">    | COMMENT &#x27;string&#x27;*/</span></span><br><span class="line">    <span class="keyword">BEGIN</span> <span class="comment">-- 开始业务逻辑</span></span><br><span class="line">    <span class="comment">-- &#123;业务逻辑区...&#125;</span></span><br><span class="line">    <span class="keyword">END</span>$$ <span class="comment">-- 结束标志</span></span><br><span class="line">DELIMITER ;</span><br></pre></td></tr></table></figure>



<h3 id="2、触发器"><a href="#2、触发器" class="headerlink" title="2、触发器"></a>2、触发器</h3><p><strong>触发器关键字</strong>：<code>TRIGGER</code></p>
<p>使用第三方客户端工具新建触发器，会自动生成一些模板：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">DELIMITER $$</span><br><span class="line"><span class="keyword">CREATE</span>	<span class="comment">-- 创建触发器的关键字create</span></span><br><span class="line">    <span class="comment">/*[DEFINER = &#123; user | CURRENT_USER &#125;]*/</span></span><br><span class="line">    <span class="keyword">TRIGGER</span> `study`.`stu_insert` BEFORE<span class="operator">/</span>AFTER <span class="keyword">INSERT</span><span class="operator">/</span><span class="keyword">UPDATE</span><span class="operator">/</span><span class="keyword">DELETE</span></span><br><span class="line">    <span class="keyword">ON</span> `study`.`<span class="operator">&lt;</span><span class="keyword">Table</span> Name<span class="operator">&gt;</span>`</span><br><span class="line">    <span class="keyword">FOR</span> <span class="keyword">EACH</span> <span class="type">ROW</span> <span class="keyword">BEGIN</span> <span class="comment">-- 使用到for each循环</span></span><br><span class="line">    <span class="comment">-- &#123;业务逻辑区...&#125;</span></span><br><span class="line">    <span class="keyword">END</span>$$</span><br><span class="line">DELIMITER ;</span><br></pre></td></tr></table></figure>



<h3 id="3、存储过程"><a href="#3、存储过程" class="headerlink" title="3、存储过程"></a>3、存储过程</h3><p><strong>存储过程关键字</strong>：<code>PROCEDURE</code></p>
<p>支持完整事务的存储引擎，在保证数据的完整一致性情况下，尽可能多的使用commit事务提交。利用函数和存储过程一个好的示例，在MySQL中快速生成千万级别的数据大表进行测试就可以应用到，同时还能联想到测试性能。这是勾起我们学习的动力，一个比较好的方法。</p>
<p><strong>使用第三方客户端工具新建存储过程</strong>，会自动生成一些模板：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">DELIMITER $$</span><br><span class="line"><span class="keyword">CREATE</span></span><br><span class="line">    <span class="comment">/*[DEFINER = &#123; user | CURRENT_USER &#125;]*/</span></span><br><span class="line">    <span class="keyword">PROCEDURE</span> `study`.`insert_study`()</span><br><span class="line">    <span class="comment">/*LANGUAGE SQL</span></span><br><span class="line"><span class="comment">    | [NOT] DETERMINISTIC</span></span><br><span class="line"><span class="comment">    | &#123; CONTAINS SQL | NO SQL | READS SQL DATA | MODIFIES SQL DATA &#125;</span></span><br><span class="line"><span class="comment">    | SQL SECURITY &#123; DEFINER | INVOKER &#125;</span></span><br><span class="line"><span class="comment">    | COMMENT &#x27;string&#x27;*/</span></span><br><span class="line">    <span class="keyword">BEGIN</span></span><br><span class="line">	<span class="comment">-- &#123;业务逻辑区...&#125;</span></span><br><span class="line">	<span class="keyword">COMMIT</span>; <span class="comment">-- 支持完整事务的存储引擎,在保证数据的完整一致性情况下,尽可能多的使用commit事务提交</span></span><br><span class="line">    <span class="keyword">END</span>$$</span><br><span class="line">DELIMITER ;</span><br></pre></td></tr></table></figure>



<h3 id="4、典型的示例sakila数据库"><a href="#4、典型的示例sakila数据库" class="headerlink" title="4、典型的示例sakila数据库"></a>4、典型的示例sakila数据库</h3><p>这是一个MySQL官方提供的拥有存储过程、触发器和函数示例的电影出租信息管理系统数据库。并且官方提供了EER模型，便于理解每张表之间的关联关系，可以使用MySQL workbench打开<code>sakila.mwb</code>进行参考学习。如果你能完整的看完这篇文档，你会发现在一开始我就提供了sakila数据库的官网下载地址。</p>
<p><strong>sakila数据库视图</strong>：<code>actor_info</code>，演员信息视图</p>
<p><strong>使用DESC关键字进行查看视图结构</strong>，这个关键字很实用哟。视图和表结构很像，以sakila中<code>actor_info</code>视图进行展示：</p>
<p><strong>sakila数据库存储过程</strong>：<code>film_in_stock</code>，电影库存</p>
<p>官方的一个示例：创建一个存储过程，声明了三个常量字段，然后分别赋值给演示字段，最后将找到的记录复制存到了p_film_count中。这里我为何说是复制呢？是因为使用到了<code>SELECT ... INTO</code>关键字。</p>
<p>函数、触发器和存储过程最主要的一块在BEGIN {业务逻辑区…} END这一块区域。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">DELIMITER $$</span><br><span class="line">USE `sakila`$$</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">PROCEDURE</span> IF <span class="keyword">EXISTS</span> `film_in_stock`$$</span><br><span class="line"><span class="keyword">CREATE</span> DEFINER<span class="operator">=</span>`root`@`<span class="operator">%</span>` <span class="keyword">PROCEDURE</span> `film_in_stock`(<span class="keyword">IN</span> p_film_id <span class="type">INT</span>, <span class="keyword">IN</span> p_store_id <span class="type">INT</span>, <span class="keyword">OUT</span> p_film_count <span class="type">INT</span>)</span><br><span class="line">    <span class="keyword">READS</span> <span class="keyword">SQL</span> DATA</span><br><span class="line">    <span class="keyword">SQL</span> SECURITY INVOKER</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">     <span class="keyword">SELECT</span> inventory_id</span><br><span class="line">     <span class="keyword">FROM</span> inventory</span><br><span class="line">     <span class="keyword">WHERE</span> film_id <span class="operator">=</span> p_film_id</span><br><span class="line">     <span class="keyword">AND</span> store_id <span class="operator">=</span> p_store_id</span><br><span class="line">     <span class="keyword">AND</span> inventory_in_stock(inventory_id);</span><br><span class="line">     <span class="keyword">SELECT</span> FOUND_ROWS() <span class="keyword">INTO</span> p_film_count;</span><br><span class="line"><span class="keyword">END</span>$$</span><br><span class="line">DELIMITER ;</span><br></pre></td></tr></table></figure>

<p>关于函数我就不列举MySQL官方提供的示例了。</p>
<p><strong>给出一点小小的建议，感觉对你没啥作用可以忽略掉</strong>：首先快速熟悉语法使用，对官方的示例进行解读，然后运行验证。最后，书写一些简单的示例达到熟练运用目的。不要只停留在想要执行，而是立即执行并带着思考去看待问题。多问一个为什么，思考本质。</p>
<h2 id="四、看文档也要护眼哟"><a href="#四、看文档也要护眼哟" class="headerlink" title="四、看文档也要护眼哟"></a>四、看文档也要护眼哟</h2><h3 id="1、常用护眼色"><a href="#1、常用护眼色" class="headerlink" title="1、常用护眼色"></a>1、常用护眼色</h3><table>
<thead>
<tr>
<th>颜色</th>
<th>RGB</th>
<th>16进制</th>
</tr>
</thead>
<tbody><tr>
<td><strong>常用护眼色</strong></td>
<td>R：181   G：230   B：181</td>
<td>#B5E6B5</td>
</tr>
<tr>
<td><strong>黄</strong></td>
<td>R：250   G：249   B：222</td>
<td>#FAF9DE</td>
</tr>
<tr>
<td><strong>褐</strong></td>
<td>R：250   G：242   B：226</td>
<td>#FFF2E2</td>
</tr>
<tr>
<td>红</td>
<td>R：253   G：230   B：224</td>
<td>#FDE6E0</td>
</tr>
<tr>
<td>绿</td>
<td>R：227   G：237   B：205</td>
<td>#E3EDCD</td>
</tr>
<tr>
<td><strong>海天蓝</strong></td>
<td>R：220   G：226   B：241</td>
<td>#DCE2F1</td>
</tr>
<tr>
<td>紫</td>
<td>R：233   G：235   B：154</td>
<td>#E9EBFE</td>
</tr>
<tr>
<td>灰</td>
<td>R：234   G：234   B：239</td>
<td>#EAEAEF</td>
</tr>
</tbody></table>
<p>——END——</p>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>SQL</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL等主流数据库厂商（DBMS）--官方文档地址</title>
    <url>/2022/03/17/MySQL%E7%AD%89%E4%B8%BB%E6%B5%81%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8E%82%E5%95%86%EF%BC%88DBMS%EF%BC%89-%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3%E5%9C%B0%E5%9D%80/</url>
    <content><![CDATA[<p>介绍各种主流数据库（DBMS）厂商官方文档地址，便于下载参考。</p>
<p>源于今晚在自己仓库看到的一则Issues，便整理了一些。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/78a357af4ff5ceec25c5730626de20aa.png"></p>
<p>主要介绍：</p>
<ol>
<li>MySQL or MariaDB</li>
<li>Oracle</li>
<li>SQL server</li>
<li>达梦数据库</li>
<li>PostgreSQL</li>
<li>SQLite</li>
</ol>
<p><strong>tips</strong>：图片资源可能被防盗链（寄）了，可以<strong>右键属性复制地址在地址栏查看</strong>哈。</p>
<span id="more"></span>

<h2 id="一MySQL（MariaDB）官方文档"><a href="#一MySQL（MariaDB）官方文档" class="headerlink" title="一	MySQL（MariaDB）官方文档"></a>一	MySQL（MariaDB）官方文档</h2><p>左侧导航栏有个Download this Manual：MySQL文档下载地址</p>
<h3 id="01MySQL8-0"><a href="#01MySQL8-0" class="headerlink" title="01	MySQL8.0"></a>01	MySQL8.0</h3><p>1.1. MySQL8.0在线文档</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9kZXYubXlzcWwuY29tL2RvYy9yZWZtYW4vOC4wL2Vu">https://dev.mysql.com/doc/refman/8.0/en<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p>1.2. MySQL8.0文档PDF文件下载地址</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZHMubXlzcWwuY29tL2RvY3MvcmVmbWFuLTguMC1lbi5hNC5wZGY=">https://downloads.mysql.com/docs/refman-8.0-en.a4.pdf<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<h3 id="02MySQL5-7"><a href="#02MySQL5-7" class="headerlink" title="02	MySQL5.7"></a>02	MySQL5.7</h3><p> 2.1. MySQL5.7在线文档</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9kZXYubXlzcWwuY29tL2RvYy9yZWZtYW4vNS43L2VuLw==">https://dev.mysql.com/doc/refman/5.7/en/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p>2.2. MySQL5.7文档PDF文件下载地址</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZHMubXlzcWwuY29tL2RvY3MvcmVmbWFuLTUuNy1lbi5hNC5wZGY=">https://downloads.mysql.com/docs/refman-5.7-en.a4.pdf<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<h3 id="03MySQL5-6"><a href="#03MySQL5-6" class="headerlink" title="03	MySQL5.6"></a>03	MySQL5.6</h3><p>3.1. MySQL5.6在线文档</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9kZXYubXlzcWwuY29tL2RvYy9yZWZtYW4vNS42L2VuLw==">https://dev.mysql.com/doc/refman/5.6/en/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p>3.2. MySQL5.6文档PDF文件下载地址</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZHMubXlzcWwuY29tL2RvY3MvcmVmbWFuLTUuNi1lbi5hNC5wZGY=">https://downloads.mysql.com/docs/refman-5.6-en.a4.pdf<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<h3 id="04MariaDB官方文档地址"><a href="#04MariaDB官方文档地址" class="headerlink" title="04	MariaDB官方文档地址"></a>04	MariaDB官方文档地址</h3><p>4.1. MariaDB官方文档地址</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9tYXJpYWRiLmNvbS9kb2NzLw==">https://mariadb.com/docs/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p>4.2. MariaDB reference</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9tYXJpYWRiLmNvbS9kb2NzL3JlZmVyZW5jZQ==">https://mariadb.com/docs/reference<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<h2 id="二Oracle官方文档"><a href="#二Oracle官方文档" class="headerlink" title="二	Oracle官方文档"></a>二	Oracle官方文档</h2><h3 id="01Oracle11g"><a href="#01Oracle11g" class="headerlink" title="01	Oracle11g"></a>01	Oracle11g</h3><p>1.1. 文档首页（分类）</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9kb2NzLm9yYWNsZS5jb20vY2QvRTExODgyXzAxL2luZGV4Lmh0bQ==">https://docs.oracle.com/cd/E11882_01&#x2F;index.htm<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p>1.2. 文档列表（主要下载reference）</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9kb2NzLm9yYWNsZS5jb20vY2QvRTExODgyXzAxL25hdi9wb3J0YWxfYm9va2xpc3QuaHRt">https://docs.oracle.com/cd/E11882_01&#x2F;nav&#x2F;portal_booklist.htm<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<h3 id="02Oracle19c"><a href="#02Oracle19c" class="headerlink" title="02	Oracle19c"></a>02	Oracle19c</h3><p>2.1. 文档首页（分类）</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9kb2NzLm9yYWNsZS5jb20vZW4vZGF0YWJhc2Uvb3JhY2xlL29yYWNsZS1kYXRhYmFzZS8xOS9pbmRleC5odG1s">https://docs.oracle.com/en/database/oracle/oracle-database/19/index.html<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p>2.2. 文档列表</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9kb2NzLm9yYWNsZS5jb20vZW4vZGF0YWJhc2Uvb3JhY2xlL29yYWNsZS1kYXRhYmFzZS8xOS9ib29rcy5odG1s">https://docs.oracle.com/en/database/oracle/oracle-database/19/books.html<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<h2 id="三SQL-Server官方文档"><a href="#三SQL-Server官方文档" class="headerlink" title="三	SQL Server官方文档"></a>三	SQL Server官方文档</h2><p>SQL server有三个版本：</p>
<ol>
<li><p>付费版，商（企）业版。</p>
</li>
<li><p>Developer：Developer开发版，是一个全功能免费版本，许可在非生产环境下用作开发和测试数据库。</p>
</li>
<li><p>Express：Express 是 SQL Server 的一个免费版本，非常适合用于桌面、Web 和小型服务器应用程序的开发和生产。</p>
</li>
</ol>
<p><strong>tips</strong>：将en-us换成zh-cn即可看到中文文档</p>
<p><strong>SQL server文档首页</strong></p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvc3FsLz92aWV3PXNxbC1zZXJ2ZXItdmVyMTU=">https://docs.microsoft.com/en-us/sql/?view=sql-server-ver15<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p><strong>SQL server历史版本文档</strong></p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvcHJldmlvdXMtdmVyc2lvbnMvc3FsLw==">https://docs.microsoft.com/en-us/previous-versions/sql/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<h2 id="四达梦数据库官方文档"><a href="#四达梦数据库官方文档" class="headerlink" title="四	达梦数据库官方文档"></a>四	达梦数据库官方文档</h2><p>下载数据库和docs需要注册登录。</p>
<p>安装达梦数据库后，在doc目录下存放着非常全面的最新版数据库文档。</p>
<ol>
<li>DM8数据库</li>
</ol>
<blockquote>
<p> <span class="exturl" data-url="aHR0cHM6Ly93d3cuZGFtZW5nLmNvbS92aWV3XzYxLmh0bWw=">https://www.dameng.com/view_61.html<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<ol start="2">
<li>DM8产品手册地址</li>
</ol>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9lY28uZGFtZW5nLmNvbS9kb2NzL3poLWNuL3BtL2luZGV4Lmh0bWw/c291cmNlX3VybD1odHRwczovL3d3dy5kYW1lbmcuY29tL2xpc3RfMTAzLmh0bWw=">https://eco.dameng.com/docs/zh-cn/pm/index.html?source_url&#x3D;https://www.dameng.com/list_103.html<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<h2 id="五PostgreSQL官方文档"><a href="#五PostgreSQL官方文档" class="headerlink" title="五	PostgreSQL官方文档"></a>五	PostgreSQL官方文档</h2><p>PostgreSQL进入文档默认显示有10、11、12、13、14这五个版本。</p>
<p>其余历史版本找一下Manual archive。</p>
<ol>
<li>PostgreSQL文档地址</li>
</ol>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cucG9zdGdyZXNxbC5vcmcvZG9jcy8=">https://www.postgresql.org/docs/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<ol start="2">
<li>最新版本14的PDF下载地址</li>
</ol>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cucG9zdGdyZXNxbC5vcmcvZmlsZXMvZG9jdW1lbnRhdGlvbi9wZGYvMTQvcG9zdGdyZXNxbC0xNC1BNC5wZGY=">https://www.postgresql.org/files/documentation/pdf/14/postgresql-14-A4.pdf<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<ol start="3">
<li>books地址</li>
</ol>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cucG9zdGdyZXNxbC5vcmcvZG9jcy9ib29rcy8=">https://www.postgresql.org/docs/books/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<h2 id="六SQLite官方文档"><a href="#六SQLite官方文档" class="headerlink" title="六	SQLite官方文档"></a>六	SQLite官方文档</h2><ol>
<li>SQLite官方文档地址</li>
</ol>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cuc3FsaXRlLm9yZy9kb2NzLmh0bWw=">https://www.sqlite.org/docs.html<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<ol start="2">
<li>SQLite文档列表</li>
</ol>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cuc3FsaXRlLm9yZy9kb2NsaXN0Lmh0bWw=">https://www.sqlite.org/doclist.html<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<ol start="3">
<li>数据库下载地址</li>
</ol>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cuc3FsaXRlLm9yZy9kb2NzLmh0bWw=">https://www.sqlite.org/docs.html<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>开发工具</category>
      </categories>
      <tags>
        <tag>SQL</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL等主流数据库连接驱动盘点合集</title>
    <url>/2022/02/03/MySQL%E7%AD%89%E4%B8%BB%E6%B5%81%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5%E9%A9%B1%E5%8A%A8%E7%9B%98%E7%82%B9%E5%90%88%E9%9B%86/</url>
    <content><![CDATA[<p>最近接触到了国产数据库达梦，因此想着写一个合集方便查阅连接驱动，以及配置连接。</p>
<ul>
<li>MySQL5.x &amp; MySQL8.x</li>
<li>达梦数据库（DM8）</li>
<li>Oracle11gR2</li>
<li>SqlServer2012</li>
</ul>
<span id="more"></span>

<p>主流数据库以及国产数据库驱动配置参考（端口默认没改动）<br>数据库：</p>
<ol>
<li>MySQL</li>
<li>达梦数据库（DM8 for Windows10）</li>
<li>Oracle11gR2</li>
<li>SqlServer2012</li>
</ol>
<h2 id="MySQL数据库"><a href="#MySQL数据库" class="headerlink" title="MySQL数据库"></a>MySQL数据库</h2><p>mysql驱动连接</p>
<p>旧版驱动：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">com.mysql.jdbc.Driver</span><br></pre></td></tr></table></figure>
<p>新版驱动：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">com.mysql.cj.jdbc.Driver</span><br></pre></td></tr></table></figure>

<p>配置连接</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">jdbc.url<span class="operator">=</span>jdbc:mysql:<span class="operator">/</span><span class="operator">/</span>localhost（IP）:<span class="number">3306</span>（端口）<span class="operator">/</span>test?useUnicode<span class="operator">=</span><span class="literal">true</span><span class="operator">&amp;</span>characterEncoding<span class="operator">=</span>utf<span class="number">-8</span></span><br><span class="line">jdbc.url<span class="operator">=</span>jdbc:mysql:<span class="operator">/</span><span class="operator">/</span>localhost:<span class="number">3306</span><span class="operator">/</span>test?useUnicode<span class="operator">=</span><span class="literal">true</span><span class="operator">&amp;</span>characterEncoding<span class="operator">=</span>utf<span class="number">-8</span></span><br></pre></td></tr></table></figure>


<h2 id="DM8数据库"><a href="#DM8数据库" class="headerlink" title="DM8数据库"></a>DM8数据库</h2><p>注意：最终安装目录是你自己设置的，与我设置的有区别。</p>
<p>DM8数据库jar驱动所在路径：D:\dmdbms\drivers\jdbc</p>
<ul>
<li>jar包名称：DmJdbcDriver17.jar</li>
<li>DM驱动：dm.jdbc.driver.DmDriver</li>
</ul>
<p>配置连接</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">jdbc.url<span class="operator">=</span>jdbc:dm:<span class="operator">/</span><span class="operator">/</span>localhost（IP）:<span class="number">5236</span>（端口）<span class="operator">/</span>test(数据库名称)</span><br><span class="line">jdbc.url<span class="operator">=</span>jdbc:dm:<span class="operator">/</span><span class="operator">/</span>localhost:<span class="number">5236</span><span class="operator">/</span>test</span><br></pre></td></tr></table></figure>





<h2 id="SQLserver数据库"><a href="#SQLserver数据库" class="headerlink" title="SQLserver数据库"></a>SQLserver数据库</h2><p>sqlserver2012驱动</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">com.microsoft.sqlserver.jdbc.SQLServerDriver</span><br></pre></td></tr></table></figure>

<p>配置连接</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">jdbc.url<span class="operator">=</span>jdbc:sqlserver:<span class="operator">/</span><span class="operator">/</span>localhost（IP）:<span class="number">1433</span>（端口）;instanceName<span class="operator">=</span>sqlserver2012;DatabaseName<span class="operator">=</span>test;integratedSecurity<span class="operator">=</span><span class="literal">true</span>;</span><br><span class="line">jdbc.url<span class="operator">=</span>jdbc:sqlserver:<span class="operator">/</span><span class="operator">/</span>localhost:<span class="number">1433</span>;instanceName<span class="operator">=</span>sqlserver2012;DatabaseName<span class="operator">=</span>test;integratedSecurity<span class="operator">=</span><span class="literal">true</span>;</span><br></pre></td></tr></table></figure>

<p>jar包名称</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">sqljdbc41.jar</span><br></pre></td></tr></table></figure>



<h2 id="Oracle数据库"><a href="#Oracle数据库" class="headerlink" title="Oracle数据库"></a>Oracle数据库</h2><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><p>oracle驱动 &amp; jar包</p>
<p>驱动：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">oracle.jdbc.driver.OracleDriver</span><br></pre></td></tr></table></figure>
<p>jar包：ojdbc6.jar</p>
<p>配置连接：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">jdbc.url=jdbc:oracle:thin:<span class="meta">@localhost</span>（IP）:<span class="number">1521</span>（端口）:orcl（实例名）</span><br><span class="line">jdbc.url=jdbc:oracle:thin:<span class="meta">@localhost</span>:<span class="number">1521</span>:orcl</span><br></pre></td></tr></table></figure>



<h3 id="Oracle：创建用户、表、生成数据"><a href="#Oracle：创建用户、表、生成数据" class="headerlink" title="Oracle：创建用户、表、生成数据"></a>Oracle：创建用户、表、生成数据</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--使用plsql developer工具创建</span></span><br><span class="line"><span class="comment">--Oracle11g创建数据库用户:TEST,PASSWORD:123456</span></span><br><span class="line"><span class="comment">--创建用户</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">USER</span> TEST;</span><br><span class="line"></span><br><span class="line"><span class="comment">--赋予权限</span></span><br><span class="line"><span class="keyword">grant</span> resource,<span class="keyword">connect</span> <span class="keyword">to</span> TEST;</span><br><span class="line"></span><br><span class="line"><span class="comment">--执行以下语句创建表</span></span><br><span class="line"><span class="comment">--建议：创建表以及字段要么统一小写，要么统一大写，最好还是大写的</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> TEST.GIRL</span><br><span class="line">(</span><br><span class="line">  ID        VARCHAR2(<span class="number">64</span>),</span><br><span class="line">  GIRL_NAME VARCHAR2(<span class="number">64</span>),</span><br><span class="line">  CUP_SIZE  VARCHAR2(<span class="number">2</span>),</span><br><span class="line">  GIRL_AGE  VARCHAR2(<span class="number">2</span>),</span><br><span class="line">  STU_NUM   VARCHAR2(<span class="number">64</span>)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">--设置默认表空间</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">user</span> test <span class="keyword">default</span> tablespace USERS;</span><br><span class="line"><span class="comment">--设置ID为主键</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> TEST.GIRL <span class="keyword">add</span> <span class="keyword">primary</span> key(ID); </span><br><span class="line"></span><br><span class="line"><span class="comment">--插入测试数据</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> TEST.GIRL <span class="keyword">values</span>(<span class="string">&#x27;1001&#x27;</span>,<span class="string">&#x27;梦梦&#x27;</span>,<span class="string">&#x27;C&#x27;</span>,<span class="string">&#x27;16&#x27;</span>,<span class="string">&#x27;TOLOVE16C&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">--查询数据</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> TEST.GIRL;</span><br></pre></td></tr></table></figure>


<h2 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h2><p>使用编辑器：Spring Tool Suite4</p>
<p>测试连接：</p>
<ul>
<li>Oralce11g</li>
<li>DM8</li>
<li>MySQL8.x</li>
<li>SqlServer2012</li>
</ul>
<p><strong>tips</strong>：注意事项写在代码注释中。</p>
<p>如下是demo示例：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/** 测试连接Oralce11g、DM8、MySQL5.6、SqlServer2012 **/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.example.demo.jdbc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.DriverManager;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestConnJdbc</span> &#123;</span><br><span class="line">		<span class="comment">/**mysql驱动:com.mysql.cj.jdbc.Driver**/</span></span><br><span class="line">		<span class="comment">/**sqlserver驱动：com.microsoft.sqlserver.jdbc.SQLServerDriver**/</span></span><br><span class="line">		<span class="comment">/**oracle驱动:oracle.jdbc.driver.OracleDriver**/</span></span><br><span class="line">		<span class="comment">/**DM驱动:dm.jdbc.driver.DmDriver**/</span></span><br><span class="line">			</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Logger</span> <span class="variable">log</span> <span class="operator">=</span> LoggerFactory.getLogger(TestConnJdbc.class);</span><br><span class="line"></span><br><span class="line">	<span class="comment">//初始化参数</span></span><br><span class="line">	<span class="keyword">static</span> <span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">	<span class="keyword">static</span> <span class="type">PreparedStatement</span> <span class="variable">ps</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">	<span class="keyword">static</span> <span class="type">ResultSet</span> <span class="variable">rs</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/** 测试连接各个数据库 **/</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">		<span class="comment">//TestSQLConnOralce();</span></span><br><span class="line">		<span class="comment">//TestSQLConnSqlServer();</span></span><br><span class="line">		<span class="comment">//TestSQLConnMySQL();</span></span><br><span class="line">		TestSQLConnDM();</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">/**oracle驱动:oracle.jdbc.driver.OracleDriver**/</span></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@Description</span> Oracle JDBC</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@throws</span> SQLException</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@throws</span> ClassNotFoundException</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">TestSQLConnOralce</span><span class="params">()</span> <span class="keyword">throws</span> SQLException, ClassNotFoundException &#123;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			</span><br><span class="line">			<span class="comment">//1.加载驱动 </span></span><br><span class="line">			Class.forName(<span class="string">&quot;oracle.jdbc.driver.OracleDriver&quot;</span>);</span><br><span class="line">		</span><br><span class="line">			<span class="comment">//2.定义连接参数url,username,password</span></span><br><span class="line">			<span class="comment">/** oracle拼接url **/</span></span><br><span class="line">			<span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;jdbc:oracle:thin:@127.0.0.1:1521:orcl&quot;</span>;</span><br><span class="line">			<span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> <span class="string">&quot;TEST&quot;</span>;</span><br><span class="line">			<span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> <span class="string">&quot;123456&quot;</span>;</span><br><span class="line"></span><br><span class="line">			<span class="comment">//获取连接，传入参数&#123;url, username, password&#125;</span></span><br><span class="line">			conn = DriverManager.getConnection(url, username, password);</span><br><span class="line">			<span class="keyword">if</span>(<span class="literal">null</span> != conn) &#123;</span><br><span class="line">				log.info(<span class="string">&quot;connect database success...&quot;</span>);</span><br><span class="line">				System.out.println(<span class="string">&quot;连接成功！！！&quot;</span>);</span><br><span class="line">			&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">				log.error(<span class="string">&quot;connect database failed...&quot;</span>);</span><br><span class="line">				System.out.println(<span class="string">&quot;连接失败！！！&quot;</span>);</span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">			<span class="comment">//查询数据库</span></span><br><span class="line">			<span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select * from girl&quot;</span>;</span><br><span class="line">			<span class="comment">// 3.通过preparedStatement执行SQL</span></span><br><span class="line">			ps = conn.prepareStatement(sql);</span><br><span class="line">			</span><br><span class="line">			<span class="comment">// 4.执行查询,获取结果集</span></span><br><span class="line">			rs = ps.executeQuery();</span><br><span class="line">			<span class="comment">// 5.遍历结果集，前提是你的数据库创建了表以及有数据</span></span><br><span class="line">			<span class="keyword">while</span> (rs.next()) &#123;</span><br><span class="line">				<span class="comment">//对应表中字段类型</span></span><br><span class="line">				System.out.println(<span class="string">&quot;ID:&quot;</span> + rs.getString(<span class="string">&quot;ID&quot;</span>));</span><br><span class="line">				System.out.println(<span class="string">&quot;姓名：&quot;</span> + rs.getString(<span class="string">&quot;girl_name&quot;</span>));</span><br><span class="line">				System.out.println(<span class="string">&quot;年龄：&quot;</span> + rs.getString(<span class="string">&quot;girl_age&quot;</span>));</span><br><span class="line">				System.out.println(<span class="string">&quot;尺寸：&quot;</span> + rs.getString(<span class="string">&quot;cup_size&quot;</span>));</span><br><span class="line">				System.out.println(<span class="string">&quot;学号：&quot;</span> + rs.getString(<span class="string">&quot;stu_num&quot;</span>));</span><br><span class="line">			&#125;</span><br><span class="line">		&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">			<span class="comment">// 6.关闭连接 释放资源</span></span><br><span class="line">			rs.close();</span><br><span class="line">			ps.close();</span><br><span class="line">			conn.close();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**达梦数据库 JDBC示例，DM驱动:dm.jdbc.driver.DmDriver**/</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">TestSQLConnDM</span><span class="params">()</span> <span class="keyword">throws</span> SQLException, ClassNotFoundException &#123;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			<span class="comment">//1.加载驱动 </span></span><br><span class="line">			Class.forName(<span class="string">&quot;dm.jdbc.driver.DmDriver&quot;</span>);</span><br><span class="line">			<span class="comment">//2.定义连接参数&#123;url,username,password&#125;</span></span><br><span class="line">			<span class="comment">/** DM拼接url **/</span></span><br><span class="line">			<span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;jdbc:dm://localhost:5236/test&quot;</span>;</span><br><span class="line">			<span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> <span class="string">&quot;USERS&quot;</span>;</span><br><span class="line">			<span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> <span class="string">&quot;123456789&quot;</span>;</span><br><span class="line">			<span class="keyword">if</span>(username!=<span class="string">&quot;USERS&quot;</span>) &#123;</span><br><span class="line">				System.err.println(<span class="string">&quot;用户名错误或者不存在！！！&quot;</span>);</span><br><span class="line">			&#125;<span class="keyword">else</span> <span class="keyword">if</span>(password != <span class="string">&quot;123456789&quot;</span> &amp;&amp; password != <span class="literal">null</span>) &#123;</span><br><span class="line">				System.err.println(<span class="string">&quot;密码错误！！！&quot;</span>);</span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">			<span class="comment">//获取连接，传入参数&#123;url, username, password&#125;</span></span><br><span class="line">			conn = DriverManager.getConnection(url, username, password);</span><br><span class="line">			<span class="keyword">if</span>(<span class="literal">null</span> != conn) &#123;</span><br><span class="line">				log.info(<span class="string">&quot;connect database success...&quot;</span>);</span><br><span class="line">				System.out.println(<span class="string">&quot;连接成功！！！&quot;</span>);</span><br><span class="line">			&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">				log.error(<span class="string">&quot;connect database failed...&quot;</span>);</span><br><span class="line">				System.out.println(<span class="string">&quot;连接失败！！！&quot;</span>);</span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">			</span><br><span class="line">			<span class="comment">//查询数据库</span></span><br><span class="line">			<span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select * from girl&quot;</span>;</span><br><span class="line">			<span class="comment">// 3.通过preparedStatement执行SQL</span></span><br><span class="line">			ps = conn.prepareStatement(sql);</span><br><span class="line">			</span><br><span class="line">			<span class="comment">// 4.执行查询,获取结果集</span></span><br><span class="line">			rs = ps.executeQuery();</span><br><span class="line">			<span class="comment">// 5.遍历结果集，前提是你的数据库创建了表以及有数据</span></span><br><span class="line">			<span class="keyword">while</span> (rs.next()) &#123;</span><br><span class="line">				<span class="comment">//对应表中字段类型</span></span><br><span class="line">				System.out.println(<span class="string">&quot;ID:&quot;</span> + rs.getString(<span class="string">&quot;ID&quot;</span>));</span><br><span class="line">				System.out.println(<span class="string">&quot;姓名：&quot;</span> + rs.getString(<span class="string">&quot;girl_name&quot;</span>));</span><br><span class="line">				System.out.println(<span class="string">&quot;年龄：&quot;</span> + rs.getString(<span class="string">&quot;girl_age&quot;</span>));</span><br><span class="line">				System.out.println(<span class="string">&quot;尺寸：&quot;</span> + rs.getString(<span class="string">&quot;cup_size&quot;</span>));</span><br><span class="line">				System.out.println(<span class="string">&quot;学号：&quot;</span> + rs.getString(<span class="string">&quot;stu_num&quot;</span>));</span><br><span class="line">			&#125;</span><br><span class="line">		&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">			<span class="comment">// 6.关闭连接 释放资源</span></span><br><span class="line">			rs.close();</span><br><span class="line">			ps.close();</span><br><span class="line">			conn.close();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="comment">/**SQLserver JDBC示例，sqlserver驱动：com.microsoft.sqlserver.jdbc.SQLServerDriver**/</span>	</span><br><span class="line">	<span class="comment">/** </span></span><br><span class="line"><span class="comment">	 * 1.SQLserver2012需要下载jar包sqljdbc41.jar</span></span><br><span class="line"><span class="comment">	 * 2.将auth下x64下的sqljdbc_auth.dll导入到Windows的system32中</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">TestSQLConnSqlServer</span><span class="params">()</span> <span class="keyword">throws</span> SQLException, ClassNotFoundException &#123;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">		</span><br><span class="line">			<span class="comment">//1.加载驱动 </span></span><br><span class="line">			Class.forName(<span class="string">&quot;com.microsoft.sqlserver.jdbc.SQLServerDriver&quot;</span>);</span><br><span class="line">			<span class="comment">//2.定义连接参数url,username,password</span></span><br><span class="line">			<span class="comment">/** SqlServer拼接url **/</span></span><br><span class="line">			<span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;jdbc:sqlserver://localhost:1433;&quot;</span> + </span><br><span class="line">			<span class="string">&quot;database=girl;integratedSecurity=true;&quot;</span>;</span><br><span class="line">			<span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> <span class="string">&quot;sa&quot;</span>;</span><br><span class="line">			<span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> <span class="string">&quot;123456&quot;</span>;</span><br><span class="line"></span><br><span class="line">			<span class="comment">//获取连接</span></span><br><span class="line">			conn = DriverManager.getConnection(url, username, password);</span><br><span class="line">			<span class="keyword">if</span>(<span class="literal">null</span> != conn) &#123;</span><br><span class="line">				log.info(<span class="string">&quot;connect database success...&quot;</span>);</span><br><span class="line">				System.out.println(<span class="string">&quot;连接成功！！！&quot;</span>);</span><br><span class="line">			&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">				log.error(<span class="string">&quot;connect database failed...&quot;</span>);</span><br><span class="line">				System.out.println(<span class="string">&quot;连接失败！！！&quot;</span>);</span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">			<span class="comment">//查询数据库</span></span><br><span class="line">			<span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select * from girl&quot;</span>;</span><br><span class="line">			<span class="comment">// 3.通过preparedStatement执行SQL</span></span><br><span class="line">			ps = conn.prepareStatement(sql);</span><br><span class="line">			</span><br><span class="line">			<span class="comment">// 4.执行查询,获取结果集</span></span><br><span class="line">			rs = ps.executeQuery();</span><br><span class="line">			<span class="comment">// 5.遍历结果集，前提是你的数据库创建了表以及有数据</span></span><br><span class="line">			<span class="keyword">while</span> (rs.next()) &#123;</span><br><span class="line">				<span class="comment">//对应表中字段类型</span></span><br><span class="line">				System.out.println(<span class="string">&quot;ID:&quot;</span> + rs.getString(<span class="string">&quot;ID&quot;</span>));</span><br><span class="line">				System.out.println(<span class="string">&quot;姓名：&quot;</span> + rs.getString(<span class="string">&quot;girl_name&quot;</span>));</span><br><span class="line">				System.out.println(<span class="string">&quot;年龄：&quot;</span> + rs.getString(<span class="string">&quot;girl_age&quot;</span>));</span><br><span class="line">				System.out.println(<span class="string">&quot;尺寸：&quot;</span> + rs.getString(<span class="string">&quot;cup_size&quot;</span>));</span><br><span class="line">				System.out.println(<span class="string">&quot;学号：&quot;</span> + rs.getString(<span class="string">&quot;stu_num&quot;</span>));</span><br><span class="line">			&#125;</span><br><span class="line">		&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">			<span class="comment">// 6.关闭连接 释放资源</span></span><br><span class="line">			rs.close();</span><br><span class="line">			ps.close();</span><br><span class="line">			conn.close();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="comment">/**MySQL JDBC示例，mysql驱动:com.mysql.jdbc.Driver**/</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">TestSQLConnMySQL</span><span class="params">()</span> <span class="keyword">throws</span> SQLException, ClassNotFoundException &#123;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			<span class="comment">//1.加载驱动 </span></span><br><span class="line">			Class.forName(<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>);</span><br><span class="line">			<span class="comment">// 2.定义连接参数&#123;url,username,password&#125;</span></span><br><span class="line">			<span class="comment">/** MySQL拼接url **/</span></span><br><span class="line">			<span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;jdbc:mysql://localhost:3306/test?useUnicode=true&amp;characterEncoding=utf-8&quot;</span>;</span><br><span class="line">			<span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> <span class="string">&quot;root&quot;</span>;</span><br><span class="line">			<span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> <span class="string">&quot;123456&quot;</span>;</span><br><span class="line">			<span class="keyword">if</span>(username!=<span class="string">&quot;root&quot;</span>) &#123;</span><br><span class="line">				System.err.println(<span class="string">&quot;用户名错误或者不存在！！！&quot;</span>);</span><br><span class="line">			&#125;<span class="keyword">else</span> <span class="keyword">if</span>(password != <span class="string">&quot;123456&quot;</span> &amp;&amp; password != <span class="literal">null</span>) &#123;</span><br><span class="line">				System.err.println(<span class="string">&quot;密码错误！！！&quot;</span>);</span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">			<span class="comment">//获取连接，传入参数&#123;url, username, password&#125;</span></span><br><span class="line">			conn = DriverManager.getConnection(url, username, password);</span><br><span class="line">			<span class="keyword">if</span>(<span class="literal">null</span> != conn) &#123;</span><br><span class="line">				log.info(<span class="string">&quot;connect database success...&quot;</span>);</span><br><span class="line">				System.out.println(<span class="string">&quot;连接成功！！！&quot;</span>);</span><br><span class="line">			&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">				log.error(<span class="string">&quot;connect database failed...&quot;</span>);</span><br><span class="line">				System.out.println(<span class="string">&quot;连接失败！！！&quot;</span>);</span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">			<span class="comment">//查询数据库</span></span><br><span class="line">			<span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select * from girl&quot;</span>;</span><br><span class="line">			<span class="comment">// 3.通过preparedStatement执行SQL</span></span><br><span class="line">			ps = conn.prepareStatement(sql);</span><br><span class="line">			</span><br><span class="line">			<span class="comment">// 4.执行查询,获取结果集</span></span><br><span class="line">			rs = ps.executeQuery();</span><br><span class="line">			<span class="comment">// 5.遍历结果集，前提是你的数据库创建了表以及有数据</span></span><br><span class="line">			<span class="keyword">while</span> (rs.next()) &#123;</span><br><span class="line">				<span class="comment">//对应表中字段类型</span></span><br><span class="line">				System.out.println(<span class="string">&quot;ID:&quot;</span> + rs.getString(<span class="string">&quot;ID&quot;</span>));</span><br><span class="line">				System.out.println(<span class="string">&quot;姓名：&quot;</span> + rs.getString(<span class="string">&quot;girl_name&quot;</span>));</span><br><span class="line">				System.out.println(<span class="string">&quot;年龄：&quot;</span> + rs.getString(<span class="string">&quot;girl_age&quot;</span>));</span><br><span class="line">				System.out.println(<span class="string">&quot;尺寸：&quot;</span> + rs.getString(<span class="string">&quot;cup_size&quot;</span>));</span><br><span class="line">				System.out.println(<span class="string">&quot;学号：&quot;</span> + rs.getString(<span class="string">&quot;stu_num&quot;</span>));</span><br><span class="line">			&#125;</span><br><span class="line">		&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">			<span class="comment">// 6.关闭连接 释放资源</span></span><br><span class="line">			rs.close();</span><br><span class="line">			ps.close();</span><br><span class="line">			conn.close();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<p>——END——</p>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL连接工具workbench</title>
    <url>/2021/04/11/MySQL%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7workbench/</url>
    <content><![CDATA[<p>MySQL工具篇介绍——workbench。</p>
<p>MySQL的可视化连接工具还是比较丰富的，大家所熟知的有phpMyAdmin（需要php环境支撑，免费的）；再就是MySQL官方提供的MySQL workbench可视化连接工具，虽然界面很简陋，但胜在是官方提供，功能齐全并且是免费的。其它的还有SQLyog，旗舰正版是收费的，我个人比较喜欢这款工具，用的很趁手；Navicat一样支持MySQL连接，但一样是收费的。</p>
<h1 id="MySQL工具篇"><a href="#MySQL工具篇" class="headerlink" title="MySQL工具篇"></a>MySQL工具篇</h1><p><strong>官方提供的sakila和world数据库</strong>，官网下载地址已经提供，可以下载进行参考学习。</p>
<p><strong>sakila-db数据库包含三个文件</strong>：</p>
<ul>
<li>sakila-schema.sql：数据库表结构</li>
<li>sakila-data.sql：数据库示例模拟数据</li>
<li>sakila.mwb：数据库物理模型，在MySQL workbench中可以打开查看。</li>
</ul>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZHMubXlzcWwuY29tL2RvY3Mvc2FraWxhLWRiLnppcA==">https://downloads.mysql.com/docs/sakila-db.zip<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p><strong>world-db数据库</strong>，表结构与data数据包含在一起：</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZHMubXlzcWwuY29tL2RvY3Mvd29ybGQtZGIuemlw">https://downloads.mysql.com/docs/world-db.zip<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<h2 id="一、MySQL工具的介绍"><a href="#一、MySQL工具的介绍" class="headerlink" title="一、MySQL工具的介绍"></a>一、MySQL工具的介绍</h2><h3 id="1、MySQL-workbench"><a href="#1、MySQL-workbench" class="headerlink" title="1、MySQL workbench"></a>1、MySQL workbench</h3><p>workbench下载地址，MySQL官方提供的可视化连接管理工具，并且支持新建以及查看物理模型。</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9kZXYubXlzcWwuY29tL2Rvd25sb2Fkcy93b3JrYmVuY2gv">https://dev.mysql.com/downloads/workbench/<i class="fa fa-external-link-alt"></i></span></p>
<p>mysql-workbench-community-8.0.28-winx64.msi</p>
</blockquote>
<h3 id="2、phpMyAdmin"><a href="#2、phpMyAdmin" class="headerlink" title="2、phpMyAdmin"></a>2、phpMyAdmin</h3><p>phpMyAdmin，提供MySQL在浏览器网页中访问的应用程序，需要php+MySQL(MariaDB)+phpMyAdmin环境支撑。不推荐在Windows上安装，因为在Windows上有很多的客户端图形可视化界面可选择。安装php7以上的版本，然后使用nginx或者Apache安装phpMyAdmin-5.1.2-all-languages.zip或者源码包。</p>
<p><strong>phpMyAdmin访问MySQL，官网demo示例</strong>：</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9kZW1vLnBocG15YWRtaW4ubmV0L21hc3Rlci1jb25maWcv">https://demo.phpmyadmin.net/master-config/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<h3 id="3、SQLyog"><a href="#3、SQLyog" class="headerlink" title="3、SQLyog"></a>3、SQLyog</h3><p>SQLyog连接工具下载地址</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly93ZWJ5b2cuY29tL3Byb2R1Y3Qvc3FseW9nL3RyaWFsLw==">https://webyog.com/product/sqlyog/trial/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p>部分界面展示：</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/99c9419851161f1d11c0469f94b326b3.png"></p>
<h3 id="4、Navicat-for-MySQL"><a href="#4、Navicat-for-MySQL" class="headerlink" title="4、Navicat for MySQL"></a>4、Navicat for MySQL</h3><p>Navicat部分界面以及功能展示，顺带提一下这玩意支持逆向生成EER关系模型图。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/d0986e09e73af6fa5440022d35b4bff5.png"></p>
<p>新建连接</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/d0de3bc11b1ba767411b83d066241740.png"></p>
<p>连接成功后的界面，导入了MySQL官方提供的示例数据库sakila和world，在文章开始我有提供官网下载地址。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/78da37685db647a36a2114d5dc20e9fd.png"></p>
<h3 id="5、MySQL的安装"><a href="#5、MySQL的安装" class="headerlink" title="5、MySQL的安装"></a>5、MySQL的安装</h3><p>MySQL installer下载地址，Windows下可下载zip包或者msi文件。msi文件对初学者来说比较友好，毕竟在Windows图形化界面安装基本上就是傻瓜式一键安装，注意安装目录不要放在C盘。个人比较倾向于zip包，熟悉命令安装比较快捷，然后配置my.ini文件即可。</p>
<p>MySQL官网下载地址，多种平台版本可选：Windows、Linux发行版以及macOS。</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9kZXYubXlzcWwuY29tL2Rvd25sb2Fkcy9teXNxbC8=">https://dev.mysql.com/downloads/mysql/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p>msi文件下载</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9kZXYubXlzcWwuY29tL2Rvd25sb2Fkcy9pbnN0YWxsZXIv">https://dev.mysql.com/downloads/installer/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p>个人MySQL8.0.28安装教程地址：</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vY253YW5nay9wLzE1ODYwNjg4Lmh0bWw=">https://www.cnblogs.com/cnwangk/p/15860688.html<i class="fa fa-external-link-alt"></i></span></p>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2Nud2FuZ2svU1FMLXN0dWR5L3RyZWUvbWFzdGVyL015U1FM">https://github.com/cnwangk/SQL-study/tree/master/MySQL<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<h2 id="二、MySQL-workbench安装"><a href="#二、MySQL-workbench安装" class="headerlink" title="二、MySQL workbench安装"></a>二、MySQL workbench安装</h2><p>主要介绍Windows下的msi文件安装。</p>
<p><strong>1、workbench图形化安装第一步</strong>，选择next（下一步）进行安装。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/5a60b4f0d860c7c0d9df640167fd3fd0.png"></p>
<p><strong>2、workbench图形化安装第二步</strong>，注意选择（change）安装目录，默认会安装到C盘，建议安装到D盘或者顺延。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/2fcee2a246e5d78bb6edb6b596ba80e0.png"></p>
<p><strong>3、workbench图形化安装第三步</strong>，指定安装目录，个人指定安装到D盘。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/2ccf164ba585ef5611812f2d05b0ce64.png"></p>
<p><strong>4、workbench图形化安装第四步</strong>、complete（代表完全安装，默认选择完全安装）；custom（自定义安装，根据自己的需求选择功能）。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/5dadd83be7b7c0e414b697d8e9ce87fd.png"></p>
<p>5、<strong>workbench图形化安装第五步</strong>，安装完成；左下角选中则会立即打开workbench，取消则不立即打开。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/e4ba54fc970a21edb25c61d61396ef93.png"></p>
<p>以上是在Windows下进行安装MySQL workbench的步骤，安装过程很简单，需要注意选择安装目录，不要放到C盘了。</p>
<h2 id="三、MySQL-workbench使用"><a href="#三、MySQL-workbench使用" class="headerlink" title="三、MySQL workbench使用"></a>三、MySQL workbench使用</h2><p>主要介绍界面调整以及基本的连接设置。</p>
<p><strong>1、workbench的欢迎界面</strong>，安装完成初次进入的首页。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/0a484170df8ddb6ea0d8b026739b28cd.png"></p>
<p><strong>2、连接MySQL</strong>，使用快捷键<strong>Ctrl + U</strong>打开连接配置界面。然后配置主机和端口以及用户名，连接到MySQL数据库。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/7cbde89c797e706a8da03302cb148cf8.png"></p>
<p><strong>3、界面优化设置</strong>，选择<strong>Edit</strong>，然后进入<strong>Preferences</strong>找到<strong>Fonts &amp; Colors</strong>。初始化界面字体太小了，进入调整界面字体大小；<strong>需要重启软件生效</strong>。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/ca4379709a149811bdba1ba5cbef5315.png"></p>
<p><strong>4、查看物理模型结构，显示EER模型</strong>，从官网获取的sakila数据库。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/363a30edaf77956c012bb10c2772aed7.png"></p>
<p><strong>5、打开EER diagram</strong>，查看图形界面</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/0f32cee143de5497fab33f465cf372dc.png"></p>
]]></content>
      <categories>
        <category>开发工具</category>
      </categories>
      <tags>
        <tag>workbench</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL数据库与Nacos搭建监控服务</title>
    <url>/2023/03/30/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%8ENacos%E6%90%AD%E5%BB%BA%E7%9B%91%E6%8E%A7%E6%9C%8D%E5%8A%A1/</url>
    <content><![CDATA[<p><a href="https://imgse.com/i/pp2dg74"><img data-src="https://s1.ax1x.com/2023/03/30/pp2dg74.png" alt="pp2dg74.png"></a></p>
<p>我相信有不少小伙伴已经用过eureka，那么问题来了，Nacos是个啥？</p>
<p>看到这个标题，MySQL数据库与Nacos搭建监控服务，它们有什么关系么？</p>
<p>其实是Nacos支持连接MySQL，内部已配置好数据源、连接池供我们使用。如果使用其它数据源（比如信创要求，使用达梦数据库比较多），可以通过插件形式适配，模仿MySQL实现方式。具体如何实现，可参考 Nacos 的 github issues。 </p>
<span id="more"></span>


<p><strong>MySQL是什么？</strong><br>一句话概括：一款社区活跃的开源数据库（database）软件，已被Oracle公司收购。</p>
<p><strong>nacos是什么？</strong></p>
<blockquote>
<p>一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台。</p>
</blockquote>
<p>nacos 官方文档：目前推荐2.x版本</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9uYWNvcy5pby96aC1jbi9kb2NzL3YyL3F1aWNrc3RhcnQvcXVpY2stc3RhcnQuaHRtbA==">https://nacos.io/zh-cn/docs/v2/quickstart/quick-start.html<i class="fa fa-external-link-alt"></i></span></p>
<p>nacos 样例<br><span class="exturl" data-url="aHR0cDovL2NvbnNvbGUubmFjb3MuaW8vbmFjb3MvaW5kZXguaHRtbCMvbG9naW4=">http://console.nacos.io/nacos/index.html#/login<i class="fa fa-external-link-alt"></i></span></p>
<p>默认用户名与密码均为：nacos</p>
<p><img data-src="https://s1.ax1x.com/2023/03/22/ppdImUH.png" alt="ppdImUH"></p>
<h3 id="Nacos部署"><a href="#Nacos部署" class="headerlink" title="Nacos部署"></a>Nacos部署</h3><h4 id="项目环境"><a href="#项目环境" class="headerlink" title="项目环境"></a>项目环境</h4><p>Nacos 依赖 <span class="exturl" data-url="aHR0cHM6Ly9kb2NzLm9yYWNsZS5jb20vY2QvRTE5MTgyLTAxLzgyMC03ODUxL2luc3RfY2xpX2pka19qYXZhaG9tZV90Lw==">Java<i class="fa fa-external-link-alt"></i></span> 环境来运行。如果你是一名开发人员，或许需要准备如下环境：</p>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9taXJyb3JzLmFsaXl1bi5jb20vYXBhY2hlL21hdmVuL21hdmVuLTMvP3NwbT1hMmM2aC4yNTYwMzg2NC4wLjAuMWYwNDEzNmZvVkxIUlo=">Maven 3.2.x+<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cub3JhY2xlLmNvbS9qYXZhL3RlY2hub2xvZ2llcy9kb3dubG9hZHMvI2phdmE4">64 bit JDK1.8+<i class="fa fa-external-link-alt"></i></span></li>
<li>64 bit OS，支持 Linux&#x2F;Unix&#x2F;Mac&#x2F;Windows，<strong>推荐选用 Linux&#x2F;Unix&#x2F;Mac</strong></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXQtc2NtLmNvbS9kb3dubG9hZHM=">Git 2.3.x<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>Git 版本不一定要与我保持一致，只要版本不是太老就行。</p>
<p><strong>主要以Linux平台作为演示环境</strong>。关于nacos 的获取（发行包、源码包），可以前往github开源仓库。</p>
<p>你可以通过<strong>源码</strong>和<strong>发行包</strong>两种方式来获取 Nacos。</p>
<p><strong>个人推荐</strong>：下载发行包。关于版本，使用稳定版本（<strong>通常有GA标识</strong>），个人习惯使用官方推荐的上一个小版本。有特殊需求可以下载源码包，修改源码重新编译。</p>
<p>从 Github 获取源码方式，使用<code>git clone</code>命令，<strong>值得注意的是你需要部署Git环境</strong>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/alibaba/nacos.git</span><br><span class="line"><span class="built_in">cd</span> nacos/</span><br><span class="line">mvn -Prelease-nacos -Dmaven.test.skip=<span class="literal">true</span> clean install -U  </span><br><span class="line"><span class="built_in">ls</span> -al distribution/target/</span><br><span class="line">// change the <span class="variable">$version</span> to your actual path</span><br><span class="line"><span class="built_in">cd</span> distribution/target/nacos-server-<span class="variable">$version</span>/nacos/bin</span><br></pre></td></tr></table></figure>



<p><strong>nacos开源仓库</strong>：<br><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2FsaWJhYmEvbmFjb3M=">https://github.com/alibaba/nacos<i class="fa fa-external-link-alt"></i></span></p>
<p>目前 nacos 最新稳定版是 2.2.4：<br><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2FsaWJhYmEvbmFjb3MvcmVsZWFzZXMvdGFnLzIuMi40">https://github.com/alibaba/nacos/releases/tag/2.2.4<i class="fa fa-external-link-alt"></i></span></p>
<p>当你看到这篇博文时，nacos 最新稳定版可能已经更新到 2.2.4 或者更高的版本。</p>
<p>下载很缓慢，可以使用在线工具箱加速，<span class="exturl" data-url="aHR0cHM6Ly93d3cubWludGltYXRlLmNuLw==">雨月空间站<i class="fa fa-external-link-alt"></i></span>（公共免费资源请适度使用）：<br><span class="exturl" data-url="aHR0cHM6Ly90b29sLm1pbnRpbWF0ZS5jbi9naC8=">https://tool.mintimate.cn/gh/<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>官方推荐版本为2.2.3</strong>：</p>
<blockquote>
<p>您可以在Nacos的<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2FsaWJhYmEvbmFjb3MvcmVsZWFzZXM=">release notes<i class="fa fa-external-link-alt"></i></span>及<span class="exturl" data-url="aHR0cHM6Ly9uYWNvcy5pby96aC1jbi9ibG9nL2luZGV4Lmh0bWw=">博客<i class="fa fa-external-link-alt"></i></span>中找到每个版本支持的功能的介绍，当前推荐的稳定版本为2.2.3。</p>
</blockquote>
<h4 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h4><p><strong>解压nacos</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">unzip nacos-server-<span class="variable">$version</span>.zip &amp; tar -zxvf nacos-server-<span class="variable">$version</span>.tar.gz</span><br><span class="line">unzip nacos-server-2.2.0.zip &amp; tar -zxvf nacos-server-2.2.0.tar.gz</span><br></pre></td></tr></table></figure>

<ul>
<li><p>$version指具体nacos版本号，比如具体版本：nacos-server-2.1.1。</p>
</li>
<li><p>Windows平台建议下载以 .zip结尾的压缩包：nacos-server-2.1.1.zip。</p>
</li>
<li><p>Linux平台建议下载以 .tar.gz 结尾的压缩包：nacos-server-2.1.1.tar.gz。</p>
</li>
</ul>
<p><strong>修改配置文件</strong></p>
<p>修改<code>conf</code>目录下的<code>application.properties</code>文件。</p>
<p>设置其中的<code>nacos.core.auth.plugin.nacos.token.secret.key</code>值，详情可查看鉴权-自定义密钥：</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9uYWNvcy5pby96aC1jbi9kb2NzL3YyL3BsdWdpbi9hdXRoLXBsdWdpbi5odG1s">https://nacos.io/zh-cn/docs/v2/plugin/auth-plugin.html<i class="fa fa-external-link-alt"></i></span></p>
<blockquote>
<p>注意，文档中的默认值<code>SecretKey012345678901234567890123456789012345678901234567890123456789</code>和<code>VGhpc0lzTXlDdXN0b21TZWNyZXRLZXkwMTIzNDU2Nzg=</code>为公开默认值，可用于临时测试，实际使用时请<strong>务必</strong>更换为自定义的其他有效值。</p>
</blockquote>
<p><strong>启动服务</strong></p>
<p>注：Nacos的运行需要以至少2C4g60g*3的机器配置下运行，集群模式3台双核CPU、4GB运行内存、60GB硬盘存储空间。</p>
<p><strong>Linux平台以单机模式启动nacos服务</strong>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sh startup.sh -m standalone</span><br></pre></td></tr></table></figure>

<p><strong>Windows平台以单机模式启动nacos服务</strong>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">startup.cmd -m standalone</span><br></pre></td></tr></table></figure>

<p>访问：<span class="exturl" data-url="aHR0cDovLzEyNy4wLjAuMTo4ODQ4L25hY29z">http://127.0.0.1:8848/nacos<i class="fa fa-external-link-alt"></i></span> 后，进入登录界面：</p>
<p><img data-src="https://s1.ax1x.com/2023/03/22/ppdImUH.png" alt="ppdImUH"></p>
<p><strong>服务注册、发现以及配置管理</strong></p>
<p><strong>服务注册</strong>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -X POST <span class="string">&#x27;http://127.0.0.1:8848/nacos/v1/ns/instance?serviceName=nacos.naming.serviceName&amp;ip=192.168.245.132&amp;port=8080&#x27;</span></span><br></pre></td></tr></table></figure>

<p>参数说明：</p>
<ul>
<li>serviceName：服务名</li>
<li>ip：配置自己远程地址</li>
<li>port：端口（外部访问需要放通）</li>
</ul>
<p><strong>服务发现</strong>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -X GET <span class="string">&#x27;http://127.0.0.1:8848/nacos/v1/ns/instance/list?serviceName=nacos.naming.serviceName&#x27;</span></span><br></pre></td></tr></table></figure>

<p><strong>发布配置</strong>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -X POST <span class="string">&quot;http://127.0.0.1:8848/nacos/v1/cs/configs?dataId=nacos.cfg.dataId&amp;group=test&amp;content=HelloWorld&quot;</span></span><br></pre></td></tr></table></figure>

<p>参数说明：</p>
<ul>
<li>dataId：数据Id。</li>
<li>group：组名。</li>
<li>content：发布配置输入的具体内容。</li>
</ul>
<p><strong>获取配置</strong>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -X GET <span class="string">&quot;http://127.0.0.1:8848/nacos/v1/cs/configs?dataId=nacos.cfg.dataId&amp;group=test&quot;</span></span><br></pre></td></tr></table></figure>

<p>控制台显示输出内容：HelloWorld，代表配置成功。</p>
<p>关于curl命令教程，可以去curl官网（curl.se）找一找，还是很常用的。</p>
<p><strong>关闭服务</strong></p>
<p>Linux平台：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sh shutdown.sh</span><br></pre></td></tr></table></figure>

<p>Windows平台：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">.\shutdown.cmd</span><br></pre></td></tr></table></figure>



<h4 id="nacos2-2-0版本配置说明"><a href="#nacos2-2-0版本配置说明" class="headerlink" title="nacos2.2.0版本配置说明"></a>nacos2.2.0版本配置说明</h4><p><strong>以nacos2.2.0版本为示例说明</strong><br>nacos配置文件，支持配置文件存储到数据库（DB）中保存。如果没有开放mysql数据源相应设置，默认使用本地存储数据源。</p>
<p>配置目录：<strong>\nacos-server-2.2.0\conf</strong>，文件清单，每个版本可能略微有所不同：</p>
<ul>
<li>application.properties</li>
<li>application.properties.example</li>
<li>derby-schema.sql</li>
<li>mysql-schema.sql</li>
<li>1.4.0-ipv6_support-update.sql</li>
<li>cluster.conf.example</li>
<li>nacos-logback.xml</li>
</ul>
<p><strong>配置基本说明</strong><br>以 .example 结尾，是示例配置，可供参考。以 update.sql 结尾的，则是sql更新脚本。</p>
<p>application.properties是nacos基本配置，例如端口、ip、数据源等等可以在此配置中修改，cluster.conf.example 是集群配置示例，nacos-logback.xml是日志相关配置。</p>
<p>mysql-schema.sql提供支持MySQL数据库SQL表结构，derby-schema.sql提供支持derby数据库SQL表结构。</p>
<p>如果和我一样使用的是MySQL数据库，<strong>需要注意的配置文件是application.properties和mysql-schema.sql</strong>，记住后续用得上。</p>
<p><strong>导入表结构</strong><br>新建数据库：库名命名为：nacos。编码最好指定为utf8mb4和utf8mb4_bin，避免导入后看到中文注释乱码。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> database nacos;</span><br></pre></td></tr></table></figure>

<p>导入sql脚本到新建的库nacos中：mysql-schema.sql。库名并不是固定的，可以根据实际需求更改，比如nacos_config。如果你是从旧版本升级上来的，可能需要执行SQL脚本：<strong>1.4.0-ipv6_support-update.sql</strong>。</p>
<p>上面聊到 nacos 可以在配置文件中配置数据源，当然必不可少，需要部署MySQL数据库。</p>
<p>找到<strong>application.properties</strong>配置文件，配置MySQL数据源：</p>
<p><img data-src="https://s1.ax1x.com/2023/03/22/ppdIlxP.png"></p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="comment">### If use MySQL as datasource: </span></span><br><span class="line"><span class="attr">spring.datasource.platform</span>=<span class="string">mysql                                                                         </span></span><br><span class="line"><span class="comment">### Count of DB:                                                                                             </span></span><br><span class="line"><span class="attr">db.num</span>=<span class="string">1                                                                   </span></span><br><span class="line"><span class="comment">### Connect URL of DB:</span></span><br><span class="line"><span class="attr">db.url.0</span>=<span class="string">jdbc:mysql://192.168.245.132:3306/nacos?characterEncoding=utf8&amp;connectTimeout=1000&amp;socketTimeout=3000&amp;autoReconnect=true&amp;useUnicode=true&amp;useSSL=false&amp;serverTimezone=UTC        </span></span><br><span class="line"><span class="attr">db.user.0</span>=<span class="string">root                                                                                            </span></span><br><span class="line"><span class="attr">db.password.0</span>=<span class="string">mypwd@123        </span></span><br></pre></td></tr></table></figure>

<p>很奇怪的一个问题，第一次使用，只导入初始化sql脚本MySQL数据源：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@Centos9-Stream ~]<span class="comment"># cat /usr/local/nacos-2.2.0/conf/mysql-schema.sql | mysql -uroot -p nacos</span></span><br></pre></td></tr></table></figure>

<p>nacos以单机模式启动：sh startup.sh -m standalone，启动无异常，正常访问。</p>
<p>MySQL数据库已设置自启，排查数据库正常启动。第二天启动centos-stream-9，再次启动 nacos 服务，出现无法设置数据源，尝试屏蔽数据源配置文件，启动正常。猜测可能是初始化脚本出问题了，执行升级sql脚本：1.4.0-ipv6_support-update.sql，再次启动nacos服务正常。</p>
<p>如果你和我一样，使用的是<strong>MySQL8.0.30</strong>版本数据库，可以参考。</p>
<p>如果遇到 <strong>Public Key Retrieval is not allowed</strong>，可能还需要加上 <strong>&amp;allowPublicKeyRetrieval&#x3D;true</strong>。</p>
<p>在github issues查找解决方案，提到可能是MySQL8.0.x设置时区的问题，将默认serverTimezone&#x3D;UTC修改为<strong>serverTimezone&#x3D;Asia&#x2F;Shanghai</strong>。</p>
<p><strong>如果配置好MySQL，但还是遇到数据源无法找到，也许是数据库导入脚本没有升级，也许是数据库版本和时区问题</strong>。</p>
<p>尝试重连，反复提醒 Public Key Retrieval 不被允许，反复提醒数据源没有设置。</p>
<p>java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.</p>
<p>Caused by: com.mysql.cj.exceptions.CJException: <strong>Public Key Retrieval is not allowed</strong></p>
<p>Caused by: com.alibaba.nacos.api.exception.NacosException: Nacos Server did not start because dumpservice bean construction failure ：<strong>No DataSource set</strong></p>
<p>Caused by: java.lang.IllegalStateException: <strong>No DataSource set</strong></p>
<p>Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name ‘externalDumpService’: Invocation of init  method failed; nested exception is ErrCode:500, ErrMsg:Nacos Server did not start because dumpservice bean construction failure ：<strong>No DataSource set</strong></p>
<p><strong>也有可能是MySQL版本问题和设置时区问题，连接配置做如下调整：</strong></p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="comment">### Connect URL of DB:</span></span><br><span class="line"><span class="attr">db.url.0</span>=<span class="string">jdbc:mysql://192.168.245.132:3306/nacos?characterEncoding=utf8&amp;connectTimeout=1000&amp;socketTimeout=3000&amp;autoReconnect=true&amp;useUnicode    =true&amp;allowPublicKeyRetrieval=true&amp;useSSL=false&amp;serverTimezone=Asia/Shanghai</span></span><br><span class="line"><span class="attr">db.user.0</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">db.password.0</span>=<span class="string">mypwd@123</span></span><br></pre></td></tr></table></figure>





<p>Linux终端执行命令导入升级脚本：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> /usr/local/nacos-2.2.0/conf/1.4.0-ipv6_support-update.sql | mysql -uroot -p nacos</span><br></pre></td></tr></table></figure>



<p><strong>问题排查</strong></p>
<p><strong>关于nacos大部分问题</strong>，可以在官方仓库的 issues 找到解决方案：</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2FsaWJhYmEvbmFjb3MvaXNzdWVz">https://github.com/alibaba/nacos/issues<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>总结配置数据源相关问题</strong>：</p>
<ol>
<li>导入初始化sql脚本缺失字段问题。</li>
<li>使用数据源配置jdbc，数据库时区设置问题。</li>
<li>MySQL8.0.x数据库默认密码使用缓存算法（caching_sha2_password）问题。</li>
</ol>
<h3 id="MySQL部署"><a href="#MySQL部署" class="headerlink" title="MySQL部署"></a>MySQL部署</h3><p>tips：下载注意使用带有GA（General Availability）标识，稳定版。</p>
<p>实际工作中，使用比较多的是下载离线安装包。安装方式主要有如下几种分类：</p>
<h4 id="安装方式"><a href="#安装方式" class="headerlink" title="安装方式"></a>安装方式</h4><p><strong>Windows平台</strong>：</p>
<ol>
<li>msi文件：直接双击进行安装，有可视化界面，安装较为容易，但不够灵活。</li>
<li>归档包（archive）：以zip格式进行压缩，类似于Linux中的二进制包。比较灵活，只需几个命令即可安装服务和实例化。</li>
<li>源码包（source package）：最灵活，可根据需求编译安装功能，难易度最高。</li>
<li>docker形式安装：其实是在容器中安装。</li>
</ol>
<p><strong>Linux平台</strong>：</p>
<ol>
<li>rpm &amp; deb 包安装：最为简单，但不灵活，适合初学者使用。</li>
<li>二进制包（binary package）：也称归档包（archive），编译好的源码包，比rpm包更灵活。个人认为是安装多个服务最佳选择。</li>
<li>源码包（source package）：最灵活，可根据需求编译安装功能，难易度最高。</li>
<li>docker形式安装：其实是在容器中安装。</li>
</ol>
<p>当然，MySQL同样支持macOS平台。</p>
<p>你也可以使用MySQL的妹妹MariaDB替代MySQL，是很好的选择。</p>
<p>由于测试使用，本人数据库使用比较新，MySQL8.0.30。说8.0新，其实也并不是很新，距离8.0第一个稳定版<span class="exturl" data-url="aHR0cHM6Ly9kZXYubXlzcWwuY29tL2RvYy9yZWxub3Rlcy9teXNxbC84LjAvZW4vbmV3cy04LTAtMTEuaHRtbA==">Changes in MySQL 8.0.11 (2018-04-19, General Availability)<i class="fa fa-external-link-alt"></i></span>快5年了。</p>
<p>目前市面上主要以MySQL5.7为主，离停止维护不远了，未来应该会逐渐升级为MySQL8.0.x。看到官网将MySQL5.6文档页面转移了，已停止版本更新。</p>
<p><strong>Windows 平台</strong></p>
<p>此处省略安装过程，请参考个人公众号以及站内的博文<a href="https://blog.cnwangk.top/2023/05/21/MySQL8-0-33-%E7%AE%80%E6%98%93%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/">《MySQL 8.0.33 简易安装教程》</a> ，有详细说明。</p>
<h4 id="Linux平台（CentOS-Stream-9）部署MySQL"><a href="#Linux平台（CentOS-Stream-9）部署MySQL" class="headerlink" title="Linux平台（CentOS-Stream-9）部署MySQL"></a>Linux平台（CentOS-Stream-9）部署MySQL</h4><p>此处我只演示<strong>Linux平台（CentOS-Stream-9）</strong>其中最方便的一种部署方式。</p>
<p><strong>Linux平台（CentOS-Stream-9）</strong></p>
<p>通过RHEL系列自带的命令服务安装管理工具，yum与dnf二选一即可。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install mysql-server-8.0.30</span><br><span class="line">dnf -y install mysql-server-8.0.30</span><br></pre></td></tr></table></figure>
<p>安装后，查看mysql服务状态，默认服务名为mysqld.service。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl status mysqld.service</span><br></pre></td></tr></table></figure>
<p><strong>默认没有启动，手动启动 mysqld 服务</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl start mysqld.service</span><br></pre></td></tr></table></figure>
<p><strong>登录mysql字符命令行界面</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql -uroot -p</span><br></pre></td></tr></table></figure>



<h4 id="调试防火墙管理工具"><a href="#调试防火墙管理工具" class="headerlink" title="调试防火墙管理工具"></a>调试防火墙管理工具</h4><p>如需远程登录，需要关闭防火墙相关服务，或者开放相应端口，个人建议采用开放相应端口</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=3306/tcp --permanent</span><br></pre></td></tr></table></figure>
<p>由于MySQL默认端口3306可能被黑客利用通用扫描软件攻击，建议实际工作中进行修改。或者利用隧道转发功能。<br>如果只是在本地使用，改与不改并不影响。</p>
<p><strong>重载firewalld服务</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure>



<h4 id="MySQL用户权限"><a href="#MySQL用户权限" class="headerlink" title="MySQL用户权限"></a>MySQL用户权限</h4><p><strong>设置开机自启</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> mysqld.service</span><br></pre></td></tr></table></figure>
<p>查看mysqld服务状态：看到enabled代表设置为自启</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl status mysqld.service</span><br></pre></td></tr></table></figure>

<p>如果使用第三方管理工具，需要开放相应用户权限才能登录MySQL：</p>
<p><strong>修改用户密码</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;mypwd@123&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p>创建用户root，主机地址%，匹配所有；如果是localhost，则只让本地使用，也可以是指定ip地址。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;mypwd@123&#x27;</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;mypwd@123&#x27;</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;192.168.245.132&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;mypwd@123&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p>授权root用户所有权限（ALL），即可使远程登录。同样可以指定特定权限，只给查询（select）。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">ON</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> <span class="keyword">WITH</span> <span class="keyword">GRANT</span> OPTION;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">ON</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> <span class="keyword">WITH</span> <span class="keyword">GRANT</span> OPTION;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">ON</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;192.168.245.132&#x27;</span> <span class="keyword">WITH</span> <span class="keyword">GRANT</span> OPTION;</span><br></pre></td></tr></table></figure>

<p>如果遇到第三方工具连接提示密码插件规则不被支持问题：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">WITH</span> mysql_native_password <span class="keyword">BY</span> <span class="string">&#x27;mypwd@123&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p><strong>刷新权限</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">flush privileges;</span><br></pre></td></tr></table></figure>

<p>更多权限细化设置请参考MySQL8.0.x官方文档第6章节Security。关于权限控制和账号（用户）管理介绍很详细。</p>
<blockquote>
<p>6.2 Access Control and Account Management</p>
</blockquote>
<p>更多安装方式，你还可以参考个人持续更新的笔记：</p>
<p><a href="https://blog.cnwangk.top/2023/03/15/MySQL8-0-x-%E7%AE%80%E6%98%93%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B">https://blog.cnwangk.top/2023/03/15/MySQL8-0-x-简易安装教程</a></p>
<h4 id="MySQL导入mysql-schema脚本"><a href="#MySQL导入mysql-schema脚本" class="headerlink" title="MySQL导入mysql-schema脚本"></a>MySQL导入mysql-schema脚本</h4><p>下面，将演示数据库创建以及<strong>sql脚本导入</strong>。</p>
<p><strong>登录</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql <span class="operator">-</span>uroot <span class="operator">-</span>p</span><br></pre></td></tr></table></figure>

<p><strong>创建数据库</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> database nacos;</span><br></pre></td></tr></table></figure>

<p><strong>导入数据，执行sql脚本</strong></p>
<p>关于数据导入，可以使用DB管理工具（MySQL workbench、DBeaver、SQLyog）连接导入，也可以使用cat或者zcat命令导入。</p>
<p><strong>演示Linux平台使用cat命令导入sql脚本</strong>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@Centos9-Stream ~]<span class="comment"># cat /usr/local/nacos-2.2.0/conf/mysql-schema.sql | mysql -uroot -p nacos</span></span><br></pre></td></tr></table></figure>

<p>原本我也不知道这种用法，联想到以前使用过zabbix监控工具。灵机一动，我也可以将nacos的sql脚本这样导入数据库中。</p>
<p><strong>查看nacos数据库表</strong>：验证是否导入成功</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> use nacos;</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> tables;</span><br></pre></td></tr></table></figure>



<h3 id="Springboot项目构建"><a href="#Springboot项目构建" class="headerlink" title="Springboot项目构建"></a>Springboot项目构建</h3><p><strong>如果你只是想体验nacos简单用法，可以跳过springboot项目集成nacos微服务</strong>。</p>
<p>如果你是软件实施、运维人员，可以关注nacos官方文档运维监控文档（运维指南）。</p>
<p>介绍很详细，我也觉得我很啰嗦了，这已经属于开发范畴了。</p>
<p><strong>目标</strong>：项目中集成nacos服务，使用nacos监控到打包好并正常运行服务健康情况。集成spring-cloud-starter-alibaba-nacos-discovery和spring-cloud-starter-alibaba-nacos-config。nacos-discovery是服务发现组件，nacos-config则是服务配置组件。</p>
<h4 id="项目环境-1"><a href="#项目环境-1" class="headerlink" title="项目环境"></a>项目环境</h4><p><strong>需要准备的环境</strong>：</p>
<ul>
<li>Maven 3.6.3</li>
<li>JDK17</li>
<li>Linux环境（CentOS9-Stream）</li>
</ul>
<p><strong>Linux平台安装JDK</strong></p>
<p>解压JDK</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar -zxvf jdk-17.0.4.1_linux-x64_bin.tar.gz</span><br></pre></td></tr></table></figure>

<p>配置全局环境变量：vim &#x2F;etc&#x2F;profile</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">JAVA_HOME=/usr/java/jdk17</span><br><span class="line">CLASS_PATH=.:<span class="variable">$JAVA_HOME</span>/jre/lib/rt.jar:<span class="variable">$JAVA_HOME</span>/lib/dt.jar:<span class="variable">$JAVA_HOME</span>/lib/tools.jar</span><br><span class="line">PATH=<span class="variable">$PATH</span>:<span class="variable">$JAVA_HOME</span>/bin</span><br><span class="line"><span class="built_in">export</span> JAVA_HOME CLASS_PATH PATH</span><br></pre></td></tr></table></figure>

<p>配置当前用户环境变量：<code>vim .bash_profile</code> 或者 <code>.bashrc</code>，加入配置全局变量我所列出的内容即可。</p>
<p><strong>执行 source 命令立即生效</strong>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure>

<p>关于环境变量更多配置可参考个人公众号关于JDK17的介绍。</p>
<p>验证版本：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure>



<p><strong>Linux平台安装maven</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install maven</span><br></pre></td></tr></table></figure>

<p>当然，你也可以到Maven官网下载打包好的二进制包，解压即可用。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">unzip apache-maven-3.6.3-bin.zip</span><br><span class="line"><span class="built_in">mv</span> apache-maven-3.6.3 /usr/local/</span><br></pre></td></tr></table></figure>

<p>加入环境变量：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Maven Home</span></span><br><span class="line">MAVEN_HOME=/usr/local/apache-maven-3.6.3</span><br><span class="line">PATH=<span class="variable">$PATH</span>:<span class="variable">$MAVEN_HOME</span>/bin</span><br><span class="line"><span class="built_in">export</span> MAVEN_HOME PATH</span><br></pre></td></tr></table></figure>

<p><strong>执行source命令立即生效</strong>：source &#x2F;etc&#x2F;profile </p>
<p><strong>查看版本</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@Centos9-Stream bin]<span class="comment"># mvn --version</span></span><br><span class="line">Apache Maven 3.6.3 (Red Hat 3.6.3-15)</span><br><span class="line">Maven home: /usr/share/maven</span><br><span class="line">Java version: 17.0.4.1, vendor: Oracle Corporation, runtime: /usr/java/jdk17</span><br><span class="line">Default locale: zh_CN, platform encoding: UTF-8</span><br><span class="line">OS name: <span class="string">&quot;linux&quot;</span>, version: <span class="string">&quot;5.14.0-148.el9.x86_64&quot;</span>, <span class="built_in">arch</span>: <span class="string">&quot;amd64&quot;</span>, family: <span class="string">&quot;unix&quot;</span></span><br></pre></td></tr></table></figure>

<p>看到以上环境，证明你的Maven环境已经部署好了。</p>
<p><strong>注意</strong>：默认Maven镜仓库地址很慢，需要更换，推荐阿里云镜像源。</p>
<p>修改Maven配置文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@Centos9-Stream bin]<span class="comment"># vim /usr/share/maven/conf/settings.xml</span></span><br></pre></td></tr></table></figure>

<p><strong>修改默认本地仓库存放目录</strong>：找到 <strong>localRepository</strong>，将如下内容开放：</p>
<p><img data-src="https://s1.ax1x.com/2023/03/22/ppdIn5d.png"></p>
<p>配置路径参考(Linux 平台)：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">localRepository</span>&gt;</span>/local/repo<span class="tag">&lt;/<span class="name">localRepository</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>配置路径参考(Windows 平台)：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">localRepository</span>&gt;</span>D:\Maven\repo<span class="tag">&lt;/<span class="name">localRepository</span>&gt;</span></span><br></pre></td></tr></table></figure>



<p><strong>配置Maven阿里镜像地址</strong>，加入如下配置，**注意是在<code>&lt;mirrors&gt; &lt;/mirrors&gt;</code>加入子节点<code>&lt;mirror&gt;&lt;/mirror&gt;</code>**：</p>
<p><img data-src="https://s1.ax1x.com/2023/03/22/ppdIQ2t.png"></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirrors</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>aliyunmaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun maven<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 老版本url --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--&lt;url&gt;https://maven.aliyun.com/nexus/content/groups/public/&lt;/url&gt;--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 新版本url --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>*<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span>        </span><br><span class="line">  <span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirrors</span>&gt;</span></span><br></pre></td></tr></table></figure>



<p>更多配置可以参考<span class="exturl" data-url="aHR0cHM6Ly9kZXZvcHMuYWxpeXVuLmNvbS8/Y2hhbm5lbD1tYXZlbi5hbGl5dW4=">阿里云云效<i class="fa fa-external-link-alt"></i></span> </p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9kZXZvcHMuYWxpeXVuLmNvbS8/Y2hhbm5lbD1tYXZlbi5hbGl5dW4=">阿里云云效<i class="fa fa-external-link-alt"></i></span> 是企业级一站式 DevOps 平台，覆盖产品从需求到运营的研发全生命周期，其中云效也提供了免费、可靠的Maven私有仓库 <span class="exturl" data-url="aHR0cHM6Ly9wYWNrYWdlcy5hbGl5dW4uY29tLz9jaGFubmVsPW1hdmVuLmFsaXl1bg==">Packages<i class="fa fa-external-link-alt"></i></span> 和代码管理仓库 <span class="exturl" data-url="aHR0cHM6Ly9jb2RldXAuYWxpeXVuLmNvbS8/Y2hhbm5lbD1tYXZlbjJjb2RldXBfcGQ=">Codeup<i class="fa fa-external-link-alt"></i></span>，欢迎您体验使用。</p>
<p>云效制品仓库 <span class="exturl" data-url="aHR0cHM6Ly9wYWNrYWdlcy5hbGl5dW4uY29tLz9jaGFubmVsPW1hdmVuLmFsaXl1bg==">Packages<i class="fa fa-external-link-alt"></i></span> 致力于帮助开发者统一管理各种开发语言在开发、构建过程中的依赖，构建成果（二进制制品）以及交付过程关键信息的重要组件。</p>
<p>云效代码管理 <span class="exturl" data-url="aHR0cHM6Ly9jb2RldXAuYWxpeXVuLmNvbS8/Y2hhbm5lbD1tYXZlbjJjb2RldXBfcGQ=">Codeup<i class="fa fa-external-link-alt"></i></span> 是阿里云出品的一款企业级代码管理平台，提供代码托管、代码评审、代码扫描、代码度量等功能，不限人数、超大容量且免费使用，全方位保护代码资产，帮助团队实现安全、稳定、高效的研发管理。</p>
</blockquote>
<table>
<thead>
<tr>
<th align="left">仓库名称</th>
<th align="left">阿里云仓库地址</th>
<th align="left">阿里云仓库地址(老版)</th>
<th align="left">源地址</th>
</tr>
</thead>
<tbody><tr>
<td align="left">central</td>
<td align="left"><span class="exturl" data-url="aHR0cHM6Ly9tYXZlbi5hbGl5dW4uY29tL3JlcG9zaXRvcnkvY2VudHJhbA==">https://maven.aliyun.com/repository/central<i class="fa fa-external-link-alt"></i></span></td>
<td align="left"><span class="exturl" data-url="aHR0cHM6Ly9tYXZlbi5hbGl5dW4uY29tL25leHVzL2NvbnRlbnQvcmVwb3NpdG9yaWVzL2NlbnRyYWw=">https://maven.aliyun.com/nexus/content/repositories/central<i class="fa fa-external-link-alt"></i></span></td>
<td align="left"><span class="exturl" data-url="aHR0cHM6Ly9yZXBvMS5tYXZlbi5vcmcvbWF2ZW4yLw==">https://repo1.maven.org/maven2/<i class="fa fa-external-link-alt"></i></span></td>
</tr>
<tr>
<td align="left">public</td>
<td align="left"><span class="exturl" data-url="aHR0cHM6Ly9tYXZlbi5hbGl5dW4uY29tL3JlcG9zaXRvcnkvcHVibGlj">https://maven.aliyun.com/repository/public<i class="fa fa-external-link-alt"></i></span></td>
<td align="left"><span class="exturl" data-url="aHR0cHM6Ly9tYXZlbi5hbGl5dW4uY29tL25leHVzL2NvbnRlbnQvZ3JvdXBzL3B1YmxpYw==">https://maven.aliyun.com/nexus/content/groups/public<i class="fa fa-external-link-alt"></i></span></td>
<td align="left">central仓和jcenter仓的聚合仓</td>
</tr>
<tr>
<td align="left">gradle-plugin</td>
<td align="left"><span class="exturl" data-url="aHR0cHM6Ly9tYXZlbi5hbGl5dW4uY29tL3JlcG9zaXRvcnkvZ3JhZGxlLXBsdWdpbg==">https://maven.aliyun.com/repository/gradle-plugin<i class="fa fa-external-link-alt"></i></span></td>
<td align="left"><span class="exturl" data-url="aHR0cHM6Ly9tYXZlbi5hbGl5dW4uY29tL25leHVzL2NvbnRlbnQvcmVwb3NpdG9yaWVzL2dyYWRsZS1wbHVnaW4=">https://maven.aliyun.com/nexus/content/repositories/gradle-plugin<i class="fa fa-external-link-alt"></i></span></td>
<td align="left"><span class="exturl" data-url="aHR0cHM6Ly9wbHVnaW5zLmdyYWRsZS5vcmcvbTIv">https://plugins.gradle.org/m2/<i class="fa fa-external-link-alt"></i></span></td>
</tr>
<tr>
<td align="left">apache snapshots</td>
<td align="left"><span class="exturl" data-url="aHR0cHM6Ly9tYXZlbi5hbGl5dW4uY29tL3JlcG9zaXRvcnkvYXBhY2hlLXNuYXBzaG90cw==">https://maven.aliyun.com/repository/apache-snapshots<i class="fa fa-external-link-alt"></i></span></td>
<td align="left"><span class="exturl" data-url="aHR0cHM6Ly9tYXZlbi5hbGl5dW4uY29tL25leHVzL2NvbnRlbnQvcmVwb3NpdG9yaWVzL2FwYWNoZS1zbmFwc2hvdHM=">https://maven.aliyun.com/nexus/content/repositories/apache-snapshots<i class="fa fa-external-link-alt"></i></span></td>
<td align="left"><span class="exturl" data-url="aHR0cHM6Ly9yZXBvc2l0b3J5LmFwYWNoZS5vcmcvc25hcHNob3RzLw==">https://repository.apache.org/snapshots/<i class="fa fa-external-link-alt"></i></span></td>
</tr>
</tbody></table>
<h4 id="项目构建"><a href="#项目构建" class="headerlink" title="项目构建"></a>项目构建</h4><p><strong>注意</strong>：如果使用IDE工具构建，注意springboot、spring cloud以及spring cloud alibaba版本对应关系。尽量使用阿里云云原生应用脚手架官网推荐的版本，有助于后期遇到问题排查。当然还有一个好处，选择组件时有中文说明，一目了然。</p>
<p>如果你对于IDE工具使用，实在有困难，可以在线构建。</p>
<p>两种在线脚手架构建方式：</p>
<ul>
<li>spring脚手架：<span class="exturl" data-url="aHR0cHM6Ly9zdGFydC5zcHJpbmcuaW8v">https://start.spring.io/<i class="fa fa-external-link-alt"></i></span></li>
<li>阿里云云原生应用脚手架：<span class="exturl" data-url="aHR0cHM6Ly9zdGFydC5hbGl5dW4uY29tLw==">https://start.aliyun.com/<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>个人还是比较推荐使用阿里云云原生应用脚手架构建，便于在线选择nacos 等微服务相关组件。</p>
<p><img data-src="https://s1.ax1x.com/2023/03/22/ppdIM8I.png"></p>
<p>springboot版本可以自己调试，目前已经支持springboot2.7.6和3.0.0配置。之前建议版本为springboot2.6.11，如果使用高版本，选择nacos相关组件时灰色的。</p>
<p><img data-src="https://s1.ax1x.com/2023/03/22/ppdIN5j.png"></p>
<p>构建完成，如何打包成jar（目前使用比较多的可能是 jar 包形式）？少不了 JD K和 Maven 环境，参考环境准备步骤。老项目是有不少使用 war 包形式。</p>
<p>解压下载好的springboot项目demo.zip</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">unzip demo.zip</span><br><span class="line"><span class="built_in">cd</span> demo</span><br></pre></td></tr></table></figure>

<p>执行Maven安装命令，这个过程可能有点缓慢，下载jar包越多，越耗时间：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@Centos9-Stream demo]<span class="comment"># mvn install</span></span><br></pre></td></tr></table></figure>



<p>如果新建的是单体应用，在根目录找到application.properties配置文件，如果构建mvc架构应用，则在demo-start子项目找到application.properties，然后修改spring.cloud.nacos.config.server-addr与spring.cloud.nacos.discovery.server-addr的IP地址。</p>
<p><strong>示例如下</strong>：</p>
<p><img data-src="https://s1.ax1x.com/2023/03/22/ppdItaQ.png"></p>
<p>有点纳闷，也许是我本地环境问题，之前很少使用阿里脚手架构建项目。感觉使用阿里云云原生应用脚手架构建，会出现某些jar包（openfeign）找不到，使用Maven打包出现主清单文件找不到的问题。自己一步一步构建，添加微服务组件，配置nacos则是正常的。</p>
<p>Maven打包遇到找不多依赖：</p>
<p><img data-src="https://s1.ax1x.com/2023/03/22/ppdIGqS.png"></p>
<p><strong>示例如下，引入openfeign</strong>：</p>
<p><img data-src="https://s1.ax1x.com/2023/03/22/ppdIYVg.png"></p>
<p><strong>如果不出意外，正常打包，可以使用 java -jar 执行jar服务</strong>。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">java -jar demo-web/target/demo-web-0.0.1-SNAPSHOT.jar</span><br></pre></td></tr></table></figure>

<p>在nacos控制台服务管理可以监控到服务，比如我搭建测试环境，给应用区名称为：springboot-test。</p>
<p>如果遇到控制台<strong>日志输出乱码</strong>的时候，此时不要慌，请冷静思考。</p>
<p>当然有<strong>解决方案</strong>，那就是在控制台执行 <code>Java -jar</code> 命令时使用参数  <code>-Dfile.encoding</code> 指定固定的编码，比如 utf-8 。</p>
<p>Windows 平台处理方式：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ java -jar -Dfile.encoding=utf-8 demo-1.0.jar &amp;</span><br></pre></td></tr></table></figure>

<p>Linux 平台处理方式：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">nohup</span> java -server -Xms256M -Xmx2048M -jar -Dfile.encoding=utf-8 demo-1.0.jar &amp;&gt; demo-1.0.l</span><br></pre></td></tr></table></figure>





<h4 id="Nacos联动测试"><a href="#Nacos联动测试" class="headerlink" title="Nacos联动测试"></a>Nacos联动测试</h4><p><strong>新建配置</strong>：springboot-test.properties</p>
<p><img data-src="https://s1.ax1x.com/2023/03/30/pp2dcBF.png"></p>
<p><strong>配置详情</strong>：配置的比较随意，参考看看就行</p>
<p><img data-src="https://s1.ax1x.com/2023/03/30/pp2dsXT.png"></p>
<p>当然，你也需要在controller层  Java 代码里加入如下匹配：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/** 使用动态配置获取测试 --BEGIN-- **/</span></span><br><span class="line">	</span><br><span class="line">	<span class="meta">@Value(&quot;$&#123;alibaba.config.discovery&#125;&quot;)</span></span><br><span class="line">	<span class="keyword">private</span> String discovery;</span><br><span class="line">	</span><br><span class="line">	<span class="meta">@Value(&quot;$&#123;alibaba.config.name&#125;&quot;)</span></span><br><span class="line">	<span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@GetMapping(&quot;/getConfig&quot;)</span></span><br><span class="line">	<span class="keyword">public</span> String <span class="title function_">getConfig</span><span class="params">()</span> &#123;</span><br><span class="line">		log.info(<span class="string">&quot;getConfig&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&quot;</span>);</span><br><span class="line">		<span class="keyword">return</span> <span class="string">&quot;getConfig&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&quot;</span> + <span class="string">&quot;发现：&quot;</span> + discovery + <span class="string">&quot;&gt;&gt;&gt;服务名称：&quot;</span> + name;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="meta">@Value(&quot;$&#123;custom.config.find&#125;&quot;)</span></span><br><span class="line">	<span class="keyword">private</span> String find;</span><br><span class="line">	</span><br><span class="line">	<span class="meta">@Value(&quot;$&#123;custom.config.say&#125;&quot;)</span></span><br><span class="line">	<span class="keyword">private</span> String say;</span><br><span class="line">	</span><br><span class="line">	<span class="meta">@GetMapping(&quot;/meet&quot;)</span></span><br><span class="line">	<span class="keyword">public</span> String <span class="title function_">meet</span><span class="params">()</span> &#123;</span><br><span class="line">		log.info(<span class="string">&quot;meet&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&quot;</span>);</span><br><span class="line">		<span class="keyword">return</span> <span class="string">&quot;meet&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&quot;</span> + <span class="string">&quot;偶遇老湿：&quot;</span> + find + <span class="string">&quot;&gt;&gt;&gt;你好：&quot;</span> + say;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line"><span class="comment">/** 使用动态配置获取测试 --END-- **/</span></span><br></pre></td></tr></table></figure>

<p>提供一种思路。可以根据业务情况而定，将多个配置封装到一个类里面，如下所示，新建CustomConf类：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * desc:对象配置类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Value</span> </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Component</span> <span class="doctag">@ConfigurationProperties</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@ConfigurationProperties(prefix = &quot;custom&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CustomConf</span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> Integer one;</span><br><span class="line">	<span class="keyword">private</span> Integer two;</span><br><span class="line">	<span class="keyword">private</span> Integer three;</span><br><span class="line">	<span class="keyword">private</span> String description;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 此处省略掉了 get set 方法，实际需要补上</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>使用到注解：</p>
<ul>
<li>@Value ：通常情况，使用注解取值。</li>
<li>@Component ：加入注解，便于被扫描到。</li>
<li>@ConfigurationProperties：引入配置，通过prefix指定配置前缀。</li>
</ul>
<p>在项目中注入：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> CustomConf custom;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/custom&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">custom</span><span class="params">()</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&quot;[custom] &quot;</span> + custom;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<p>准备好集成nacos服务的jar包：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@Centos9-Stream <span class="built_in">test</span>]<span class="comment"># ll springboot-nacos-cloud-0.0.1-SNAPSHOT.jar</span></span><br><span class="line">-rw-rw-r--. 1 kart kart 77534357  2月 12 18:44 springboot-nacos-cloud-0.0.1-SNAPSHOT.jar</span><br></pre></td></tr></table></figure>

<p><strong>运行服务</strong>：</p>
<ul>
<li>nohup：代表脱离终端运行</li>
<li>&amp;：代表放入后台</li>
<li><code>-Dspring.profiles.active=prod</code>：指定为生产环境</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@Centos9-Stream <span class="built_in">test</span>]<span class="comment"># nohup java -jar -Dspring.profiles.active=prod /opt/workspace/test/springboot-nacos-cloud-0.0.1-SNAPSHOT.jar  &gt; /opt/</span></span><br><span class="line">workspace/test/springboot-nacos.log 2&gt;&amp;1 &amp;</span><br><span class="line">[1] 4628</span><br></pre></td></tr></table></figure>

<p>测试接口：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://192.168.245.132:8082/t/getConfig</span><br></pre></td></tr></table></figure>

<p>你也可以使用curl命令请求：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -X GET http://192.168.245.132:8082/t/getConfig</span><br></pre></td></tr></table></figure>

<p>得到输出结果：</p>
<p>getConfig&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;发现：配置&gt;&gt;&gt;服务名称：nacos服务</p>
<p>查看日志验证：</p>
<p><img data-src="https://s1.ax1x.com/2023/03/30/pp2d6nU.png"></p>
<p>验证成功，getConfig日志打印出来了。</p>
<h3 id="Nacos监控（控制台）"><a href="#Nacos监控（控制台）" class="headerlink" title="Nacos监控（控制台）"></a>Nacos监控（控制台）</h3><p>官方文档比我演示介绍要更详细，如果进一步使用，请参考官方文档（运维指南）。</p>
<p><strong>控制台手册</strong>：<span class="exturl" data-url="aHR0cHM6Ly9uYWNvcy5pby96aC1jbi9kb2NzL2NvbnNvbGUtZ3VpZGUuaHRtbA==">https://nacos.io/zh-cn/docs/console-guide.html<i class="fa fa-external-link-alt"></i></span></p>
<h4 id="基本功能演示"><a href="#基本功能演示" class="headerlink" title="基本功能演示"></a>基本功能演示</h4><p><strong>nacos 功能比较丰富</strong>：</p>
<ul>
<li>配置管理：动态更新配置、查看历史版本、监听查询；</li>
<li>服务管理：查看、创建服务、查看订阅者列表；</li>
<li>权限列表：管理用户、角色、权限配置；</li>
<li>命名空间：默认保留空间（public）</li>
<li>集群管理：管理各个节点。</li>
</ul>
<p><strong>登录mysql，切换到nacos数据库</strong>，查看原始users表只有一条数据，存储nacos用户。</p>
<p>此处只演示一下连接上MySQL数据库后，在控制台左侧菜单栏找到权限控制，新建用户。</p>
<p><strong>示例如下</strong>：</p>
<p><img data-src="https://s1.ax1x.com/2023/03/22/ppdIKPA.png"></p>
<h4 id="验证数据库表"><a href="#验证数据库表" class="headerlink" title="验证数据库表"></a>验证数据库表</h4><p><strong>验证users表</strong>，发现多了一条数据，nacos_test成功存入到数据库，至此MySQL与nacos联动完成。</p>
<p><img data-src="https://s1.ax1x.com/2023/03/22/ppdI3Kf.png"></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> users\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">username: nacos</span><br><span class="line">password: $<span class="number">2</span>a$<span class="number">10</span>$EuWPZHzz32dJN7jexM34MOeYirDdFAZm2kuWj7VEOJhhZkDrxfvUu</span><br><span class="line"> enabled: <span class="number">1</span></span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">2.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">username: nacos_test</span><br><span class="line">password: $<span class="number">2</span>a$<span class="number">10</span>$<span class="number">5</span>F3NOcu2TFgdrBH0Av2iUuxbV9qBDihjmRt06163y5FTvPrErkWKS</span><br><span class="line"> enabled: <span class="number">1</span></span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>





<p><strong>新增配置，对照数据库表</strong></p>
<p><img data-src="https://s1.ax1x.com/2023/03/22/ppdI8r8.png"></p>
<ul>
<li>新增配置会保存在：nacos_config</li>
<li>历史配置会保存在：his_config_info</li>
<li>用户相关配置保存在：users</li>
<li>角色相关配置保存在：roles</li>
<li>权限相关配置保存在：permissions</li>
</ul>
<p>监控方法可以配合prometheus以及grafana使用。关于nacos更多用法，目前还在摸索中。</p>
<p>下面这张流程图思路，可供参考：</p>
<p><img data-src="https://s1.ax1x.com/2023/03/23/ppwyHDs.png" alt="ppwyHDs"></p>
<p><strong>参考资料</strong>：</p>
<ol>
<li>nacos2.x官方文档：<span class="exturl" data-url="aHR0cHM6Ly9uYWNvcy5pby96aC1jbi9kb2NzL3YyL3F1aWNrc3RhcnQvcXVpY2stc3RhcnQuaHRtbA==">https://nacos.io/zh-cn/docs/v2/quickstart/quick-start.html<i class="fa fa-external-link-alt"></i></span></li>
<li>nacos2.x github issues：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL25hY29zLWdyb3VwL25hY29zLWRvY2tlci9pc3N1ZXMvMjUx">https://github.com/nacos-group/nacos-docker/issues/251<i class="fa fa-external-link-alt"></i></span></li>
<li>MySQL8.0.x官方文档第6章节Security：<span class="exturl" data-url="aHR0cHM6Ly9kZXYubXlzcWwuY29tL2RvYy9yZWZtYW4vOC4wL2VuL2FjY2Vzcy1jb250cm9sLmh0bWw=">https://dev.mysql.com/doc/refman/8.0/en/access-control.html<i class="fa fa-external-link-alt"></i></span></li>
</ol>
<p>最后，希望对你的工作有所帮助。如果觉得写得还不错，可以点个小小的赞。</p>
<p>以上总结仅供参考。</p>
<p>——END——</p>
]]></content>
      <categories>
        <category>中间件</category>
      </categories>
      <tags>
        <tag>nacos</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL锁问题：MyISAM加表锁、并发插入以及锁调度</title>
    <url>/2022/04/07/MySQL%E9%94%81%E9%97%AE%E9%A2%98%EF%BC%9AMyISAM%E5%8A%A0%E8%A1%A8%E9%94%81%E3%80%81%E5%B9%B6%E5%8F%91%E6%8F%92%E5%85%A5%E4%BB%A5%E5%8F%8A%E9%94%81%E8%B0%83%E5%BA%A6/</url>
    <content><![CDATA[<p>主要介绍：MySQL锁、MyISAM表锁、查询表锁互掐、MySQL表锁模式、如何加（显示）表锁、模拟并发插入以及MyISAM锁调度的介绍。</p>
<p>只停留在看上面，提升效果甚微。应该带着思考去测试佐证，或者使用（同类书籍）新版本进行对比，这样带来的效果更好。最重要的一环，<strong>养成阅读官方文档</strong>，是一个良好的习惯。能编写官方文档，至少证明他们在这个领域是有很高的造诣，对用法足够熟练。</p>
<p>接着上一篇MySQL数据库SQL优化流程。在对MySQL进行举例并使用到示例数据库：大多数情况使用MySQL官方提供的sakila（模拟电影出租信息管理系统）和world数据库，类似于Oracle的scott用户。</p>
<p>如果没有进行特别说明，一般是基于MySQL8.0.28进行测试验证。官方文档非常具有参考意义。你可以将这篇博文，当成过度到MySQL8.0的参考资料。<strong>友情提示:经验是用来参考，但不是拿来即用</strong>。如果你能看到并分享这篇文章，我很荣幸。如果有误导你的地方，我表示抱歉。</p>
<p><strong>tips</strong>：图片资源可能被防盗链（寄）了，可以<strong>右键属性复制地址在地址栏查看</strong>哈。</p>
<span id="more"></span>

<p><img data-src="https://img-blog.csdnimg.cn/img_convert/9897445be9ccea40278b7827713ecfa6.png"></p>
<h1 id="MySQL锁问题——MyISAM表锁"><a href="#MySQL锁问题——MyISAM表锁" class="headerlink" title="MySQL锁问题——MyISAM表锁"></a>MySQL锁问题——MyISAM表锁</h1><p><strong>注意</strong>：在某些情况，你自己测试的结果可能与我演示有所不同，我省略了查询结果的部分参数。</p>
<p><strong>本文侧重点在SQL优化流程以及MySQL锁问题</strong>（MyISAM和InnoDB存储引擎）。图片可能会挂，演示时尽量使用SQL查询语句返回结果进行示例。篇幅很长，因此使用markdown语法加了目录。</p>
<p>如果你是从MySQL5.6或者5.7版本过渡到MySQL8.0。学习之前，建议线看官方文档这一章节：1.3 What Is New MySQL8.0 。在做对比的时候，<strong>文档中带有Note标识是你应该注意的地方</strong>。比如下面这张截图：</p>
<p><img data-src="https://img-blog.csdnimg.cn/7439166f7c74468e8ecb3f25391795ec.png#pic_center" alt="在这里插入图片描述"></p>
<h2 id="MyISAM锁问题"><a href="#MyISAM锁问题" class="headerlink" title="MyISAM锁问题"></a>MyISAM锁问题</h2><p><strong>简单概括锁</strong>：锁是计算机协调多个进程或线程并发访问某一资源的机制。</p>
<p>MySQL中的锁看上去用法和表面实现（对比其它DBMS），貌似很简单，但真正深入理解其实也不是那么容易。</p>
<h3 id="01-MySQL锁介绍"><a href="#01-MySQL锁介绍" class="headerlink" title="01 MySQL锁介绍"></a>01 MySQL锁介绍</h3><h4 id="1-1什么是锁"><a href="#1-1什么是锁" class="headerlink" title="1.1	什么是锁"></a>1.1	什么是锁</h4><p><strong>为何要使用锁</strong>？开发多用户、数据库驱动的应用时，难点（痛点）：一方面要最大程度地利用数据库的并发访问，另一方面还要<strong>确保每个用户能以一致的方式读取和修改数据</strong>。因此有了锁（locking）的机制，同时也是数据库系统区别于文件系统的一个关键特性。</p>
<p>在数据库中，除传统的计算资源（如CPU、RAM、I&#x2F;O等）的消耗外，数据也是一种供许多用户共享的资源。</p>
<p>如何保证数据并发访问的<strong>一致性</strong>、<strong>有效性</strong>是所有数据库必须解决的一个问题，<strong>锁冲突</strong>也是影响数据库并发访问性能的重要因素。从描述来看，锁对数据库显得尤为重要，也更加复杂。接下来，会对锁机制特点进行介绍、<strong>常见的锁问题</strong>，以及解决MySQL锁问题的方法。</p>
<h4 id="1-2MySQL锁"><a href="#1-2MySQL锁" class="headerlink" title="1.2	MySQL锁"></a>1.2	MySQL锁</h4><p>相比其它数据库来说，MySQL的锁机制相对好理解一点，其最显著的特点是不同的存储引擎支持不同锁机制。比如MyISAM和MEMORY存储引擎采用表级锁（table-level locking）；BDB存储引擎（MySQL8.0文档没看到介绍）采用页面锁（page-level locking），但也支持表级锁（table-level locking）；InnoDB存储引擎既支持行级锁（row-level locking），也支持表级锁，默认采用行级锁。</p>
<p><strong>MySQL中3种锁特性</strong>：</p>
<ul>
<li>表级锁：开销小，加锁块。不会出现死锁，锁粒度大，发生锁冲突概率最高，并发度最低。</li>
<li>行级锁：开销大，加锁慢。会出现死锁，锁粒度最小，发生锁冲突概率最低，并发度最高。</li>
<li>页面锁：开销和加锁时间介于表锁与行锁之间。会出现死锁，锁粒度介于表锁与行锁之间，并发度一般。</li>
</ul>
<p>从上述各种锁特点来看，不能一概而论哪种锁更好，但可以<strong>从具体应用特点来判断哪种锁更合适</strong>。</p>
<p>单从锁角度出发：表锁较为适合以查询为主，少量按索引条件更新数据的应用。行级锁更适合有大量按索引条件、并发更新少量不同数据，同时有并发查询的应用。</p>
<h3 id="02-MyISAM-表锁"><a href="#02-MyISAM-表锁" class="headerlink" title="02 MyISAM 表锁"></a>02 MyISAM 表锁</h3><p>MyISAM（存储引擎限制256TB）存储引擎只支持表锁，是MySQL开始几个版本中唯一支持的锁类型。</p>
<p>随着应用对事务完整性和并发性要求的不断提高，MySQL开发了基于事务存储引擎，后来出现了支持页面锁的BDB（逐渐被InnoDB替代，MySQL8.0文档已看不到介绍）存储引擎和支持行锁的InnoDB存储引擎。MyISAM表锁依旧是使用比较广泛的锁类型。</p>
<h4 id="2-1查询表锁互掐"><a href="#2-1查询表锁互掐" class="headerlink" title="2.1	查询表锁互掐"></a>2.1	查询表锁互掐</h4><p>通过检查Table_locks_waited和Table_locks_immediate状态变量来分析系统上表锁争抢：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> status <span class="keyword">like</span> <span class="string">&#x27;table%&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name              <span class="operator">|</span> <span class="keyword">Value</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> Table_locks_immediate      <span class="operator">|</span> <span class="number">164</span>   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Table_locks_waited         <span class="operator">|</span> <span class="number">0</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------------+-------+</span></span><br><span class="line">...</span><br><span class="line"><span class="number">5</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>



<p>如果<code>Table_locks_waited</code>值比较大，则说明存在严重的表锁争抢情况。</p>
<h4 id="2-2MySQL表锁模式"><a href="#2-2MySQL表锁模式" class="headerlink" title="2.2	MySQL表锁模式"></a>2.2	MySQL表锁模式</h4><p>MySQL表锁有两种模式：</p>
<ol>
<li>Table Read Lock：<strong>表共享读锁</strong>；</li>
<li>Table Write Lock：<strong>表独占写锁</strong>。</li>
</ol>
<p>MyISAM表读操作，不会阻塞其他用户对同一表的读请求，但会阻塞对同一表的写请求；对MyISAM表的写操作，则会阻塞其他用户对同一表的读和写操作。MyISAM表的读操作和写操作之间，以及与写操作之间是串行的。</p>
<p>当一个线程获得对一个表的写锁后，只有持有锁的线程可以对表进行更新操作。其它线程的读、写操作都会等待，直到被释放。</p>
<h4 id="2-3如何加表锁"><a href="#2-3如何加表锁" class="headerlink" title="2.3	如何加表锁"></a>2.3	如何加表锁</h4><p>MyISAM在执行查询（select）前，会自动给涉及的所有表加读锁；在执行更新（update、insert、delete等）操作前，会自动给涉及的表加写锁，这一过程并不需要用户干预。所以，一般情况不需要用户执行lock table命令给MyISAM显式加锁。</p>
<p><strong>下面只是演示一下加锁和解锁</strong>，阻塞示例。如果想测试，可以在创表时指定存储引擎为MyISAM，或者使用alter table命令修改存储引擎。例如修改city表存储引擎为MyISAM，使用<code>show create table</code>命令查看：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">alter</span> <span class="keyword">table</span> world.city engine<span class="operator">=</span>MyISAM;</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> city;</span><br></pre></td></tr></table></figure>



<p><strong>city表测试添加写锁</strong>（lock table write）</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> lock <span class="keyword">table</span> city write;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<p>当前session窗口，测试查询（select）、插入（insert）、修改（update）、删除（delete）均不受影响。</p>
<p>打开其它session窗口，测试增删改查均在等待中。分别给出查询上锁与解锁示例。</p>
<p>上了写锁（当前session），其它窗口查询显示等待中…</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/1d116b9eb4b82e61683414957d7f939b.png"></p>
<p><strong>解锁</strong>（当前session），其它session窗口查询正常并显示查询等待时间：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> unlock tables;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> city limit <span class="number">0</span>,<span class="number">1</span>;</span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">1</span> min <span class="number">33.43</span> sec)</span><br></pre></td></tr></table></figure>

<p><img data-src="https://img-blog.csdnimg.cn/img_convert/263bb98960880361660f708cd3dfaf6a.png"></p>
<p><strong>city表测试添加读锁</strong>（lock table read）</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> lock <span class="keyword">table</span> city read;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>



<p><strong>演示更新操作</strong>插入（insert）、修改（update）、删除（delete）：<strong>均提示有读锁</strong>（当前session）</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">insert</span> <span class="keyword">into</span> city <span class="keyword">values</span>(<span class="number">9527</span>,<span class="string">&#x27;ts&#x27;</span>,<span class="string">&#x27;ts&#x27;</span>,<span class="string">&#x27;ts&#x27;</span>,<span class="number">9527000</span>);</span><br><span class="line">ERROR <span class="number">1099</span> (HY000): <span class="keyword">Table</span> <span class="string">&#x27;city&#x27;</span> was locked <span class="keyword">with</span> a READ lock <span class="keyword">and</span> can<span class="string">&#x27;t be updated</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">mysql&gt; update city set name=&#x27;</span>Kabuls<span class="string">&#x27; where id=1;</span></span><br><span class="line"><span class="string">ERROR 1099 (HY000): Table &#x27;</span>city<span class="string">&#x27; was locked with a READ lock and can&#x27;</span>t be updated</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">delete</span> <span class="keyword">from</span> city <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span>;</span><br><span class="line">ERROR <span class="number">1099</span> (HY000): <span class="keyword">Table</span> <span class="string">&#x27;city&#x27;</span> was locked <span class="keyword">with</span> a READ lock <span class="keyword">and</span> can<span class="string">&#x27;t be updated</span></span><br></pre></td></tr></table></figure>



<p><strong>解锁</strong>（unlock）：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> unlock tables;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<p><strong>tips</strong>：添加读锁，当前session的新增、修改删除均会提示已经上了锁，查询其它未上锁表也会提示报错。</p>
<p>其它session窗口依旧可以查询、更新未上锁的表。锁住表不会提示，但是会在等待中。</p>
<p>使用lock table时，可能需要一次性锁定用到的所有表，同一个表出现多次，需要对别名锁定。</p>
<h4 id="2-4并发插入"><a href="#2-4并发插入" class="headerlink" title="2.4	并发插入"></a>2.4	并发插入</h4><p>整体上看，MyISAM表读和写是串行。在一定条件下，MyISAM表也支持查询和插入操作并发进行。</p>
<p>MyISAM存储引擎有一个系统变量concurrent_insert，用于控制其并发插入行为，值可以为0、1或2，默认为AUTO。</p>
<p>如下所示，使用select @@参数形式查询系统变量值：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> @<span class="variable">@concurrent_insert</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+</span></span><br><span class="line"><span class="operator">|</span> @<span class="variable">@concurrent_insert</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+</span></span><br><span class="line"><span class="operator">|</span> AUTO                <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+</span></span><br></pre></td></tr></table></figure>



<ol>
<li>当concurrent_insert设置为0：不允许并发插入。</li>
<li>当concurrent_insert设置为AUTO（or 1）：如果MyISAM表中间没有被删除的行，允许在一个进程读表的同时，另一个进程从表尾插入记录。也是MySQL默认设置AUTO（or 1）。</li>
<li>当concurrent_insert设置为2：无论MyISAM有无空洞（表中间没有被删除的行），都允许在表尾并发插入记录。</li>
</ol>
<p><strong>示例</strong>：其中一个session获得一张表read local锁，该线程可以对当前表进行查询，但不能进行更新操作。其它线程（session），虽然不能进行删除和更新操作，但可以进行插入（insert）操作。假定条件：表中间没有空洞。</p>
<p>其中一个线程（<strong>session1</strong>）获取锁：查询不受影响，不能做更新操作</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> lock <span class="keyword">table</span> xxls read <span class="keyword">local</span>;						<span class="comment">-- session1获取read local锁</span></span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> xxls limit <span class="number">0</span>,<span class="number">1</span>;					 <span class="comment">-- 查询一条数据（可行）</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">insert</span> <span class="keyword">into</span> xxls <span class="keyword">values</span>(<span class="number">1015</span>,<span class="string">&#x27;xxls&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="string">&#x27;B&#x27;</span>);	<span class="comment">-- 演示更新操作是拒绝的</span></span><br><span class="line">ERROR <span class="number">1099</span> (HY000): <span class="keyword">Table</span> <span class="string">&#x27;xxls&#x27;</span> was locked <span class="keyword">with</span> a READ lock <span class="keyword">and</span> can<span class="string">&#x27;t be updated</span></span><br></pre></td></tr></table></figure>

<p>另外一个线程（<strong>session2</strong>）演示：插入数据完成，不受影响</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">insert</span> <span class="keyword">into</span> xxls <span class="keyword">values</span>(<span class="number">1015</span>,<span class="string">&#x27;xxls&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="string">&#x27;B&#x27;</span>);</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.01</span> sec)</span><br></pre></td></tr></table></figure>

<p><strong>总结</strong>：可以利用MyISAM存储引擎并发插入特性解决应用中对同一表查询和插入锁争用。设置concurrent_insert值为2，总是允许并发插入。与此同时，通过定期在系统空闲时段（不活跃时段）执行optimize table整理空间碎片，回收删除记录产生的空洞。</p>
<p><strong>optimize用法如下</strong>：注意如果有读锁情况下，是不能进行操作的。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> optimize <span class="keyword">table</span> tolove;	<span class="comment">-- 优化tolove表</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+----------+----------+----------+</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">Table</span>       <span class="operator">|</span> Op       <span class="operator">|</span> Msg_type <span class="operator">|</span> Msg_text <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+----------+----------+----------+</span></span><br><span class="line"><span class="operator">|</span> test.tolove <span class="operator">|</span> optimize <span class="operator">|</span> status   <span class="operator">|</span> OK       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+----------+----------+----------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">1.24</span> sec)</span><br></pre></td></tr></table></figure>



<p>更多详细描述（MySQL8.0）可以参考：</p>
<blockquote>
<p>第5章节：5.1.8	Server System Variables（服务系统变量）</p>
<p>摘自：refman-8.0-en.pdf</p>
</blockquote>
<h4 id="2-5MyISAM锁调度"><a href="#2-5MyISAM锁调度" class="headerlink" title="2.5	MyISAM锁调度"></a>2.5	MyISAM锁调度</h4><p>MyISAM存储引擎读锁与写锁互斥，读写操作串行。</p>
<p>一个进程请求某MyISAM表读锁，另一个进程请求同一表写锁，MySQL能友好的处理么？</p>
<p>答案是<strong>写进程先获得锁</strong>。即使读请求先等等待（排队时，读在前），写在后等的不耐烦了。读你给我挪挪位，写优先插队进入队列中。个人认为写锁优先是合理的，毕竟写（更新操作：insert、update、delete）比较重要，如何在最大限度保证数据完整性、一致性。</p>
<p><strong>写锁优先，MySQL认为写请求一般比读请求重要</strong>。这也是为什么MyISAM表不适合同时有大量更新操作和查询操作的原因。大量更新操作会造成查询操作很难获得读锁，导致永远阻塞。好在可以通过一些系统参数来调节MyISAM调度行为。通过指定参数<code>low_priority_updates</code>，让MyISAM存储引擎默认给予读请求优先权利。</p>
<p><strong>给出官方文档设置示范</strong>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> @<span class="variable">@low_priority_updates</span>;	<span class="comment">-- 查询出默认值是0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--low-priority-updates[=&#123;OFF|ON&#125;] 		-- 命令行格式，也可以在配置文件中进行设置</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span> low_priority_updates<span class="operator">=</span><span class="number">1</span>				<span class="comment">-- 在字符界面临时设置值，设置为1，降低连接发出更新请求</span></span><br></pre></td></tr></table></figure>



<p>另外MySQL提供了折中方法调节锁冲突，给系统参数<code>max_write_lock_count</code>设置合适值。当一张表读锁达到这个值后，MySQL暂时将写请求优先级降低，给读进程（session）获得锁的机会。</p>
<p>也不能太依赖一条SQL查询语句解决问题，适当进行拆分成中间表进行合理控制查询时间。有些复杂查询（统计）操作是无法避免的，但可以人为定时操作，在夜深人静之时（凌晨），悄无声息执行。如果你是一名Java开发人员，或许在配置文件（xml、yml）中应该做过这种操作。</p>
<h3 id="03MySQL官方示例数据库"><a href="#03MySQL官方示例数据库" class="headerlink" title="03	MySQL官方示例数据库"></a>03	MySQL官方示例数据库</h3><p>给出<strong>sakila-db数据库</strong>包含三个文件，便于大家获取与使用：</p>
<ol>
<li>sakila-schema.sql：数据库表结构；</li>
<li>sakila-data.sql：数据库示例模拟数据；</li>
<li>sakila.mwb：数据库物理模型，在MySQL workbench中可以打开查看。</li>
</ol>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZHMubXlzcWwuY29tL2RvY3Mvc2FraWxhLWRiLnppcA==">https://downloads.mysql.com/docs/sakila-db.zip<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p><strong>只是用于用于简单测试学习，建议使用world-db</strong>：</p>
<p><strong>world-db数据库</strong>，包含三张表：city、country、countrylanguage。</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZHMubXlzcWwuY29tL2RvY3Mvd29ybGQtZGIuemlw">https://downloads.mysql.com/docs/world-db.zip<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p>最后附上官方示例数据库，<strong>sakila-db数据库</strong>一个非常完整的示例。包含：视图、函数、触发器以及存储过程，当然也存在使用外键。</p>
<p><strong>参考资料&amp;鸣谢</strong>：</p>
<blockquote>
<p>《深入浅出MySQL 第2版 数据库开发、优化与管理维护》。</p>
<p>《MySQL技术内幕InnoDB存储引擎 第2版》。</p>
<p>MySQL8.0官网文档：refman-8.0-en.pdf，如果学习新版本，官方文档是非常不错的选择。</p>
</blockquote>
<p>虽然书籍年份比较久远（停留在MySQL5.6.x版本），但仍然具有借鉴意义。</p>
<p>最后，对以上书籍和官方文档所有作者表示衷心感谢。让我充分体会到：前人栽树，后人乘凉。</p>
<h1 id="莫问收获，但问耕耘"><a href="#莫问收获，但问耕耘" class="headerlink" title="莫问收获，但问耕耘"></a>莫问收获，但问耕耘</h1><p><strong>能看到这里的，都是帅哥靓妹</strong>。以上是本次MySQL优化篇（上部分）全部内容，希望能对你的工作与学习有所帮助。感觉写的好，就拿出你的一键三连。如果感觉总结的不到位，也希望能留下您宝贵的意见，我会在文章中定期进行调整优化。<strong>好记性不如烂笔头，多实践多积累</strong>。<strong>你会发现，自己的知识宝库越来越丰富</strong>。原创不易，转载也请标明出处和作者，尊重原创。</p>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>Nacos prometheus grafana</title>
    <url>/2023/04/19/Nacos-prometheus-grafana/</url>
    <content><![CDATA[<p>进入主题之前，先了解 Nacos prometheus grafana。</p>
<p><img data-src="https://s1.ax1x.com/2023/04/21/p9EDJ3Q.png"></p>
<span id="more"></span>

<p><strong>nacos 是什么？</strong></p>
<blockquote>
<p>一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台。</p>
</blockquote>
<p>nacos 最新稳定版本更新到了 2.2.2 ，官方推荐使用 nacos 2.1.1 。</p>
<p><strong>prometheus 是什么</strong>？</p>
<blockquote>
<p>From metrics to insight<br>Power your metrics and alerting with the leading<br>open-source monitoring solution.</p>
</blockquote>
<p>大意是，从监控到洞察力。利用领先的开源监控解决方案，让你的监控和警报发挥作用。</p>
<p>prometheus 最新稳定版本更新到了 2.4.3，你可以选择使用长期支持版本 2.3.7（LTS）.</p>
<p><strong>grafana 是什么</strong>？</p>
<blockquote>
<p>Operational dashboards for your data here, there, or anywhere</p>
</blockquote>
<p>大意是，在任何位置将你的数据以仪表板（控制面板）形式展现出来。</p>
<p>grafana 最新稳定版本更新到了 9.4.7 。</p>
<p>可在博客园，个人公众号以及站内搜索前两篇，此篇为nacos系列文章第三篇：《运维篇：<strong>Nacos prometheus grafana</strong>》</p>
<p>当你再次看到这张流程图时，第三篇运维相关知识终于磨出来了：</p>
<p><img data-src="https://s1.ax1x.com/2023/03/23/ppwyHDs.png"></p>
<p><strong>整体思路，个人nacos系列博文一共分为三篇</strong>：</p>
<ul>
<li>基础篇：《MySQL数据库与Nacos搭建监控服务》，Nacos与MySQL基本介绍。</li>
<li>开发篇：《开发篇：springboot与微服务组件nacos》，从代码开始构建，集成微服务组件。</li>
<li>运维篇：《运维篇：nacos prometheus grafana》，服务监控篇，主要以Linux发行版为主。</li>
</ul>
<p>不同的场景有不同的解决方案，按需（调研）适配spring、springboot、springcloud集成nacos。</p>
<h1 id="springboot与微服务组件nacos"><a href="#springboot与微服务组件nacos" class="headerlink" title="springboot与微服务组件nacos"></a>springboot与微服务组件nacos</h1><p>此处主要以Linux（centos-stream-9）环境为主。如果非要在Windows平台使用，也是可以的。本人也在Windows平台测试过，同样可以正常运行。只是官方目前并不推荐在Windows平台使用，可能是还不够稳定吧。</p>
<p>个人在测试环境下，用过三个版本：</p>
<ul>
<li>nacos 2.0.3</li>
<li>nacos 2.1.1</li>
<li>nacos 2.2.0</li>
</ul>
<p>目前，2.2.x 版本UI变化比较大，更加优美。</p>
<h2 id="Linux服务器部署springboot项目"><a href="#Linux服务器部署springboot项目" class="headerlink" title="Linux服务器部署springboot项目"></a>Linux服务器部署springboot项目</h2><p>当你测试时，需要准备测试使用的环境。比如maven打包好的 jar 包，如何上传部署？</p>
<p><strong>上传文件方法</strong>：</p>
<ul>
<li>方式一：已知服务器用户名和密码（具有相关权限），可以使用 scp 命令上传。</li>
<li>方式二：已知服务器用户名和密码（具有相关权限），可以使用工具 WinSCP、FileZilla等工具上传文件。</li>
</ul>
<p>如下是WinSCP界面，两种方式：</p>
<ul>
<li>左右方式，Windows窗口在左边，Linux服务器窗口在右边，支持拖拽和复制粘贴。</li>
<li>只显示远程目录形式，支持拖拽。</li>
</ul>
<p><img data-src="https://s1.ax1x.com/2023/04/20/p9ADez9.png"></p>
<p><strong>测试环境</strong></p>
<ul>
<li>Linux（centos-stream-9）</li>
<li>JDK17：支撑springboot服务启动</li>
<li>Nacos 2.1.1 ：监控发现springboot服务</li>
</ul>
<p><strong>解压JDK &amp; 配置环境变量</strong>（如果仅仅为了测试可以不配置环境变量，采用指定服务路径形式）</p>
<p>RHEL体系shell环境变量调用顺序：</p>
<p><img data-src="https://s1.ax1x.com/2023/04/20/p9kLfrq.png"></p>
<p>配置全局环境变量：<code>vim /etc/profile</code>，配置当前用户环境变量：<code>vim .bash_profile</code> 或者 .bashrc，加入配置全局变量我所列出的内容即可。什么时候配置全局用户，什么时候配置当前用户，各有各的应用场景。</p>
<ul>
<li><p>比如配置当前用户环境变量，我只在 test 用户配置测试，就不给你 demo 用户进行测试，我们互不干扰。</p>
</li>
<li><p>比如配置全局用户环境变量，我既要 test 用户配置测试，我又要 demo 用户进行测试，还要在 root 用户下使用，我全都要。</p>
</li>
</ul>
<p><strong>如下分4步优化操作</strong>：</p>
<ol>
<li>解压jdk ：<code>tar  -zxvf  jdk-17.0.4.1_linux-x64_bin.tar.gz</code></li>
<li>简化应用名称：<code>mv  jdk-17.0.4.1_linux-x64_bin  jdk17</code></li>
<li>新建部署目录：<code>mkdir  -p  /usr/java</code></li>
<li>指定部署目录：<code>mv  jdk17  /usr/java/</code></li>
</ol>
<p><strong>介绍配置全局环境变量</strong>：<code>vim /etc/profile</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">JAVA_HOME=/usr/java/jdk17</span><br><span class="line">CLASS_PATH=.:<span class="variable">$JAVA_HOME</span>/jre/lib/rt.jar:<span class="variable">$JAVA_HOME</span>/lib/dt.jar:<span class="variable">$JAVA_HOME</span>/lib/tools.jar</span><br><span class="line">PATH=<span class="variable">$PATH</span>:<span class="variable">$JAVA_HOME</span>/bin</span><br><span class="line"><span class="built_in">export</span> JAVA_HOME CLASS_PATH PATH</span><br></pre></td></tr></table></figure>



<p><strong>执行 source 命令立即生效</strong>：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure>

<p>关于环境变量更多配置可参考个人站内或者公众号关于JDK17的简单介绍。</p>
<p><strong>验证Java版本</strong></p>
<p>配置了环境变量：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure>

<p>未配置环境变量：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/usr/java/jdk-17.0.4.1/bin/java -version</span><br></pre></td></tr></table></figure>


<p>解压Nacos Server 并剪切到 &#x2F;usr&#x2F;local&#x2F; 目录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar -zxvf nacos-server-2.1.1.tar.gz</span><br><span class="line"><span class="built_in">mv</span> nacos /usr/local/</span><br></pre></td></tr></table></figure>

<p><strong>启动nacos服务（非集群模式）</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/local/nacos/bin/</span><br><span class="line">sh startup.sh -m standalone</span><br></pre></td></tr></table></figure>

<p><strong>新建测试目录</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /opt/test  /opt/sh</span><br></pre></td></tr></table></figure>

<p>执行命令脱离终端运行，并输出日志到指定文件 &#x2F;opt&#x2F;test&#x2F;springboot.log</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@Centos9-Stream ~]<span class="comment"># nohup /usr/java/jdk-17.0.4.1/bin/java -jar /opt/test/springboot-test-0.0.1-SNAPSHOT.jar  &gt;&gt; /opt/test/springboot.log 2&gt;&amp;1 &amp;</span></span><br></pre></td></tr></table></figure>

<p><strong>编辑脚本</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /opt/sh/start_springboot_demo.sh</span><br></pre></td></tr></table></figure>

<p><strong>写入到脚本</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">nohup</span> /usr/java/jdk-17.0.4.1/bin/java -jar /opt/test/springboot-test-0.0.1-SNAPSHOT.jar  &gt;&gt; /opt/test/springboot.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure>

<p><strong>curl命令测试接口</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">PS</span> D:\work&gt; <span class="built_in">curl</span> http://<span class="number">192.168</span>.<span class="number">245.132</span>:<span class="number">8081</span>/demo/getStu</span><br><span class="line">&#123;<span class="string">&quot;code&quot;</span>:<span class="number">0</span>,<span class="string">&quot;msg&quot;</span>:<span class="string">&quot;成功&quot;</span>,<span class="string">&quot;data&quot;</span>:&#123;<span class="string">&quot;id&quot;</span>:<span class="string">&quot;d5e52f71-67f0-499a-acf9-574ec14ffbe6&quot;</span>,<span class="string">&quot;name&quot;</span>:<span class="string">&quot;梦梦&quot;</span>,<span class="string">&quot;sex&quot;</span>:<span class="string">&quot;女&quot;</span>,<span class="string">&quot;age&quot;</span>:<span class="number">16</span>&#125;&#125;</span><br></pre></td></tr></table></figure>

<p><strong>使用 cat 命令查看日志</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span>  /opt/test/springboot.log </span><br></pre></td></tr></table></figure>

<p>使用 <code>vim</code> 查看</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim  /opt/test/springboot.log</span><br></pre></td></tr></table></figure>

<p>使用 <code>tail</code> 命令查看</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">tail</span> -f /opt/test/springboot.log</span><br><span class="line"><span class="built_in">tail</span> -n 5 /opt/test/springboot.log</span><br></pre></td></tr></table></figure>

<p><strong>tail 参数</strong>：-n代表查看多少条日志信息，我只想查看最近的5条数据，使用 tail -n 5。</p>
<h2 id="Springboot启动服务指定参数"><a href="#Springboot启动服务指定参数" class="headerlink" title="Springboot启动服务指定参数"></a>Springboot启动服务指定参数</h2><p><strong>注意</strong>：带参运行方式，开发或者测试时，可以运用上，便于调试。</p>
<ul>
<li>参数一：<code>--server.port=9999</code> 代表指定服务端口运行，不添加则使用默认设置服务端口</li>
<li>参数二：<code>-Dspring.profiles.active=prod</code> 指定环境(dev：开发环境、prod：生产环境、test：测试环境）</li>
</ul>
<h3 id="Windows-平台"><a href="#Windows-平台" class="headerlink" title="Windows 平台"></a>Windows 平台</h3><p>指定服务API端口：<code>--server.port=9999</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">java -jar springboot-test-nacos.jar --server.port=9999</span><br></pre></td></tr></table></figure>

<p>指定服务运行（生产）环境：<code>-Dspring.profiles.active=prod</code></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">java <span class="literal">-jar</span> <span class="string">&quot;-Dspring.profiles.active=prod&quot;</span> demo<span class="literal">-0</span>.<span class="number">0.1</span><span class="literal">-SNAPSHOT</span>.jar</span><br></pre></td></tr></table></figure>



<h3 id="Linux-平台"><a href="#Linux-平台" class="headerlink" title="Linux 平台"></a>Linux 平台</h3><p>采用默认形式指定运行（生产）环境，输出日志到 test.log 文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">nohup</span> java -jar -Dspring.profiles.active=prod demo-0.0.1-SNAPSHOT.jar &gt; test.log 2&gt;&amp;1 &amp; </span><br></pre></td></tr></table></figure>

<p>采用默认形式运行服务并指定服务端口，输出日志到 test.log 文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">nohup</span> java -jar springboot-test-nacos.jar --server.port=9999 &gt; test.log 2&gt;&amp;1 &amp; </span><br></pre></td></tr></table></figure>

<p>采用指定 jdk 路径，指定运行（生产）环境，输出日志到 test.log 文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">nohup</span> /usr/java/jdk-17.0.4.1/bin/java -jar /opt/test/springboot-test-0.0.1-SNAPSHOT.jar  &gt; /opt/test/springboot.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure>





<h2 id="监控运行中的服务"><a href="#监控运行中的服务" class="headerlink" title="监控运行中的服务"></a>监控运行中的服务</h2><p>无论是 Linux 平台还是 Windows 平台，<code>netstat</code> 命令基本用法还是需要掌握的，对于开发、测试、运维都比较重要。</p>
<p>使用 netstat 监控如下服务：</p>
<ul>
<li>nacos：监控springboot服务 </li>
<li>prometheus：采集数据 ，个人使用的版本为 2.37.1</li>
<li>grafana：图形化（仪表板）展示数据 ，个人使用版本为 9.3.0，目前9.3.x版本已经更新到 9.3.11</li>
</ul>
<p>关于 nacos 服务部署以及设置MySQL数据源，此篇不再赘述。可以参考前两篇博文，有介绍，可在公众号内搜索到。</p>
<h3 id="Windows-平台-1"><a href="#Windows-平台-1" class="headerlink" title="Windows 平台"></a>Windows 平台</h3><p><strong>Windows 平台查询运行中的nacos服务</strong></p>
<p>通过Windows terminal打开powershell或者CMD，使用netstat命令配合findstr查询nacos使用到的端口：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">netstat -ano | findstr 8848;netstat -ano | findstr 9848;netstat -ano | findstr 9849</span><br></pre></td></tr></table></figure>

<p><img data-src="https://s1.ax1x.com/2023/04/20/p9kLXs1.png"></p>
<p>查阅官方文档，发现Nacos2.0版本相比1.X新增了gRPC的通信方式，因此需要增加2个端口。新增端口是在配置的主端口(server.port)基础上，进行一定偏移量自动生成。偏移量分别为：+1000，+1001，所以监控到端口多出了9848和9849。</p>
<p><strong>友情提示</strong>：通常着重关注 <strong>ESTABLISHED</strong> ，表示已经确立联系。</p>
<p>通过查找到的PID，以图片上PID值8220为示例，使用命令tasklist去查找使用服务以及占用内存</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tasklist | findstr 8220</span><br><span class="line">java.exe                      8220 Console                    1    449,472 K</span><br></pre></td></tr></table></figure>



<p><strong>Windows 平台查看运行中的springboot服务</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">netstat -ano | findstr 8081;netstat -ano | findstr 8082;netstat -ano | findstr 8083</span><br></pre></td></tr></table></figure>

<p><strong>参数含义</strong>：</p>
<ul>
<li>-a： 显示所有连接和侦听端口。</li>
<li>-n：以数字形式显示地址和端口号。</li>
<li>-o：显示拥有的与每个连接关联的进程 ID。</li>
</ul>
<p>更多参数使用，请查看帮助命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">netstat <span class="built_in">help</span></span><br></pre></td></tr></table></figure>



<p><strong>Windows 平台查看nacos、prometheus、grafana服务进程</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tasklist | findstr nacos;tasklist | findstr prometheus;tasklist | findstr grafana;</span><br></pre></td></tr></table></figure>



<p><strong>Windows 平台查看nacos、prometheus、grafana服务端口</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">netstat -ano | findstr 3000;netstat -ano | findstr 8848;netstat -ano | findstr 9090</span><br></pre></td></tr></table></figure>



<h3 id="Linux-平台-1"><a href="#Linux-平台-1" class="headerlink" title="Linux 平台"></a>Linux 平台</h3><p><strong>Linux （REHL系列） 平台查询运行中的nacos服务</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">netstat -tlunp | grep 8848;netstat -tlunp | grep 9848;netstat -tlunp | grep 9849</span><br></pre></td></tr></table></figure>



<p><strong>Linux （RHEL系列）查看运行中的springboot服务，已经引入微服务组件 nacos</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@Centos9-Stream <span class="built_in">test</span>]<span class="comment"># netstat -tlunp | grep 8081; netstat -tlunp | grep 8082;netstat -tlunp | grep 8083;</span></span><br><span class="line">tcp6       0      0 :::8081                 :::*                    LISTEN      2690/java</span><br><span class="line">tcp6       0      0 :::8082                 :::*                    LISTEN      3104/java</span><br><span class="line">tcp6       0      0 :::8083                 :::*                    LISTEN      3213/java</span><br></pre></td></tr></table></figure>

<p><img data-src="https://s1.ax1x.com/2023/04/20/p9kLWMn.png"></p>
<p>在Linux平台我习惯使用参数 -tlunp 去查询监听服务。</p>
<p><strong>参数含义</strong>：</p>
<ul>
<li>-t：–tcp，显示监听tcp协议。</li>
<li>-l：–listening ，用于展示监听服务的sockets。</li>
<li>-u：–udp，显示监听udp协议。</li>
<li>-n：–numeric，不解析服务（主机、端口、用户）名称。</li>
<li>-p：–programs，显示使用了sockets 应用程序的PID号。</li>
</ul>
<p>上面图片以及代码展示的tcp6（tcp协议），8081 表示ip绑定端口号，LISTEN 代表正在监听，2690&#x2F;java 表示监听到java进程pid号是2690。通常我们比较关心的是端口（port），监听状态，服务名进程号。</p>
<p>更多参数使用，请查看帮助命令：：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">netstat -h</span><br></pre></td></tr></table></figure>



<p><strong>RHEL 系列查看nacos、prometheus、grafana服务进程</strong></p>
<p>ps命令监控服务三种方式：</p>
<ol>
<li>使用 ps 命令参数 -aux：ps -aux | grep nacos| grep -v “grep”</li>
<li>使用 ps 命令参数 -ef：ps -ef | grep nacos| grep -v “grep”</li>
<li>使用 ps 命令参数 -le：ps -le | grep nacos| grep -v “grep”</li>
</ol>
<p><strong>如下使用参数 -aux 进行监控 nacos、prometheus、grafana 服务</strong>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@Centos9-Stream prometheus-2.37.1]<span class="comment"># ps -aux | grep nacos;ps -aux | grep prometheus;ps -aux | grep grafana</span></span><br></pre></td></tr></table></figure>

<p><img data-src="https://s1.ax1x.com/2023/04/20/p9kL5ZV.png"></p>
<p>可以看到，监控服务命令将 nacos、prometheus、grafana 以红色字体标记出来了。将当前使用用户root、nacos 进程（pid）号2334、服务所在路径、配置文件指定路径等等展现在屏幕上。</p>
<p>这里教大家一个小技巧，如果你不想看到 grep –color&#x3D;auto 这一行，可以通过 grep 取反命令过滤。</p>
<p>示例 grep 取反过滤：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ps -aux | grep nacos| grep -v <span class="string">&quot;grep&quot;</span></span><br></pre></td></tr></table></figure>



<p><strong>RHEL 系列查看nacos、prometheus、grafana服务端口</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@Centos9-Stream prometheus-2.37.1]<span class="comment"># netstat -tlunp | grep 3000;netstat -tlunp | grep 8848;netstat -tlunp | grep 9090</span></span><br><span class="line">tcp6       0      0 :::3000                 :::*                    LISTEN      2194/grafana-server</span><br><span class="line">tcp6       0      0 :::8848                 :::*                    LISTEN      2234/java</span><br><span class="line">tcp6       0      0 :::9090                 :::*                    LISTEN      2509/prometheus</span><br></pre></td></tr></table></figure>

<p><img data-src="https://s1.ax1x.com/2023/04/20/p9kL2xs.png"></p>
<h2 id="Prometheus采集数据"><a href="#Prometheus采集数据" class="headerlink" title="Prometheus采集数据"></a>Prometheus采集数据</h2><p><strong>简单科普</strong></p>
<p>Prometheus是一个开源的系统监控和报警系统，它可以从多个来源收集数据，并对数据进行多维度的数据模型分析，可视化展现，及时报警。它已经加入到CNCF基金会，成为继k8s之后第二个在CNCF托管的项目。</p>
<p>Prometheus的基本原理是通过HTTP协议周期性抓取被监控组件的状态，任意组件只要提供对应的HTTP接口就可以接入监控。 不需要任何SDK或者其他的集成过程。 这样做非常适合做虚拟化环境监控系统，比如VM、Docker、Kubernetes等。 输出被监控组件信息的HTTP接口被叫做exporter。</p>
<p>Prometheus支持多种数据源，比如：</p>
<ol>
<li>系统监控数据：例如cpu，内存，磁盘IO等。</li>
<li>网络数据：例如网络吞吐量，延迟等。</li>
<li>进程和线程数据：例如goroutines，processes，threads等。</li>
<li>存储数据：例如数据库的插入，更新，删除等。</li>
</ol>
<p>Prometheus支持多种数据模型，例如：</p>
<ol>
<li>指标模型：可以对系统的指标进行建模。</li>
<li>时间模型：可以对系统的时间序列数据进行建模。</li>
<li>事件模型：可以对系统的事件进行建模。</li>
<li>图模型：可以对系统的状态或流程进行可视化展现。</li>
</ol>
<p>Prometheus有多种可视化图像界面，例如：</p>
<ol>
<li>Grafana：一个开源的、基于Web的可视化平台。</li>
<li>VTiger：一个开源的、基于Web的仪表盘系统。</li>
</ol>
<p>Prometheus还支持高可用，可以对数据做异地备份，联邦集群，部署多套prometheus，pushgateway上报数据等功能。总的来说，Prometheus是一个功能强大、易于使用的系统监控和报警系统，可以广泛应用于各种类型的系统监控和性能分析场景。</p>
<p><strong>必备环境</strong></p>
<ul>
<li>prometheus：采集数据</li>
<li>nacos：监控发现服务</li>
<li>JDK：支撑服务启动</li>
</ul>
<p>prometheus 官方文档地址：<span class="exturl" data-url="aHR0cHM6Ly9wcm9tZXRoZXVzLmlvL2RvY3MvcHJvbWV0aGV1cy8yLjM3L2dldHRpbmdfc3RhcnRlZC8=">https://prometheus.io/docs/prometheus/2.37/getting_started/<i class="fa fa-external-link-alt"></i></span></p>
<p>prometheus 下载地址：<span class="exturl" data-url="aHR0cHM6Ly9wcm9tZXRoZXVzLmlvL2Rvd25sb2FkLw==">https://prometheus.io/download/<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>1、安装prometheus</strong></p>
<p>请前往上面列出的下载地址准备好安装包，简化安装步骤如下。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar -zxvf prometheus-2.37.1.linux-amd64.tar.gz</span><br><span class="line"><span class="built_in">mv</span> prometheus-2.37.1.linux-amd64 prometheus-2.37.1</span><br><span class="line"><span class="built_in">mv</span> prometheus-2.37.1 /usr/local/</span><br></pre></td></tr></table></figure>



<p><strong>2、启动prometheus服务</strong></p>
<p>指定配置文件路径，执行prometheus脚本。示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/usr/local/prometheus-2.37.1/prometheus --config=/usr/local/prometheus-2.37.1/prometheus.yml </span><br></pre></td></tr></table></figure>

<p>如果想脱离终端在后台运行，需要在行首加上 nohup 命令，在行尾加上&amp; 符号。示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">nohup</span> /usr/local/prometheus-2.37.1/prometheus --config=/usr/local/prometheus-2.37.1/prometheus.yml &amp;</span><br></pre></td></tr></table></figure>

<p><strong>参数含义</strong>：</p>
<ol>
<li>prometheus：普罗米修斯服务脚本。</li>
<li>–config：用于指定普罗米修斯脚本 yml 格式配置文件。</li>
</ol>
<p><strong>3、修改配置文件，监控nacos暴露的metrics数据</strong><br>说明：metrics_path和static_configs不要设置多个，否则检测会出现语法错误，提示已存在</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># metrics_path defaults to &#x27;/metrics&#x27;</span></span><br><span class="line"><span class="comment"># scheme defaults to &#x27;http&#x27;.</span></span><br><span class="line"><span class="comment">#监控nacos服务</span></span><br><span class="line">    <span class="attr">metrics_path:</span> <span class="string">&#x27;/nacos/actuator/prometheus&#x27;</span></span><br><span class="line">    <span class="attr">static_configs:</span></span><br><span class="line"><span class="comment">#设置监控nacos远程服务地址</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">targets:</span> [<span class="string">&#x27;192.168.245.132:8848&#x27;</span>]</span><br></pre></td></tr></table></figure>



<p><strong>4、检测配置文件</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@Centos9-Stream nacos]<span class="comment"># /usr/local/prometheus-2.37.1/promtool check config /usr/local/prometheus-2.37.1/prometheus.yml</span></span><br><span class="line">Checking /usr/local/prometheus-2.37.1/prometheus.yml</span><br><span class="line"> SUCCESS: /usr/local/prometheus-2.37.1/prometheus.yml is valid prometheus config file syntax</span><br></pre></td></tr></table></figure>

<p>通过 kill 命令暴力停掉进程，再次启动 prometheus 服务：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">netstat -tlunp | grep 9090</span><br><span class="line"><span class="built_in">kill</span> -9 进程号</span><br><span class="line"><span class="built_in">nohup</span> /usr/local/prometheus-2.37.1/prometheus --config=/usr/local/prometheus-2.37.1/prometheus.yml &amp;</span><br></pre></td></tr></table></figure>

<p>关于 netstat 命令上面有简单介绍过，不再赘述。</p>
<p><strong>5、访问prometheus服务</strong></p>
<p>prometheus 运行默认端口是9090：<span class="exturl" data-url="aHR0cDovLzE5Mi4xNjguMjQ1LjEzMjo5MDkwLw==">http://192.168.245.132:9090/<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>tips</strong>：需要将端口9090开放，或者通过防火墙管理工具firewalld临时关闭防火墙服务进行测试。</p>
<p>Linux（RHEL系列）:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 开放9090端口</span></span><br><span class="line">firewall-cmd --zone=public --add-port=9090/tcp --permanent</span><br><span class="line">firewall-cmd --reload</span><br><span class="line"></span><br><span class="line"><span class="comment"># 临时关闭</span></span><br><span class="line">systemctl stop firewalld.service</span><br></pre></td></tr></table></figure>



<p><strong>6、查看prometheus监控status</strong><br>依次选择status—&gt; Targets—&gt; show more</p>
<p><strong>7、验证数据</strong></p>
<p>搜索nacos_monitor，得到如下结果（截取部分）：</p>
  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nacos_monitor&#123;instance=<span class="string">&quot;192.168.245.132:8848&quot;</span>, job=<span class="string">&quot;prometheus&quot;</span>, module=<span class="string">&quot;config&quot;</span>, name=<span class="string">&quot;configCount&quot;</span>&#125;</span><br><span class="line">1</span><br><span class="line">nacos_monitor&#123;instance=<span class="string">&quot;192.168.245.132:8848&quot;</span>, job=<span class="string">&quot;prometheus&quot;</span>, module=<span class="string">&quot;config&quot;</span>, name=<span class="string">&quot;dumpTask&quot;</span>&#125;</span><br><span class="line">0</span><br><span class="line">nacos_monitor&#123;instance=<span class="string">&quot;192.168.245.132:8848&quot;</span>, job=<span class="string">&quot;prometheus&quot;</span>, module=<span class="string">&quot;config&quot;</span>, name=<span class="string">&quot;getConfig&quot;</span>&#125;</span><br><span class="line">9</span><br><span class="line">...</span><br><span class="line">nacos_monitor&#123;instance=<span class="string">&quot;192.168.245.132:8848&quot;</span>, job=<span class="string">&quot;prometheus&quot;</span>, module=<span class="string">&quot;naming&quot;</span>, name=<span class="string">&quot;ipCount&quot;</span>&#125;</span><br><span class="line">2</span><br></pre></td></tr></table></figure>

<h2 id="Grafana图形化展示数据"><a href="#Grafana图形化展示数据" class="headerlink" title="Grafana图形化展示数据"></a>Grafana图形化展示数据</h2><p><strong>简单科普</strong></p>
<p>Grafana是一款开源的数据可视化工具，它可以在Web浏览器中运行，提供了一个易于使用的界面，使用户可以轻松地创建各种类型的图表和仪表板。</p>
<p>Grafana拥有快速灵活的客户端图表，面板插件有许多不同方式的可视化指标和日志，官方库中具有丰富的仪表盘插件，比如热图、折线图、图表等多种展示方式，让我们复杂的数据展示的美观而优雅。它支持许多不同的时间序列数据（数据源）存储后端，每个数据源都有一个特定查询编辑器，官方支持以下数据源：Graphite、infloxdb、opensdb、prometheus、elasticsearch、cloudwatch。每个数据源的查询语言和功能明显不同，你可以将来自多个数据源的数据组合到一个仪表板上，但每个面板都要绑定到属于特定组织的特定数据源。它还支持警报功能，允许用户将规则附加到仪表板面板上，但目前只支持graph面板的报警。</p>
<p>总的来说，Grafana是一款功能强大的数据可视化工具，可以帮助用户轻松地创建漂亮的图表和仪表板，同时也支持各种数据源的组合和报警功能，是数据分析和可视化的必备工具之一。</p>
<p><strong>必备环境</strong></p>
<ul>
<li>grafana：图形化（仪表板）展示数据。</li>
<li>prometheus：采集数据</li>
<li>nacos：监控发现服务</li>
<li>JDK：支撑服务启动</li>
</ul>
<p><strong>tips</strong>：初次登录，用户名：admin，密码：admin。</p>
<p>grafana下载地址：<span class="exturl" data-url="aHR0cHM6Ly9ncmFmYW5hLmNvbS9ncmFmYW5hL2Rvd25sb2Fk">https://grafana.com/grafana/download<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>1、搭建grafana，图形化展示metrics数据</strong></p>
<p><strong>RHEL 系列快速安装grafana：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo yum install grafana</span><br></pre></td></tr></table></figure>

<p>在RHEL7以及以上使用yum或者dnf命令安装完后，可以使用如下命令启动或者查看服务状态。</p>
<p><strong>启动grafana服务：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl start grafana-server.service</span><br></pre></td></tr></table></figure>

<p><strong>查看grafana服务：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl status grafana-server.service</span><br></pre></td></tr></table></figure>



<p><strong>详细grafana安装指南，请参考官方文档</strong><br><span class="exturl" data-url="aHR0cHM6Ly9ncmFmYW5hLmNvbS9kb2NzL2dyYWZhbmEvdjkuMy9zZXR1cC1ncmFmYW5hL2luc3RhbGxhdGlvbi8=">https://grafana.com/docs/grafana/v9.3/setup-grafana/installation/<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>Linux平台安装grafana服务</strong><br><strong>Standalone Linux Binaries(64 Bit)</strong></p>
<p>oss版本获取地址，基于AGPLv3 开源协议。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://dl.grafana.com/oss/release/grafana-9.3.0.linux-amd64.tar.gz</span><br><span class="line">tar -zxvf grafana-9.3.0.linux-amd64.tar.gz</span><br></pre></td></tr></table></figure>

<p>企业版enterprise获取地址</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://dl.grafana.com/enterprise/release/grafana-enterprise-9.3.0.linux-amd64.tar.gz</span><br><span class="line">tar -zxvf grafana-enterprise-9.3.0.linux-amd64.tar.gz</span><br></pre></td></tr></table></figure>



<p><strong>Red Hat, CentOS, RHEL, and Fedora(64 Bit)</strong></p>
<p>可以根据自己的需求选择 oss 版本或者 enterprise 企业版本。企业版本包含oss版本所有功能，同时也是免费使用，拥有更多插件功能。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://dl.grafana.com/oss/release/grafana-9.3.0-1.x86_64.rpm</span><br><span class="line">sudo yum install grafana-9.3.0-1.x86_64.rpm</span><br></pre></td></tr></table></figure>

<p><strong>Ubuntu and Debian(64 Bit)</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install -y adduser libfontconfig1</span><br><span class="line">wget https://dl.grafana.com/oss/release/grafana_9.3.0_amd64.deb</span><br><span class="line">sudo dpkg -i grafana_9.3.0_amd64.deb</span><br></pre></td></tr></table></figure>





<p><strong>grafana配置文件</strong></p>
<p>如果使用yum或者dnf命令安装，安装后的grafana配置文件路径。主要配置文件在&#x2F;etc&#x2F;grafana&#x2F;目录下，文件收集以及报警信息相关在&#x2F;var&#x2F;lib&#x2F;grafana&#x2F;目录下。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@Centos9-Stream <span class="built_in">local</span>]<span class="comment"># ls /etc/grafana/</span></span><br><span class="line">grafana.ini  ldap.toml  provisioning</span><br><span class="line">[root@Centos9-Stream <span class="built_in">local</span>]<span class="comment"># ls /var/lib/grafana/</span></span><br><span class="line">alerting  csv  file-collections  grafana.db  png</span><br><span class="line">[root@Centos9-Stream <span class="built_in">local</span>]<span class="comment"># du -sk -h /var/run/grafana/grafana-server.pid</span></span><br><span class="line">4.0K    /var/run/grafana/grafana-server.pid</span><br></pre></td></tr></table></figure>

<p>使用<code>du</code>命令查看<code>grafana-server</code>服务所占存储空间</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@Centos9-Stream <span class="built_in">local</span>]<span class="comment"># du -sk -h /usr/sbin/grafana-*</span></span><br><span class="line">4.0K    /usr/sbin/grafana-cli</span><br><span class="line">102M    /usr/sbin/grafana-server</span><br></pre></td></tr></table></figure>

<p>以上这些信息，在RHEL7以上环境中，你可以使用<code>systemctl</code>命令查看到所在路径</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@Centos9-Stream <span class="built_in">local</span>]<span class="comment"># systemctl status grafana-server.service</span></span><br><span class="line">● grafana-server.service - Grafana instance</span><br><span class="line">	...</span><br><span class="line">     CGroup: /system.slice/grafana-server.service</span><br><span class="line">             └─2821 /usr/sbin/grafana-server --config=/etc/grafana/grafana.ini </span><br><span class="line">             --pidfile=/var/run/grafana/grafana-server.pid</span><br></pre></td></tr></table></figure>





<p><strong>2、配置数据源prometheus</strong><br>获取nacos json模板：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL25hY29zLWdyb3VwL25hY29zLXRlbXBsYXRlL2Jsb2IvbWFzdGVyL25hY29zLWdyYWZhbmEuanNvbg==">https://github.com/nacos-group/nacos-template/blob/master/nacos-grafana.json<i class="fa fa-external-link-alt"></i></span></p>
<p>加入http地址：<span class="exturl" data-url="aHR0cDovLzE5Mi4xNjguMjQ1LjEzMjo5MDkwLw==">http://192.168.245.132:9090/<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>注意</strong>：将ip地址替换成你自己的。</p>
<p>**如果遇到问题(注意排查导入json文件配置以及grafana数据源名称配置)**：</p>
<p><strong>Failed to upgrade legacy queries Datasource prometheus was not found</strong></p>
<p>检查配置json文件数据源名称：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="attr">&quot;datasource&quot;</span><span class="punctuation">:</span> <span class="string">&quot;prometheus&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;format&quot;</span><span class="punctuation">:</span> <span class="string">&quot;none&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;gauge&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">   <span class="attr">&quot;maxValue&quot;</span><span class="punctuation">:</span> <span class="number">100</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;minValue&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;show&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;thresholdLabels&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;thresholdMarkers&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br></pre></td></tr></table></figure>

<p><strong>可以看到默认配置的datasource是：prometheus</strong></p>
<p>解决方法：<strong>修改默认数据源名称Prometheus为prometheus</strong>，注意匹配名称。</p>
<p><strong>配置prometheus数据源</strong></p>
<p>grafana运行默认端口是3000，访问：<span class="exturl" data-url="aHR0cDovLzE5Mi4xNjguMjQ1LjEzMjozMDAwLw==">http://192.168.245.132:3000/<i class="fa fa-external-link-alt"></i></span></p>
<p>同样需要开放相应端口，参考上面介绍prometheus使用的方法。</p>
<p><img data-src="https://s1.ax1x.com/2023/04/20/p9ABLa8.png"></p>
<p><strong>引入nacos json template</strong></p>
<p>注意：熟悉的情况下，这个配置模板，可以根据自己的需求去修改，不一定要照搬，可以灵活运用。</p>
<p><img data-src="https://s1.ax1x.com/2023/04/20/p9ABqVf.png"></p>
<p><strong>引入nacos json配置文件，看到如下三项代表配置成功</strong></p>
<ul>
<li>nacos monitor：展示nacos服务监控信息，包含上线服务、IP个数、cpu、内存、线程负载等等。</li>
<li>nacos detail：展示nacos服务详细信息。</li>
<li>nacos alert：展示nacos服务报警相关信息。</li>
</ul>
<p><img data-src="https://s1.ax1x.com/2023/04/20/p9ABHqP.png"></p>
<p><strong>nacos monitor 展示效果</strong></p>
<p><img data-src="https://s1.ax1x.com/2023/04/20/p9ABOIS.png"></p>
<p><strong>配置语言中文 &amp; 时区</strong><br>值得注意的是，在9.3.x之前还没实装设置语言这一项功能。</p>
<p><img data-src="https://s1.ax1x.com/2023/04/20/p9AB7rt.png"></p>
<p>如果不出意外，配置完成，可以正常访问配置的nacos监控服务。</p>
<p><strong>3、访问grafana服务</strong></p>
<p>访问地址，默认端口3000，可以根据你的工作场景进行调整：<span class="exturl" data-url="aHR0cDovLzE5Mi4xNjguMjQ1LjEzMjozMDAwLyVFRiVCQyU4QyVFNSVBNiU4MiVFNiU5RSU5QyVFNSU5QyVBOCVFNiU5QyVBQyVFNSU5QyVCMCVFNiU5MCVBRCVFNSVCQiVCQSVFRiVCQyU4QyVFNSVCMCU4NmlwJUU2JTlCJUJGJUU2JThEJUEyJUU0JUI4JUJB">http://192.168.245.132:3000/，如果在本地搭建，将ip替换为<i class="fa fa-external-link-alt"></i></span> 127.0.0.1 或者 localhost。</p>
<p>如果在服务器搭建，将ip替换为你的解析域名或者远程ip地址。</p>
<p><img data-src="https://s1.ax1x.com/2023/04/20/p9ABOIS.png"></p>
<p><strong>如果想深入学习nacos，可以参考官方用户指南、运维指南和《Nacos架构&amp;原理》</strong>。</p>
<p>《Nacos架构&amp;原理》：<span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIuYWxpeXVuLmNvbS9lYm9vay8zNj9zcG09YTJjNmguMjAzNDUxMDcuZWJvb2staW5kZXguMTguMTUyYzI5ODRmc2k1U1Q="> https://developer.aliyun.com/ebook/36?spm=a2c6h.20345107.ebook-index.18.152c2984fsi5ST<i class="fa fa-external-link-alt"></i></span></p>
<p>到此为止，是本篇的全部内容。感谢你的阅读和建议，我们下期再见。</p>
<p><strong>参考资料</strong>：</p>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9uYWNvcy5pby96aC1jbi9kb2NzL3YyL3F1aWNrc3RhcnQvcXVpY2stc3RhcnQuaHRtbA==">nacos2.x 官方文档<i class="fa fa-external-link-alt"></i></span></li>
<li>[prometheus 官方文档](<span class="exturl" data-url="aHR0cHM6Ly9wcm9tZXRoZXVzLmlvL2RvY3MvcHJvbWV0aGV1cy9sYXRlc3QvZ2V0dGluZ19zdGFydGVkLw==">Getting started | Prometheus<i class="fa fa-external-link-alt"></i></span>)</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9ncmFmYW5hLmNvbS9kb2NzL2dyYWZhbmEvbGF0ZXN0L2dldHRpbmctc3RhcnRlZC8=">grafana 官方文档<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<h2 id="END—"><a href="#END—" class="headerlink" title="END—-"></a>END—-</h2><p>静下心来，才发现原来不会的还有很多。</p>
<p>一分耕耘，一分收获。</p>
<p>多总结，你会发现，自己的知识宝库越来越丰富。</p>
]]></content>
      <categories>
        <category>开发运维</category>
      </categories>
      <tags>
        <tag>nacos</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL锁问题InnoDB锁：行锁、lock与latch、外键与锁、锁算法以及死锁问题</title>
    <url>/2022/04/07/MySQL%E9%94%81%E9%97%AE%E9%A2%98InnoDB%E9%94%81%EF%BC%9A%E8%A1%8C%E9%94%81%E3%80%81lock%E4%B8%8Elatch%E3%80%81%E5%A4%96%E9%94%AE%E4%B8%8E%E9%94%81%E3%80%81%E9%94%81%E7%AE%97%E6%B3%95%E4%BB%A5%E5%8F%8A%E6%AD%BB%E9%94%81%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<p>主要介绍内容有：MySQL锁介绍、InnoDB行锁、lock与latch区别、锁类型、一致性非锁（锁）定读；自增长与锁；外键与锁；锁的算法；阻塞、死锁以及锁升级。</p>
<p>我可以和面试官多聊几句吗？只是想…<br><strong>MySQL锁介绍以及InnoDB锁问题</strong>。﻿<strong>养成阅读官方文档</strong>，是一个良好的习惯。能编写官方文档，至少证明他们在这个领域是有很高的造诣，对用法足够熟练。</p>
<p><strong>面试官</strong>：咦，小伙子，又来啦。</p>
<p><strong>我</strong>：面试官，您好，又见面了。前面确实收获不少，我想……想获取更多的经验。</p>
<p><strong>面试官</strong>：不错，不错，不错，年纪轻轻，有我当年一半的风范，挺有觉悟。接着上次的话题，继续MySQL锁问题。</p>
<p><strong>我</strong>：好呀，这次我准备了InnoDB锁一些总结，希望您多多指教。</p>
<p><strong>面试官</strong>：那，让我们进入今天的话题，一起讨论MySQL锁问题。</p>
<p><strong>我</strong>：好的，请接着往下看。</p>
<p><strong>tips</strong>：图片资源可能被防盗链（寄）了，可以<strong>右键属性复制地址在地址栏查看</strong>哈。</p>
<span id="more"></span>

<p>如果没有进行特别说明，一般是基于MySQL8.0.28进行测试验证。</p>
<p><strong>友情提示：经验是用来参考，不是拿来即用</strong>。如果你能看到并分享这篇文章，我很荣幸。如果有误导你的地方，我表示抱歉。<br><img data-src="https://img-blog.csdnimg.cn/img_convert/9897445be9ccea40278b7827713ecfa6.png"></p>
<h1 id="MySQL锁问题–InnoDB行锁"><a href="#MySQL锁问题–InnoDB行锁" class="headerlink" title="MySQL锁问题–InnoDB行锁"></a>MySQL锁问题–InnoDB行锁</h1><p><strong>友情提示</strong>：在某些情况，你看到的结果可能与我演示有所不同，省略了部分参数。</p>
<p>如果你是从MySQL5.6或者5.7版本过渡到MySQL8.0。学习之前，建议线看官方文档这一章节：<strong>1.3 What Is New MySQL8.0</strong> 。在做对比的时候，<strong>文档中带有Note标识是你应该注意的地方</strong>。比如下面这张截图：</p>
<p><img data-src="https://img-blog.csdnimg.cn/7439166f7c74468e8ecb3f25391795ec.png#pic_center" alt="在这里插入图片描述"></p>
<h2 id="MySQL锁问题"><a href="#MySQL锁问题" class="headerlink" title="MySQL锁问题"></a>MySQL锁问题</h2><p><strong>简单概括锁</strong>：锁是计算机协调多个进程或线程并发访问某一资源的机制。</p>
<p>MySQL中的锁看上去用法和表面实现（对比其它DBMS），貌似很简单，但真正深入理解其实也不是那么容易。</p>
<h3 id="01-MySQL锁介绍"><a href="#01-MySQL锁介绍" class="headerlink" title="01 MySQL锁介绍"></a>01 MySQL锁介绍</h3><h4 id="1-1-什么是锁"><a href="#1-1-什么是锁" class="headerlink" title="1.1  什么是锁"></a>1.1  什么是锁</h4><p><strong>为何要使用锁</strong>？开发多用户、数据库驱动的应用时，难点（痛点）：一方面要最大程度地利用数据库的并发访问，另一方面还要<strong>确保每个用户能以一致的方式读取和修改数据</strong>。因此有了锁（locking）的机制，同时也是数据库系统区别于文件系统的一个关键特性。</p>
<p>在数据库中，除传统的计算资源（如CPU、RAM、I&#x2F;O等）的消耗外，数据也是一种供许多用户共享的资源。</p>
<p>如何保证数据并发访问的<strong>一致性</strong>、<strong>有效性</strong>是所有数据库必须解决的一个问题，<strong>锁冲突</strong>也是影响数据库并发访问性能的重要因素。从描述来看，锁对数据库显得尤为重要，也更加复杂。接下来，会对锁机制特点进行介绍、<strong>常见的锁问题</strong>，以及解决MySQL锁问题的方法。</p>
<h4 id="1-2-MySQL锁"><a href="#1-2-MySQL锁" class="headerlink" title="1.2  MySQL锁"></a>1.2  MySQL锁</h4><p>相比其它数据库来说，MySQL的锁机制相对好理解一点，其最显著的特点是不同的存储引擎支持不同锁机制。</p>
<p>比如MyISAM和MEMORY存储引擎采用表级锁（table-level locking）；BDB存储引擎（MySQL8.0文档没看到介绍）采用页面锁（page-level locking），但也支持表级锁（table-level locking）；InnoDB存储引擎既支持行级锁（row-level locking），也支持表级锁，默认采用行级锁。</p>
<p><strong>MySQL中3种锁特性</strong>：</p>
<ul>
<li>表级锁：开销小，加锁块。不会出现死锁，锁粒度大，发生锁冲突概率最高，并发度最低。</li>
<li>行级锁：开销大，加锁慢。会出现死锁，锁粒度最小，发生锁冲突概率最低，并发度最高。</li>
<li>页面锁：开销和加锁时间介于表锁与行锁之间。会出现死锁，锁粒度介于表锁与行锁之间，并发度一般。</li>
</ul>
<p>从上述各种锁特点来看，不能一概而论哪种锁更好，但可以<strong>从具体应用特点来判断哪种锁更合适</strong>。</p>
<p>单从锁角度出发：表锁较为适合以查询为主，少量按索引条件更新数据的应用。行级锁更适合有大量按索引条件、并发更新少量不同数据，同时有并发查询的应用。</p>
<h3 id="02-InnoDB-锁问题"><a href="#02-InnoDB-锁问题" class="headerlink" title="02 InnoDB 锁问题"></a>02 InnoDB 锁问题</h3><p><strong>ACID</strong>：在了解InnoDB锁问题之前，可以先看一下InnoDB存储引擎一些特性：简称ACID。</p>
<p>举个例子：（银行存钱，典型事务），正常情况：小芳去银行存钱，银行要么将钱存到系统并显示正常增长后的余额，要没全部回退出来。不正常情况：小芳存了一百大洋，银行将钱吞了，账户余额没变；或者小芳账户余额增加了，钱退回来了。</p>
<ol>
<li>原子性A（atomicity）：事务是一个原子操作单元，对数据的修改要么全执行，要么全不执行。</li>
<li>一致性C（consistency）：在事务开始和完成时，数据必须保持一致状态。</li>
<li>隔离性I（isolation）：数据库系统提供一定的隔离机制，保证事务在不受外部并发操作影响<strong>独立环境执行</strong>。</li>
<li>持久性D（durability）：事务完成之后，它对数据的修改是永久性的，即使出现系统故障也能保持。</li>
</ol>
<p><strong>并发事务处理带来的问题</strong>：</p>
<ol>
<li><strong>丢失更新</strong>（lost update）：当两个或多个事务选择同一行，然后基于最初选定的值更新该行时，由于每个事务都不知道其它事务的存在，就会发生丢失更新问题，最后的更新覆盖了由其它事务所做的更新。（可以想象多人在线编辑同一份文档，有多个版本控制，最后还原到锁问题上）</li>
<li><strong>脏读</strong>（dirty read）：一个事务正在对一条记录做修改，在这个事务完成并提交前，这条记录的数据就处于不一致状态；这时，另一个事务也来读取同一条记录，如果不加控制，第二个事务读取了这些“脏”数据，并作进一步处理，会产生未提交的数据依赖关系。这种现象被称为<strong>脏读</strong>。</li>
<li><strong>不可重复度</strong>（non-repeatable read）：一个事务在读取某些数据后的某个时间再次读取以前读过的数据，却发现其读过的数据已经发生了改变或某些记录已被删除。这种现象被称为<strong>不可重复读</strong>。</li>
<li><strong>幻读</strong>（phantom read）：一个事务按相同的查询条件重新读取以前检索过的数据，却发现其它事务插入了满足其查询条件的新数据，这种现象称为<strong>幻读</strong>。</li>
</ol>
<p><strong>脏读与不可重复读区别</strong>：脏读是读到<strong>未提交的数据</strong>，而不可重复度读到的是<strong>已经提交的数据</strong>。</p>
<p>更多MySQL8.0数据库的ACID模型介绍可以参考：</p>
<blockquote>
<p>15.2 InnoDB and the ACID Model</p>
</blockquote>
<h4 id="2-1-行级锁的神话"><a href="#2-1-行级锁的神话" class="headerlink" title="2.1  行级锁的神话"></a>2.1  行级锁的神话</h4><p>InnoDB存储引擎较MySQL数据库其它存储引擎在锁这一方面技高一筹，实现方式类似于Oracle数据库，提供一致性的非锁定读、行级锁支持。行锁没有相关额外开销，并可以同时得到并发性和一致性。</p>
<p><strong>行级锁</strong>的一个神话，锁总会增加开销。其实是这样的，当实现本身会增加开销时，行级锁才会增加开销。InnoDB不需要锁升级，因为一个锁和多个锁的开销是想同的。</p>
<p>对于MyISAM存储引擎，其锁是表锁设计。并发情况读没有问题，但是并发插入性能略微差了一些。如果插入在<strong>底部</strong>，MyISAM存储引擎还是有一定的并发写入操作的。这里重复介绍了，在介绍MyISAM表锁时也有提到过。</p>
<h4 id="2-2-lock与latch"><a href="#2-2-lock与latch" class="headerlink" title="2.2  lock与latch"></a>2.2  lock与latch</h4><p>MySQL数据库区分锁过程中，有一个容易令人混淆的概念lock与latch。在数据库中，lock与latch都被称为<strong>锁</strong>，但二者有截然不同的含义。</p>
<ol>
<li><strong>latch</strong>：一般称为闩（shuan）锁（轻量级的锁），因为其要求锁定的时间必须非常短。若持续时间长，则应用的性能会非常差。在InnoDB存储引擎中，latch又可以分为mutex（互斥量）和rwlock（读写锁）。其目的是用来保证<strong>并发线程操作临界资源的正确性</strong>，并且通常没有死锁检测的机制。</li>
<li><strong>lock</strong>：<strong>lock</strong>的对象是<strong>事务</strong>，<strong>用来锁定的是数据库中的对象</strong>，比如表、页、行。一般lock的对象仅在事务commit或rollback后进行释放，不同事务隔离级别释放的时间可能不同。此外，lock正如在大多数数据库中一样，是有死锁机制的。</li>
</ol>
<p>对于InnoDB存储引擎中的<strong>latch</strong>，可以通过命令查看：</p>
<p><strong>语法</strong>：SHOW ENGINE engine_name {STATUS | MUTEX}</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> engine innodb mutex;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+----------------------------+-------------+</span></span><br><span class="line"><span class="operator">|</span> Type   <span class="operator">|</span> Name                       <span class="operator">|</span> Status      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+----------------------------+-------------+</span></span><br><span class="line"><span class="operator">|</span> InnoDB <span class="operator">|</span> rwlock: fil0fil.cc:<span class="number">3360</span>    <span class="operator">|</span> waits<span class="operator">=</span><span class="number">6</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> InnoDB <span class="operator">|</span> rwlock: dict0dict.cc:<span class="number">2508</span>  <span class="operator">|</span> waits<span class="operator">=</span><span class="number">4</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> InnoDB <span class="operator">|</span> sum rwlock: buf0buf.cc:<span class="number">787</span> <span class="operator">|</span> waits<span class="operator">=</span><span class="number">40351</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+----------------------------+-------------+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<blockquote>
<p>13.7.7.15 SHOW ENGINE Statement</p>
</blockquote>
<p><strong>tips</strong>：在debug版本中，可以查看到status参数的更多信息。</p>
<h4 id="2-3-锁类型"><a href="#2-3-锁类型" class="headerlink" title="2.3  锁类型"></a>2.3  锁类型</h4><p><strong>锁类型列表（InnoDB Locking）</strong>：</p>
<table>
<thead>
<tr>
<th>序号</th>
<th>InnoDB Locking</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>标准行级锁共享锁和排它锁（Shared and Exclusive Locks）</td>
</tr>
<tr>
<td>2</td>
<td>记录锁（Record Locks）</td>
</tr>
<tr>
<td>3</td>
<td>间隙锁（Gap Locks）</td>
</tr>
<tr>
<td>4</td>
<td>Next-Key Locks</td>
</tr>
<tr>
<td>5</td>
<td>插入意图锁（Insert Intention Locks）</td>
</tr>
<tr>
<td>6</td>
<td>AUTO-INC Locks</td>
</tr>
<tr>
<td>7</td>
<td>空间索引谓词锁（Predicate Locks for Spatial Indexes）</td>
</tr>
</tbody></table>
<p>虽然上面列出了7种锁，但下面只介绍标准行级锁和意向锁，其它锁类型介绍可以参考MySQL8.0官方文档。</p>
<p><strong>InnoDB存储引擎</strong>实现了以下两种类型<strong>标准行级锁</strong>：</p>
<ol>
<li><strong>共享锁</strong>（S Lock）：允许事务读一行数据。</li>
<li><strong>排它锁</strong>（X Lock）：允许事务删除或更新一行数据。</li>
</ol>
<p>如果一个事务T1持有行r上的一个共享(S)锁，那么来自不同事务T2的请求对行r上的一个锁处理如下:</p>
<ol>
<li>T2对共享锁（S）的请求可以立即被授予（获得行r共享锁）。因此，T1和T2都对行r保持S锁定。</li>
<li>T2对排它锁（X）锁请求不能立即授予。</li>
</ol>
<p>其它事务想获得行r共享锁，其它请求等待T1、T2释放共享锁。</p>
<p>如果事务T1持有行r上的排它(X)锁，那么来自不同事务T2对行r上任何一种类型的锁请求都不能立即被授予。相反，事务T2必须等待事务T1释放其对行r的锁。</p>
<p><strong>两种标准行级锁兼容性如下表格所示</strong>：</p>
<table>
<thead>
<tr>
<th></th>
<th>X（排它锁）</th>
<th>S（共享锁）</th>
</tr>
</thead>
<tbody><tr>
<td>X（排它锁）</td>
<td>Conflict（不兼容）</td>
<td>Conflict（不兼容）</td>
</tr>
<tr>
<td>S（共享锁）</td>
<td>Conflict（不兼容）</td>
<td>Compatible（兼容）</td>
</tr>
</tbody></table>
<p>从上面表格中可以发现X锁与任何锁都不兼容，而S锁仅与S锁兼容。</p>
<p><strong>注意</strong>：S和X锁是<strong>行锁</strong>，<strong>兼容指对同一行记录</strong>（row）<strong>锁兼容性</strong>情况。</p>
<p>除此之外，InnoDB存储引擎支持多粒度（<strong>granularity</strong>）锁定，这种锁定<strong>允许事务在行级上的锁和表级上的锁同时存在</strong>。为了支持在不同粒度上进行加锁操作，InnoDB存储引擎支持一种额外的锁方式，称为意向锁（<strong>Intention Locks</strong>）。意向锁将锁定的对象分为多个层次，意味着事务希望在更加细粒度（fine granularity）上加行锁。如下图3-3所示：</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/6876766c70e780b29d0fe31ef74f1509.png"></p>
<p>如果将上锁的对象看成一棵树，那么对最下层的对象上锁，也就是对最细粒度对象进行上锁，首先需要对粗粒度对象上锁。</p>
<p>InnoDB存储引擎支持意向锁设计比较简练，其意向锁为表级别锁。设计目的是为了在一个事务中揭示下一行将被请求的锁类型，支持如下两种意向锁。</p>
<p><strong>意向锁</strong>（Intention Locks）：</p>
<ol>
<li>意向共享锁（IS）：事务想要获得一张表中某几行的共享锁。</li>
<li>意向排它锁（IX）：事务想要获得一张表中某几行的排它锁。</li>
</ol>
<p>由于InnoDB存储引擎支持的是行级别锁，因此意向锁不会阻塞除全表扫描以外的任何请求。</p>
<p><strong>表级锁与行级锁类型兼容性汇总在如下面表格所示</strong>，并使用中文进行标注：</p>
<table>
<thead>
<tr>
<th></th>
<th>X（排它锁）</th>
<th>IX（意向排它锁）</th>
<th>S（共享锁）</th>
<th>IS（意向共享锁）</th>
</tr>
</thead>
<tbody><tr>
<td>X（排它锁）</td>
<td>Conflict（不兼容）</td>
<td>Conflict（不兼容）</td>
<td>Conflict（不兼容）</td>
<td>Conflict（不兼容）</td>
</tr>
<tr>
<td>IX（意向排它锁）</td>
<td>Conflict（不兼容）</td>
<td>Compatible（兼容）</td>
<td>Conflict（不兼容）</td>
<td>Compatible（兼容）</td>
</tr>
<tr>
<td>S（共享锁）</td>
<td>Conflict（不兼容）</td>
<td>Conflict（不兼容）</td>
<td>Compatible（兼容）</td>
<td>Compatible（兼容）</td>
</tr>
<tr>
<td>IS（意向共享锁）</td>
<td>Conflict（不兼容）</td>
<td>Compatible（兼容）</td>
<td>Compatible（兼容）</td>
<td>Compatible（兼容）</td>
</tr>
</tbody></table>
<p>用户可以通过命令<code>show engine innodb status</code>查看<strong>当前锁请求信息</strong>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">show</span> engine innodb status\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">  Type: InnoDB</span><br><span class="line">  Name:</span><br><span class="line">Status:</span><br><span class="line"><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span></span><br><span class="line"><span class="number">2022</span><span class="number">-03</span><span class="number">-23</span> <span class="number">22</span>:<span class="number">16</span>:<span class="number">07</span> <span class="number">0x32d0</span> INNODB MONITOR OUTPUT</span><br><span class="line"><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span></span><br><span class="line"><span class="keyword">Per</span> <span class="keyword">second</span> averages calculated <span class="keyword">from</span> the <span class="keyword">last</span> <span class="number">15</span> seconds</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment">------------</span></span><br><span class="line">TRANSACTIONS</span><br><span class="line"><span class="comment">------------</span></span><br><span class="line">Trx id counter <span class="number">16145</span></span><br><span class="line">Purge done <span class="keyword">for</span> trx<span class="string">&#x27;s n:o &lt; 16144 undo n:o &lt; 0 state: running but idle</span></span><br><span class="line"><span class="string">History list length 0</span></span><br><span class="line"><span class="string">LIST OF TRANSACTIONS FOR EACH SESSION:</span></span><br><span class="line"><span class="string">---TRANSACTION 283762070116728, not started</span></span><br><span class="line"><span class="string">0 lock struct(s), heap size 1128, 0 row lock(s)</span></span><br><span class="line"><span class="string">---TRANSACTION 283762070115952, not started</span></span><br><span class="line"><span class="string">0 lock struct(s), heap size 1128, 0 row lock(s)</span></span><br><span class="line"><span class="string">---TRANSACTION 16144, ACTIVE 237 sec starting index read</span></span><br><span class="line"><span class="string">mysql tables in use 1, locked 1</span></span><br><span class="line"><span class="string">LOCK WAIT 2 lock struct(s), heap size 1128, 2 row lock(s)</span></span><br><span class="line"><span class="string">MySQL thread id 1249, OS thread handle 12132, query id 15048 localhost ::1 root statistics</span></span><br><span class="line"><span class="string">select * from world.city where id=1 for update</span></span><br><span class="line"><span class="string">------- TRX HAS BEEN WAITING 3 SEC FOR THIS LOCK TO BE GRANTED:</span></span><br><span class="line"><span class="string">RECORD LOCKS space id 28 page no 6 n bits 248 index PRIMARY of table `world`.`city` trx id 16144 lock_mode X locks rec but not gap waiting</span></span><br><span class="line"><span class="string">Record lock, heap no 2 PHYSICAL RECORD: n_fields 7; compact format; info bits 0</span></span><br><span class="line"><span class="string"> 0: len 4; hex 80000001; asc ;;</span></span><br><span class="line"><span class="string"> 1: len 6; hex 0000000016c9; asc ;;</span></span><br><span class="line"><span class="string"> 2: len 7; hex 81000001410110; asc     A  ;;</span></span><br><span class="line"><span class="string"> 3: len 30; hex 4b6162756c20202020202020202020202020202020202020202020202020; asc Kabul                         ; (total 35 bytes);</span></span><br><span class="line"><span class="string"> 4: len 3; hex 414647; asc AFG;;</span></span><br><span class="line"><span class="string"> 5: len 20; hex 4b61626f6c202020202020202020202020202020; asc Kabol ;;</span></span><br><span class="line"><span class="string"> 6: len 4; hex 801b2920; asc   ) ;;</span></span><br><span class="line"><span class="string">------------------</span></span><br><span class="line"><span class="string">...</span></span><br><span class="line"><span class="string">============================</span></span><br><span class="line"><span class="string">END OF INNODB MONITOR OUTPUT</span></span><br><span class="line"><span class="string">============================</span></span><br><span class="line"><span class="string">... </span></span><br><span class="line"><span class="string">1 row in set (0.00 sec)</span></span><br></pre></td></tr></table></figure>

<p>此处，主要截取了事务相关参数，其它参数省略掉了。如何看到事务锁具体信息，<strong>可以手动去加锁测试，制造一个场景</strong>。</p>
<p><strong>示例用法</strong>：</p>
<p>前提使用时InnoDB类型表做测试，可以使用<code>show create table table_name</code>查询当前表存储引擎。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> world.city\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">       <span class="keyword">Table</span>: city</span><br><span class="line"><span class="keyword">Create</span> <span class="keyword">Table</span>: <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `city` (</span><br><span class="line">  `ID` <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  `Name` <span class="type">char</span>(<span class="number">35</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  `CountryCode` <span class="type">char</span>(<span class="number">3</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  `District` <span class="type">char</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  `Population` <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`ID`),</span><br><span class="line">  KEY `CountryCode` (`CountryCode`),</span><br><span class="line">  <span class="keyword">CONSTRAINT</span> `city_ibfk_1` <span class="keyword">FOREIGN</span> KEY (`CountryCode`) <span class="keyword">REFERENCES</span> `country` (`Code`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB AUTO_INCREMENT<span class="operator">=</span><span class="number">4080</span> <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8mb4_0900_ai_ci</span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>


<p>MySQL8.0中使用<code>select @@autocommit</code>查看到默认值是1，代表开启了自动提交。测试使用时建议通过 <code>set autocommit=0</code> 命令先关闭自动提交，或者手动控制事务（begin、start transaction）。详细示例不列举了，可以参考前面SQL优化步骤进行测试。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">begin</span></span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> ... LOCK <span class="keyword">IN</span> SHARE MODE <span class="comment">-- 给语句加上共享锁</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> world.city <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span> lock <span class="keyword">in</span> share mode; <span class="comment">-- 示例给city表加上共享锁</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> ... <span class="keyword">FOR</span> <span class="keyword">UPDATE</span>     <span class="comment">-- 给语句加上排它锁</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> world.city <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span> <span class="keyword">for</span> <span class="keyword">update</span>;  <span class="comment">-- 示例获取排它锁，超时会抛异常</span></span><br><span class="line">ERROR <span class="number">1205</span> (HY000): Lock wait timeout exceeded; try restarting transaction</span><br></pre></td></tr></table></figure>

<p>上面打印出来参数有很多，线程（BACKGROUND THREAD）、信号量（SEMAPHORES）、<strong>事务</strong>（<strong>TRANSACTIONS</strong>）、文件I&#x2F;O（FILE I&#x2F;O）、插入缓存和适配HASH索引（INSERT BUFFER AND ADAPTIVE HASH INDEX）、缓冲日志检查点（LOG）、缓冲池和内存（BUFFER POOL AND MEMORY）以及行操作（ROW OPERATIONS）。</p>
<p>个人感觉有必要说明一下缓存（cache）与缓冲（buffer）区别：</p>
<ul>
<li>缓冲（buffer）：加速数据写入硬盘；</li>
<li>缓存（cache）：加速数据从硬盘读取。</li>
</ul>
<p><strong>在MySQL8.0之前的版本information_schema</strong>架构下可以通过三张表：<code>INNODB_TRX</code>、<code>INNODB_LOCKS</code>、<code>INNODB_LOCK_WAITS</code>监控当前事务并分析可能存在的锁问题。</p>
<p><strong>友情提示</strong>：在5.6.x和5.7.x和MariaDB 10.5.6还能看到<code>INNODB_LOCKS</code>、<code>INNODB_LOCK_WAITS</code>；在MySQL8.0中已经移除，可以说换成另一种形式呈现：在<strong>performance_schema</strong>架构下有<strong>data_lock_waits</strong>、<strong>data_locks</strong>可以查询参考。</p>
<p><strong>INNODB_LOCKS</strong>与<strong>data_locks</strong>参数变化：<strong>有变化的参数加粗显示</strong></p>
<table>
<thead>
<tr>
<th>INNODB_LOCKS Column（参数）</th>
<th>data_locks Column（参数）</th>
</tr>
</thead>
<tbody><tr>
<td>LOCK_ID</td>
<td><strong>ENGINE_LOCK_ID</strong>：锁的ID</td>
</tr>
<tr>
<td>LOCK_TRX_ID</td>
<td><strong>ENGINE_TRANSACTION_ID</strong>：存储引擎事务ID</td>
</tr>
<tr>
<td>LOCK_MODE</td>
<td>LOCK_MODE：锁模式</td>
</tr>
<tr>
<td>LOCK_TYPE</td>
<td>LOCK_TYPE：锁类型</td>
</tr>
<tr>
<td>LOCK_TABLE (combined schema&#x2F;table names)</td>
<td><strong>OBJECT_SCHEMA</strong> (schema name), OBJECT_NAME<br/>(table name)：要加锁的表</td>
</tr>
<tr>
<td>LOCK_INDEX</td>
<td>LOCK_INDEX：锁住的索引</td>
</tr>
<tr>
<td>LOCK_SPACE：锁对象space id</td>
<td><strong>None</strong></td>
</tr>
<tr>
<td>LOCK_PAGE：事务锁定页数量</td>
<td><strong>None</strong></td>
</tr>
<tr>
<td>LOCK_REC：事务锁定行数量</td>
<td><strong>None</strong></td>
</tr>
<tr>
<td>LOCK_DATA</td>
<td>LOCK_DATA：事务锁定记录主键值</td>
</tr>
</tbody></table>
<p><strong>INNODB_LOCK_WAITS</strong>与<strong>data_lock_waits</strong>参数变化：<strong>有变化的参数加粗显示</strong></p>
<table>
<thead>
<tr>
<th>INNODB_LOCK_WAITS Column（参数）</th>
<th>data_lock_waits Column（参数）</th>
</tr>
</thead>
<tbody><tr>
<td>REQUESTING_TRX_ID：申请锁事务ID</td>
<td><strong>REQUESTING_ENGINE_TRANSACTION_ID</strong></td>
</tr>
<tr>
<td>REQUESTED_LOCK_ID：申请锁ID</td>
<td><strong>REQUESTING_ENGINE_LOCK_ID</strong></td>
</tr>
<tr>
<td>BLOCKING_TRX_ID：阻塞事务ID</td>
<td><strong>BLOCKING_ENGINE_TRANSACTION_ID</strong></td>
</tr>
<tr>
<td>BLOCKING_LOCK_ID：阻塞锁ID</td>
<td><strong>BLOCKING_ENGINE_LOCK_ID</strong></td>
</tr>
</tbody></table>
<p>如果命令字符界面查看不方便，可以借助客户端工具MySQL workbench或者SQLyog等等进行查看。</p>
<p>更多参数详细介绍，可以参考MySQL8.0官方文档进行查看测试。</p>
<p>同样可以使用其它命令查看InnoDB存储引擎信息：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> ENGINE INNODB MUTEX\G</span><br><span class="line"><span class="keyword">SHOW</span> ENGINE PERFORMANCE_SCHEMA STATUS\G   <span class="comment">-- 打印所有PERFORMANCE_SCHEMA状态信息</span></span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">  Type: performance_schema</span><br><span class="line">  Name: events_waits_current.size</span><br><span class="line">Status: <span class="number">168</span></span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">2.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">  Type: performance_schema</span><br><span class="line">  Name: events_waits_current.count</span><br><span class="line">Status: <span class="number">1536</span></span><br><span class="line">...</span><br><span class="line"><span class="number">248</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<p>以上是对锁类型进行简单介绍，理论知识偏多，基本结合MySQL8.0进行说明。</p>
<h4 id="2-4-一致性非锁（锁）定读"><a href="#2-4-一致性非锁（锁）定读" class="headerlink" title="2.4  一致性非锁（锁）定读"></a>2.4  一致性非锁（锁）定读</h4><p><strong>2.4.1 一致性非锁定读</strong></p>
<p>查询默认事务隔离级别 <code>tx_isolation</code>和<code>tx_read_only</code>系统参数已经在MySQL8.0.3中移除掉了，MySQL5.x和MariaDB10.5.6版本还可以继续使用<code>tx_isolation</code>这个系统参数。</p>
<p><strong>注意</strong>：新版MySQL8.0.3之后使用<code>transaction_isolation</code>和<code>transaction_read_only</code>替代。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> @<span class="variable">@tx_isolation</span>;  <span class="comment">-- MySQL5.x版本可以继续用</span></span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> @<span class="variable">@transaction_isolation</span>;  <span class="comment">-- MySQL8.0.3版本开始使用新的系统参数</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------+</span></span><br><span class="line"><span class="operator">|</span> @<span class="variable">@transaction_isolation</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------+</span></span><br><span class="line"><span class="operator">|</span> REPEATABLE<span class="operator">-</span>READ         <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<p>你可以参考文档：15.7.2.3 Consistent Nonlocking Reads</p>
<p>一致性非锁定读（<strong>Consistent Nonlocking Reads</strong>）是指InnoDB存储引擎通过多版本控制（<strong>multi-versioning</strong> ）的方式来读取当前执行时间数据库中行的数据。如果读取的行正在执行 DELETE 或 UPDATE操作，这时读取操作不会因此去等待行上的锁释放。相反，InnoDB存储引擎会读取一个快照数据。如图：3-4所示</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/79de541a8ca6e2f447c7edd0ed0cf6f1.png"></p>
<p>图3-4直观地展现了InnoDB存储引擎非锁定一致性读。<strong>之所以称其为非锁定读</strong>：因为不需要等待访问行上X锁的释放。快照数据是指该行之前版本的数据，该实现是通过undo段来完成。而undo用来在事务中回滚数据，因此<strong>快照数据本身是没有开销</strong>的。此外，<strong>读取快照数据是不需要上锁的</strong>，因为没有事务需要对历史数据进行修改操作。</p>
<p>可以看出，锁定读机制极大地提高了数据库的并发性。在InnoDB存储引擎默认设置下，这也是默认读取方式，即读取不会占用和等待表上的锁。但在不同事务隔离级别下，读取方式不同，并不是在每个事务隔离级别下都采用非锁定一致性读。即使是使用非锁定一致性读，对于快照数据定义也各不相同。</p>
<p>通过图3-4可以知道，快照数据其实是当前行数据之前的历史版本，每行记录可能有多个版本。如图3-4所示，一个行记录可能不止一个快照数据，一般称这种技术为行多版本技术。由此带来的并发控制，称之为多版本并发控制（multi-version concurrency control (MVCC)）。</p>
<p>在事务隔离级别 <strong>READ-COMMITTED</strong>和<strong>REPEATABLE-READ</strong>（InnoDB存储引擎默认事务隔离级别）下，InnoDB存储引擎使用非锁定一致性读。然而，对于快照数据定义却不相同。在READ-COMMITTED事务隔离级别下，对于快照数据，非一致性读总是读取事务开始时的行数据版本。</p>
<p><strong>如下示例，在两session A和session B会话中进行对比。在模拟并发过程中，希望带着思考去测试，不然会晕乎乎的</strong></p>
<p>前提设置事务非自动提交，或者手动开启事务，前面演示也多次提到过。关键字大小写不影响使用，个人使用统一规则就好。</p>
<p>修改事务隔离级（当前会话生效），便于测试：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">set</span> transaction_isolation<span class="operator">=</span><span class="string">&#x27;READ-COMMITTED&#x27;</span>;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> @<span class="variable">@transaction_isolation</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------+</span></span><br><span class="line"><span class="operator">|</span> @<span class="variable">@transaction_isolation</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------+</span></span><br><span class="line"><span class="operator">|</span> READ<span class="operator">-</span>COMMITTED          <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>



<p><strong>session A</strong>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- session A</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">begin</span>;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> parent <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>



<p>会话A中已通过显示地执行命令BEGIN开启了一个事务，并读取parent表中id&#x3D;1的这条数据，但事务并没有结束。与此同时用户再开启另一个会话B，可以模拟出并发场景，然后对session B做如下操作。</p>
<p><strong>session B</strong>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- session B</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">begin</span>;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">update</span> parent <span class="keyword">set</span> id<span class="operator">=</span><span class="number">7</span> <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span>;</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.01</span> sec)</span><br><span class="line"><span class="keyword">Rows</span> matched: <span class="number">1</span>  Changed: <span class="number">1</span>  Warnings: <span class="number">0</span></span><br></pre></td></tr></table></figure>



<p>在会话B中将parent表id为1字段值记录修改为id&#x3D;7，但事务同样未提交，此时id&#x3D;1的行加了一个X锁。如果在会话A中再次读取id&#x3D;1的记录，根据InnoDB存储引擎特性，即在<code>READ-COMMITTED</code>和<code>REPEATABLE-READ</code>事务隔离级别下会使用非锁定一致性读。此时，再回到会话A中，继续未提交的事务，执行SQL语句：<code>select * from parent where id=1;</code>操作，不管使用READ-COMMITTED还是REPEATABLE-READ事务隔离级别，显示数据应该是：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> parent <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>



<p>由于当前id&#x3D;1的数据被修改了1次，因此只有一个行版本记录。接着会话2未提交的事务，提交事务：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- session B</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">commit</span>;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>



<p>会话B提交事务后，会话1再次执行<code>select * from parent where id=1;</code>SQL语句，在<code>READ-COMMITTED</code>和<code>REPEATABLE-READ</code>事务隔离级别下得到结果就不一样了。对于READ-COMMITTED事务隔离级别，它总是读取该行版本最新一个快照（fresh snapshot）。在上述示例中，因为会话B已经提交事务，所以READ-COMMITTED事务隔离级别下会得到如下结果：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> @<span class="variable">@transaction_isolation</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------+</span></span><br><span class="line"><span class="operator">|</span> @<span class="variable">@transaction_isolation</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------+</span></span><br><span class="line"><span class="operator">|</span> READ<span class="operator">-</span>COMMITTED          <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> parent <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span>;</span><br><span class="line"><span class="keyword">Empty</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>



<p>对于REPEATABLE-READ（默认事务隔离级别），<strong>总是读取事务开始时的行数据</strong>。此时将session A和session B步骤对调来操作。起初我看文档时，也误解了，多研读几次才明白。<strong>得到示例结果如下</strong>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> @<span class="variable">@transaction_isolation</span>;  </span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------+</span></span><br><span class="line"><span class="operator">|</span> @<span class="variable">@transaction_isolation</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------+</span></span><br><span class="line"><span class="operator">|</span> REPEATABLE<span class="operator">-</span>READ         <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> parent <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<p>梳理一下session A和session B执行步骤，<strong>从时间角度演示</strong>：</p>
<table>
<thead>
<tr>
<th>时间（time）</th>
<th>session A</th>
<th>session B</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>BEGIN;</td>
<td></td>
</tr>
<tr>
<td>2</td>
<td>SELECT * FROM parent WHERE id&#x3D;1;</td>
<td></td>
</tr>
<tr>
<td>3</td>
<td></td>
<td>BEGIN;</td>
</tr>
<tr>
<td>4</td>
<td></td>
<td>UPDATE parent SET id&#x3D;7 WHERE id&#x3D;1;</td>
</tr>
<tr>
<td>5</td>
<td>SELECT * FROM parent WHERE id&#x3D;1;</td>
<td></td>
</tr>
<tr>
<td>6</td>
<td></td>
<td>COMMIT;</td>
</tr>
<tr>
<td>7</td>
<td>SELECT * FROM parent WHERE id&#x3D;1;</td>
<td></td>
</tr>
<tr>
<td>8</td>
<td>COMMIT;</td>
<td></td>
</tr>
</tbody></table>
<p><strong>tips</strong>：测试时使用BEGIN显示开启也行，使用SET AUTOCOMMIT&#x3D;0同样也行。因为AUTOCOMMIT默认是1，所以手动禁止自动提交。</p>
<p><strong>2.4.2 一致性锁定读</strong></p>
<blockquote>
<p>15.7.2.4 Locking Reads</p>
</blockquote>
<p>默认配置下，事务隔离级别为REPEATABLE-READ模式下，InnoDB存储引擎的select操作使用一致性非锁定读。但在某种场景下，用户需要显示地对数据库读取操作进行加锁以保证数据逻辑一致性。需要数据库支持加锁语句，即使是对select的只读操作。InnoDB存储引擎对select语句支持两种一致性锁定读（locking reads ）</p>
<ul>
<li>SELECT … FOR UPDATE</li>
<li>SELECT … LOCK IN  SHARE MODE</li>
</ul>
<p><strong>注意</strong>：在MySQL8.0.22可以使用SELECT … FOR SHARE替代SELECT … LOCK IN  SHARE MODE，但是SELECT … LOCK IN  SHARE MODE是向后兼容，这两个描述是相同的。然而，使用FOR SHARE支持table_name, NOWAIT（不等待），和越过LOCKED选项。</p>
<p><code>SELECT ... FOR UPDATE</code>对读取的行记录加一个X锁，其它事务不能对已锁定的行加任何锁。<code>SELECT ... LOCK IN  SHARE MODE</code>对读取的行记录加上一个S锁，其它事务可以向被锁定的行加S锁，但如果是X锁，则会被阻塞。</p>
<p>对于一致性非锁定读，即使读取的行已被执行<code>SELECT ... FOR UPDATE</code>，也是可以进行读取的。此外，<code>SELECT ... FOR UPDATE</code>和<code>SELECT ... LOCK IN  SHARE MODE</code>必须在一个事务中，当事务提交了，锁也就释放了。因此在使用上述两句select锁定语句时，务必加上begin，使用start transaction要设置set autocommit&#x3D;0。<strong>前面也提到过autocommit值为0代表禁用自动提交</strong>。</p>
<h4 id="2-5-自增长与锁"><a href="#2-5-自增长与锁" class="headerlink" title="2.5  自增长与锁"></a>2.5  自增长与锁</h4><p>自增长在数据库中是非常常见的一种属性，也是很多DBA或开发人员首选的主键方式。在InnoDB存储引擎内存结构中，对每个含有自增长值的表都有一个自增长计数器（auto-increment counter）。对含有自增长的极计数器的表进行插入操作时，这个计数器会被初始化，执行如下语句得到计数器的值：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">MAX</span>(auto_inc_col) <span class="keyword">from</span> tbl_name <span class="keyword">for</span> <span class="keyword">update</span>;</span><br></pre></td></tr></table></figure>

<p>插入操作会依据这个自增长的计数器值加1赋予自增长列。这种实现方式称作<code>AUTO-INC Locks</code>。这种锁其实是一个特殊的表锁机制，为了提高插入性能，锁不是在一个事务完成后才释放，而是在完成对自增长值插入的SQL语句后立即释放。</p>
<p>虽然<code>AUTO-INC Locks</code>从一定程度上提高了并发插入的效率，但还是存在一些性能上的问题。对于有自增长值的列并发插入性能较差，事务必须等待前一个插入的完成（不用等待事务的完成）。此外，对于insert … select 的大数据量的插入会影响插入性能，因为另一个事务中的插入会被阻塞。</p>
<p>从MySQL5.1.22版本开始，InnoDB存储引擎提供了一种轻量级互斥量的自增长实现机制，这种机制大大提高了自增长值插入的性能。并且该版本开始，InnoDB存储引擎提供了一个参数<code>innodb_autoinc_lock_mode</code>来 控制自增长模式，该参数默认值为2（MySQL8.0）。一共有三个参数值可以设置，分别为（0、1、2），MySQL5.7默认值为1，MariaDB10.5.6版本默认也是1。</p>
<p>MySQL8.0查询<code>innodb_autoinc_lock_mode</code>默认值：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> @<span class="variable">@innodb_autoinc_lock_mode</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------------+</span></span><br><span class="line"><span class="operator">|</span> @<span class="variable">@innodb_autoinc_lock_mode</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------------+</span></span><br><span class="line"><span class="operator">|</span>                          <span class="number">2</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<p><strong>自增长类型</strong>：</p>
<ol>
<li>INSERT-like：有<code>INSERT, INSERT ... SELECT，REPLACE， REPLACE ... SELECT，LOAD DATA</code>等。包含 simple-inserts，bulk-inserts以及mixed-mode inserts</li>
<li>Simple inserts：有 <code>INSERT</code> 和 <code>REPLACE</code>，不包含<code>INSERT ... ON DUPLICATE KEY UPDATE</code>。</li>
<li>Bulk inserts：有<code>INSERT ... SELECT，REPLACE ...SELECT，and LOAD DATA</code> 。</li>
<li>Mixed-mode inserts：出入中有一部分是自增长的，有一部分是确定的。比如：INSERT INTO t1 (c1,c2) VALUES (1,’a’), (NULL,’b’), (5,’c’), (NULL,’d’)；也可以是 <code>INSERT ... ON DUPLICATE KEY UPDATE</code>。</li>
</ol>
<p><strong>自增长分类</strong>，一共有三个参数值可以设置，分别为（0、1、2）：</p>
<ol>
<li>innodb_autoinc_lock_mode&#x3D;2：默认值为2。对于所有<code>INSERT-like</code>自增长值的产生都是通过互斥量，而不是AUTO-INC Locks方式。使用row-base replication，保证最大并发性能以及数据一致性，MySQL8.0推荐设置。包含 simple-inserts，bulk-inserts以及<br>mixed-mode inserts。</li>
<li>innodb_autoinc_lock_mode&#x3D;1：默认值为1。对于simple-inserts，该值会用互斥量去对内存的计数器进行累加操作。对于bulk-inserts，是使用传统表锁的AUTO-INC Locks方式。</li>
<li>innodb_autoinc_lock_mode&#x3D;0（traditional lock mode）：老版数据库传统锁模式。</li>
</ol>
<p><strong>注意</strong>：InnoDB存储引擎中自增长实现与MyISAM存储引擎不同，MyISAM是表锁设计，自增长不用考虑插入问题。在某种场景下，主节点（master）使用InnoDB存储引擎，在子节点（slave）使用MyISAM存储引擎的replication架构，用户需要考虑这种情况。</p>
<p>此外，在InnoDB存储引擎中，<strong>自增长值的列必须是索引</strong>，同时必须是索引的第一个列。如果不是第一个列，MySQL数据库则会抛异常，而MyISAM存储引擎没有这个问题。</p>
<p><strong>进行示例演示</strong>：出现1075异常，正常情况是c1在前，c2在后即可执行成功。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> t1 (</span><br><span class="line">c1 <span class="type">INT</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">c2 <span class="type">VARCHAR</span>(<span class="number">10</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">KEY (c2,c1)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB;</span><br><span class="line">ERROR <span class="number">1075</span> (<span class="number">42000</span>): Incorrect <span class="keyword">table</span> definition; there can be <span class="keyword">only</span> <span class="keyword">one</span> auto <span class="keyword">column</span> <span class="keyword">and</span> it must be defined <span class="keyword">as</span> a key</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> t1 (</span><br><span class="line">c1 <span class="type">INT</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">c2 <span class="type">VARCHAR</span>(<span class="number">10</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">KEY (c1,c2)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected, <span class="number">1</span> warning (<span class="number">0.02</span> sec)</span><br></pre></td></tr></table></figure>

<blockquote>
<ol start="15">
<li>7.1   InnoDB  Locking</li>
<li>6.1.6 InnoDB AUTO_INCREMENT Counter Initialization</li>
</ol>
</blockquote>
<h4 id="2-6-外键与锁"><a href="#2-6-外键与锁" class="headerlink" title="2.6  外键与锁"></a>2.6  外键与锁</h4><p><strong>2.6.1 外键用法</strong></p>
<p><strong>tips</strong>：目前MySQL支持外键的存储引擎有InnoDB和NDB。</p>
<p><strong>外键的作用</strong>：用来保证参照完整性。比如有两张表主表parent table和子表child table，在子表中拥有主表外键约束；你想同时干掉两张表；MySQL告诉你，没门，不给删；需要先删除约束，才能彻底删除，使用第三方工具删除表时深有体会。MySQL数据库InnoDB存储引擎完整支持外键。</p>
<p><strong>外键语法定义</strong>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">[<span class="keyword">CONSTRAINT</span> [symbol]] <span class="keyword">FOREIGN</span> KEY</span><br><span class="line">[index_name] (col_name, ...)</span><br><span class="line"><span class="keyword">REFERENCES</span> tbl_name (col_name,...)</span><br><span class="line">[<span class="keyword">ON</span> <span class="keyword">DELETE</span> reference_option]</span><br><span class="line">[<span class="keyword">ON</span> <span class="keyword">UPDATE</span> reference_option]</span><br><span class="line">reference_option:</span><br><span class="line">RESTRICT <span class="operator">|</span> CASCADE <span class="operator">|</span> <span class="keyword">SET</span> <span class="keyword">NULL</span> <span class="operator">|</span> <span class="keyword">NO</span> ACTION <span class="operator">|</span> <span class="keyword">SET</span> <span class="keyword">DEFAULT</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>13.1.20.5 FOREIGN KEY Constraints </p>
</blockquote>
<p><strong>示例创建</strong>一张父表（<strong>parent</strong>）和一张子表（<strong>child</strong>）：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> parent (</span><br><span class="line">id <span class="type">INT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY (id)</span><br><span class="line">) ENGINE<span class="operator">=</span>INNODB;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> child (</span><br><span class="line">id <span class="type">INT</span>,</span><br><span class="line">parent_id <span class="type">INT</span>,</span><br><span class="line">INDEX par_ind (parent_id),  <span class="comment">-- 给parent_id添加索引</span></span><br><span class="line"><span class="keyword">FOREIGN</span> KEY (parent_id)   <span class="comment">-- parent_id设置为外键引用主表主键id</span></span><br><span class="line"><span class="keyword">REFERENCES</span> parent(id)   <span class="comment">-- 引用主表（parent）主键id</span></span><br><span class="line">) ENGINE<span class="operator">=</span>INNODB;</span><br></pre></td></tr></table></figure>



<p><strong>演示插入数据外键冲突</strong>：主表插入1条数据，在子表插入一条数据，违反外键约束，主表没有id&#x3D;2的行。<strong>此时无法级联更新</strong>。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">INSERT</span> <span class="keyword">INTO</span> parent (id) <span class="keyword">VALUES</span> (<span class="number">1</span>); <span class="comment">-- 主表插入1条数据</span></span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.01</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">INSERT</span> <span class="keyword">INTO</span> child (id,parent_id) <span class="keyword">VALUES</span>(<span class="number">2</span>,<span class="number">2</span>); <span class="comment">-- 在子表插入一条数据，违反外键约束，主表没有id=2的行</span></span><br><span class="line">ERROR <span class="number">1452</span> (<span class="number">23000</span>): Cannot <span class="keyword">add</span> <span class="keyword">or</span> <span class="keyword">update</span> a child <span class="type">row</span>: a <span class="keyword">foreign</span> key <span class="keyword">constraint</span> fails (`test`.`child`, <span class="keyword">CONSTRAINT</span> `child_ibfk_1` <span class="keyword">FOREIGN</span> KEY (`parent_id`) <span class="keyword">REFERENCES</span> `parent` (`id`))</span><br></pre></td></tr></table></figure>



<p><strong>演示删除数据外键冲突</strong>：有外键约束和索引，此时无法级联删除。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">DELETE</span> <span class="keyword">FROM</span> parent <span class="keyword">WHERE</span> id<span class="operator">=</span><span class="number">1</span>;</span><br><span class="line">ERROR <span class="number">1451</span> (<span class="number">23000</span>): Cannot <span class="keyword">delete</span> <span class="keyword">or</span> <span class="keyword">update</span> a parent <span class="type">row</span>: a <span class="keyword">foreign</span> key <span class="keyword">constraint</span> fails (`test`.`child`, <span class="keyword">CONSTRAINT</span> `child_ibfk_1` <span class="keyword">FOREIGN</span> KEY (`parent_id`) <span class="keyword">REFERENCES</span> `parent` (`id`))</span><br></pre></td></tr></table></figure>



<p><strong>如果想级联更新和删除</strong>，在创建子表（child）时加入CASCADE关键字。同样Oracle中也支持CASCADE，在Oracle中创建外键时注意给这个列加上索引，具体用法可能略有差异。删除原表，重新创建子表child，并加入给update与delete条件加入CASCADE属性。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> child;<span class="comment">-- 删除原有创建子表child</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 重新创建子表child，并加入给update与delete条件加入CASCADE</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> child (</span><br><span class="line">id <span class="type">INT</span>,</span><br><span class="line">parent_id <span class="type">INT</span>,</span><br><span class="line">INDEX par_ind (parent_id),</span><br><span class="line"><span class="keyword">FOREIGN</span> KEY (parent_id)</span><br><span class="line"><span class="keyword">REFERENCES</span> parent(id)</span><br><span class="line"><span class="keyword">ON</span> <span class="keyword">UPDATE</span> CASCADE</span><br><span class="line"><span class="keyword">ON</span> <span class="keyword">DELETE</span> CASCADE</span><br><span class="line">) ENGINE<span class="operator">=</span>INNODB;</span><br></pre></td></tr></table></figure>



<p>子表（<strong>child</strong>）插入测试数据：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">INSERT</span> <span class="keyword">INTO</span> child (id,parent_id) <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="number">1</span>),(<span class="number">2</span>,<span class="number">1</span>),(<span class="number">3</span>,<span class="number">1</span>);</span><br><span class="line">Query OK, <span class="number">3</span> <span class="keyword">rows</span> affected (<span class="number">0.01</span> sec)</span><br><span class="line">Records: <span class="number">3</span>  Duplicates: <span class="number">0</span>  Warnings: <span class="number">0</span></span><br></pre></td></tr></table></figure>



<p>更新主表（<strong>parent</strong>）id值为2：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">UPDATE</span> parent <span class="keyword">SET</span> id <span class="operator">=</span> <span class="number">2</span> <span class="keyword">WHERE</span> id <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"><span class="keyword">Rows</span> matched: <span class="number">1</span>  Changed: <span class="number">1</span>  Warnings: <span class="number">0</span></span><br></pre></td></tr></table></figure>



<p><strong>查询验证主表</strong>（<strong>parent</strong>）：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> parent;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">2</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>



<p><strong>查询验证子表</strong>（<strong>child</strong>）的<strong>parent_id</strong>值：此时已经全部更新（update）成 2</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> child;</span><br><span class="line"><span class="operator">+</span><span class="comment">------+-----------+</span></span><br><span class="line"><span class="operator">|</span> id   <span class="operator">|</span> parent_id <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+-----------+</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">1</span> <span class="operator">|</span>         <span class="number">2</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">2</span> <span class="operator">|</span>         <span class="number">2</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">3</span> <span class="operator">|</span>         <span class="number">2</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+-----------+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>



<p><strong>演示级联删除效果</strong>：此时可以删除数据内容</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">delete</span> <span class="keyword">from</span> parent <span class="keyword">where</span> id<span class="operator">=</span><span class="number">2</span>;</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.01</span> sec)</span><br></pre></td></tr></table></figure>



<p><strong>再次查看子表</strong>（<strong>child</strong>）：此时子表中的数据内容一并删除掉</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> child;</span><br><span class="line"><span class="keyword">Empty</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>



<p>补充一点，如果想查看表约束，可以通过命令去验证<code>show create table table_name</code>：</p>
<p>查到子表（child）已经自动在外键列加入了索引。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> child\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">       <span class="keyword">Table</span>: child</span><br><span class="line"><span class="keyword">Create</span> <span class="keyword">Table</span>: <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `child` (</span><br><span class="line">  `id` <span class="type">int</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `parent_id` <span class="type">int</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  KEY `par_ind` (`parent_id`),</span><br><span class="line">  <span class="keyword">CONSTRAINT</span> `child_ibfk_1` <span class="keyword">FOREIGN</span> KEY (`parent_id`) <span class="keyword">REFERENCES</span> `parent` (`id`) <span class="keyword">ON</span> <span class="keyword">DELETE</span> CASCADE <span class="keyword">ON</span> <span class="keyword">UPDATE</span> CASCADE</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4</span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>



<p><strong>注意</strong>：MySQL数据库外键是即时检查的，对每一行都会运行外键检查。导入数据，在检查外键约束上往往消耗大量时间。有时候，可以灵活处理，在导入过程中忽略外键检查：<code>set foreign_key_checks=0</code>，默认值是1，开启了外键约束检查。</p>
<p>前面列举示例进行外键功能说明，接下来配合锁进行描述。</p>
<p><strong>2.6.2 外键与锁</strong></p>
<p>在InnoDB存储引擎中，对于一个外键列，如果没有显示地（人为手动添加）对这个列添加索引，在InnoDB存储引擎会自动对其加一个索引，因此可以避免表锁。这一点比Oracle数据库做得更好，Oracle数据库使用外键时，需要人为手动给该列添加索引。</p>
<p>对于外键值插入和更新，首先需要查询父表（parent）中的记录，即select父表。但对于父表进行select操作，不是使用一致性非锁定读方式，这样会发生数据不一致问题。因此这时使用的是<code>select ... lock in share mode</code>方式（共享锁），主动给父表加一个S锁。如果父表已经加了X锁，子表操作会被阻塞。（可以在两个会话窗口进行测试）</p>
<p><strong>示例阻塞</strong>：</p>
<p>分别在session1会话和session2会话窗口执行事务。session1会话进行删除父表（parent）id为1的内容，session2会话执行插入内容到子表（child），发现session2此时发生阻塞，阻塞等待超时发出警告（默认50秒）。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- session1</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">begin</span>;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">delete</span> <span class="keyword">from</span> parent <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span>;</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.01</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- session2，阻塞等待超时发出警告（默认50秒）</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">begin</span>;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">insert</span> <span class="keyword">into</span> child <span class="keyword">select</span> <span class="number">4</span>,<span class="number">1</span>;</span><br><span class="line">ERROR <span class="number">1205</span> (HY000): Lock wait timeout exceeded; try restarting transaction</span><br></pre></td></tr></table></figure>
<p><img data-src="https://img-blog.csdnimg.cn/8018eeede19d432597ef6e5e49318029.png?x-oss-process=,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6b6Z6IW-5LiH6YeMc2t5,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p>
<p>此时子表（child）处于锁定等待中，在<strong>MySQL8.0</strong>中可以使用<code>data_locks</code>参数进行分析：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> performance_schema.data_locks <span class="keyword">order</span> <span class="keyword">by</span> event_id <span class="keyword">desc</span> limit <span class="number">0</span>,<span class="number">1</span>\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">               ENGINE: INNODB</span><br><span class="line">       ENGINE_LOCK_ID: <span class="number">2079935859840</span>:<span class="number">93</span>:<span class="number">5</span>:<span class="number">1</span>:<span class="number">2079912818080</span></span><br><span class="line">ENGINE_TRANSACTION_ID: <span class="number">16653</span></span><br><span class="line">            THREAD_ID: <span class="number">48</span></span><br><span class="line">             EVENT_ID: <span class="number">12</span></span><br><span class="line">        OBJECT_SCHEMA: test</span><br><span class="line">          OBJECT_NAME: child</span><br><span class="line">       PARTITION_NAME: <span class="keyword">NULL</span></span><br><span class="line">    SUBPARTITION_NAME: <span class="keyword">NULL</span></span><br><span class="line">           INDEX_NAME: par_ind</span><br><span class="line">OBJECT_INSTANCE_BEGIN: <span class="number">2079912818080</span></span><br><span class="line">            LOCK_TYPE: RECORD</span><br><span class="line">            LOCK_MODE: S</span><br><span class="line">          LOCK_STATUS: GRANTED</span><br><span class="line">            LOCK_DATA: supremum pseudo<span class="operator">-</span>record</span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<p>锁等待，在<strong>MySQL8.0</strong>中可以使用<code>data_lock_waits</code>参数进行分析：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> performance_schema.data_lock_waits  limit <span class="number">0</span>,<span class="number">1</span>\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">                          ENGINE: INNODB</span><br><span class="line">       REQUESTING_ENGINE_LOCK_ID: <span class="number">2079935860616</span>:<span class="number">91</span>:<span class="number">4</span>:<span class="number">2</span>:<span class="number">2079912823744</span></span><br><span class="line">REQUESTING_ENGINE_TRANSACTION_ID: <span class="number">16658</span></span><br><span class="line">            REQUESTING_THREAD_ID: <span class="number">49</span></span><br><span class="line">             REQUESTING_EVENT_ID: <span class="number">10</span></span><br><span class="line">REQUESTING_OBJECT_INSTANCE_BEGIN: <span class="number">2079912823744</span></span><br><span class="line">         BLOCKING_ENGINE_LOCK_ID: <span class="number">2079935859840</span>:<span class="number">91</span>:<span class="number">4</span>:<span class="number">2</span>:<span class="number">2079912817048</span></span><br><span class="line">  BLOCKING_ENGINE_TRANSACTION_ID: <span class="number">16653</span></span><br><span class="line">              BLOCKING_THREAD_ID: <span class="number">48</span></span><br><span class="line">               BLOCKING_EVENT_ID: <span class="number">12</span></span><br><span class="line">  BLOCKING_OBJECT_INSTANCE_BEGIN: <span class="number">2079912817048</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<p>前面介绍锁类型也提到过<code>data_locks</code>和<code>data_lock_waits</code>这两个参数，MySQL8.0之前在information_schema架构下有<code>INNODB_LOCKS</code>、<code>INNODB_LOCK_WAITS</code>两个系统参数可以进行参考。此处进行示例，也算补足在锁类型章节没有进行示例演示。</p>
<p><strong>下面是官方对外键锁定介绍</strong>：MySQL在必要时扩展元数据锁，通过外键约束关联表。扩展元数据锁可以防止DML和DDL操作在相关表上并发执行引起的冲突。该特性还支持在父表被修改时，更新外键元数据。MySQL早期版本中，外键元数据(由子表拥有)不能安全更新。如果一个表被LOCK TABLES显式锁定，那么任何与外键约束相关的表都会被隐式打开和锁定。对于外键检查，在相关表上获取一个共享只读锁(LOCK TABLES READ)。对于级联更新，在操作涉及的相关表上获取一个无共享的写锁(LOCK TABLES WRITE)。</p>
<p>外键定义和元数据（Foreign Key Definitions and Metadata）。查看外键定义，可以使用<code>SHOW CREATE TABLE child\G</code>，之前也提到过，这里不再赘述。</p>
<p>如下是查看到数据库中哪些表使用到的外键信息，显示数据库名（<strong>TABLE_SCHEMA</strong>）、表名（<strong>TABLE_NAME</strong>）、字段列名（<strong>COLUMN_NAME</strong>）以及外键约束名（<strong>CONSTRAINT_NAME</strong>）。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> TABLE_SCHEMA, TABLE_NAME, COLUMN_NAME, CONSTRAINT_NAME</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">FROM</span> INFORMATION_SCHEMA.KEY_COLUMN_USAGE</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">WHERE</span> REFERENCED_TABLE_SCHEMA <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------+-----------------+----------------------+---------------------------+</span></span><br><span class="line"><span class="operator">|</span> TABLE_SCHEMA <span class="operator">|</span> TABLE_NAME      <span class="operator">|</span> COLUMN_NAME          <span class="operator">|</span> CONSTRAINT_NAME           <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------+-----------------+----------------------+---------------------------+</span></span><br><span class="line"><span class="operator">|</span> world        <span class="operator">|</span> city            <span class="operator">|</span> CountryCode          <span class="operator">|</span> city_ibfk_1               <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> world        <span class="operator">|</span> countrylanguage <span class="operator">|</span> CountryCode          <span class="operator">|</span> countryLanguage_ibfk_1    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> test         <span class="operator">|</span> child           <span class="operator">|</span> parent_id            <span class="operator">|</span> child_ibfk_1              <span class="operator">|</span></span><br><span class="line">...</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------+-----------------+----------------------+---------------------------+</span></span><br><span class="line"><span class="number">25</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.02</span> sec)</span><br></pre></td></tr></table></figure>

<p><strong>查询INFORMATION_SCHEMA架构下的INNODB_FOREIGN</strong>，使用limit查询2条记录进行演示。world数据库与sakila数据库均为MySQL官方示例，前面有官方链接，可自行获取。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> INFORMATION_SCHEMA.INNODB_FOREIGN limit <span class="number">0</span>,<span class="number">2</span> \G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">      ID: world<span class="operator">/</span>city_ibfk_1</span><br><span class="line">FOR_NAME: world<span class="operator">/</span>city</span><br><span class="line">REF_NAME: world<span class="operator">/</span>country</span><br><span class="line">  N_COLS: <span class="number">1</span></span><br><span class="line">    TYPE: <span class="number">48</span></span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">2.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">      ID: sakila<span class="operator">/</span>fk_address_city</span><br><span class="line">FOR_NAME: sakila<span class="operator">/</span>address</span><br><span class="line">REF_NAME: sakila<span class="operator">/</span>city</span><br><span class="line">  N_COLS: <span class="number">1</span></span><br><span class="line">    TYPE: <span class="number">4</span></span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>



<h4 id="2-7-锁的算法"><a href="#2-7-锁的算法" class="headerlink" title="2.7  锁的算法"></a>2.7  锁的算法</h4><p>在描述锁类型，我已经将InnoDB存储引擎中锁类型全部列举出来了，参考MySQL8.0-refman第15章节：15.7.1 InnoDB Locking。</p>
<p><strong>2.7.1 行锁的3种算法</strong></p>
<p>InnoDB存储引擎有3种行锁算法：</p>
<ol>
<li>Record Locks：单个行记录上的锁；</li>
<li>Gap Locks：间隙锁，锁定一个范围，不包含记录本身；</li>
<li>Next-Key Locks：Record Locks和Gap Locks，锁定一个范围，并且锁定记录本身。</li>
</ol>
<p><code>Record Locks</code>记录锁总是锁定索引记录。即使表没有定义索引，对于这种情况InnoDB会创建一个隐藏的聚集索引，并使用这个索引进行记录锁定。</p>
<p><code>Next-Key Locks</code>是结合了Record Locks和Gap Locks的一种锁定算法，在Next-Key Locks算法下，InnoDB对于行的查询都是采用这种锁定算法。</p>
<p>InnoDB执行行级锁的方式是这样的：当它搜索或扫描一个表索引时，它会在遇到的索引记录上设置共享或排它锁。因此，行级锁实际上是索引记录锁。索引记录上的next-key锁也会影响该索引记录之前的间隙。也就是说，next-key锁是索引记录锁加上索引记录之前的间隙锁。如果一个会话对索引中的记录R有一个共享或排它锁，那么另一个会话不能在紧挨着索引顺序的R之前的间隙插入一个新索引记录。</p>
<p>假设一个索引包含值10、11、13和20。此索引可能的next-key锁覆盖以下区间，其中圆括号表示排除区间端点，方括号表示包含端点：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">(negative infinity, 10]</span><br><span class="line">(10, 11]</span><br><span class="line">(11, 13]</span><br><span class="line">(13, 20]</span><br><span class="line">(20, positive infinity)</span><br></pre></td></tr></table></figure>

<p>如果事务T1已经通过<code>Next-Key Locks</code>锁定如下范围：</p>
<p>(10, 11]、(11, 13]</p>
<p>当插入新记录12时，锁定范围会变成：</p>
<p>(10, 11]、(11,12]、(12, 13]</p>
<p>当查询的索引包含唯一属性时，InnoDB存储引擎会对<code>Next-Key Locks</code>进行优化，将其降级为<code>Record Locks</code>，仅锁住索引本身，而不是范围。在InnoDB存储引擎中，对于insert操作，会检查插入记录的一条记录是否被锁定，如果已经被锁定，则不允许查询。</p>
<p><strong>2.7.2 解决Phantom Problem</strong></p>
<p><strong>什么是Phantom Problem</strong>？：指在同一事务中，连续执行两次同样的SQL语句可能导致不同的结果，第二次执行的SQL语句可能返回之前不存在的行。</p>
<p><strong>目的</strong>：解决数据一致性。你可以联想到幻读、脏读、更新丢失，其实也是为了解决数据一致性问题。</p>
<p>当同一查询在不同时间产生不同的行集时，就会在事务中出现所谓的幻影问题。例如，如果一个SELECT被执行了两次，但是第二次返回了第一次没有返回的一行，那么该行就是一个幻像行。</p>
<p>假设子表的id列上有一个索引，您希望读取和锁定表中标识符值大于100的所有行，以便稍后更新选中行的某些列：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> child <span class="keyword">WHERE</span> id <span class="operator">&gt;</span> <span class="number">100</span> <span class="keyword">FOR</span> <span class="keyword">UPDATE</span>;</span><br></pre></td></tr></table></figure>

<p>查询从 id 大于 100 的第一条记录开始扫描索引。让表包含 id 值为 90 和 102 的行。如果在扫描的索引记录上设置的锁范围不锁定间隙锁记录（在这种情况下，90 和 102 之间的间隙记录），另一个 session 可以在表中插入id 为101的新行。如果在同一个事务中，要执行相同的 SELECT，此时查询返回，会在结果集中看到一个 id 为 101 的新行（幻像） 。如果将一组行视为一个数据项，则新的幻像将违反 一个事务运行的事务隔离原则，以便它拥有的数据 （read 操作） 在事务期间不会改变。</p>
<p>InnoDB存储引擎提供了SQL92标准所描述的四种事务隔离级别：</p>
<ul>
<li>READ UNCOMMITTED：未提交读</li>
<li>READ COMMITTED：已提交读</li>
<li>REPEATABLE READ ：可重复读</li>
<li>SERIALIZABLE：可串行化（序列化）</li>
</ul>
<p><strong>而InnoDB默认事务隔离级别是REPEATABLE READ</strong>，通过如下命令可以查询到。transaction_isolation系统参数是动态的，可以在数据库运行过程中进行调整测试，你也可以在不同会话中测试不同事务隔离级别。</p>
<p>当然，你还可以在my.ini或者my.cnf配置文件中设置测试：<code>transaction-isolation=name</code>，name为上面介绍的事务隔离级别</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> @<span class="variable">@transaction_isolation</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------+</span></span><br><span class="line"><span class="operator">|</span> @<span class="variable">@transaction_isolation</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------+</span></span><br><span class="line"><span class="operator">|</span> REPEATABLE<span class="operator">-</span>READ         <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>



<p>为了解决phantoms problem，InnoDB使用了一种称为next-key locking锁的算法，它结合了索引行锁（index-row<br>locking ）和间隙锁（Gap Locks）。InnoDB执行行级锁的方式是这样的：当它搜索或扫描一个表索引时，它会在遇到的索引记录上设置共享或排它锁。因此，行级锁实际上是索引记录锁。此外，索引记录上的next-key锁也会影响索引记录之前的间隙。也就是说，next-key锁是索引记录锁加上索引记录之前的间隙锁。</p>
<p>当InnoDB扫描一个索引时，它也可以锁定索引中最后一条记录之后的间隙。就像上面的例子中所发生的那样：为了防止表中插入任何id大于100的行，InnoDB设置的锁包含了id值102后面的一个锁。</p>
<p>你可以在应用程序中使用next-key locking来实现唯一性检查：如果阅读了共享模式下的数据，并且看不到要插入行的重复项（看不到幻象），那么可以安全地插入行，并知道读取期间在行的后续设置的next-key locking锁，防止任何人同时在你所使用的行插入重复项。因此，next-key锁定能够锁定表中不存在的内容。</p>
<p>可以禁用间隙锁定，这可能会导致幻象问题，因为当间隙锁定被禁用时，其它会话可能会将新行插入到间隙中。</p>
<p>个人理解难免有些不到位，如果给你带来误解，我表示抱歉。你可以找到参考文档：</p>
<blockquote>
<p>15.7.4 Phantom Rows</p>
</blockquote>
<p>同时你还可以参考这本书籍《MySQL技术内幕InnoDB存储引擎 第2版》，如果作者能针对MySQL8.0进行更新就好了。虽然过去快10年了，依然是一本经典书籍，颇有参考意义，便于理解InnoDB。</p>
<h4 id="2-8-阻塞、死锁、锁升级"><a href="#2-8-阻塞、死锁、锁升级" class="headerlink" title="2.8  阻塞、死锁、锁升级"></a>2.8  阻塞、死锁、锁升级</h4><p><strong>2.8.1 阻塞</strong></p>
<p>如何理解阻塞，想象一下有东西被堵住了，如何处理。</p>
<p><strong>数据库中阻塞</strong>：因为不同锁之间的兼容性关系，在某些时刻一个事务中的锁需要等待另一事务中的锁释放它所占用的资源，这就是阻塞。阻塞并不是一件坏事，为了保证事务并发并且正常运行。</p>
<p>在InnoDB存储引擎中，控制阻塞等待时间参数<code>innodb_lock_wait_timeout</code>，默认值为50秒。</p>
<p><strong>查询示例</strong>：说明一下，在文中多次用到select @@系统参数查询。当然，在官方文档中也有参数说明。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> @<span class="variable">@innodb_lock_wait_timeout</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------------+</span></span><br><span class="line"><span class="operator">|</span> @<span class="variable">@innodb_lock_wait_timeout</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------------+</span></span><br><span class="line"><span class="operator">|</span>                         <span class="number">50</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<p><strong>临时设置</strong>生效，如下：</p>
<p>查看文档，参数时是动态的，在数据库运行时是可以修改的。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">set</span> @<span class="variable">@innodb_lock_wait_timeout</span><span class="operator">=</span><span class="number">60</span>; <span class="comment">-- set和@符号之间可以不加空格</span></span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<p>如果想永久生效，可以在my.ini或者my.cnf中加入参数<code>innodb-lock-wait-timeout</code>&#x3D;#（例如设置60），重启服务生效。</p>
<p>此外，还有一个参数<code>innodb_rollback_on_timeout</code>用于设定是否在等待超时时对进行中的事务进行回滚操作。默认值是OFF，查询出来值是0，代表不回滚。查询示例如下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> @<span class="variable">@innodb_rollback_on_timeout</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------------+</span></span><br><span class="line"><span class="operator">|</span> @<span class="variable">@innodb_rollback_on_timeout</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------------+</span></span><br><span class="line"><span class="operator">|</span>                            <span class="number">0</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<p>查看文档，由于非动态是非动态，在数据库运行时，不允许被更改。一旦更改，会提示参数只读。</p>
<p>关于参数是不是动态，看文档参数说明<strong>Dynamic</strong>值（YES代表动态，NO为非动态），默认值参数说明为Default Value。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">set</span> @<span class="variable">@innodb_rollback_on_timeout</span><span class="operator">=</span><span class="number">1</span>;</span><br><span class="line">ERROR <span class="number">1238</span> (HY000): Variable <span class="string">&#x27;innodb_rollback_on_timeout&#x27;</span> <span class="keyword">is</span> a read <span class="keyword">only</span> variable</span><br></pre></td></tr></table></figure>

<p><strong>当发生超时，MySQL数据库会抛出异常ERROR 1205</strong>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">begin</span></span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> world.city <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span> <span class="keyword">for</span> <span class="keyword">update</span>;</span><br><span class="line">ERROR <span class="number">1205</span> (HY000): Lock wait timeout exceeded; try restarting transaction</span><br></pre></td></tr></table></figure>

<p><strong>注意</strong>：在默认情况下InnoDB存储引擎不会回滚超时引发的错误异常。InnoDB存储引擎在绝大多数情况下，都不会对异常进行回滚。</p>
<blockquote>
<p>15.14 InnoDB Startup Options and System Variables</p>
</blockquote>
<p><strong>2.8.2 死锁</strong></p>
<p><strong>死锁概念</strong>：死锁是指两个或两个以上的事务在执行过程中，因争夺锁资源而造成的一种互相等待现象。如果没有外力作用，事务将无法推进。解决死锁问题最直接方式是不等待，将任何等待转换为回滚，并且事务重新开始。这种做法确实可以避免死锁产生，但在线上环境中，这可能导致并发性能下降，甚至任何一个事务都不能进行。带来的问题，比死锁更严重，很难发现问题并浪费资源。</p>
<p><strong>解决死锁问题最简单一种方法是超时</strong>，当两个事务互相等待时，等待时间超过系统参数设置阈值时，其中一个事务进行回滚，另一个等待的事务继续进行。在InnoDB存储引擎中，参数innodb_rollback_on_timeout用来设置超时时间，前面讲解阻塞提到过。</p>
<p>超时机制是一种简单解决方法，仅通过超时后对事务进行回滚处理，或者是根据First In，First Out（FIFO），一进一出顺序选择回滚对象。如果超时事务所占权重比较大，事务操作更新很多行，占用较多undo log，这时采用FIFO方式并不那么合适。回滚事务时间相对一个事务所占用时间会更多。</p>
<p>除了超时机制，可寻求其它解决方案。当前数据库普遍采用<strong>wait-for graph</strong>（等待图）方式，主动检测死锁，判断是否存在回路。要求数据库保存以下两种信息：</p>
<ul>
<li>锁信息链表；</li>
<li>事务等待链表。</li>
</ul>
<p>等待图方式是之前版本中的一种，当然也还有新的处理方式。</p>
<p><strong>CATS算法</strong>通过分配一个调度权重对等待的事务进行优先级排序，该权重是根据一个事务块的事务数量计算出来的。例如，如果两个事务正在等待同一个对象上的一个锁，那么阻塞最多事务的事务将被分配更大的调度权重。如果权值相等，则优先级为等待时间最长的事务。</p>
<p>在MySQL 8.0.20之前，InnoDB也使用先进先出(FIFO)算法来调度事务，CATS算法只在重锁争用的情况下使用。MySQL 8.0.20中的CATS算法增强使FIFO算法冗余，允许删除它。之前由FIFO算法执行的事务调度是由MySQL 8.0.20的CATS算法执行的。在某种情况下，此更改可能会影响授予事务锁的顺序。</p>
<p><strong>注意</strong>：MySQL8.0.20后，新版InnoDB使用争用感知事务调度(CATS)算法对等待锁的事务进行优先级排序。当多个事务在同一个对象上等待一个锁时，CATS算法确定哪个事务首先接收这个锁。</p>
<blockquote>
<p>15.7.6 Transaction Scheduling</p>
</blockquote>
<p><strong>死锁概率</strong>：</p>
<p>一般而言，死锁概率应该发生非常少，如果经常发生，系统是不可用的。</p>
<p>死锁次数，应该少于等待，至少需要两次等待才会产生一次死锁。</p>
<ol>
<li>一定环境下，系统事务数量越多，发生死锁概率越大；</li>
<li>每个事务操作数量越多，发生死锁概率越大；</li>
<li>操作数据集合越小，发生死锁概率越大。</li>
</ol>
<p><strong>死锁示例</strong>：</p>
<p>如果程序是串行的，那么不可能发生死锁，比如MyISAM存储引擎不会出现死锁，要么全部获取，要么全不获取。死锁只存在于并发情况下，数据库本身是一个并发运行程序，可能会发生死锁。</p>
<p>具体SQL语句就不贴出来，可以参考上面使用进行模拟场景。在两个会话窗口session A和session B中进行执行获取排它锁，<strong>注意执行之前使用begin开始事务</strong>。</p>
<p>死锁原因：两个会话资源互相等待。大多数死锁InnoDB存储引擎可以侦测到，无需人为进行干预。发现死锁，InnoDB存储引擎会立刻回滚一个事务。</p>
<p>在Oracle数据库中产生死锁常见原因是没有对外键添加索引，而MySQL数据库InnoDB存储引擎会自动为外键上索引，避免这种情况发生。人为删除外键索引，MySQL会抛出一个异常。</p>
<p><strong>2.8.3 锁升级</strong></p>
<p>锁升级（lock escalation）是指将当前锁粒度降低。</p>
<p>打个比方，数据库可以将1000个行锁升级为一个页锁，或者将页锁升级为表锁。如果数据库设计人为锁是一种稀有资源，想避免锁开销，数据库中会频繁出现锁升级。</p>
<p><strong>注意</strong>：MySQL中InnoDB事务模型目标是将多版本数据库（MVCC）最佳特性与传统两阶段锁结合起来。InnoDB在行级执行锁定，默认情况下以非锁定的一致读取方式运行查询，这是Oracle的风格。InnoDB中的锁信息被有效地存储在空间中，因此不需要锁升级。通常，允许多个用户锁定InnoDB表中的每一行，或者任意随机的行子集，而不会导致InnoDB内存耗尽。</p>
<blockquote>
<p>15.7 InnoDB Locking and Transaction Model</p>
</blockquote>
<h3 id="03-MySQL官方示例数据库"><a href="#03-MySQL官方示例数据库" class="headerlink" title="03  MySQL官方示例数据库"></a>03  MySQL官方示例数据库</h3><p>在对MySQL进行举例并使用到示例数据库：大多数情况使用MySQL官方提供的sakila（模拟电影出租信息管理系统）和world数据库，类似于Oracle的scott用户。</p>
<p><strong>sakila-db数据库</strong>包含三个文件，便于大家获取与使用：</p>
<ol>
<li>sakila-schema.sql：数据库表结构；</li>
<li>sakila-data.sql：数据库示例模拟数据；</li>
<li>sakila.mwb：数据库物理模型，在MySQL workbench中可以打开查看。</li>
</ol>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZHMubXlzcWwuY29tL2RvY3Mvc2FraWxhLWRiLnppcA==">https://downloads.mysql.com/docs/sakila-db.zip<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p><strong>world-db数据库</strong>，包含三张表：city、country、countrylanguage。</p>
<p><strong>只是用于用于简单测试学习，建议使用world-db</strong>：</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZHMubXlzcWwuY29tL2RvY3Mvd29ybGQtZGIuemlw">https://downloads.mysql.com/docs/world-db.zip<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p><strong>参考资料&amp;鸣谢</strong>：</p>
<blockquote>
<p>《深入浅出MySQL 第2版 数据库开发、优化与管理维护》。</p>
</blockquote>
<blockquote>
<p>《MySQL技术内幕InnoDB存储引擎 第2版》。</p>
</blockquote>
<blockquote>
<p>MySQL8.0官网文档：refman-8.0-en.pdf，如果学习新版本，官方文档是非常不错的选择。</p>
</blockquote>
<p>虽然书籍年份比较久远（停留在MySQL5.6.x版本），但仍然具有借鉴意义。</p>
<p>最后，对以上书籍和官方文档所有作者表示衷心感谢。让我充分体会到：前人栽树，后人乘凉。</p>
<h1 id="莫问收获，但问耕耘"><a href="#莫问收获，但问耕耘" class="headerlink" title="莫问收获，但问耕耘"></a>莫问收获，但问耕耘</h1><p><strong>能看到这里的，都是帅哥靓妹</strong>。以上是本次MySQL优化篇（上部分）全部内容，希望能对你的工作与学习有所帮助。感觉写的好，就拿出你的一键三连。如果感觉总结的不到位，也希望能留下您宝贵的意见，我会在文章中定期进行调整优化。<strong>好记性不如烂笔头，多实践多积累</strong>。<strong>你会发现，自己的知识宝库越来越丰富</strong>。原创不易，转载也请标明出处和作者，尊重原创。</p>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>Oracle11gR2密码过期处理</title>
    <url>/2022/02/18/Oracle11gR2%E5%AF%86%E7%A0%81%E8%BF%87%E6%9C%9F%E5%A4%84%E7%90%86/</url>
    <content><![CDATA[<ol>
<li>连接至SQL plus</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-- 登陆sys</span><br><span class="line">sqlplus /nolog</span><br><span class="line">-- 连接数据库</span><br><span class="line">conn sys/password@orcl as sysdba</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>查询密码期限</li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line">  <span class="keyword">FROM</span> dba_profiles s</span><br><span class="line"> <span class="keyword">WHERE</span> s.profile <span class="operator">=</span> <span class="string">&#x27;DEFAULT&#x27;</span></span><br><span class="line">   <span class="keyword">AND</span> resource_name <span class="operator">=</span> <span class="string">&#x27;PASSWORD_LIFE_TIME&#x27;</span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>修改密码期限为无限制</li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> PROFILE <span class="keyword">DEFAULT</span> LIMIT PASSWORD_LIFE_TIME UNLIMITED;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>Oracle</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL开发篇，存储引擎的选择</title>
    <url>/2022/01/30/MySQL%E5%BC%80%E5%8F%91%E7%AF%87%EF%BC%8C%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E%E7%9A%84%E9%80%89%E6%8B%A9/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>谁说MySQL查询千万级别的数据很拉跨？我今天就要好好的和你拉拉家常，畅谈到深夜，一起过除夕！这篇文章也是年前的最后一篇，希望能带给大家些许收获，不知不觉查找文档和参考实体书籍就写了这么多，自己都感觉到意外。不禁感慨到，知道的越多，才知道不知道的更多。</p>
<p>开发人员或者是DBA都应该关注MySQL使用的存储引擎，选择合适存储引擎对你的应用性能提升是明显的。在阅读到本文的时候，肯定是有一定的MySQL或者其它数据库基础的，不然有些地方看着会很费劲。重点地方，我都进行了加粗处理，这样更容易获取关键知识点。</p>
<p>关于存储引擎，一篇文章也不可能面面俱到，对个人觉得比较重要、于工作有益的方面进行阐述。如果真的去深挖，估计得一本书的篇幅。顺带还介绍一些数据类型选择、字符集设置、索引的使用；视图、存储过程、函数以及触发器啊等等会在下一篇博文进行详细的描述。但本文不会做太详细的叙述。本篇文章以存储引擎的选择为核心，如果有出现瑕疵的地方，希望您能留下宝贵的建议。</p>
<span id="more"></span>


<h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="一、存储引擎的选择（表类型）"><a href="#一、存储引擎的选择（表类型）" class="headerlink" title="一、存储引擎的选择（表类型）"></a>一、存储引擎的选择（表类型）</h2><h3 id="1、存储引擎的介绍"><a href="#1、存储引擎的介绍" class="headerlink" title="1、存储引擎的介绍"></a>1、存储引擎的介绍</h3><p>与到多数关系型数据库的区别在于MySQL有一个存储引擎的概念，针对不同的存储需求可以选择最合适的存储引擎。MySQL中的插件式的存储引擎是其一大特色，用户可以根据应用的需求选择如何存储、是否索引，是否使用事务。嘿嘿，你也可以根据业务环境去适配最适合自己业务的存储引擎。</p>
<p>Oracle从中嗅到了商机，收购了MySQL，从此有了企业版（商业支持）。社区版依旧可以免费下载。另一大魅力也是因为开源，社区高度活跃，人人都可贡献。接下来介绍几种使用比较多的存储引擎，存储引擎并无优劣之分，有的只是谁更适合对应的生产业务环境。</p>
<p>MySQL5.0中支持的存储引擎有FEDERATED、<strong>MRG_MYISAM</strong>、<strong>MyISAM</strong>、BLACKHOLE、CSV、<strong>MEMORY</strong>、ARCHIVE、<strong>NDB Cluster</strong>、BDB、EXAMPLE、<strong>InnoDB</strong>（MySQL5.5以及MariaDB10.2之后的默认存储引擎）、PERFORMANCE_SCHEMA（非常规存储数据引擎）。下面给出MySQL与MariaDB支持的存储器引擎的对比，可以看出MariaDB新增了Aria引擎：</p>
<p><strong>查看存储引擎</strong></p>
<p>通过MySQL登录自带的字符界面输入<code>show engines\G;</code>或者使用支持MySQL查询的工具SQLyog、phpMyAdmin、MySQL workbench等查询支持的引擎，这里只展示部分哟：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">[test<span class="variable">@cnwangk</span> <span class="operator">~</span>]$ mysql <span class="operator">-</span>uroot <span class="operator">-</span>p</span><br><span class="line">Enter password: </span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> engines\G;</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">2.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">      Engine: MRG_MYISAM</span><br><span class="line">     Support: YES</span><br><span class="line">     Comment: Collection <span class="keyword">of</span> identical MyISAM tables</span><br><span class="line">Transactions: <span class="keyword">NO</span></span><br><span class="line">          XA: <span class="keyword">NO</span></span><br><span class="line">  Savepoints: <span class="keyword">NO</span></span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">3.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">      Engine: MyISAM</span><br><span class="line">     Support: YES</span><br><span class="line">     Comment: MyISAM storage engine</span><br><span class="line">Transactions: <span class="keyword">NO</span></span><br><span class="line">          XA: <span class="keyword">NO</span></span><br><span class="line">  Savepoints: <span class="keyword">NO</span></span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">6.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">      Engine: MEMORY</span><br><span class="line">     Support: YES</span><br><span class="line">     Comment: Hash based, stored <span class="keyword">in</span> memory, useful <span class="keyword">for</span> temporary tables</span><br><span class="line">Transactions: <span class="keyword">NO</span></span><br><span class="line">          XA: <span class="keyword">NO</span></span><br><span class="line">  Savepoints: <span class="keyword">NO</span></span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">8.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">      Engine: InnoDB</span><br><span class="line">     Support: <span class="keyword">DEFAULT</span></span><br><span class="line">     Comment: Supports transactions, <span class="type">row</span><span class="operator">-</span>level locking, <span class="keyword">and</span> <span class="keyword">foreign</span> keys</span><br><span class="line">Transactions: YES</span><br><span class="line">          XA: YES</span><br><span class="line">  Savepoints: YES</span><br><span class="line"><span class="number">9</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<p><strong>作用描述</strong>：</p>
<ul>
<li>Engine：引擎名称（描述）；</li>
<li>Support：当前版本数据库是否支持该存储引擎，YES：支持、NO：不支持；<strong>Supports transactions, row-level locking, and foreign keys</strong>，<strong>个人字面上翻译这段话：支持事务、行级别锁和外键</strong>；</li>
<li>Comment：对该存储引擎的详情描述，比如描述该引擎否支持事务和外键；</li>
<li>Transactions：对该存储引擎是否支持事务的描述，YES：支持、NO：不支持；</li>
<li>XA：是否满足XA规范。XA规范是开放群组关于分布式事务处理(DTP)的规范。YES：支持、NO：不支持；</li>
<li>Savepoints：字面意思是保存点，对事物控制是否支持，YES：支持、NO：不支持。</li>
</ul>
<p>小声哔哔，如果你能阅读明白官方的一些英文文档，这将有助于你对MySQL存储引擎的进一步理解，养成阅读源码或者文档的能力。</p>
<p>顺带的提一下MySQL的妹妹MariaDB。在MySQL的复刻版本MariaDB中10.2之前使用的自带的新引擎Aria，在MariaDB10.2之后使用的默认存储引擎也是InnoDB，足以看出InnoDB存储引擎的优秀之处。MariaDB的API和协议兼容MySQL，另外又添加了一些功能，以支持本地的非阻塞操作和进度报告。这意味着，所有使用MySQL的连接器、程序库和应用程序也将可以在MariaDB下工作。在此基础上，由于担心甲骨文MySQL的一个更加封闭的软件项目，Fedora等Linux发行版已经在最新版本中以MariaDB取代MySQL，维基媒体基金会的服务器同样也使用MariaDB取代了MySQL。</p>
<p><strong>主要</strong>需要<strong>了解的几种存储引擎</strong>：</p>
<ul>
<li><strong>MyISAM</strong></li>
<li><strong>InnoDB</strong></li>
<li>MEMORY</li>
<li>MERGE</li>
</ul>
<p>下面将着重介绍我最近看书认识的几种常用的存储引擎，对比各个存储引擎之间的区别，帮助我们理解不同存储引擎的使用方式。更多详情可以参考MySQL的官方文档。</p>
<h3 id="2、部分存储引擎的特性"><a href="#2、部分存储引擎的特性" class="headerlink" title="2、部分存储引擎的特性"></a>2、部分存储引擎的特性</h3><table>
<thead>
<tr>
<th>存储引擎&#x2F;支持特性</th>
<th>存储限制</th>
<th>事务安全</th>
<th>锁机制</th>
<th>B树索引</th>
<th>哈希索引</th>
<th>全文索引</th>
<th>集群索引</th>
<th>数据缓存</th>
<th>索引缓存</th>
<th>数据可压缩</th>
<th>空间使用</th>
<th>内存使用</th>
<th>批量插入速度</th>
<th>外键支持</th>
</tr>
</thead>
<tbody><tr>
<td>MyISAM</td>
<td>有</td>
<td></td>
<td>表锁</td>
<td>支持</td>
<td></td>
<td>支持</td>
<td></td>
<td></td>
<td>支持</td>
<td>支持</td>
<td>低</td>
<td>低</td>
<td>高</td>
<td></td>
</tr>
<tr>
<td>InnoDB</td>
<td>64TB</td>
<td>支持</td>
<td>行锁</td>
<td>支持</td>
<td></td>
<td>支持（5.6）</td>
<td>支持</td>
<td>支持</td>
<td>支持</td>
<td></td>
<td>高</td>
<td>高</td>
<td>低</td>
<td>支持</td>
</tr>
<tr>
<td>MEMORY</td>
<td>有</td>
<td></td>
<td>表锁</td>
<td>支持</td>
<td>支持</td>
<td></td>
<td></td>
<td>支持</td>
<td>支持</td>
<td></td>
<td>N&#x2F;A</td>
<td>中等</td>
<td>高</td>
<td></td>
</tr>
<tr>
<td>MERGE</td>
<td>没有</td>
<td></td>
<td>表锁</td>
<td>支持</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td>支持</td>
<td></td>
<td>低</td>
<td>低</td>
<td>高</td>
<td></td>
</tr>
<tr>
<td>NDB</td>
<td>有</td>
<td></td>
<td>行锁</td>
<td>支持</td>
<td></td>
<td></td>
<td></td>
<td>支持</td>
<td>支持</td>
<td></td>
<td>低</td>
<td>高</td>
<td>高</td>
<td></td>
</tr>
</tbody></table>
<p><strong>InnoDB存储引擎在MySQL5.6版本开始支持全文索引</strong>。在MySQL5.7推出了虚拟列，MySQL8.0新特性加入了函数索引支持。</p>
<h4 id="2-1、MyISAM存储引擎"><a href="#2-1、MyISAM存储引擎" class="headerlink" title="2.1、MyISAM存储引擎"></a>2.1、MyISAM存储引擎</h4><p><strong>MyISAM是MySQL5.5之前默认的存储引擎</strong>。MyISAM不支持事务、不支持外键。优势在于<strong>访问速度快</strong>，对事务完整性没有特殊要求或者以select和insert为主的应用基本上可以使用MyISAM作为存储引擎创建表。我们先弄个例子出来演示，事先准备了一张数据千万级别的表，看看这个存储引擎的特性：</p>
<p>我已经创建好了数据库为test，在test中分别创建了两张表test和tolove。test表在创建的时候指定默认存储引擎为MyISAM，tolove表指定存储引擎为InnoDB。<br><strong>使用MyISAM存储引擎创建的表tolove</strong>，查询存储有1kw数据的表tolove。</p>
<p><strong>tips</strong>：你可以使用<code>use test</code>，切换到test数据库，就不用像我这样查询tolove表去指定test数据库了哟！</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MySQL [(<span class="keyword">none</span>)]<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> test.tolove;</span><br><span class="line"><span class="operator">+</span><span class="comment">----------+</span></span><br><span class="line"><span class="operator">|</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">10000000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.000</span> sec)</span><br></pre></td></tr></table></figure>

<p>再看演示<strong>使用InnoDB存储引擎创建的表test</strong>，同样为了演示，事先随机生成了1kw条数据。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MySQL [(<span class="keyword">none</span>)]<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> test.test;</span><br><span class="line"><span class="operator">+</span><span class="comment">----------+</span></span><br><span class="line"><span class="operator">|</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">10000000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">3.080</span> sec)</span><br></pre></td></tr></table></figure>

<p>进行对比同样存储1kw条数据的表，<strong>使用MyISAM作为存储引擎</strong>查询速度堪称光速1 row in set (<strong>0.000 sec</strong>)，<strong>使用InnoDB存储引擎</strong>查询速度稍逊一筹1 row in set (<strong>3.080 sec</strong>)。</p>
<p><strong>MyISAM在磁盘中存储的文件</strong>：</p>
<p>每个MyISAM在磁盘上存储成3个文件，其文件名和表名都相同，扩展名分别是：</p>
<ul>
<li>.frm：存储表定义；</li>
<li>.MYD：MYData，存储数据；</li>
<li>.MYI：MYindex，存储索引。</li>
</ul>
<p>数据文件和索引文件可以存放在不同的目录，<strong>平均分布IO</strong>，获得更快的速度，提升性能。需要<strong>指定索引文件和数据文件存储的路径</strong>，创建表时通过<strong>DATA DIRECTORY和INDEX DIRECTORY</strong>参数指定，表明不同MyISAM表的索引文件和数据文件可以存放在不同的路径下。当然，需要给予该路径的访问权限。</p>
<p><strong>MyISAM损坏处理方式</strong> ：</p>
<p>MyISAM类型的表可能会损坏，原因多种多样。损坏后的表有可能不能被访问，会提示需要修复或者访问后提示返回错误结果。MyISAM类型的表，可以通过提供的修复工具<strong>执行CHECK TABLE语句检查MyISAM表的健康程度</strong>，使用<strong>REPAIR TABLE语句修复</strong>一个损坏的表。<strong>表损坏可能会导致数据库异常重新启动</strong>，需要尽快修复并确定原因好做应对策略。</p>
<p>使用MyISAM存储引擎的表支持3种不同的存储格式，如下：</p>
<ul>
<li>静态表，固定长度；</li>
<li>动态表</li>
<li>压缩表</li>
</ul>
<p><strong>静态表</strong>是MyISAM存储引擎的默认存储格式，字段长度是定长，记录都是固定长度。优势在于<strong>存储迅速</strong>、<strong>容易缓存</strong>、<strong>出现故障易恢复</strong>；缺点是相对耗存储空间。<strong>需要注意的是</strong>：<strong>如需保存内容后面的空格，默认返回结果会去掉后面的空格</strong>。</p>
<p><strong>动态表</strong>包含变长字段，记录不是固定长度，存储优势：<strong>占用空间相对较小</strong>、但<strong>频繁删除和更新记录会产生碎片</strong>。这时，需要定期执行<code>optimize table</code>语句或者<code>myisamchk -r</code>命令来改善性能，出现故障恢复相对较难。</p>
<p><strong>压缩表</strong>由<strong>mysiampack工具</strong>创建，占用磁盘空间很小。因为每个记录是被单独压缩，所以访问开始非常小。</p>
<p>顺带安利一波，前段时间发现WPS也能够制作精美的思维导图，并且支持一键导入到doc文件中。普通用户最多可存储150个文件。之前也用过XMind、processon、gitmind等等，现在使用WPS更方便了。 </p>
<h4 id="2-2、InnoDB存储引擎"><a href="#2-2、InnoDB存储引擎" class="headerlink" title="2.2、InnoDB存储引擎"></a>2.2、InnoDB存储引擎</h4><p><strong>优点与缺点</strong>：InnoDB存储引擎提供了具有<strong>提交</strong>（commit）、<strong>回滚</strong>（rollback）和<strong>崩溃恢复</strong>能力的<strong>事务安全</strong>。但对比MyISAM存储引擎，InnoDB写的处理效率相对差一些，并且会占用更多的磁盘空间保留数据和索引。</p>
<p><strong>2.2.1、自动增长列</strong></p>
<p>InnoDB表的自动增长列可以手工插入，但插入的值为空或者0，则实际插入的将是自动自动增长后的值。</p>
<p>本来想继续使用bols那张表作为演示的，思来想去还是正经一点。为了演示，我又新增了一张表为autoincre_test，表示id设置为主键且自增长，存储引擎选择InnoDB。然后插入了3条数据进行演示。查询当前线程最后插入数据的记录使用值：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MySQL [test]<span class="operator">&gt;</span> <span class="keyword">create</span> <span class="keyword">table</span> autoincre_test(id <span class="type">int</span> <span class="keyword">not</span> <span class="keyword">null</span> auto_increment,name <span class="type">varchar</span>(<span class="number">16</span>),<span class="keyword">primary</span> key(id))engine<span class="operator">=</span>innodb;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.018</span> sec)</span><br><span class="line"></span><br><span class="line">MySQL [test]<span class="operator">&gt;</span> <span class="keyword">insert</span> <span class="keyword">into</span> autoincre_test <span class="keyword">values</span>(<span class="number">1</span>,<span class="string">&#x27;1&#x27;</span>),(<span class="number">0</span>,<span class="string">&#x27;2&#x27;</span>),(<span class="keyword">null</span>,<span class="string">&#x27;3&#x27;</span>);</span><br><span class="line">Query OK, <span class="number">3</span> <span class="keyword">rows</span> affected (<span class="number">0.007</span> sec)</span><br><span class="line">Records: <span class="number">3</span>  Duplicates: <span class="number">0</span>  Warnings: <span class="number">0</span></span><br><span class="line"></span><br><span class="line">MySQL [test]<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> autoincre_test;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> name <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> <span class="number">1</span>    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">2</span> <span class="operator">|</span> <span class="number">2</span>    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">3</span> <span class="operator">|</span> <span class="number">3</span>    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.000</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> last_insert_id();</span><br><span class="line">MySQL [test]<span class="operator">&gt;</span> <span class="keyword">select</span> last_insert_id();</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+</span></span><br><span class="line"><span class="operator">|</span> last_insert_id() <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+</span></span><br><span class="line"><span class="operator">|</span>                <span class="number">2</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.000</span> sec)</span><br></pre></td></tr></table></figure>

<p><strong>tips</strong>：可以通过<code>alter table table_name=n;</code>语句强制设置自动增长列的初始值，默认从1开始，但该<strong>强制的默认值是保留在内存中的</strong>，如果使用该值之前数据库重新启动，强制默认值则会丢失，就需要重新设置，毕竟使用内存没有加载到磁盘中。</p>
<p>通过上面的演示，你会发现插入记录是0或者空时，实际插入的将是自动增长后的值。通过<code>last_insert_id()</code>函数可以查询当前线程最后插入数据的记录使用值。如果一次插入多条记录，则返回的是第一条记录使用的自动增长值，这里就不演示插入多条数据了。记住一点，可以使用<code>last_insert_id()</code>去查询id记录值。</p>
<p>对于InnoDB表，自动增长列必须是索引。如果是组合索引，也必须是组合索引的第一列。但对于MyISAM表，自动增长列可以是组合索引的其它列。这样插入记录后，自动增长列是按照组合索引的前面几列排序后递增的。你可以创建一张表指定MyISAM存储引擎，然后将两列字段组合索引进行测试验证。</p>
<p><strong>2.2.2、外键约束</strong></p>
<p>在<strong>MySQL</strong>中，<strong>目前支持外键约束的存储引擎只有InnoDB</strong>。创建外键的时候，要求父表必须有对应的索引。子表创建外键的时候，也会自动创建对应的索引。下面将通过实例进行讲解。可以从MySQL官网下载示例数据库world和sakila进行参考。</p>
<ul>
<li>city表，FOREIGN KEY (<code>CountryCode</code>) REFERENCES <code>country</code> (<code>Code</code>)</li>
<li>country表</li>
<li>countrylanguage表，FOREIGN KEY (<code>CountryCode</code>) REFERENCES <code>country</code> (<code>Code</code>)</li>
</ul>
<p>通过MySQL workbench或者Navicat逆向生成物理模型进行参考，更加直观。插一句，在MySQL的官网同样有一个sakila数据库是关于演员电影的，也<span class="exturl" data-url="aHR0cHM6Ly9kZXYubXlzcWwuY29tL2RvYy93b3JrYmVuY2gvZW4vd2ItZG9jdW1lbnRpbmctc2FraWxhLmh0bWw=">提供了sakila的ERR物理模型图，这句话做了超链接，可以直接访问<i class="fa fa-external-link-alt"></i></span>。</p>
<p>在创建索引时，可以指定在删除、更新父表时，对子表进行的相应操作包含：</p>
<ul>
<li>restrict</li>
<li>cascade</li>
<li>set null和no action</li>
</ul>
<p>其中<code>restrict</code>和<code>no action</code>相同，<strong>restrict限制在子表有关联记录的情况下父表无法更新</strong>；<strong>cascade</strong>表示在父表更新或删除的时候，<strong>级联更新或者删除子表对应记录</strong>；set null表示在父表更新或删除的时候，子表的对应字段被set null。<strong>选择cascade以及set null时需要谨慎</strong>操作，有可能导致数据丢失。</p>
<p>在导入多个表的数据时，如果忽略表之前的导入顺序，可以暂时关闭外键检查；同样<strong>执行load data和alter table时也可以暂时关闭外键检查</strong>加快处理的速度，提升效率。关闭外键检查的命令为：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">set</span> foreign_key_checks<span class="operator">=</span><span class="number">0</span>;</span><br></pre></td></tr></table></figure>

<p>执行完导入数据或者修改表的操作后，通过开启外键检查命令改回来：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">set</span> foreign_key_checks<span class="operator">=</span><span class="number">1</span>;</span><br></pre></td></tr></table></figure>

<p>对于InnoDB类型的表，外键信息可以通过<code>show create table</code>或者<code>show table status</code>查看。比如查找world数据库中的city表：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MySQL [sakila]<span class="operator">&gt;</span> <span class="keyword">show</span> <span class="keyword">table</span> status <span class="keyword">like</span> <span class="string">&#x27;city&#x27;</span>\G</span><br></pre></td></tr></table></figure>

<p>关于外键约束就提这么多，没有演示创建以及删除，因为贴太多的SQL语句太占篇幅了。可以到MySQL官网下载world和sakila数据库进行测试。</p>
<p><strong>2.2.3、存储方式</strong></p>
<p>InnoDB存储表和索引有两种方式：</p>
<ul>
<li>共享表空间存储</li>
<li>多表空间存储</li>
</ul>
<p>使用<strong>共享表空间存储</strong>，这种方式创建的表的表结构保存在.frm文件中，数据和索引保存在innodb_data_home_dir和innodb_data_file_path定义的表空间中，可以是多个文件。在开头介绍InnoDB存储引擎时也提到过文件存储位置。</p>
<p>使用<strong>多表空间存储</strong>，这种方式创建的表的表结构仍然<strong>保存在.frm文件中</strong>，但每个表的数据和索引单独保存在.ibd文件中。如果是个<strong>分区表</strong>，则每个分区对应单独的.ibd文件，<strong>文件名为表名+分区名</strong>。可以在创建分区的时候指定每个分区的数据文件位置，以此来平均分布磁盘的IO，达到缓解磁盘压力的目的。如下是在Windows下使用InnoDB存储了海量数据的文件：</p>
<p>使用多表空间存储需要设置参数<code>innodb_file_per_table</code>，重启数据库服务器才能生效哟。多表空间的参数生效后，只对新建的表生效。多表空间的数据文件无大小限制，无需设置初始大小，也不需设置文件的最大限制与扩展大小等参数。使用<strong>多表空间存储优势在于方便单表备份和恢复</strong>操作。虽然不能直接复制.frm和.ibd文件达到目的，但可以使用如下命令操作：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> table_name discard tablespace;</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> table_name import tablespace;</span><br></pre></td></tr></table></figure>

<p>将备份恢复到数据库中，单表备份，只能恢复到原来所在的数据库中，无法恢复到其它数据库中。如过需要<strong>将单表恢复至其它目标数据库</strong>中，则需要<strong>通过mysqldump和mysqlimport</strong>来实现。</p>
<p><strong>注意</strong>：即便多表存储更有优势，但是<strong>共享表存储空间依旧是必须的</strong>，<strong>InnoDB将内部数据字典和在线重做日志存在这个文件中</strong>。</p>
<p>关于InnoDB存储引擎就介绍到此处了，更多详情可以参考MySQL的官方文档。是不是发现了我只在<strong>MyISAM和InnoDB存储引擎</strong>做了总结的思维导图。没错，只做了这两个，因为这俩最常用。至于为啥是粉色背景，因为老夫有一颗少女心！</p>
<h4 id="2-3、MEMORY存储引擎"><a href="#2-3、MEMORY存储引擎" class="headerlink" title="2.3、MEMORY存储引擎"></a>2.3、MEMORY存储引擎</h4><p>MEMORY存储引擎使用存在与内存中的内容来创建表。每个MEMORY表只对应一个磁盘文件，格式是.frm。MEMORY类型的表访问速度极快，存在内存中当然快。这就是Redis为什么这么快？不仅小？还能持久？咱回到正题，<strong>MEMORY存在内存中并默认使用hash索引</strong>，一旦服务关闭，表中数据会丢失。创建一张名为GIRLS的表指定存储引擎为MEMORY，<strong>注意了在UNIX和Linux操作系统下，是对字段和表名大小是写敏感的，关键字不影响</strong>。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> GIRLS (</span><br><span class="line">  ID <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,GIRE_NAME <span class="type">varchar</span>(<span class="number">64</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,GIRL_AGE <span class="type">varchar</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  CUP_SIZE <span class="type">varchar</span>(<span class="number">2</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,<span class="keyword">PRIMARY</span> KEY (ID)</span><br><span class="line">) ENGINE<span class="operator">=</span>MEMORY <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8_bin;</span><br></pre></td></tr></table></figure>

<p>还记得在介绍存储引擎做的那会张表格吗，有介绍到MEMORY支持B TREE索引。虽然MEMORY默认使用的索引是hash索引，但是你可以手动指定索引类型。例如默认手动指定<strong>使用关键字USING HASH</strong>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 创建索引指定索引类型为hash。</span></span><br><span class="line"><span class="keyword">create</span> index mem_hash <span class="keyword">USING</span> HASH <span class="keyword">on</span> GIRLS(ID);</span><br><span class="line"><span class="comment">-- 查询索引类型，简化了一下，只展示了部分参数。</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SHOW</span> <span class="keyword">TABLE</span> STATUS <span class="keyword">LIKE</span> <span class="string">&#x27;GIRLS&#x27;</span>\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">           Name: GIRLS</span><br><span class="line">         Engine: MEMORY</span><br><span class="line">        Version: <span class="number">10</span></span><br><span class="line">     Row_format: Fixed</span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<p>虽然MEMORY容易丢失数据，但是在启动MySQL服务的时候，我们可以使用**–init-file<strong>选项，将</strong>insert into … select或者load data infile**这样的语句存放在这个指定的文件中，就可以在服务启动时从持久稳固的数据源装载表。</p>
<p>服务器需要提供足够的内存来维持所有在同一时间使用的MEMORY表，当不在需要MEMORY表内容之时，释放被MEMORY表使用的内存。仔细思考一下，如果内存用了不释放那将有多可怕。此时可以<strong>执行delete form 或truncate table亦或完整地删除整个表</strong>，使用drop table。这里提一点，在Oracle中也同样支持truncate，使用truncate的好处在于不用再去考虑回滚（rollback），效率更高。使用truncate需要在命令模式下使用，其它客户端工具可能不支持。</p>
<p>每个MEMORY表中存放的数据量大小，受<strong>max_heap_table_size</strong>系统变量约束，初始值为16MB，可以根据需求调整。通过<strong>max_rows</strong>可以指定表的最大行数。</p>
<p>MEMORY存储引擎最大特色是快，主要用于内容变化不频繁的代码表，或者是为了做统计提供的中间表，效率更高。使用MEMORY时需谨慎，万一忘了这厮重启数据就没了就尴尬了。所以在使用时，考虑好重启服务器后如何取得数据。</p>
<p>关于MEMORY存储引擎就介绍到这里，大部分都是些理论知识，更多的需要自己去实践测试。</p>
<h4 id="2-4、MERGE存储引擎"><a href="#2-4、MERGE存储引擎" class="headerlink" title="2.4、MERGE存储引擎"></a>2.4、MERGE存储引擎</h4><p><strong>MERGE存储引擎</strong>是一组MyISAM表的组合，<strong>这些MyISAM表必须结果完全相同</strong>，MERGE表本身没有数据，对MERGE类型的表可以进行查询、更新、删除操作，<strong>实际上是对内部的MyISAM表进行操作的</strong>。对于MERGE类型表的插入操作，通过<strong>insert_method</strong>子句定义插入的，可以有3个不同的值，使用first或last插入操作对应开始与最后一个表上。如果不定义这个子句，或者定义为NO，表示不能对MERGE表进行操作。</p>
<p>对MERGE表进行DROP操作，只是对MERGE的定义进行删除，对内部表没有任何影响。MERGE表上保留两个文件，文件名以表的名字开始，分别为：</p>
<ul>
<li>.frm文件存储表定义；</li>
<li>.mrg文件包含组合表的信息，包含表组成、插入数据依据。</li>
</ul>
<p>可以通过修改.mrg文件来修改表，但修改后需要使用<strong>flush tables</strong>刷新。测试可以先创建两张存储引擎为MyISAM的表，再建一张存储引擎为MERGE存储引擎的表。如下所示<strong>创建demo为总表指定引擎为MERGE</strong>，demo01和demo02为分表：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `merge_demo` (</span><br><span class="line">  `ID` <span class="type">INT</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,`NAME` <span class="type">VARCHAR</span>(<span class="number">16</span>) <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`ID`)) ENGINE<span class="operator">=</span><span class="keyword">MERGE</span> <span class="keyword">UNION</span><span class="operator">=</span>(merge_demo01,merge_demo02)  </span><br><span class="line">INSERT_METHOD<span class="operator">=</span><span class="keyword">LAST</span> <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8_bin </span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `merge_demo01` (</span><br><span class="line">  `ID` <span class="type">INT</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,`NAME` <span class="type">VARCHAR</span>(<span class="number">16</span>) <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`ID`)) ENGINE<span class="operator">=</span>MYISAM <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8_bin</span><br><span class="line">  </span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `merge_demo02` (</span><br><span class="line">  `ID` <span class="type">INT</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,`NAME` <span class="type">VARCHAR</span>(<span class="number">16</span>) <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`ID`)) ENGINE<span class="operator">=</span>MYISAM <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8_bin</span><br></pre></td></tr></table></figure>



<p><strong>通过插入数据验证MERGE确实是一个MyISAM的组合</strong>，就是这么神奇。如下所示，只对demo01和demo02进行插入：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> study.`merge_demo01` <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="string">&#x27;demo01&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> study.`merge_demo02` <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="string">&#x27;demo02&#x27;</span>);</span><br><span class="line">mysql [study]<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> merge_demo;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+--------+</span></span><br><span class="line"><span class="operator">|</span> ID <span class="operator">|</span> NAME   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+--------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> demo01 <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> demo02 <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+--------+</span></span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.000</span> sec)</span><br></pre></td></tr></table></figure>

<p>插入完数据，分别查看demo01和demo02各只有一条数据，总表可以看到俩分表的全部数据。关键是指定了<strong>insert_method&#x3D;last</strong>。<strong>MERGE表和分区表的区别</strong>，MERGE并不能智能地将记录插入到对应表中，而分区表可以做到。<strong>通常我们使用MERGE表来透明的对多个表进行查询和更新操作</strong>。可以自己在下面测试总表插入数据，看分表的情况，我这里就不贴代码了。</p>
<p>关于MySQL自带的几款常用存储引擎就介绍到此，感兴趣的可以私下测试验证，更多参考请到官网获取API或者DOC文档。</p>
<p>除了MySQL自带的一些存储引擎之外，<strong>常见优秀的第三方存储引擎有TokuDB</strong>，一款开源的高性能存储引擎，适用于MySQL和MariaDB。更多详情可以去<span class="exturl" data-url="aHR0cHM6Ly93d3cucGVyY29uYS5jb20vZG93bmxvYWRzLw==">TokuDB官网<i class="fa fa-external-link-alt"></i></span>了解哟。</p>
<h4 id="2-5、修改表的存储引擎"><a href="#2-5、修改表的存储引擎" class="headerlink" title="2.5、修改表的存储引擎"></a>2.5、修改表的存储引擎</h4><p>创建新表时，如果不指定存储引擎，系统会使用默认存储引擎。在MySQL5.5之前默认的存储引擎为MyISAM，在MySQL5.5之后默认的存储引擎为InnoDB。如果想修改默认存储引擎，可以通过配置文件指定<code>default-table-type</code>的参数。关于存储引擎的查看，在上面介绍存储引擎的时候已经有说明了。</p>
<p><strong>方法一：建表即指定当前表的存储引擎</strong></p>
<p>在创建tolove表的时候就指定存储引擎，例如指定存储引擎为MyISAM，默认编码为utf8：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- Create Table</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `tolove` (</span><br><span class="line">  `ID` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,`GIRL_NAME` <span class="type">varchar</span>(<span class="number">64</span>) <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `GIRL_AGE` <span class="type">varchar</span>(<span class="number">64</span>) <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,`CUP_SIZE` <span class="type">varchar</span>(<span class="number">10</span>) <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`ID`)</span><br><span class="line">) ENGINE<span class="operator">=</span>MyISAM AUTO_INCREMENT<span class="operator">=</span><span class="number">20000001</span> <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8_bin</span><br></pre></td></tr></table></figure>

<p>测试生成的数据量比较大，随机生成了1千万条数据。查询（select）业务相对较多，在建表的时候就指定默认存储引擎MyISAM，统计（count）的效率很高。以我的渣渣电脑，使用INNODB存储引擎，统计一次需要2~3秒左右。<strong>在上面讲到MYISAM的时候，已经将查询时间进行过对比</strong>。</p>
<p><strong>方法二：使用alter table修改当前表的存储引擎</strong></p>
<p>修改创建的tolove表为MYISAM引擎进行测试。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 修改创建的tolove表为MYISAM引擎进行测试</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> test.`tolove` ENGINE<span class="operator">=</span>MYISAM;</span><br></pre></td></tr></table></figure>

<p>修改test表的存储引擎为INNODB进行测试。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 修改表的存储引擎为INNODB进行测试</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> test.`test` ENGINE<span class="operator">=</span>INNODB;</span><br></pre></td></tr></table></figure>

<p><strong>SHOW CREATE TABLE查询</strong>表的存储引擎，分别查询test表和tolove表，在讲存储引擎为MyISAM的时候，有演示过哟！</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> test.`test`;</span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> test.`tolove`;</span><br></pre></td></tr></table></figure>

<p>如果在工具中无法看全，可以导出成xml、csv、html等查询，以下是我查询出自己创建表时设置的存储引擎为<strong>InnoDB</strong>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 显示出我创建的test表的SQL语句存储引擎为InnoDB</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `test` ( `ID` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT, `STU_NAME` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>, `SCORE` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>, `CREATETIME` <span class="type">timestamp</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">current_timestamp</span>() <span class="keyword">ON</span> <span class="keyword">UPDATE</span> <span class="built_in">current_timestamp</span>(), <span class="keyword">PRIMARY</span> KEY (`ID`) ) ENGINE<span class="operator">=</span>InnoDB AUTO_INCREMENT<span class="operator">=</span><span class="number">20000001</span> <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8</span><br><span class="line"><span class="comment">-- 显示出我创建的tolove表的SQL语句，存储引擎为MyISAM</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `tolove` ( `ID` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT, `GIRL_NAME` <span class="type">varchar</span>(<span class="number">64</span>) <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>, `GIRL_AGE` <span class="type">varchar</span>(<span class="number">64</span>) <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>, `CUP_SIZE` <span class="type">varchar</span>(<span class="number">10</span>) <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>, <span class="keyword">PRIMARY</span> KEY (`ID`) ) ENGINE<span class="operator">=</span>MyISAM AUTO_INCREMENT<span class="operator">=</span><span class="number">20000001</span> <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8_bin</span><br></pre></td></tr></table></figure>

<p>存储引擎的修改就介绍这么多，看到我的自增长列（AUTO_INCREMENT）ID到了20000001，之前随机生成过一次1kw条数据哟！有一部分解释说明我写在了代码块中，看起来更加舒服。</p>
<h3 id="3、存储引擎的选择"><a href="#3、存储引擎的选择" class="headerlink" title="3、存储引擎的选择"></a>3、存储引擎的选择</h3><p>在选择合适的存储引擎时，应根据应用特点选择合适的存储引擎。对于复杂的应用系统，你可以选择多种存储引擎满足不同的应用场景需求。如何选择合适的存储引擎呢？存储引擎的选择真的很重要吗？</p>
<p>确实应该好好思考，在并不复杂的应用场景下，可能MyISAM存储引擎就能满足日常开销。或许在另外一种场景之下InnoDB才是最佳选择，综合性能更好，满足更多需求。</p>
<p><strong>MyISAM</strong>是MySQL的默认的插件式存储引擎，是MySQL在5.5之前的默认存储引擎。如果应用以读和插入操作居多，只有很少的更新和删除操作，对事务完整性、并发性没有很高的需求，此时首选是MyISAM存储引擎。在web和数据仓库最常用的存储引擎之一。</p>
<p><strong>InnoDB用于事务处理应用程序，并且支持外键</strong>。是MySQL在5.5之后的默认存储引擎，同样也是MariaDB在10.2之后的默认存储引擎，足见InnoDB的优秀之处。如果应用对事务完整性有较高的要求，在并发情况下要求数据高度一致性。数据除了插入和查询以外，还包括很多的更新和删除操作，那么InnoDB应该是比较合适的存储引擎选择。InnoDB除了有效地降低由于删除和更新导致的锁定，还可以确保事务的完整提交（commit）、回滚（rollback）。对类似计费系统或者财务系统等对数据准确性要求比较高的系统，InnoDB也是合适的选择。插点题外话，本人在工作中使用Oracle数据库也有一段时间，Oracle的事务确实很强大，处理大数据压力很强。</p>
<p><strong>MEMORY</strong>存储引擎将所有的数据存在RAM中，在需要快速定位记录和其它类似数据的环境下，可提供极快的访问。MEMORY的缺陷在于对表的大小有限制，太大的表无法缓存在内存中，其次是要确保表的数据可以恢复，数据库异常重启后表的数据是可恢复的。MEMORY表通常用于更新不太频繁的小表，快速定位访问结果。</p>
<p><strong>MERGE</strong>用于将一组等同的MyISAM存储引擎的表以逻辑方式组合在一起，并作为一个对象应用它们。MERGE表的优点在于可以突破对单个MyISAM表大小的限制，并通过将不同的表分布在多个磁盘上，改善MERGE表的访问效率。对数据局仓库等VLDB环境很适合。</p>
<p>最后，关于存储引擎的选择都是根据别人实际经验去总结的。并不是一定契合你的应用场景，<strong>最终需要用户对各自应用进行测试，通过测试来获取最合适的结果</strong>。就像我开始列举的示例，数据量很庞大，对查询和插入业务比较频繁，我就开始对MyISAM存储引擎进行测试，确实比较符合我的应用场景。</p>
<h3 id="4、表的优化（碎片整理）"><a href="#4、表的优化（碎片整理）" class="headerlink" title="4、表的优化（碎片整理）"></a>4、表的优化（碎片整理）</h3><p>在开始介绍存MyISAM和InnoDB储引擎的时候，我也展示过存储大量数据所占的磁盘空间。使用<strong>OPTIMIZE TABLE</strong>来优化test数据库下的test表，<strong>优化之前，这张表占据磁盘空间大概在824M</strong>；通过优化之后，有明显的改善，系统回收了没有利用的空间，test表所耗磁盘空间明显下降，<strong>优化之后只有456M</strong>。这里就不贴磁盘所占空间的截图了。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">OPTIMIZE <span class="keyword">TABLE</span> test.`test`;</span><br></pre></td></tr></table></figure>

<p><strong>优化之后</strong>，统计（count）数据效率也有所提升，大概在2.5sec左右：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql [test]<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> test; <span class="comment">-- 使用的是innodb存储引擎测试</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+</span></span><br><span class="line"><span class="operator">|</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">10000000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">2.468</span> sec)</span><br></pre></td></tr></table></figure>

<p><strong>优化之前</strong>，统计数据大概在3.080 sec。<strong>经过对比，效率提升是可观的</strong>。</p>
<p>你也可以使用<strong>explain执行计</strong>划对查询语句进行优化。关于MySQL优化方面的知识，并不是本文的重点，就不做过多描述。</p>
<h2 id="二、索引设计与使用"><a href="#二、索引设计与使用" class="headerlink" title="二、索引设计与使用"></a>二、索引设计与使用</h2><h3 id="1、索引简介"><a href="#1、索引简介" class="headerlink" title="1、索引简介"></a>1、索引简介</h3><p>在涉及到MySQL的面试当中，会提到<strong>最左前缀索引</strong>，都被玩成梗了。</p>
<p>MySQL所有列类型都可以被索引，对相关列合理的使用索引是提高查询（select）操作性能的最佳方法。根据引擎可以定义每张表的最大索引数和最大索引长度，MySQL的每种存储引擎（MyISAM、InnoDB等等）对每张表至少支持16个索引，总索引长度至少为256字节。大多数存储引擎有更高的限制。</p>
<p><strong>MyISAM和InnoDB存储引擎</strong>默认创建的表都是BTREE索引。<strong>在MySQL8.0之前是不只支持函数索引的</strong>，MySQL5.7推出了<strong>虚拟列</strong>功能，在<strong>MySQL8.0开始支持函数索引</strong>，也是8.0版本的新特性之一。</p>
<p>MySQL支持前缀索引，对索引字段的前N个字符创建索引，前缀索引长度和存储引擎有关。有很多人经常会问到，<strong>MySQL支持全文索引吗</strong>？我的回答是：支持。MySQL5.6之前MyISAM存储引擎支持全文索引（FULLTEXT），5.6之后InnoDB开始支持全文索引。</p>
<p>为test表创建10个字节的前缀索引，创建索引的语法如下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> INDEX girl_name <span class="keyword">ON</span> table_name(test(<span class="number">10</span>));</span><br></pre></td></tr></table></figure>

<p>同样可以<strong>使用alter table</strong>语句去新增索引，给girl表的字段girl_name新增一个索引：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> test.`girl` <span class="keyword">ADD</span> INDEX idx_girlname(girl_name);</span><br></pre></td></tr></table></figure>

<p>对于使用索引的验证可以使用<strong>explain</strong>执行计划去判断。关于索引的简述就介绍这么多，更多基础知识可以参考官方文档或者权威书籍。</p>
<h3 id="2、设计索引原则"><a href="#2、设计索引原则" class="headerlink" title="2、设计索引原则"></a>2、设计索引原则</h3><p>索引的设计可以遵循一些已有的原则，创建索引的时候请尽量考虑符合这些原则。有助于提升索引的使用效率。</p>
<p><strong>搜索的索引列</strong>，不一定是所要选择的列。<strong>最合适的索引列，往往是出现在where子句中的列</strong>，<strong>或者是连接子句中指定的列</strong>，而不是出现在select后选择列表中的列。</p>
<p><strong>使用唯一索引</strong>。考虑某列中值的分布，索引列的基数越大，索引效果越好。</p>
<p><strong>使用短索引</strong>。如果对字符串列进行索引，应指定一个前缀长度。比如char(100)，思考一下，重复度的问题。是全部索引来的快，还是对部分字符进行索引更优？</p>
<p><strong>利用最左前缀</strong>。在创建一个N列的索引时，实际上是创建了<strong>MySQL可利用</strong>的N个索引。多列索引可以起几个索引的作用，<strong>利用索引中最左边的列表来匹配行</strong>。这样的列集称为最左前缀。都快被涉及到MySQL的面试玩成梗了，哈哈。</p>
<p><strong>注意不要过度使用索引</strong>。不要以为使用索引好处多多，就在所有的列上全部使用索引，过度使用索引反而会适得其反。每个额外的索引会占用磁盘空间，对磁盘写操作性能造成损耗。在重构的时候，索引也得更新，造成不必要的时间浪费。</p>
<p><strong>InnoDB存储引擎的表</strong>。对于使用InnoDB存储引擎的表，记录默认按一定的顺序保存。有如下几种情况：</p>
<ul>
<li>如果有明确定义的主键，则遵循主键顺序保存；</li>
<li>在没有主键，但有唯一索引的情况下，会遵循唯一索引顺序保存；</li>
<li>既没有主键又没有唯一索引，表中会自动生成一个内部列，并遵循这个列的顺序保存。</li>
</ul>
<p>以上就是对索引设计原则的简单介绍。</p>
<h3 id="3、B-TREE与HASH索引"><a href="#3、B-TREE与HASH索引" class="headerlink" title="3、B-TREE与HASH索引"></a>3、B-TREE与HASH索引</h3><p>使用这些索引时，<strong>应该考虑索引是否当前使用条件下生效</strong>！在使用MEMORY存储引擎的表中可以选择使用HASH索引或者B-TREE索引，两种不同的索引有其各自适用的范围。</p>
<p><strong>HASH索引</strong>。只用于这类关系操作符：&#x3D;、&lt;&#x3D;&gt;的操作比较，<strong>优化器不能使用HASH索引来加速order by</strong>操作。MySQL不能确定在两个值之间大约有多少行。</p>
<p><strong>B-TREE索引</strong>。对于B-TREE索引，使用&gt;、&lt;、&gt;&#x3D;、&lt;&#x3D;、BETWEEN、!&#x3D;或者&lt;&gt;、亦或是使用like ‘condition’。其中’condition’不以通配符开始的操作符时，都可以使用相关列上的索引。</p>
<p>关于索引就介绍到这里。合理的使用索引将有助于提升效率，但并不是使用的索引越多越好。</p>
<h2 id="三、数据类型选择"><a href="#三、数据类型选择" class="headerlink" title="三、数据类型选择"></a>三、数据类型选择</h2><ul>
<li>字符串类型char与varchar</li>
<li>浮点数和定点数</li>
<li>日期类型</li>
</ul>
<p>工作中，个人使用经验。Oracle里面使用BLOB存储大字段比较频繁，TEXT相对少见，使用VARCHAR2类型比较多。但在MySQL中是不支持VARCHAR2类型的。</p>
<h3 id="1、CHAR与VARCHAR"><a href="#1、CHAR与VARCHAR" class="headerlink" title="1、CHAR与VARCHAR"></a>1、CHAR与VARCHAR</h3><p>char和varchar类型类似，用于存储字符串，但它们保存和检索的方式不同。char类型属于固定长度（定长）类型的字符串，varchar属于可变长度的字符串类型。在MySQL的严格模式中，使用的char和varchar，超过列长度的值不会被保存，并且出现错误提示。</p>
<p><strong>char优缺点</strong>。char是固定长度，处理速度比varchar要快，但缺点是浪费存储空间，没有varchar那么灵活。<strong>varchar</strong>。随着MySQL的不断升级，varchar类型也在不断优化，性能也在提升，被用于更多的应用中。</p>
<p><strong>MyISAM存储引擎</strong>：建议使用固定长度的数据列代替可变长度的数据列。</p>
<p><strong>InnoDB存储引擎</strong>：建议使用VARCHAR类型。</p>
<p><strong>MEMORY存储引擎</strong>：使用固定长度数据类型存储。</p>
<h3 id="2、TEXT与BLOB"><a href="#2、TEXT与BLOB" class="headerlink" title="2、TEXT与BLOB"></a>2、TEXT与BLOB</h3><p>一般情况，存储少量的字符串时，会选择char和varchar类型。而在保存较大文本时，通常选择TEXT或者BLOB大字段，二者之间的区别在于<strong>BLOB能存二进制数据</strong>，比如：照片，<strong>TEXT类型只能存字符数据</strong>。这也是为什么我在开始的时候提及到个人工作中见到BLOB类型相对较多。TEXT和BLOB还包括不同类型：</p>
<ul>
<li>TEXT、LONGTEXT、MEDIUMINT、MEDIUMTEXT、TINYTEXT；</li>
<li>BLOB、LONGBLOB、MEDIUMBLOB、TINYBLOB。</li>
</ul>
<p><strong>区别在于存储文本长度和字节不同</strong>。</p>
<p><strong>需要注意的点</strong>：</p>
<ul>
<li>BLOB和TEXT值会引起一些性能问题，尤其是执行大量删除操作时；</li>
<li>可以使用合成索引提高大字段的查询性能；</li>
<li>在不必要的时候避免检索大字段；</li>
<li>将BLOB和TEXT分离到不同的表中。</li>
</ul>
<h3 id="3、浮点数与定点数"><a href="#3、浮点数与定点数" class="headerlink" title="3、浮点数与定点数"></a>3、浮点数与定点数</h3><p>浮点类型一般用于表示含有小数部分的值。列举一些示例：</p>
<ul>
<li>double类型：用于浮点数（双精度）；</li>
<li>decimal类型：MySQL中表示定点数；</li>
<li>float类型：用于浮点数（单精度）。</li>
</ul>
<p>学过Java语言的同学，对这些浮点类型并不陌生吧。</p>
<p><strong>注意点</strong>：浮点数存在误差问题，对精度比较敏感的数据，避免对浮点类型做比较。</p>
<h3 id="4、日期类型"><a href="#4、日期类型" class="headerlink" title="4、日期类型"></a>4、日期类型</h3><p>谈到日期类型，又让我想起了7年前学Java语言的时候，会写一个工具类（Utils.java），将常用的处理日期的方法写进去然后调用。经常用到的一个方法（<code>SimpleDateFormat</code>），对时间戳进行转换格式化。</p>
<p><strong>MySQL中常用的日期类型</strong>有：</p>
<ul>
<li>DATE</li>
<li>DATETIME</li>
<li>TIME</li>
<li>TIMESTAMP</li>
</ul>
<p>如果需要记录年月日时分秒，并且记录的年份比较久远，最好用DATETIME，而不要使用TIMESTAMP时间戳。<strong>TIMESTAMP表示的范围比DATETIME短得多</strong>。</p>
<h2 id="四、字符集（字符编码）设置"><a href="#四、字符集（字符编码）设置" class="headerlink" title="四、字符集（字符编码）设置"></a>四、字符集（字符编码）设置</h2><p>从本质上来说，计算机只能是被二进制代码（010101）。因此，不论是计算机程序还是处理的数据，最终都会转换成二进制代码，计算机才能识别。为了让计算机不仅能做科学计算，也能处理文字信息，于是计算机字符集诞生了。</p>
<blockquote>
<p><strong>字符编码</strong>（英语：Character encoding）、<strong>字集码</strong>是把<strong>字符集</strong>中的字符编码为指定集合中某一对象)（例如：比特模式、自然数序列、8位组或者电脉冲），以便文本在计算机中存储和通过通信网络的传递。常见的例子包括将拉丁字母表编码成摩斯电码和ASCII。其中，ASCII将字母、数字和其它符号编号，并用7比特的二进制来表示这个整数。通常会额外使用一个扩充的比特，以便于以1个字节的方式存储。</p>
<p>在计算机技术发展的早期，如ASCII（1963年）和EBCDIC（1964年）这样的字符集逐渐成为标准。但这些字符集的局限很快就变得明显，于是人们开发了许多方法来扩展它们。对于支持包括东亚CJK字符家族在内的写作系统的要求能支持更大量的字符，并且需要一种系统而不是临时的方法实现这些字符的编码。</p>
</blockquote>
<p>引用自维基百科对字符编码的介绍。</p>
<h3 id="1、Unicode"><a href="#1、Unicode" class="headerlink" title="1、Unicode"></a>1、Unicode</h3><p>Unicode是什么？是统一编码，是计算机科学领域的业界标准。从最初的的1.0.0到目前最新的14.0版本，对应ISO&#x2F;IEC 10646-N:xxxx。说一下UTF-8、UTF-16、UTF-16LE、UTF-32BE、UTF-32LE等等大家应该很熟悉了。</p>
<h3 id="2、常见字符集"><a href="#2、常见字符集" class="headerlink" title="2、常见字符集"></a>2、常见字符集</h3><p>常见的字符集：</p>
<ul>
<li>UTF-8：泛用性最广泛；</li>
<li>GBK：对中文支持非常友好，在GB2312基础上进行了扩充；</li>
<li>GB2312：对中文字符集支持，；</li>
<li>GB18030：支持中文字符集，解决GBK强制力不够的问题。</li>
</ul>
<h3 id="3、MySQL支持的字符集"><a href="#3、MySQL支持的字符集" class="headerlink" title="3、MySQL支持的字符集"></a>3、MySQL支持的字符集</h3><p>通过<code>show character set;</code>命令可以查看MySQL支持的字符集。我只展示部分：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql [test]<span class="operator">&gt;</span> <span class="keyword">show</span> <span class="type">character</span> <span class="keyword">set</span>;</span><br><span class="line"><span class="operator">|</span> gbk      <span class="operator">|</span> GBK Simplified Chinese      <span class="operator">|</span> gbk_chinese_ci      <span class="operator">|</span>      <span class="number">2</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> gb2312   <span class="operator">|</span> GB2312 Simplified Chinese   <span class="operator">|</span> gb2312_chinese_ci   <span class="operator">|</span>      <span class="number">2</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> utf8     <span class="operator">|</span> UTF<span class="number">-8</span> Unicode               <span class="operator">|</span> utf8_general_ci     <span class="operator">|</span>      <span class="number">3</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> utf8mb4  <span class="operator">|</span> UTF<span class="number">-8</span> Unicode               <span class="operator">|</span> utf8mb4_general_ci  <span class="operator">|</span>      <span class="number">4</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> utf16    <span class="operator">|</span> UTF<span class="number">-16</span> Unicode              <span class="operator">|</span> utf16_general_ci    <span class="operator">|</span>      <span class="number">4</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> utf32    <span class="operator">|</span> UTF<span class="number">-32</span> Unicode              <span class="operator">|</span> utf32_general_ci    <span class="operator">|</span>      <span class="number">4</span> <span class="operator">|</span></span><br></pre></td></tr></table></figure>

<p>或者你还可以使用<code>DESC information_schema.CHARACTER_SETS</code>查看所有字符集和字符集默认的校对规则。</p>
<p>查看相关字符集校对规则，可以<strong>使用SHOW COLLATION</strong>配合 LIKE模糊搜索gbk字符集。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> <span class="keyword">COLLATION</span> <span class="keyword">LIKE</span> <span class="string">&#x27;gbk%&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p><strong>MySQL字符集设置</strong>：默认可以过配置文件设置<strong>character-set-server</strong>参数。</p>
<ul>
<li>Linux发行版中安装一般在my.cnf中配置；</li>
<li>Windows下在my.ini文件中配置</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">character-set-server=utf-8</span><br><span class="line">character-set-server=gbk</span><br></pre></td></tr></table></figure>

<p>额外再提一点，判断字符集所占字节，可以<strong>使用函数LENGTH</strong>()：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> LENGTH(<span class="string">&#x27;中&#x27;</span>);</span><br></pre></td></tr></table></figure>

<p>如果使用的是UTF-8编码，默认汉字是占用3个字节，使用GBK则占用2个字节。字符编码就介绍到这里。</p>
<h2 id="五、MySQL示例数据库sakila"><a href="#五、MySQL示例数据库sakila" class="headerlink" title="五、MySQL示例数据库sakila"></a>五、MySQL示例数据库sakila</h2><p>视图、存储过程、函数、触发器。这里给出我自己随机生成海量数据用到的函数和存储过程。</p>
<h3 id="1、函数"><a href="#1、函数" class="headerlink" title="1、函数"></a>1、函数</h3><p><strong>创建函数</strong>，使用DELIMITER声明，使用<strong>CREATE FUNCTION创建函数</strong>，tolove表的创建在介绍存储引擎过程中已经有展示过。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">/** 创建函数 生成学号 **/</span></span><br><span class="line">DELIMITER $</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">FUNCTION</span> rand_number() <span class="keyword">RETURNS</span> <span class="type">INT</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">	<span class="keyword">DECLARE</span> i <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">SET</span> i<span class="operator">=</span> <span class="built_in">FLOOR</span>(<span class="number">1</span><span class="operator">+</span>RAND()<span class="operator">*</span><span class="number">100</span>);</span><br><span class="line">	<span class="keyword">RETURN</span> i;</span><br><span class="line"><span class="keyword">END</span> $</span><br><span class="line">DELIMITER $</span><br></pre></td></tr></table></figure>

<p>创建函数：用于生成姓名随机字符串</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">/** 创建函数 生成姓名随机字符串 **/</span></span><br><span class="line">DELIMITER $</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">FUNCTION</span> rand_name(n <span class="type">INT</span>) <span class="keyword">RETURNS</span> <span class="type">VARCHAR</span>(<span class="number">255</span>)</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">	<span class="keyword">DECLARE</span> chars_str <span class="type">VARCHAR</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&#x27;</span>;</span><br><span class="line">	<span class="keyword">DECLARE</span> return_str <span class="type">VARCHAR</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">	<span class="keyword">DECLARE</span> i <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">0</span>;</span><br><span class="line">	WHILE i <span class="operator">&lt;</span> n DO</span><br><span class="line">	<span class="keyword">SET</span> return_str <span class="operator">=</span> CONCAT(return_str,<span class="built_in">SUBSTRING</span>(chars_str,<span class="built_in">FLOOR</span>(<span class="number">1</span><span class="operator">+</span>RAND()<span class="operator">*</span><span class="number">52</span>),<span class="number">1</span>));</span><br><span class="line">	<span class="keyword">SET</span> i <span class="operator">=</span> i<span class="operator">+</span><span class="number">1</span>;</span><br><span class="line">	<span class="keyword">END</span> WHILE;</span><br><span class="line">	<span class="keyword">RETURN</span> return_str;	</span><br><span class="line"><span class="keyword">END</span> $</span><br><span class="line">DELIMITER $</span><br></pre></td></tr></table></figure>

<h3 id="2、存储过程"><a href="#2、存储过程" class="headerlink" title="2、存储过程"></a>2、存储过程</h3><p><strong>创建存储过程</strong>，使用<strong>CREATE PROCEDURE</strong>创建：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">/** 创建存储过程 **/</span></span><br><span class="line">DELIMITER $</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> insert_tolove(<span class="keyword">IN</span> max_num <span class="type">INT</span>(<span class="number">10</span>))</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">	<span class="keyword">DECLARE</span> i <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">DECLARE</span> EXIT HANDLER <span class="keyword">FOR</span> <span class="keyword">SQLEXCEPTION</span> <span class="keyword">ROLLBACK</span>;</span><br><span class="line">	<span class="keyword">START</span> TRANSACTION;</span><br><span class="line">	WHILE i<span class="operator">&lt;</span> max_num DO</span><br><span class="line">	<span class="keyword">INSERT</span> <span class="keyword">INTO</span> test.`tolove`(ID,GIRL_NAME,GIRL_AGE,CUP_SIZE) <span class="keyword">VALUES</span>(<span class="keyword">NULL</span>,rand_name(<span class="number">5</span>),rand_number(),<span class="keyword">NULL</span>);</span><br><span class="line">	<span class="keyword">SET</span> i <span class="operator">=</span> i <span class="operator">+</span> <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">END</span> WHILE;</span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br><span class="line"><span class="keyword">END</span> $</span><br><span class="line">DELIMITER $</span><br></pre></td></tr></table></figure>

<p>使用<strong>CALL</strong>调用存储过程，随机生成百万数据：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">/** 调用存储过程 **/</span></span><br><span class="line"><span class="keyword">CALL</span> insert_tolove(<span class="number">100</span><span class="operator">*</span><span class="number">10000</span>);</span><br></pre></td></tr></table></figure>

<p>删除函数或者存储过程，使用<strong>DROP</strong>关键字</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 删除函数rand_name</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">FUNCTION</span> rand_name;</span><br><span class="line"><span class="comment">-- 删除存储过程insert_tolove</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">PROCEDURE</span> insert_tolove;</span><br></pre></td></tr></table></figure>

<h3 id="3、触发器"><a href="#3、触发器" class="headerlink" title="3、触发器"></a>3、触发器</h3><p><strong>创建触发器使用CREATE TRIGGER</strong>，这里就引用sakila数据库实例。如果存在，使用了判断语句 <strong>IF EXISTS</strong>，然后删除<strong>DROP TRIGGER</strong>已经存在的触发器。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">DELIMITER $$</span><br><span class="line">USE `sakila`$$</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TRIGGER</span> <span class="comment">/*!50032 IF EXISTS */</span> `customer_create_date`$$</span><br><span class="line"><span class="keyword">CREATE</span></span><br><span class="line">    <span class="comment">/*!50017 DEFINER = &#x27;root&#x27;@&#x27;%&#x27; */</span></span><br><span class="line">    <span class="keyword">TRIGGER</span> `customer_create_date` BEFORE <span class="keyword">INSERT</span> <span class="keyword">ON</span> `customer` </span><br><span class="line">    <span class="keyword">FOR</span> <span class="keyword">EACH</span> <span class="type">ROW</span> <span class="keyword">SET</span> NEW.create_date <span class="operator">=</span> NOW();</span><br><span class="line">$$</span><br><span class="line">DELIMITER ;</span><br></pre></td></tr></table></figure>

<h3 id="4、sakila数据库"><a href="#4、sakila数据库" class="headerlink" title="4、sakila数据库"></a>4、sakila数据库</h3><p>在文中我<strong>反复提到了MySQL的示例数据库sakila</strong>，是一个完整的学习MySQL的好例子。包含了视图、存储过程、函数和触发器。可以去MySQL的官网获取SQL脚本。</p>
<p>以上就是此次文章的所有内容的，希望能对你的工作有所帮助。</p>
<p>—END—</p>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>Oracle11g部署注意事项</title>
    <url>/2022/02/18/Oracle11g%E9%83%A8%E7%BD%B2%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/</url>
    <content><![CDATA[<h1 id="Oracle重新部署注意事项"><a href="#Oracle重新部署注意事项" class="headerlink" title="Oracle重新部署注意事项"></a>Oracle重新部署注意事项</h1><p>Oracle19c下载地址，无需登录，历史版本下载需要登录<br><span class="exturl" data-url="aHR0cHM6Ly93d3cub3JhY2xlLmNvbS9jbi9kYXRhYmFzZS90ZWNobm9sb2dpZXMvb3JhY2xlLWRhdGFiYXNlLXNvZnR3YXJlLWRvd25sb2Fkcy5odG1sIzE5Yw==">https://www.oracle.com/cn/database/technologies/oracle-database-software-downloads.html#19c<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>在此页面可以找到官方说明文档</strong><br><span class="exturl" data-url="aHR0cHM6Ly93d3cub3JhY2xlLmNvbS9jbi9kYXRhYmFzZS90ZWNobm9sb2dpZXMv">https://www.oracle.com/cn/database/technologies/<i class="fa fa-external-link-alt"></i></span><br><img data-src="https://img-blog.csdnimg.cn/20210717232255235.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70#" alt="在这里插入图片描述" style="zoom:50%;" /></p>
<h2 id="一、Oracle11g安装包的准备下载"><a href="#一、Oracle11g安装包的准备下载" class="headerlink" title="一、Oracle11g安装包的准备下载"></a>一、Oracle11g安装包的准备下载</h2><p>官网找历史版本准备服务端<code>Oracle11g R2</code>以及客户端<code>Oracle11g client</code>。<br>　　<br><strong>服务端Oracle11g R2</strong>　　<span class="exturl" data-url="aHR0cDovL2Rvd25sb2FkLm9yYWNsZS5jb20vb3RuL250L29yYWNsZTExZy8xMTIwMTAvd2luNjRfMTFnUjJfZGF0YWJhc2VfMW9mMi56aXA=">http://download.oracle.com/otn/nt/oracle11g/112010/win64_11gR2_database_1of2.zip <i class="fa fa-external-link-alt"></i></span>　　<br>　　<span class="exturl" data-url="aHR0cDovL2Rvd25sb2FkLm9yYWNsZS5jb20vb3RuL250L29yYWNsZTExZy8xMTIwMTAvd2luNjRfMTFnUjJfZGF0YWJhc2VfMm9mMi56aXA=">http://download.oracle.com/otn/nt/oracle11g/112010/win64_11gR2_database_2of2.zip <i class="fa fa-external-link-alt"></i></span></p>
<p><strong>客户端Oracle11g client</strong><br>客户端文件，就直接从我下面给出的度盘地址获取。　　<br>　　<br>需要下载历史版本，Oracle公司很骚，包括老版本的JDK都需要注册账号登录才能下载。N年前，无需注册登录就可以下载。难道是市场份额少了，开始慌了？下载Oracle数据库历史版本同样需要注册登录，就问骚不骚。懒得吐槽，也无力吐槽，大家都懂得。　<br>　　<br>或者使用我提供的阿里云盘下载地址：<a href="https://www.aliyundrive.com/s/mMV92NTDwNr"><del>https://www.aliyundrive.com/s/mMV92NTDwNr</del> </a></p>
<p><strong>文件夹虽然可以分享，但读取不到里面的压缩包。目前阿里云盘并不支持zip压缩包以及iso镜像文件的分享，还是给度盘资源。</strong></p>
<p><strong>度盘资源</strong>：<br>链接: <span class="exturl" data-url="aHR0cHM6Ly9wYW4uYmFpZHUuY29tL3MvMTZSamVVQ29iR3ZlQ2VxeUNyVUxzeVE=">https://pan.baidu.com/s/16RjeUCobGveCeqyCrULsyQ<i class="fa fa-external-link-alt"></i></span><br>提取码: iz9g </p>
<h2 id="二、Oracle11g的安装"><a href="#二、Oracle11g的安装" class="headerlink" title="二、Oracle11g的安装"></a>二、Oracle11g的安装</h2><p>安装过程很简单，大部分是被系统环境折腾安装不上。就算重装，也受注册表的影响。这里推荐使用虚拟机进行测试，VMware虚拟机的快照功能很强大，任你折腾。</p>
<h3 id="1服务端的安装"><a href="#1服务端的安装" class="headerlink" title="1	服务端的安装"></a>1	服务端的安装</h3><p>与操作系统环境息息相关，安装过程中只要没报错，基本测试成功。个人系统环境原因，导致服务端安装出错，最终用虚拟机安装win7得以解决。<br>选择完全安装或者安装服务器，这里选择安装服务器首先是安装服务端。<br>安装成功使用<code>net manager</code>测试连接（需要新建<code>listener</code>监听服务，实例设置默认为<code>orcl</code>，端口号默认1521）</p>
<h3 id="2客户端的安装"><a href="#2客户端的安装" class="headerlink" title="2	客户端的安装"></a>2	客户端的安装</h3><p>这里客户端准备的32位，相应的<code>plsql developer</code>连接工具也要使用32位的（win10 1703企业版亲测）<br>安装成功使用net manager测试连接（需要新建listener监听服务实例orcl或者根据实际工作需求来，端口号默认1521）</p>
<p><strong>net manager配置如下</strong>：这里客户端连接的，还是去找的服务端的ip地址。</p>
<p>如果连接失败，多半是监听文件和远程ip的问题。</p>
<img data-src="https://img-blog.csdnimg.cn/20210719001621567.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70#" alt="在这里插入图片描述" style="zoom:60%;" />


<h3 id="3监听配置问题"><a href="#3监听配置问题" class="headerlink" title="3	监听配置问题"></a>3	监听配置问题</h3><p><strong>解决虚拟机重启后的Oracle11g监听问题ORA-12541</strong></p>
<p>编辑完后，cmd以管理员身份运行</p>
<p>关闭监听实例</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">lsnrctl stop </span><br></pre></td></tr></table></figure>
<p>启动监听实例</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">lsnrctl <span class="built_in">start</span> </span><br></pre></td></tr></table></figure>
<p>查看监听实例状态</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">lsnrctl status </span><br></pre></td></tr></table></figure>

<p>修改完监听配置文件，最后记得重启Oracle11g监听服务</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">OracleOraDb11g_home1TNSListener AND OracleServiceORCL SERVER</span><br></pre></td></tr></table></figure>


<p>虚拟机我只安装了Oracle11g服务端，由于是虚拟机我就直接放C盘了。实际安装，推荐安装在D盘或者顺延E盘，尽量不要出现有中文空格之类的路径名。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">listener.ora文件C:\app\product\<span class="number">11.2</span>.<span class="number">0</span>\dbhome_1\network\admin\listener.ora</span><br></pre></td></tr></table></figure>

<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#listener.ora Network Configuration File: C:\app\product\11.2.0\dbhome_1\network\admin\listener.ora</span></span><br><span class="line"><span class="comment">#Generated by Oracle configuration tools.</span></span><br></pre></td></tr></table></figure>

<p><strong>这一段可以取消注释尝试，个人没试过，可以自行测试有没有影响</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#SID_LIST_LISTENER =</span></span><br><span class="line">  <span class="comment"># (SID_LIST =</span></span><br><span class="line">    <span class="comment"># (SID_DESC =</span></span><br><span class="line">      <span class="comment"># (SID_NAME = CLRExtProc)</span></span><br><span class="line">      <span class="comment"># (ORACLE_HOME = C:\app\product\11.2.0\dbhome_1)</span></span><br><span class="line">      <span class="comment"># (PROGRAM = extproc)</span></span><br><span class="line">      <span class="comment"># (ENVS = &quot;EXTPROC_DLLS=ONLY:C:\app\product\11.2.0\dbhome_1\bin\oraclr11.dll&quot;)</span></span><br><span class="line">    <span class="comment"># )</span></span><br><span class="line">  <span class="comment"># )</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#我把上面的注释了，下面是我新增的  </span></span><br><span class="line">SID_LIST_LISTENER =</span><br><span class="line">   (SID_DESC =</span><br><span class="line">    (GLOBAL_DBNAME = ORCL)</span><br><span class="line">    (ORACLE_HOME = C:\app\product\11.2.0\dbhome_1)</span><br><span class="line">    (SID_NAME = ORCL)</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line"><span class="comment">#这里修改HOST为固定ip或者localhost、127.0.0.1以及本机名</span></span><br><span class="line">LISTENER =</span><br><span class="line">  (DESCRIPTION_LIST =</span><br><span class="line">    (DESCRIPTION =</span><br><span class="line">      (ADDRESS = (PROTOCOL = TCP)(HOST = 主机或者远程IP)(PORT = 1521))</span><br><span class="line">      (ADDRESS = (PROTOCOL = IPC)(KEY = EXTPROC1521))</span><br><span class="line">    )</span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">ADR_BASE_LISTENER = C:\app</span><br></pre></td></tr></table></figure>


<p>tnsnames.ora文件只需要改一下HOST为固定ip或者localhost、127.0.0.1以及本机名</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\app\product\11.2.0\dbhome_1\NETWORK\ADMIN\tnsnames.ora</span><br><span class="line"><span class="comment"># tnsnames.ora Network Configuration File: C:\app\product\11.2.0\dbhome_1\NETWORK\ADMIN\tnsnames.ora</span></span><br><span class="line"><span class="comment"># Generated by Oracle configuration tools.</span></span><br><span class="line"></span><br><span class="line">ORACLR_CONNECTION_DATA =</span><br><span class="line">  (DESCRIPTION =</span><br><span class="line">    (ADDRESS_LIST =</span><br><span class="line">      (ADDRESS = (PROTOCOL = IPC)(KEY = EXTPROC1521))</span><br><span class="line">    )</span><br><span class="line">    (CONNECT_DATA =</span><br><span class="line">      (SID = CLRExtProc)</span><br><span class="line">      (PRESENTATION = RO)</span><br><span class="line">    )</span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">ORCL =</span><br><span class="line">  (DESCRIPTION =</span><br><span class="line">    (ADDRESS_LIST =</span><br><span class="line">      (ADDRESS = (PROTOCOL = TCP)(HOST = 主机或者远程IP)(PORT = 1521))</span><br><span class="line">    )</span><br><span class="line">    (CONNECT_DATA =</span><br><span class="line">      (SERVICE_NAME = orcl)</span><br><span class="line">    )</span><br><span class="line">  )</span><br></pre></td></tr></table></figure>

<p>测试修改完，记得使用如下命令验证监听状态<br>关闭监听实例</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">lsnrctl stop </span><br></pre></td></tr></table></figure>
<p>启动监听实例</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">lsnrctl <span class="built_in">start</span> </span><br></pre></td></tr></table></figure>
<p>查看监听实例状态</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">lsnrctl status </span><br></pre></td></tr></table></figure>

<p>然后可以使用<code>Oracle</code>服务端的<code>net manager</code> 或者客户端的<code>net manager</code>进行测试连接system用户。</p>
<h2 id="三、Oracle11g重装注意事项"><a href="#三、Oracle11g重装注意事项" class="headerlink" title="三、Oracle11g重装注意事项"></a>三、Oracle11g重装注意事项</h2><h3 id="1服务器CPU核心数问题"><a href="#1服务器CPU核心数问题" class="headerlink" title="1	服务器CPU核心数问题"></a>1	服务器CPU核心数问题</h3><p>部署Oracle11g，<strong>创建数据实例卡在2%不动解决方案</strong>：<br>进入控制面板，修改系统配置，打开高级管理，<strong>修改CPU核心数为16保存重启服务器</strong>。</p>
<h3 id="2-NET-framework3-5无法安装问题"><a href="#2-NET-framework3-5无法安装问题" class="headerlink" title="2	.NET framework3.5无法安装问题"></a>2	.NET framework3.5无法安装问题</h3><p>准备需要的.dll扩展文件放入C盘根目录sxs，然后安装.NET framework3.5指定存放C:\sxs\</p>
<h3 id="3清除注册表"><a href="#3清除注册表" class="headerlink" title="3	清除注册表"></a>3	清除注册表</h3><p>注册表清除不干净，部署Oracle11g可能会出现卡在85%情况。<br>使用如下脚本，新建一个Oracle11g.bat文件保存，或者按照如下的注册表所在地址进入<code>regedit</code>删除对应<code>Oracle11g</code>的注册表，删完后，最好重启。</p>
<p><strong>使用win+r快捷键运行regedit</strong>：进入注册表。<br><img data-src="https://img-blog.csdnimg.cn/20210717224329418.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70#" alt="在这里插入图片描述"></p>
<p><strong>使用如下脚本，新建一个Oracle11g.bat文件保存，建议手动核对删除</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">c:</span><br><span class="line">reg delete <span class="string">&quot;HKEY_LOCAL_MACHINE\SOFTWARE\ORACLE&quot;</span> /f</span><br><span class="line">reg delete <span class="string">&quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\OracleDBConsoleorcl&quot;</span> /f</span><br><span class="line">reg delete <span class="string">&quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\OracleJobSchedulerORCL&quot;</span> /f</span><br><span class="line">reg delete <span class="string">&quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\OracleOraDb11g_home1iSQL*Plus&quot;</span> /f</span><br><span class="line">reg delete <span class="string">&quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\OracleOraDb11g_home1TNSListener&quot;</span> /f</span><br><span class="line">reg delete <span class="string">&quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\OracleServiceORCL&quot;</span> /f</span><br><span class="line">reg delete <span class="string">&quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Eventlog\Application\Oracle.orcl&quot;</span> /f</span><br><span class="line">reg delete <span class="string">&quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Eventlog\Application\OracleDBConsoleorcl&quot;</span> /f</span><br><span class="line">reg delete <span class="string">&quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Eventlog\Application\OracleOraDb11g_home1iSQL*Plus&quot;</span> /f</span><br><span class="line"></span><br><span class="line">reg delete <span class="string">&quot;HKEY_CLASSES_ROOT\OracleConfig.OracleConfig&quot;</span> /f</span><br><span class="line">reg delete <span class="string">&quot;HKEY_CLASSES_ROOT\OracleConfig.OracleConfig.1&quot;</span> /f</span><br><span class="line">reg delete <span class="string">&quot;HKEY_CLASSES_ROOT\OracleDatabase.OracleDatabase&quot;</span> /f</span><br><span class="line">reg delete <span class="string">&quot;HKEY_CLASSES_ROOT\OracleDatabase.OracleDatabase.1&quot;</span> /f</span><br><span class="line">reg delete <span class="string">&quot;HKEY_CLASSES_ROOT\OracleHome.OracleHome&quot;</span> /f</span><br><span class="line">reg delete <span class="string">&quot;HKEY_CLASSES_ROOT\OracleHome.OracleHome.1&quot;</span> /f</span><br><span class="line">reg delete <span class="string">&quot;HKEY_CLASSES_ROOT\OracleInProcServer.XOraServer&quot;</span> /f</span><br><span class="line">reg delete <span class="string">&quot;HKEY_CLASSES_ROOT\OracleInProcServer.XOraServer.5&quot;</span> /f</span><br><span class="line">reg delete <span class="string">&quot;HKEY_CLASSES_ROOT\OracleInProcServer.XOraSession&quot;</span> /f</span><br><span class="line">reg delete <span class="string">&quot;HKEY_CLASSES_ROOT\OracleInProcServer.XOraSession.5&quot;</span> /f</span><br><span class="line">reg delete <span class="string">&quot;HKEY_CLASSES_ROOT\OracleProcess.OracleProcess&quot;</span> /f</span><br><span class="line">reg delete <span class="string">&quot;HKEY_CLASSES_ROOT\OracleProcess.OracleProcess.1&quot;</span> /f</span><br><span class="line"></span><br><span class="line">reg delete <span class="string">&quot;HKEY_CLASSES_ROOT\ORADC.ORADCCtrl.1&quot;</span> /f</span><br><span class="line">reg delete <span class="string">&quot;HKEY_CLASSES_ROOT\ORAMMCCFG11.ComponentData&quot;</span> /f</span><br><span class="line">reg delete <span class="string">&quot;HKEY_CLASSES_ROOT\ORAMMCCFG11.ComponentData.1&quot;</span> /f</span><br><span class="line">reg delete <span class="string">&quot;HKEY_CLASSES_ROOT\ORAMMCPMON11.ComponentData&quot;</span> /f</span><br><span class="line">reg delete <span class="string">&quot;HKEY_CLASSES_ROOT\ORAMMCPMON11.ComponentData.1&quot;</span> /f</span><br><span class="line">reg delete <span class="string">&quot;HKEY_CLASSES_ROOT\OraOLEDB.ErrorLookup&quot;</span> /f</span><br><span class="line">reg delete <span class="string">&quot;HKEY_CLASSES_ROOT\OraOLEDB.ErrorLookup.1&quot;</span> /f</span><br><span class="line">reg delete <span class="string">&quot;HKEY_CLASSES_ROOT\OraOLEDB.Oracle&quot;</span> /f</span><br><span class="line">reg delete <span class="string">&quot;HKEY_CLASSES_ROOT\OraOLEDB.Oracle.1&quot;</span> /f</span><br><span class="line">reg delete <span class="string">&quot;HKEY_CLASSES_ROOT\OraPerfMon.OraPerfMon&quot;</span> /f</span><br><span class="line">reg delete <span class="string">&quot;HKEY_CLASSES_ROOT\OraPerfMon.OraPerfMon.1&quot;</span> /f</span><br><span class="line">reg delete <span class="string">&quot;HKEY_CLASSES_ROOT\ORCLMMC.About&quot;</span> /f</span><br><span class="line">reg delete <span class="string">&quot;HKEY_CLASSES_ROOT\ORCLMMC.About.1&quot;</span> /f</span><br><span class="line">reg delete <span class="string">&quot;HKEY_CLASSES_ROOT\ORCLSSO.ComponentData&quot;</span> /f</span><br><span class="line">reg delete <span class="string">&quot;HKEY_CLASSES_ROOT\ORCLSSO.ComponentData.1&quot;</span> /f</span><br><span class="line">reg delete <span class="string">&quot;HKEY_CLASSES_ROOT\EnumOraHomes.EnumOraHomes&quot;</span> /f</span><br><span class="line">reg delete <span class="string">&quot;HKEY_CLASSES_ROOT\EnumOraHomes.EnumOraHomes.1&quot;</span> /f</span><br><span class="line"></span><br><span class="line">reg delete <span class="string">&quot;HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\MenuOrder\Start Menu\Programs\Oracle - OraDb11g_home1&quot;</span> /f</span><br><span class="line"></span><br><span class="line">reg delete <span class="string">&quot;HKEY_LOCAL_MACHINE\SOFTWARE\ODBC\ODBCINST.INI\Oracle in OraDb11g_home1&quot;</span> /f</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">reg delete <span class="string">&quot;LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\OracleDBConsoleorcl&quot;</span> /f</span><br><span class="line">reg delete <span class="string">&quot;LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\OracleJobSchedulerORCL&quot;</span> /f</span><br><span class="line">reg delete <span class="string">&quot;LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\OracleOraDb11g_home1iSQL*Plus&quot;</span> /f</span><br><span class="line">reg delete <span class="string">&quot;LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\OracleOraDb11g_home1TNSListener&quot;</span> /f</span><br><span class="line">reg delete <span class="string">&quot;LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\OracleServiceORCL&quot;</span> /f</span><br></pre></td></tr></table></figure>
<p>这里建议一个一个去核对，win+r打开运行regedit手动删除注册表，有时候容易手滑。</p>
<h2 id="四、使用过程中的优化"><a href="#四、使用过程中的优化" class="headerlink" title="四、使用过程中的优化"></a>四、使用过程中的优化</h2><h3 id="1密码过期处理"><a href="#1密码过期处理" class="headerlink" title="1	密码过期处理"></a>1	密码过期处理</h3><p>1、登陆  <code>sqlplus</code><br>执行SQL命令语句：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">sqlplus <span class="operator">/</span> <span class="keyword">as</span> sysdba</span><br></pre></td></tr></table></figure>

<p>2、查询 密码有效期<br>执行<code>SQL</code>命令语句：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> dba_profiles s <span class="keyword">WHERE</span> s.profile<span class="operator">=</span><span class="string">&#x27;DEFAULT&#x27;</span> <span class="keyword">AND</span> resource_name<span class="operator">=</span><span class="string">&#x27;PASSWORD_LIFE_TIME&#x27;</span>; </span><br></pre></td></tr></table></figure>

<p>通过plsql developer工具查询出来<code>PASSWORD_LIFE_TIME</code>默认为180，手动改为<code>UNLIMITED</code>就行，当然用下面提供的方法也行。</p>
<p>3、将密码有效期由默认的<strong>180天修改成无限制</strong>： </p>
<p>执行<code>SQL</code>命令语句：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> PROFILE <span class="keyword">DEFAULT</span> LIMIT PASSWORD_LIFE_TIME UNLIMITED; </span><br></pre></td></tr></table></figure>

<p>修改之后无需重启动数据库，会立即生效。当然这一系列的操作也可以使用<strong>plsql developer</strong>进行。</p>
<h3 id="2空表的处理"><a href="#2空表的处理" class="headerlink" title="2	空表的处理"></a>2	空表的处理</h3><p>1、打开<code>sqlplus</code>用sys登陆，例如</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">sqlplus <span class="operator">/</span>nolog</span><br></pre></td></tr></table></figure>

<p>连接到SQLplus：connect sys&#x2F;密码@服务名 as sysdba<br>例如：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">connect</span> sys<span class="operator">/</span><span class="number">123456</span><span class="variable">@orcl</span> <span class="keyword">as</span> sysdba</span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">system</span> <span class="keyword">set</span> deferred_segment_creation<span class="operator">=</span><span class="literal">false</span>;</span><br><span class="line"><span class="variable">@C</span>:\createsql.sql;</span><br></pre></td></tr></table></figure>

<p>2、进入C盘看是否生成<code>allocate.sql</code>，当然上面也可以设置为其它盘符。<br>如果生成继续执行</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">@ C:\allocate.sql;</span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">set</span> heading off;</span><br><span class="line"><span class="keyword">set</span> echo off;</span><br><span class="line"><span class="keyword">set</span> feedback off;</span><br><span class="line"><span class="keyword">set</span> termout <span class="keyword">on</span>;</span><br><span class="line">spool C:\allocate.sql;</span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;alter table &#x27;</span><span class="operator">||</span> owner <span class="operator">||</span><span class="string">&#x27;.&#x27;</span><span class="operator">||</span>table_name<span class="operator">||</span><span class="string">&#x27; allocate extent;&#x27;</span> <span class="keyword">from</span> dba_tables <span class="keyword">where</span> SEGMENT_CREATED<span class="operator">=</span><span class="string">&#x27;NO&#x27;</span>;</span><br><span class="line">spool off;</span><br></pre></td></tr></table></figure>



<h3 id="3plsql-developer的使用"><a href="#3plsql-developer的使用" class="headerlink" title="3	plsql developer的使用"></a>3	plsql developer的使用</h3><h4 id="版本的准备与下载"><a href="#版本的准备与下载" class="headerlink" title="版本的准备与下载"></a>版本的准备与下载</h4><p><code>plsql developer</code>汉化包与安装包的准备<br>各个版本下载地址<br><span class="exturl" data-url="aHR0cHM6Ly93d3cuYWxscm91bmRhdXRvbWF0aW9ucy5jb20vcmVnaXN0ZXJlZC1wbHNxbGRldi8=">添加链接描述<i class="fa fa-external-link-alt"></i></span></p>
<p>根据安装的<code>Oracle</code>数据库客户端或者操作系统版本进行选择<br>12.0.7下载地址（32位）<br><span class="exturl" data-url="aHR0cHM6Ly93d3cuYWxscm91bmRhdXRvbWF0aW9ucy5jb20vZmlsZXMvcGxzcWxkZXYxMjA3eDMyLm1zaQ==">https://www.allroundautomations.com/files/plsqldev1207x32.msi<i class="fa fa-external-link-alt"></i></span><br>12.0.7下载地址（64位）<br><span class="exturl" data-url="aHR0cHM6Ly93d3cuYWxscm91bmRhdXRvbWF0aW9ucy5jb20vZmlsZXMvcGxzcWxkZXYxMjA3eDY0Lm1zaQ==">https://www.allroundautomations.com/files/plsqldev1207x64.msi<i class="fa fa-external-link-alt"></i></span></p>
<p>12.0.7汉化包下载<br><span class="exturl" data-url="aHR0cHM6Ly93d3cuYWxscm91bmRhdXRvbWF0aW9ucy5jb20vcGxzcWxkZXZsYW5nLzEyMC9jaGluZXNlLmV4ZQ==">https://www.allroundautomations.com/plsqldevlang/120/chinese.exe<i class="fa fa-external-link-alt"></i></span></p>
<p>阿里云盘资源，提供了32位于64位：<span class="exturl" data-url="aHR0cHM6Ly93d3cuYWxpeXVuZHJpdmUuY29tL3MvM0dyUzk5OFNSU3E=">https://www.aliyundrive.com/s/3GrS998SRSq<i class="fa fa-external-link-alt"></i></span></p>
<h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p> 安装流程：<br>先安装原版的<code>plsql developer</code>，然后安装汉化语言包，最后激活。</p>
<p>安装过程：<br>基本就是下一步下一步，建议选择盘符选D盘，不要安装在C盘。安装路径尽量不要出现空格或者中文之类的，至于安装的截图后续会持续更新补上。</p>
<h4 id="激活"><a href="#激活" class="headerlink" title="激活"></a>激活</h4><p>个人比较推荐这个版本PLSQL Developer 12.0.7，不算太新，而且还有官方提供的汉化语言包。首先安装32位的客户端，然后安装官方提供的汉化语言包，然后输入如下注册码进行激活：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">PLSQL Developer 12.0.7 注册码</span><br><span class="line">　　　　product code： 4vkjwhfeh3ufnqnmpr9brvcuyujrx3n3le</span><br><span class="line">　　　　serial Number：226959</span><br><span class="line">　　　　password: xs374ca</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>Oracle</tag>
      </tags>
  </entry>
  <entry>
    <title>Oracle运维实战小技巧</title>
    <url>/2021/12/28/Oracle%E8%BF%90%E7%BB%B4%E5%AE%9E%E6%88%98%E5%B0%8F%E6%8A%80%E5%B7%A7/</url>
    <content><![CDATA[<p>实际运维中，不仅仅是掌握SQL语句的使用以及优化。你会遇到各式各样的问题，此时往往不知如何下手。思考的方向不好确定，但是可以通过日志分析。常用的动态参数以及数据字典掌握尤为重要，辅助我们排查问题。</p>
<span id="more"></span>

<h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="一、基础优化篇"><a href="#一、基础优化篇" class="headerlink" title="一、基础优化篇"></a>一、基础优化篇</h2><h3 id="1、密码过期处理"><a href="#1、密码过期处理" class="headerlink" title="1、密码过期处理"></a>1、密码过期处理</h3><p>1.1、登录到sqlplus</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-- 登陆sys</span><br><span class="line">sqlplus /nolog</span><br><span class="line">-- 连接数据库</span><br><span class="line">conn sys/password@orcl as sysdba</span><br></pre></td></tr></table></figure>

<p>1.2、执行SQL语句查询密码期限，修改密码期限为UNLIMITED。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 查询密码期限</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line">  <span class="keyword">FROM</span> dba_profiles s</span><br><span class="line"> <span class="keyword">WHERE</span> s.profile <span class="operator">=</span> <span class="string">&#x27;DEFAULT&#x27;</span></span><br><span class="line">   <span class="keyword">AND</span> resource_name <span class="operator">=</span> <span class="string">&#x27;PASSWORD_LIFE_TIME&#x27;</span></span><br><span class="line"><span class="comment">-- 修改密码期限为无限制</span></span><br><span class="line"> <span class="keyword">ALTER</span> PROFILE <span class="keyword">DEFAULT</span> LIMIT PASSWORD_LIFE_TIME UNLIMITED;</span><br></pre></td></tr></table></figure>

<h3 id="2、空表无法导出"><a href="#2、空表无法导出" class="headerlink" title="2、空表无法导出"></a>2、空表无法导出</h3><p>2.1、新增createsql.sql文件</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">set</span> heading off;</span><br><span class="line"><span class="keyword">set</span> echo off;</span><br><span class="line"><span class="keyword">set</span> feedback off;</span><br><span class="line"><span class="keyword">set</span> termout <span class="keyword">on</span>;</span><br><span class="line">spool C:\allocate.sql;</span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;alter table &#x27;</span><span class="operator">||</span> owner <span class="operator">||</span><span class="string">&#x27;.&#x27;</span><span class="operator">||</span>table_name<span class="operator">||</span><span class="string">&#x27; allocate extent;&#x27;</span> <span class="keyword">from</span> dba_tables <span class="keyword">where</span> SEGMENT_CREATED<span class="operator">=</span><span class="string">&#x27;NO&#x27;</span>;</span><br><span class="line">spool off;</span><br></pre></td></tr></table></figure>

<p>2.2、设置参数限制</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">alter system <span class="built_in">set</span> deferred_segment_creation=<span class="literal">false</span>;</span><br></pre></td></tr></table></figure>

<p>2.3、连接sqlplus执行createsql.sql</p>
<p>打开cmd窗口执行createsql.sql脚本</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">@ C:\createsql.sql;</span><br></pre></td></tr></table></figure>

<p>2.4、在你设置的路径下形成allocate.sql，继续在cmd命令窗口执行allocate.sql脚本</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">@ C:\allocate.sql;</span><br></pre></td></tr></table></figure>

<p>完美解决Oracle空表无法导出的问题。</p>
<h2 id="二、实战参考篇"><a href="#二、实战参考篇" class="headerlink" title="二、实战参考篇"></a>二、实战参考篇</h2><h3 id="1、Oracle11g调优参考"><a href="#1、Oracle11g调优参考" class="headerlink" title="1、Oracle11g调优参考"></a>1、Oracle11g调优参考</h3><p>1.1、<strong>真实运维场景</strong></p>
<p>基于真实运维场景进行分析，环境原因，不得在同一台服务器上建立双实例。结果在某一天，服务器日志量写入过多，导致服务器Oracle实例关闭后无法启动。建议：先清理日志，<strong>清理日志之前先做好备份</strong>，然后手动使用命令重启监听服务。<strong>至于如何查询日志所在服务器位置，下面的Oracle常用动态性能视图有介绍</strong>。</p>
<p>关于表空间：之前公司默认都使用USERS，临时表空间选择TEMP。</p>
<p><strong>这里查看USERS表空间，默认部署了scott用户</strong>。</p>
<p>后面经过思考，不出问题还好；一出问题，排查起来就麻烦了。</p>
<p>USERS下的tablespace显得太混乱了，<strong>个人建议单独创表空间，分工明确</strong>。</p>
<p>1.2、<strong>查看字符集，有助于解决中文乱码问题</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--查看字符集</span></span><br><span class="line"><span class="keyword">select</span> userenv(<span class="string">&#x27;language&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="comment">--设置默认字符集(linux)</span></span><br><span class="line">export NLS_LANG<span class="operator">=</span>&quot;SIMPLIFIED CHINESE_CHINA.ZHS16GBK&quot;</span><br><span class="line"><span class="comment">--设置默认字符集(win),在win用户环境变量加入配置</span></span><br><span class="line">NLS_LANG<span class="operator">=</span>&quot;SIMPLIFIED CHINESE_CHINA.ZHS16GBK&quot;</span><br></pre></td></tr></table></figure>

<p>1.3、<strong>创建表空间</strong>，设置路径更具实际情况而定，表空间必须指定大小。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--创建表空间</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span>space TEST DATAFILE <span class="string">&#x27;D:\app\product\11.2.0\oradata\orcl\TEST.DBF&#x27;</span> SIZE <span class="number">256</span>M;</span><br></pre></td></tr></table></figure>


<p>1.4、<strong>删除表空间</strong>，会提示解除级联关系，否则无法删除</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--删除表空间</span></span><br><span class="line"><span class="keyword">drop</span> tablespace TEST CASCADE;</span><br></pre></td></tr></table></figure>
<p>删除表空间下的索引，解决<code>ORA-02429</code><br>解除表的约束提示唯一主键有关联关系，删掉索引。以下为测试的示例，解除约束并删除。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--解除表的约束提示唯一主键有关联关系，删掉索引</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> test.test01 <span class="keyword">drop</span> <span class="keyword">constraint</span> constraint_test01;</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> test.test <span class="keyword">drop</span> <span class="keyword">constraint</span> sys_c0012187;</span><br></pre></td></tr></table></figure>

<p>1.5、<strong>赋予表空间</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--赋予TEST用户表空间</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">user</span> TEST <span class="keyword">default</span> tablespace TEST;</span><br></pre></td></tr></table></figure>

<p>表占用空间</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--表占用空间</span></span><br><span class="line"><span class="keyword">Select</span> Segment_Name,<span class="built_in">Sum</span>(bytes)<span class="operator">/</span><span class="number">1024</span><span class="operator">/</span><span class="number">1024</span> <span class="keyword">From</span> User_Extents <span class="keyword">Group</span> <span class="keyword">By</span> Segment_Name;</span><br></pre></td></tr></table></figure>

<p>表空间占用空间</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--表空间占用空间</span></span><br><span class="line"><span class="keyword">Select</span> Tablespace_Name,<span class="built_in">Sum</span>(bytes)<span class="operator">/</span><span class="number">1024</span><span class="operator">/</span><span class="number">1024</span> <span class="keyword">From</span> Dba_Segments <span class="keyword">Group</span> <span class="keyword">By</span> Tablespace_Name;</span><br></pre></td></tr></table></figure>

<p>会话相关信息</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--会话相关信息</span></span><br><span class="line"><span class="keyword">select</span> username <span class="keyword">from</span> v$session;</span><br></pre></td></tr></table></figure>

<h3 id="2、Oracle常用动态性能视图"><a href="#2、Oracle常用动态性能视图" class="headerlink" title="2、Oracle常用动态性能视图"></a>2、Oracle常用动态性能视图</h3><p>v$logfiles视图查看日志，有关实例重置日志组文件名及其位置信息</p>
<p><img data-src="https://gitee.com/dywangk/img/raw/master/images/%E6%9F%A5%E7%9C%8BOracle%E6%97%A5%E5%BF%97%E4%BF%A1%E6%81%AF.png"></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--v$logfiles视图查看日志，有关实例重置日志组文件名及其位置信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">member</span> <span class="keyword">from</span> v$logfile;</span><br></pre></td></tr></table></figure>
<p>关于数据库相关信息</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--关于数据库相关信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> v$database;</span><br></pre></td></tr></table></figure>
<p>从控制文件中提取有关重做日志组的信息</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--从控制文件中提取有关重做日志组的信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> v$log;</span><br></pre></td></tr></table></figure>
<p>从控制文件中提取有关重做日志组的信息</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--从控制文件中提取有关重做日志组的信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> v$archived_log;</span><br></pre></td></tr></table></figure>
<p>记录归档日志文件的路径信息</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--记录归档日志文件的路径信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> v$archive_dest;</span><br></pre></td></tr></table></figure>
<p>控制文件相关信息</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--控制文件相关信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> v$controlfile;</span><br></pre></td></tr></table></figure>

<p>记录实例基本信息</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--记录实例基本信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> v$instance;</span><br></pre></td></tr></table></figure>
<p>数据库所有索引描述</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--数据库所有索引描述</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> dba_indexes;</span><br></pre></td></tr></table></figure>
<p>所有表及簇上压缩索引的列</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--所有表及簇上压缩索引的列</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> dba_ind_columns;</span><br></pre></td></tr></table></figure>
<p>所有用户触发器信息</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--所有用户触发器信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> dba_triggers;</span><br></pre></td></tr></table></figure>
<p>所有用户存储过程信息</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--所有用户存储过程信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> dba_source;</span><br></pre></td></tr></table></figure>
<p>关于数据库文件信息</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--关于数据库文件信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> dba_data_files;</span><br></pre></td></tr></table></figure>
<p>关于对象授权信息</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--关于对象授权信息</span></span><br><span class="line"><span class="comment">--select * from dba_tab_grants;</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> dba_tab_privs;</span><br></pre></td></tr></table></figure>
<p>数据库所有的对象</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--数据库所有的对象</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> dba_objects;</span><br></pre></td></tr></table></figure>
<p>数量比较大，慎重点查询所有</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--数量比较大，慎重点查询所有</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> dba_objects;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> dba_object_tables;</span><br></pre></td></tr></table></figure>
<p>数据库中所有用户信息</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--数据库中所有用户信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> dba_users;</span><br></pre></td></tr></table></figure>


<h3 id="3、Oracle数据字典"><a href="#3、Oracle数据字典" class="headerlink" title="3、Oracle数据字典"></a>3、Oracle数据字典</h3><p>查询表空间信息，TEST是新增的</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--表空间信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> dba_tablespaces;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> dba_tablespaces t <span class="keyword">where</span> t.TABLESPACE_NAME<span class="operator">=</span><span class="string">&#x27;USERS&#x27;</span>;</span><br></pre></td></tr></table></figure>
<p>查询数据表描述</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--数据表描述</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> dba_tables t <span class="keyword">where</span> t.TABLE_NAME <span class="keyword">IN</span> (<span class="string">&#x27;DEPT&#x27;</span>, <span class="string">&#x27;EMP&#x27;</span>);</span><br></pre></td></tr></table></figure>
<p>查询视图信息</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--视图信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> dba_views;</span><br></pre></td></tr></table></figure>
<p>查询序列信息</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--序列信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> dba_sequences;</span><br></pre></td></tr></table></figure>
<p>查询用户表约束信息</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--用户表约束信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> dba_constraints;</span><br></pre></td></tr></table></figure>
<p>查询所有表空间自由分区</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--所有表空间自由分区</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> dba_free_space;</span><br></pre></td></tr></table></figure>
<p>查询sga分区大小</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--sga分区大小</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> v$sga;</span><br><span class="line"><span class="comment">--统计sga使用情况信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> v$sgastat;</span><br></pre></td></tr></table></figure>
<p>查询会话相关信息</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--会话相关信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> v$session;</span><br></pre></td></tr></table></figure>
<p>查询sql语句信息</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--sql语句信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> v$<span class="keyword">sql</span>;</span><br><span class="line"><span class="comment">--记录SQL语句的语句信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> v$sqltext;</span><br></pre></td></tr></table></figure>
<p>显示实例当前有效的参数信息</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--显示实例当前有效的参数信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> v$<span class="keyword">parameter</span>;</span><br></pre></td></tr></table></figure>

<p>查询锁信息相关</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--通过访问数据库会话，设置对象锁的所有信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> v$lock;</span><br><span class="line"><span class="comment">--锁类型信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> v$lock_type;</span><br><span class="line"><span class="comment">--v$lock_activity（活跃状态）</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> v$lock_activity;</span><br></pre></td></tr></table></figure>

<h3 id="4、Oracle部分关键字区别"><a href="#4、Oracle部分关键字区别" class="headerlink" title="4、Oracle部分关键字区别"></a>4、Oracle部分关键字区别</h3><p>1、<strong>删除数据语句TRUNCATE 与 DELETE，此处涉及到回滚机制，使用TRUNCATE更彻底</strong></p>
<p>DELETE语句</p>
<p>说明：使用DELETE语句删除数据时，Oracle系统会产生回滚记录，所以这种操作可以使用rollback语句撤销。</p>
<p>TRUNCATE 语句</p>
<p>用户删除表中所有记录，除了DELETE语句，还可以使用TRUNCATE 语句，Oracle本身建议使用TRUNCATE 。</p>
<p>TRUNCATE 语句默认执行DROP STORAGE模式(删除不保存记录)；加上REUSE STORAGE关键字人可以保存记录。</p>
<p><strong>注意：虽然TRUNCATE 语句效率更高，但是不会产生回滚记录</strong></p>
<p>2、<strong>NOT EXISTS 替代NOT IN</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> scott.emp;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> scott.dept;</span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--NOT IN对数据库执行全表遍历，尽量避免使用</span></span><br><span class="line"><span class="keyword">select</span> empno, ename</span><br><span class="line">  <span class="keyword">from</span> scott.emp</span><br><span class="line"> <span class="keyword">where</span> empno <span class="keyword">not</span> <span class="keyword">in</span> (<span class="keyword">select</span> deptno <span class="keyword">from</span> scott.dept <span class="keyword">where</span> loc <span class="operator">=</span> <span class="string">&#x27;DALLAS&#x27;</span>);</span><br></pre></td></tr></table></figure>

 <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--优化采用NOT EXISTS</span></span><br><span class="line"><span class="keyword">select</span> empno, ename</span><br><span class="line">  <span class="keyword">from</span> scott.emp</span><br><span class="line"> <span class="keyword">where</span> <span class="keyword">exists</span> (<span class="keyword">select</span> deptno <span class="keyword">from</span> scott.dept <span class="keyword">where</span> loc <span class="operator">!=</span> <span class="string">&#x27;DALLAS&#x27;</span>);</span><br></pre></td></tr></table></figure>


<p>—END—</p>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>Oracle</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis入门到实践，由持久化引发的思考</title>
    <url>/2022/01/07/Redis%E5%85%A5%E9%97%A8%E5%88%B0%E5%AE%9E%E8%B7%B5%EF%BC%8C%E7%94%B1%E6%8C%81%E4%B9%85%E5%8C%96%E5%BC%95%E5%8F%91%E7%9A%84%E6%80%9D%E8%80%83/</url>
    <content><![CDATA[<p>redis6.0入门详细教程，redis持久化、redis复制原理、redis高可用哨兵监控以及集群搭建。</p>
<h1 id="一本正经"><a href="#一本正经" class="headerlink" title="一本正经"></a>一本正经</h1><p><strong>面试官</strong>：小伙子，谈谈对Redis的看法。<br><strong>我</strong>：啊，看法呀，坐着看还是躺着看。Redis很小？很快？但很持久？</p>
<p><strong>面试官</strong>：一本正经的说，我怀疑你在开车，不仅开开车还搞颜色。<br><strong>我</strong>：。。。</p>
<p><strong>面试官</strong>：去去去，我时间有限，别瞎扯淡。回到正题，你对Redis了解有多少。<br><strong>我</strong>：轻量体积小、基于内存非常快、RDB配合AOF持久化让其一样坚挺持久。</p>
<p><strong>面试官</strong>：说点具体的。<br><strong>我</strong>：请看正文。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/a663249cdfe4fc9f604bbdc538c50530.png"></p>
<h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><p><strong>简介</strong><br>Redis是一个开源的、高性能的、基于键值对的缓存与存储系统，通过提供多种键值数据类型来适应不同场景下的缓存与存储需求。与此同时，Redis的诸多高层级功能让其可以胜任消息队列、任务队列等不同的角色。除此之外，Redis还支持外部模块扩展，在某些特定的场景下可以作为主数据库使用。</p>
<p>由于内存的读写速度远快于硬盘，就算现在的固态盘思维估计也是朝着内存那个思维模式发展的，大概也许我是个外行，但是长久存储还是使用机械盘。所以Redis数据库中的所有数据都存储在内存中那是相当快的。也有一定的风险，会导致丢失数据，但配合RDB以及AOF持久化会减少风险。</p>
<h2 id="一、初识Redis"><a href="#一、初识Redis" class="headerlink" title="一、初识Redis"></a>一、初识Redis</h2><h3 id="1、linux下安装（Redhat7系列）"><a href="#1、linux下安装（Redhat7系列）" class="headerlink" title="1、linux下安装（Redhat7系列）"></a>1、linux下安装（Redhat7系列）</h3><h4 id="1-1、安装"><a href="#1-1、安装" class="headerlink" title="1.1、安装"></a>1.1、安装</h4><p>此处准备的是源码包，版本不在于最新，在于稳定适用。</p>
<p>其余版本在官网获取，或者在其托管的平台github上获取，如下为Redis的官网下载地址。</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9yZWRpcy5pby9kb3dubG9hZA==">https://redis.io/download<i class="fa fa-external-link-alt"></i></span></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis-6.0.8.tar.gz</span><br><span class="line"><span class="comment">#安装</span></span><br><span class="line">tar -zxvf redis-6.0.8.tar.gz</span><br><span class="line"><span class="comment">#编译</span></span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>



<h4 id="1-2、排查错误"><a href="#1-2、排查错误" class="headerlink" title="1.2、排查错误"></a>1.2、排查错误</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">make[1]: *** [server.o] 错误 1</span><br></pre></td></tr></table></figure>

<p><img data-src="https://img-blog.csdnimg.cn/img_convert/762a6ffb884538f19a450dc5a2587423.png"></p>
<h4 id="1-3、解决方案"><a href="#1-3、解决方案" class="headerlink" title="1.3、解决方案"></a>1.3、解决方案</h4><p>1.3.1、安装依赖环境</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install centos-release-scl</span><br><span class="line">yum -y install devtoolset-9-gcc devtoolset-9-gcc-c++ devtoolset-9-binutils</span><br></pre></td></tr></table></figure>

<p>1.3.2、加环境变量并生效</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">scl <span class="built_in">enable</span> devtoolset-9 bash</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;/opt/rh/devtoolset-9/enable&quot;</span> &gt;&gt; /etc/profile </span><br></pre></td></tr></table></figure>

<p><strong>重新读取环境变量配置文件</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure>

<p><strong>重新编译解决问题</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#切换到Redis的安装目录,一般源码包安装会放在/usr/local/下面，看个人使用习惯</span></span><br><span class="line"><span class="built_in">cd</span> /opt/redis-6.0.8/</span><br><span class="line"><span class="comment">#编译</span></span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>

<p><strong>常用基本命令练习可以参考菜鸟教程</strong></p>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cucnVub29iLmNvbS9yZWRpcy9yZWRpcy1jb21tYW5kcy5odG1s">https://www.runoob.com/redis/redis-commands.html<i class="fa fa-external-link-alt"></i></span></p>
<h4 id="1-4、启动与登录"><a href="#1-4、启动与登录" class="headerlink" title="1.4、启动与登录"></a>1.4、启动与登录</h4><p>启动redis-server服务端</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#启动redis服务</span></span><br><span class="line"><span class="built_in">nohup</span> /opt/redis-6.0.8/src/redis-server &amp; </span><br></pre></td></tr></table></figure>

<p>登录redis-cli客户端</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#登录redis-cli</span></span><br><span class="line">/opt/redis-6.0.8/src/redis-cli</span><br></pre></td></tr></table></figure>

<p>测试验证，此时linux下的redis正式启动成功，下面会带来基本用法介绍。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ping</span><br><span class="line">pong</span><br></pre></td></tr></table></figure>

<p><img data-src="https://img-blog.csdnimg.cn/img_convert/1220883728c2d801f9fbed768ea928c3.png"></p>
<h4 id="1-5、设置密码"><a href="#1-5、设置密码" class="headerlink" title="1.5、设置密码"></a>1.5、设置密码</h4><p>默认是没有开放密码设置的，需要手动开启注释掉的参数配置。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#编辑配置文件</span></span><br><span class="line">vim /opt/redis-6.0.8/redis.conf</span><br><span class="line"></span><br><span class="line"><span class="comment">#原本的被注释掉,复制一行改成你设置的密码即可</span></span><br><span class="line"><span class="comment">#requirepass foobared</span></span><br><span class="line">requirepass 123456</span><br></pre></td></tr></table></figure>



<h3 id="2、Windows下安装"><a href="#2、Windows下安装" class="headerlink" title="2、Windows下安装"></a>2、Windows下安装</h3><h4 id="2-1、安装"><a href="#2-1、安装" class="headerlink" title="2.1、安装"></a>2.1、安装</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Redis-x64-3.2.100.zip</span><br></pre></td></tr></table></figure>

<p>2.1.1、Windows下解压或者msi直接安装即可。</p>
<p>2.1.2、设置服务命令（注册为服务形式，自启）<br><strong>安装服务</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis-server --service-install redis.windows-service.conf --loglevel verbose</span><br></pre></td></tr></table></figure>

<p><strong>卸载服务</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis-server --service-uninstall</span><br></pre></td></tr></table></figure>

<h4 id="2-2、启动与关闭"><a href="#2-2、启动与关闭" class="headerlink" title="2.2、启动与关闭"></a>2.2、启动与关闭</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis-server redis.windows.conf</span><br></pre></td></tr></table></figure>

<p>2.2.1、开启服务</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis-server --service-start</span><br></pre></td></tr></table></figure>

<p>2.2.2、停止服务</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis-server --service-stop</span><br></pre></td></tr></table></figure>

<h4 id="2-3、启动redis服务"><a href="#2-3、启动redis服务" class="headerlink" title="2.3、启动redis服务"></a>2.3、启动redis服务</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#同样在redis解压的或者安装的目录以管理员身份运行cmd</span></span><br><span class="line">redis-server --service-start</span><br></pre></td></tr></table></figure>

<h4 id="2-4、cmd下运行测试登录"><a href="#2-4、cmd下运行测试登录" class="headerlink" title="2.4、cmd下运行测试登录"></a>2.4、cmd下运行测试登录</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#在redis解压的或者安装的目录以管理员身份运行cmd</span></span><br><span class="line">redis-cli.exe -h 127.0.0.1 -p 6379</span><br><span class="line"><span class="comment">#或者直接执行</span></span><br><span class="line">redis-cli</span><br><span class="line"><span class="comment">#执行</span></span><br><span class="line">redis-cli</span><br><span class="line"><span class="comment">#登录测试</span></span><br><span class="line">ping</span><br></pre></td></tr></table></figure>

<p>5、Windows下的管理工具rdm，是可视化界面<br><span class="exturl" data-url="aHR0cHM6Ly9yZWRpc2Rlc2t0b3AuY29tL2Rvd25sb2Fk">https://redisdesktop.com/download<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="二、基础知识"><a href="#二、基础知识" class="headerlink" title="二、基础知识"></a>二、基础知识</h2><h3 id="1、面试常问到"><a href="#1、面试常问到" class="headerlink" title="1、面试常问到"></a>1、面试常问到</h3><p><strong>面试官</strong>：redis中的数据类型有哪些，能聊聊吗？</p>
<p><strong>我</strong>：string（字符串类型）、hash（哈希类型）、list（列表类型）、set（集合类型）、zset（有序集合类型）、<strong>stream（流类型）</strong><br>stream是redis5.0新增的特性支持。</p>
<p><strong>面试官</strong>：嚯，小伙子有点东西啊，知道的还不少嘛，连stream流类型都知道。</p>
<p><strong>我</strong>：一脸懵逼…</p>
<h2 id="三、进阶"><a href="#三、进阶" class="headerlink" title="三、进阶"></a>三、进阶</h2><h3 id="1、持久化"><a href="#1、持久化" class="headerlink" title="1、持久化"></a>1、持久化</h3><p><strong>面试官</strong>：Redis的一些高级特性了解吗？</p>
<p><strong>我</strong>：略有了解。</p>
<p><strong>面试官</strong>：能具体谈谈吗？</p>
<p><strong>我</strong>：飞速在大脑搜索者以前看书总结的。缓存、持久化迎面而来。</p>
<p>将Redis作为缓存服务器，但缓存被穿透后会对性能照成较大影响，所有缓存同时失效缓存雪崩，从而使服务无法响应。</p>
<p>我们希望Redis能将数据从内存中以某种形式同步到磁盘中，使之重启以后根据磁盘中的记录恢复数据。这一过程就是持久化。</p>
<p><strong>面试官</strong>：知道Redis有哪几种常见的持久化方式吗？</p>
<p><strong>我</strong>：Redis默认开启的RDB持久化，AOF持久化方式需要手动开启。</p>
<p>Redis支持两种持久化。一种是RDB方式，一种是AOF方式。前者会根据指定的规则“定时”将内存中的数据存储到硬盘上，而后者在每次执行命令后将命令本书记录下来。对于这两种持久化方式，你可以单独使用其中一种，但大多数情况下是将二者紧密结合起来。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/56445a7ca78010b48d5d21b5a9d1f120.png"></p>
<p>此时的面试官一脸期待，炯炯有神的看向了我，请继续。</p>
<h3 id="2、RDB方式"><a href="#2、RDB方式" class="headerlink" title="2、RDB方式"></a>2、RDB方式</h3><p>继续介绍，RDB采取的是快照方式，默认设置自定义快照【自动同步】，默认配置如下。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/f0c9415939bbb161441253d3682da460.png"></p>
<p>同样可以手动同步</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#不推荐在生产环境中使用</span></span><br><span class="line">SAVE</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#异步形式</span></span><br><span class="line">BGSAVE</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#基于自定义快照</span></span><br><span class="line">FLASHALL</span><br></pre></td></tr></table></figure>



<h3 id="3、AOF方式"><a href="#3、AOF方式" class="headerlink" title="3、AOF方式"></a>3、AOF方式</h3><p>当使用Redis存储非临时数据时，一般需要打开AOF持久化来降低进程终止导致数据的丢失。AOF可以将Redis执行的每一条命令追加到硬盘文件中，着这个过程中显然会让Redis的性能打折扣，但大部分情况下这种情况可以接受。这里强调一点，使用读写较快的硬盘可以提高AOF的性能。</p>
<p>默认没有开启，需要手动开启AOF，当你查看redis.conf文件时也会发现appendonly配置的是no</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">appendonly <span class="built_in">yes</span></span><br></pre></td></tr></table></figure>

<p><img data-src="https://img-blog.csdnimg.cn/img_convert/9d8c40420d0c89d55c9e1fd295717472.png"></p>
<p>开启AOF持久化后，每次执行一条命令会会更改Redis中的数据的目录，Redis会将该命令写入磁盘中的AOF文件。AOF文件的保存位置和RDB文件的位置相同，都是通过dir参数设置，默认的文件名是appendonly.aof，可以通过appendfilename参数修改。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">appendfilename <span class="string">&quot;appendonly.aof</span></span><br></pre></td></tr></table></figure>

<p><img data-src="https://img-blog.csdnimg.cn/img_convert/bf82c859801b795f6955acaedfedf05e.png"></p>
<p>实际上Redis也正是这样做的，每当达到一定的条件时Redis就会自动重写AOF文件，这个条件可以通过redis.conf配置文件中设置：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">auto-aof-rewrite-percentage 100</span><br><span class="line">auto-aof-rewrite-min-size 64mb</span><br></pre></td></tr></table></figure>

<p><img data-src="https://img-blog.csdnimg.cn/img_convert/3b210e4089d4bf58c84b94b961aeab31.png"></p>
<p>在启动时Redis会逐行执行AOF文件中的命令将硬盘中的数据加载到内存中，加载的速度相比RDB会慢一些。</p>
<p>虽然每次执行更改数据库内容的操作时，AOF都将命令记录在AOF文件中。但事实上，由于操作系统的缓存机制，数据并没与真正写入硬盘，而是进入了操作系统的硬盘缓存。在默认情况下，操作系统每30秒会执行一次同步操作，以便将硬盘缓存中的内容写入硬盘。</p>
<p><strong>在Redis中可以通过appendfsync设置同步的时机</strong>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># appendfsync always</span></span><br><span class="line"><span class="comment">#默认设置为everysec</span></span><br><span class="line">appendfsync everysec</span><br><span class="line"><span class="comment"># appendfsync no</span></span><br></pre></td></tr></table></figure>

<p><strong>Redis允许同时开启AOF和RDB</strong>。这样既保证了数据的安全，又对进行备份等操作比较友好。此时重新启动Redis后，会使用AOF文件来恢复数据。因为AOF方式的持久化，将会丢失数据的概率降至最小化。</p>
<h3 id="4、Redis复制"><a href="#4、Redis复制" class="headerlink" title="4、Redis复制"></a>4、Redis复制</h3><p>通过持久化功能，Redis保证了即使服务器重启的情况下也不会丢失（少部分遗失）数据。但是数据库是存储在单台服务器上的，难免不会发生各种突发情况，比如硬盘故障，服务器突然宕机等等，也会导致数据遗失。</p>
<p>为了尽可能的避免故障，通常做法是将数据库复制多个副本以部署在不同的服务器上。这样即使有一台出现故障，其它的服务器依旧可以提供服务。为此，Redis提供了复制（replication）功能。即实现一个数据库中的数据更新后，自动将更新的数据同步到其它数据库上。</p>
<p>此时熟悉MySQL的同学，是不是觉得与MySQL的主从复制很像，以开启二进制日志binlog实现同步复制。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/cdb82b9589271c1d97913506c24550eb.png"></p>
<p>而Redis中使用复制功能更为容易，相比MySQL而言。只需要在从库中启动时加入<code>slaveof</code> 从数据库地址。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#在从库中配置</span></span><br><span class="line">slaveof master_database_ip_addr</span><br><span class="line"><span class="comment">#测试,加了nohup与&amp;是放入后台，并且输出日志到/root/目录下的nohup.out</span></span><br><span class="line"><span class="built_in">nohup</span> /opt/redis-6.0.8/src/redis-server --6380 --slaveof 192.168.245.147 6379 &amp;</span><br></pre></td></tr></table></figure>

<p><img data-src="https://img-blog.csdnimg.cn/img_convert/aa7d5dd56234af578448d96b5b3b3ca4.png"></p>
<h4 id="4-1、原理"><a href="#4-1、原理" class="headerlink" title="4.1、原理"></a>4.1、原理</h4><p><strong>复制初始化</strong>。这里主要原理是从库启动，会向主库发送SYNC命令。同时主库接收到SYNC命令后会开始在后台保存快照，即RDB持久化的过程，并将快照期间接收的命令缓存起来。当快照完成后，Redis会将快照文件和所有缓存的命令发送给从数据库。从数据库收到后，会载入快照文件并执行收到的缓存命令。</p>
<p>复制同步阶段会贯穿整个主从同步过程，直到主从关系终止为止。在复制的过程中快照起到了至关重要的作用，只要执行复制就会进行快照，即使关闭了RDB方式的持久化，通过删除所有save参数。</p>
<h4 id="4-2、乐观复制"><a href="#4-2、乐观复制" class="headerlink" title="4.2、乐观复制"></a>4.2、乐观复制</h4><p>Redis采用了乐观复制（optimistic replication）的复制策略。容忍在一定时间内主从数据库的内容是不同的，但是两者的数据最终是会同步的。具体来讲，Redis在主从数据库之间复制数据的过程本身是异步的，这就意味着，主数据库执行完客户端请求的命令会立即将命令在主数据库的执行结果反馈给客户端，并异步的将数据同步给从库，不会等待从数据库接收到该命令在返回给客户端。</p>
<p>当数据至少同步给指定数量的从库时，才是可写，通过参数指定：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#设置最少限制3</span></span><br><span class="line">min-slaves-to-write 3</span><br><span class="line"><span class="comment">#设置允许从数据最长失去连接时间</span></span><br><span class="line">min-slaves-max-lag 10</span><br></pre></td></tr></table></figure>

<h4 id="4-3、增量复制"><a href="#4-3、增量复制" class="headerlink" title="4.3、增量复制"></a>4.3、增量复制</h4><p>基于以下三点实现</p>
<ul>
<li>从库会存储主库的运行ID（run id）。每个Redis运行实例均会拥有一个<strong>唯一运行ID</strong>，每当实例重启后，就会自动生成一个新的运行ID。类似于MySQL的从节点配置的唯一ID去识别。</li>
<li>在复制同步阶段，主库一条命令被传送到从库时，会同时把该命令存放到一个积压队列（backlog）中，记录当前积压队列中存放的命令的<strong>偏移量范围</strong>。</li>
<li>从库接收到主库传来的命令时，会<strong>记录该命令的偏移量</strong>。</li>
</ul>
<h4 id="4-4、注意"><a href="#4-4、注意" class="headerlink" title="4.4、注意"></a>4.4、注意</h4><p>当主数据库崩溃时，情况略微复杂。手动通过从数据库数据库恢复主库数据时，需要严格遵循以下原则：</p>
<ul>
<li>在从数据库中使用<code>SLAVEOF NO ONE</code>命令将从库提升为主库继续服务。</li>
<li>启动之前崩溃的主库，然后使用<code>SLAVEOF</code>命令将其设置为新的主库的从库。</li>
</ul>
<p><strong>注意</strong>：当开启复制且数据库关闭持久化功能时，<strong>一定不要使用supervisor以及类似的进程管理工具令主库崩溃后重启</strong>。同样当主库所在的服务器因故障关闭时，也要避免直接重新启动。因为当主库重启后，<strong>没有开启持久化功能，数据库中所有数据都被清空</strong>。此时从库依然会从主库中接收数据，<strong>从而导致所有从库也被清空，导致数据库的持久化开了个寂寞</strong>。</p>
<p>手动维护确实很麻烦，好在<strong>Redis提供了一种自动化方案：哨兵</strong>去实现这一过程，避免手动维护易出错的问题。</p>
<h3 id="5、哨兵（sentinel）"><a href="#5、哨兵（sentinel）" class="headerlink" title="5、哨兵（sentinel）"></a>5、哨兵（sentinel）</h3><p>从Redis的复制历中，我们了解到在一个典型的一主多从的Redis系统中，从库在整个系统中起到了冗余备份以及读写分离的作用。当主库遇到异常中断服务后，开发人员手动将从升主时，使系统继续服务。过程相对复杂，不好实现自动化。此时可借助哨兵工具。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/fd8bbcb996c183b601bea57eb97aa180.png"></p>
<p><strong>哨兵的作用</strong></p>
<ul>
<li>监控Redis系统运行情况</li>
<li>监控主库和从库是否正常运行</li>
<li>主库gg思密达，自动将从库升为主库，美滋滋</li>
</ul>
<p>当然也有多个哨兵监控主从数据库模式，哨兵之间也会互相监控，如下图：</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/22f6d5941d603755470f319e3fe0d213.png"></p>
<p>首先需要建立起一主多从的模型，然后开启配置哨兵。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#主库</span></span><br><span class="line">sentinel monitor master 127.0.0.1 6379 1</span><br><span class="line"><span class="comment">#建立配置文件，例如sentinel.conf</span></span><br><span class="line">redis-sentinel /opt/path/to/sentinel.conf</span><br></pre></td></tr></table></figure>



<p>关于哨兵就介绍这么多，现在大脑中有印象。至少知道有那么回事，可以和美女面试官多掰扯掰扯。</p>
<h3 id="6、集群（cluster）"><a href="#6、集群（cluster）" class="headerlink" title="6、集群（cluster）"></a>6、集群（cluster）</h3><p>从Redis3.0开始加入了集群这一特性。</p>
<p>即使使用哨兵，此时的Redis集群的每个数据库依然存有集群中的所有数据，从而导致集群的总数据存储量受限于可用内存最小的数据库节点，继而出现木桶效应。正因为Redis所有数据都是基于内存存储，问题已经很突出，尤其是当Redis作为持久化存储服务时。</p>
<p>有这样一种场景。就扩容来说，在客户端分片后，如果像增加更多的节点，需要对数据库进行手动迁移。迁移的过程中，为了保证数据的一致性，需要将进群暂时下线，相对比较复杂。</p>
<p>此时考虑到Redis很小，啊不口误，是轻量的特点。可以采用预分片（presharding）在一定程度上避免问题的出现。换句话说，就是在部署的初期，提前考虑日后的存储规模，建立足够多的实例。</p>
<p>从上面的理论知识来看，哨兵和集群类似，但哨兵和集群是两个独立的功能。如果要进行水平扩容，集群是不错的选择。</p>
<p>配置集群，开启配置文件redis.conf中的<code>cluster-enabled</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cluster-enabled <span class="built_in">yes</span></span><br></pre></td></tr></table></figure>

<p><img data-src="https://img-blog.csdnimg.cn/img_convert/ea7016e09c67915fbaa8d03e4a8a8bb7.png"></p>
<p><strong>配置集群每个节点配置不同工作目录，或者修改持久化文件</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cluster-config-file nodes-6379.conf</span><br></pre></td></tr></table></figure>

<p><img data-src="https://img-blog.csdnimg.cn/img_convert/bd350760948ecb9f91d8baed82b6e266.png"></p>
<p>集群测试大家可以执行配置，参考其他书籍亦可，实现并不难。只要是知其原理。</p>
<h2 id="四、Redis-for-Java"><a href="#四、Redis-for-Java" class="headerlink" title="四、Redis for Java"></a>四、Redis for Java</h2><p>示例</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jedis;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> redis.clients.jedis.Jedis;</span><br><span class="line"><span class="keyword">import</span> redis.clients.jedis.JedisPool;</span><br><span class="line"><span class="keyword">import</span> redis.clients.jedis.JedisPoolConfig;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@org</span>.junit.Test</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">demo</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="type">Jedis</span> <span class="variable">jedis</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Jedis</span>(<span class="string">&quot;127.0.0.1&quot;</span>, <span class="number">6379</span>);</span><br><span class="line">		jedis.set(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;sky&quot;</span>);</span><br><span class="line">		<span class="type">String</span> <span class="variable">params</span> <span class="operator">=</span> jedis.get(<span class="string">&quot;jedis&quot;</span>);</span><br><span class="line">		System.out.println(params);</span><br><span class="line">		jedis.close();</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="meta">@org</span>.junit.Test</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">config</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="comment">// 获取连接池的配置对象</span></span><br><span class="line">		<span class="type">JedisPoolConfig</span> <span class="variable">config</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JedisPoolConfig</span>();</span><br><span class="line">		<span class="comment">// 设置最大连接数</span></span><br><span class="line">		config.setMaxTotal(<span class="number">30</span>);</span><br><span class="line">		<span class="comment">// 设置最大空闲连接数</span></span><br><span class="line">		config.setMaxIdle(<span class="number">10</span>);</span><br><span class="line">		<span class="comment">// 获取连接池</span></span><br><span class="line">		<span class="type">JedisPool</span> <span class="variable">pool</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JedisPool</span>(config, <span class="string">&quot;127.0.0.1&quot;</span>, <span class="number">6379</span>);</span><br><span class="line">		<span class="comment">// 获得核心对象</span></span><br><span class="line">		<span class="type">Jedis</span> <span class="variable">jedis</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			<span class="comment">//通过连接池获取连接</span></span><br><span class="line">			jedis = pool.getResource();</span><br><span class="line">			<span class="comment">//设置对象</span></span><br><span class="line">			jedis.set(<span class="string">&quot;poolname&quot;</span>, <span class="string">&quot;pool&quot;</span>);</span><br><span class="line">			<span class="comment">//获取对象</span></span><br><span class="line">			<span class="type">String</span> <span class="variable">pools</span> <span class="operator">=</span> jedis.get(<span class="string">&quot;poolname&quot;</span>);</span><br><span class="line">			System.out.println(<span class="string">&quot;values:&quot;</span>+pools);</span><br><span class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">			<span class="comment">//释放资源</span></span><br><span class="line">			<span class="keyword">if</span>(jedis != <span class="literal">null</span>)&#123;</span><br><span class="line">				jedis.close();</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span>(pool != <span class="literal">null</span>)&#123;</span><br><span class="line">				pool.close();</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;	</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<p>最后，希望对你的工作有所帮助。如果觉得写得还不错，可以点个小小的赞。</p>
<p>以上总结仅供参考。</p>
<p>——END——</p>
]]></content>
      <categories>
        <category>NOSQL</category>
      </categories>
      <tags>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Rocky Linux软件安装 neovim 和 git</title>
    <url>/2023/05/08/Rocky-Linux%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85-neovim-%E5%92%8C-git/</url>
    <content><![CDATA[<p>rockyLinux 软件安装我主要挑了编辑器 neovim 和 版本管理控制工具 Git 进行介绍。通常情况，部署完Linux发行版，自带 vim 工具，既然有了vim，那就来点新的尝尝鲜，比如 neovim。如果你想用版本控制工具，Git 是不错的选择，在本地初始化仓库做版本控制，还可以配合github 和 gitee 进行使用，获取开源软件。</p>
<p><img data-src="https://s1.ax1x.com/2023/05/08/p90l30x.png" alt="https://s1.ax1x.com/2023/05/08/p90l30x.png"></p>
<span id="more"></span>


<p>如果不是做内核裁剪相关工作，或者参与社区开发维护，其实不用涉及太深的知识。</p>
<p><strong>tips</strong>：关于安装软件，普通用户没有权限，请使用 sudo 命令 提取权限，root 超级用户则不需要加 sudo。</p>
<p>Red Hat 企业版 Linux 9 软件管理工具，使用RHEL系列（centos、centos-stream、rockyLinux）可以参考RHEL文档。</p>
<p>在 Red Hat Enterprise Linux 9 中，DNF 工具用于软件安装。Red Hat 继续支持使用 yum 术语与之前的 RHEL<br>主要版本保持一致。如果你键入 yum 而不是 dnf，命令可以正常工作，因为这两者是兼容性的别名。</p>
<p><strong>注意</strong>：RHEL 8 和 RHEL 9 基于 dnf 管理工具，与 RHEL 7 中使用 yum 兼容。</p>
<p>当你看到这篇博文，无论是使用云服务器或者 VMware搭建虚拟环境，我默认你有Linux基本知识。</p>
<p>例如：基本操作，使用 ssh 命令连接远程服务器，通过 su 命令切换用户身份。</p>
<p>演示安装之前，使用终端管理工具先登录到普通用户（默认禁用了root用户ssh登录权限）。</p>
<p><strong>登录终端</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">PS D:\work&gt; ssh wzgy@192.168.245.133</span><br><span class="line">wzgy@192.168.245.133<span class="string">&#x27;s password:</span></span><br></pre></td></tr></table></figure>

<p>如果你和我一样使用的是Windows 11 ，自带终端管理工具，可以满足日常简单操作。复杂一点的功能，可能需要借助于Xshell等工具。</p>
<p><strong>切换root用户身份，两种方式</strong></p>
<ol>
<li>su root</li>
<li>su -</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[wzgy@localhost ~]$ su root</span><br><span class="line">密码：</span><br><span class="line">[root@localhost wzgy]<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p>如何确认当前用户身份？</p>
<p>根据符号 $ 和 # 区分，如果看到的是 $ 操作符，代表普通用户，如果是 # 符号，代表超级用户 root。</p>
<h2 id="编辑器-Neovim"><a href="#编辑器-Neovim" class="headerlink" title="编辑器 Neovim"></a>编辑器 Neovim</h2><ol>
<li>neovim 稳定版本地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL25lb3ZpbS9uZW92aW0vcmVsZWFzZXMvdGFnL3N0YWJsZQ==">https://github.com/neovim/neovim/releases/tag/stable<i class="fa fa-external-link-alt"></i></span></li>
<li>neovim 所有版本：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL25lb3ZpbS9uZW92aW0vcmVsZWFzZXMvdGFn">https://github.com/neovim/neovim/releases/tag<i class="fa fa-external-link-alt"></i></span></li>
</ol>
<p><strong>1、通过 Linux 发行版自带软件管理工具安装</strong></p>
<p>准备EPEL环境，Rocky Linux 9：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dnf config-manager --set-enabled crb</span><br><span class="line">dnf install epel-release</span><br></pre></td></tr></table></figure>

<p>yum &amp; dnf 工具安装 neovim：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install neovim.x86_64</span><br></pre></td></tr></table></figure>

<p>执行命令运行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nvim</span><br></pre></td></tr></table></figure>

<p>输出结果：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">NVIM v0.9.0</span><br><span class="line">Build <span class="built_in">type</span>: Release</span><br><span class="line">LuaJIT 2.1.0-beta3</span><br></pre></td></tr></table></figure>



<p><strong>2、下载归档包 nvim-linux64.tar.gz 安装，已经编译好的源码包</strong></p>
<p>获取： </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://github.com/neovim/neovim/releases/download/stable/nvim-linux64.tar.gz</span><br></pre></td></tr></table></figure>

<p>解压：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar -zxvf nvim-linux64.tar.gz</span><br></pre></td></tr></table></figure>

<p>执行命令运行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./nvim-linux64/bin/nvim</span><br></pre></td></tr></table></figure>

<p>查看 nvim 版本：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./nvim-linux64/bin/nvim -v</span><br></pre></td></tr></table></figure>

<p>输出结果同上面二进制包（rpm）形式安装后，查看版本结果。</p>
<p>配置环境变量 vim &#x2F;etc&#x2F;profile：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># neovim home</span></span><br><span class="line">NEOVIM_HOME=/usr/local/nvim-linux64/</span><br><span class="line">PATH=<span class="variable">$PATH</span>:<span class="variable">$NEOVIM_HOME</span>/bin</span><br><span class="line"><span class="built_in">export</span> NEOVIM_HOME PATH</span><br></pre></td></tr></table></figure>

<p>如果想即时生效，不想重启服务器，执行 source 命令即可：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure>

<p>配置完成，在任意位置都可以执行 nvim 命令。</p>
<p><strong>3、源码包编译安装</strong></p>
<p>如果是初学者、或者没有高度定制需求，个人不推荐使用这种形式构建。虽然灵活度很高，编译出问题并不好排查。如果是抱着学习的心态，可以尝试。毕竟一分耕耘，一分收获，知识宝库慢慢壮大。</p>
<p>获取：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://github.com/neovim/neovim/archive/refs/tags/stable.zip</span><br></pre></td></tr></table></figure>

<p>安装步骤其实很简单，可能需要略微做调整：</p>
<ol>
<li>配置：.&#x2F;configure</li>
<li>编译：make 或者 cmake</li>
<li>安装： make install</li>
</ol>
<p>通常安装目录在：&#x2F;usr&#x2F; 或者 &#x2F;usr&#x2F;local&#x2F;  亦或是 &#x2F;usr&#x2F;local&#x2F;share&#x2F;</p>
<p>一般情况命令脚本在：&#x2F;usr&#x2F;local&#x2F;bin&#x2F; </p>
<p>必备环境（比如make、cmake、gcc等等）、编译、安装步骤此处省略，请参考官方文档：<br><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL25lb3ZpbS9uZW92aW0vd2lraS9JbnN0YWxsaW5nLU5lb3ZpbSNpbnN0YWxsLWZyb20tc291cmNl">https://github.com/neovim/neovim/wiki/Installing-Neovim#install-from-source<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="版本控制工具-Git"><a href="#版本控制工具-Git" class="headerlink" title="版本控制工具 Git"></a>版本控制工具 Git</h2><p>普通用户部署Git环境</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo yum -y install git-core</span><br></pre></td></tr></table></figure>


<p>root用户部署Git环境</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install git-core</span><br></pre></td></tr></table></figure>

<p>生成秘钥：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -b 4096 -C <span class="string">&quot;username@example.com&quot;</span></span><br></pre></td></tr></table></figure>
<p>如果你还想了解更多 ssh-keygen 的用法，可以使用帮助命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-keygen --h</span><br></pre></td></tr></table></figure>

<p>检查你的系统目录是否有ssh公钥。默认情况ssh公钥，可能是以下几种文件形式：</p>
<ol>
<li>id_ed25519.pub</li>
<li>id_rsa.pub</li>
<li>id_ecdsa.pub</li>
<li>id_dsa.pub</li>
</ol>
<p>检查 ssh公钥 id_rsa.pub 文件内容，在你当前用户  ~&#x2F;.ssh&#x2F; 目录中</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost <span class="built_in">test</span>]<span class="comment"># ls /root/.ssh/</span></span><br><span class="line">id_rsa  id_rsa.pub  known_hosts</span><br><span class="line">[root@localhost <span class="built_in">test</span>]<span class="comment"># nvim /root/.ssh/id_rsa.pub</span></span><br><span class="line">[root@localhost <span class="built_in">test</span>]<span class="comment"># ssh -T git@github.com</span></span><br><span class="line">Hi cnwangk! You<span class="string">&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span></span><br></pre></td></tr></table></figure>

<p>既然上面介绍了 nvim，此时直接使用 nvim 编辑 ssh 公钥文件：nvim  id_rsa.pub 。</p>
<p>复制 id_rsa.pub 文件内容到 github 账号的ssh-key中<br><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3NldHRpbmdzL3NzaC9uZXc=">https://github.com/settings/ssh/new<i class="fa fa-external-link-alt"></i></span></p>
<p>使用命令测试验证，验证github：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure>
<p>示例：验证成功，返回结果为Hi 你的用户名! You’ve successfully authenticated；验证失败，则返回permission deny权限拒绝。</p>
<p>返回失败结果，此时需要根据上面步骤配置 ssh 公钥：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost <span class="built_in">test</span>]<span class="comment"># ssh -T git@github.com</span></span><br><span class="line">git@github.com: Permission denied (publickey).</span><br></pre></td></tr></table></figure>

<p>返回成功结果：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost <span class="built_in">test</span>]<span class="comment"># ssh -T git@github.com</span></span><br><span class="line">Hi cnwangk! You<span class="string">&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span></span><br></pre></td></tr></table></figure>



<p>关于 git 基本用法，可以在公众号回复 git 即可获取相关基本用法，仅供参考哟！</p>
<p>上面介绍了rockyLinux 平台neovim 和 git两款软件的安装，接下来系统介绍 RHEL 体系软件安装。</p>
<h2 id="RHEL-系列软件安装介绍"><a href="#RHEL-系列软件安装介绍" class="headerlink" title="RHEL 系列软件安装介绍"></a>RHEL 系列软件安装介绍</h2><p>缘起，几年前外出工作，意识到学习 Linux 基本知识的必要性，当时自学使用的是Linux发行版 centos6.5，大概距今已有八年。最早写这篇文档可以追溯到 2017 年，后来转到 centos7.x，翻新了一遍。目前转到RHEL9，发现以前的总结，有许多不足之处。</p>
<p>个人稳定环境，目前已经切换到稳定发行版 REHL9 系列 rockyLinux-9；测试环境，使用 centos-stream-9。</p>
<h3 id="软件安装包简介"><a href="#软件安装包简介" class="headerlink" title="软件安装包简介"></a>软件安装包简介</h3><p><strong>源码包优点</strong></p>
<ol>
<li>开源，假如有足够的实力，可以修改源代码。</li>
<li>自由选择所需的功能。</li>
<li>软件是编译安装，更加适合自己的系统，稳定效率更高。</li>
<li>卸载方便。</li>
</ol>
<p><strong>源码包的缺点</strong></p>
<ol>
<li>安装过程步骤多，尤其安装大的软件集合时（LAMP环境搭建），容易出现拼写错误。</li>
<li>编译过程时间较长，比二进制安装时间长。</li>
<li>安装过程一旦报错，刚入门时（新手）很难解决，个人入门时深有体会。</li>
</ol>
<p><strong>rpm 包二进制包优点</strong></p>
<ol>
<li>管理系统简单，通过简单的几个命令可以实现包的安装、升级、查询和卸载。</li>
<li>安装速度比源码包快。</li>
</ol>
<p><strong>二进制包缺点</strong></p>
<ol>
<li>经过编译，无法看到源码。</li>
<li>功能选择没有源码包灵活。</li>
<li>依赖性（安装一个包时会找很多依赖包，比较繁琐，对初学者不友好）。</li>
</ol>
<h3 id="源码包安装"><a href="#源码包安装" class="headerlink" title="源码包安装"></a>源码包安装</h3><p><strong>1、安装前的准备工作</strong></p>
<ol>
<li>安装C语言编译器；</li>
<li>下载源码包。</li>
</ol>
<p><strong>2、安装注意事项</strong></p>
<ol>
<li>源码保存位置：&#x2F;usr&#x2F;local&#x2F;src</li>
<li>软件安装位置：&#x2F;usr&#x2F;local&#x2F;</li>
<li>如何确定安装过程报错：安装时停止，出现error、warning或no的提示</li>
</ol>
<p><strong>3、源码包安装位置</strong></p>
<ol>
<li>安装在指定路径中，一般在：&#x2F;usr&#x2F;local&#x2F;软件名&#x2F;</li>
</ol>
<p><strong>4、安装位置不同带来的影响</strong></p>
<p>RPM包安装的服务可以使用系统服务管理命令（service）来管理，例如RPM包安装的Apache启动方法：</p>
<p>安装 httpd 服务，前面也提到过，RHEL9中dnf和yum都行： dnf -y install httpd</p>
<ol>
<li>方式一：&#x2F;etc&#x2F;rc.d&#x2F;init.d&#x2F;httpd start</li>
<li>方式二：service httpd start  &amp; systemctl start httpd</li>
</ol>
<p><strong>5、源码包安装过程</strong></p>
<p>下载并解压安装包，进入目录，一般情况<strong>部署脚本</strong>可能指定路径为 &#x2F;usr&#x2F;local&#x2F; 也不排除指定为 &#x2F;usr&#x2F; 。</p>
<p>配置：.&#x2F;configure prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;</p>
<ol>
<li>定义需要的功能选项；</li>
<li>检测系统环境是否符合安装要求；</li>
<li>把定义好的功能选项和检测系统环境的信息都写入Makefile文件，用于后续编辑；</li>
<li>编译make ，make install编译安装。</li>
</ol>
<h3 id="rpm包安装"><a href="#rpm包安装" class="headerlink" title="rpm包安装"></a>rpm包安装</h3><table>
<thead>
<tr>
<th>rpm包默认安装位置</th>
<th>释义</th>
</tr>
</thead>
<tbody><tr>
<td>&#x2F;ect&#x2F;</td>
<td>配置文件安装目录</td>
</tr>
<tr>
<td>&#x2F;usr&#x2F;bin&#x2F;</td>
<td>可执行的命令安装目录</td>
</tr>
<tr>
<td>&#x2F;usr&#x2F;lib&#x2F;</td>
<td>程序使用的函数库保存位置</td>
</tr>
<tr>
<td>&#x2F;usr&#x2F;share&#x2F;doc&#x2F;</td>
<td>基本软件使用手册保存位置</td>
</tr>
<tr>
<td>&#x2F;usr&#x2F;share&#x2F;man&#x2F;</td>
<td>帮助手册保存位置</td>
</tr>
</tbody></table>
<p><strong>rpm包命名原则解读一览表</strong>：httpd-2.4.53-7.el9_1.5.x86_64.rpm</p>
<table>
<thead>
<tr>
<th>选项</th>
<th>释义</th>
</tr>
</thead>
<tbody><tr>
<td>httpd</td>
<td>软件包名</td>
</tr>
<tr>
<td>2.4.53</td>
<td>版本</td>
</tr>
<tr>
<td>7</td>
<td>发布的次数</td>
</tr>
<tr>
<td>el9_1.5</td>
<td>适合的linux平台</td>
</tr>
<tr>
<td>x86_64</td>
<td>适用的硬件平台</td>
</tr>
<tr>
<td>rpm</td>
<td>软件包扩展名</td>
</tr>
</tbody></table>
<p><strong>rpm命令管理</strong></p>
<p><strong>1、查询是否安装</strong>：</p>
<table>
<thead>
<tr>
<th>选项</th>
<th>释义</th>
</tr>
</thead>
<tbody><tr>
<td>查询当前软件包是否安装</td>
<td>rpm -q 包名</td>
</tr>
<tr>
<td>查询所有已经安装的rpm包</td>
<td>rpm -qa</td>
</tr>
<tr>
<td>-q</td>
<td>query：查询</td>
</tr>
<tr>
<td>-a</td>
<td>all：所有</td>
</tr>
</tbody></table>
<p><strong>2、查询软件包详细信息</strong></p>
<p>说明：可以获取 httpd 服务安装包做作为测试体验，通过 wget 命令在线获取 rpm 安装包。</p>
<p>rpm -pi  包名</p>
<p>选项：</p>
<ol>
<li>-i：information，查询详细信息</li>
<li>-p：package，查询未安装包信息</li>
</ol>
<p><strong>3、查询安装包文件所在安装位置</strong></p>
<ul>
<li>rpm -ql  包名</li>
<li>选项：-l，list 列表</li>
</ul>
<p><strong>4、查询系统文件属于哪个RPM包</strong></p>
<ul>
<li>rpm -qf 系统文件名</li>
<li>选项：-f（file查询系统文件属于哪个软件包）</li>
</ul>
<p>示例，查找PostgreSQL脚本 pg_ctl 属于那个rpm包：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># rpm -qf /usr/pgsql-15/bin/pg_ctl</span></span><br><span class="line">postgresql15-server-15.2-1PGDG.rhel9.x86_64</span><br></pre></td></tr></table></figure>

<p>可以看到输出结果，pg_ctl  脚本属于 postgresql15-server-15.2-1PGDG.rhel9.x86_64 。</p>
<p><strong>5、查询软件包的依耐性</strong></p>
<ol>
<li>rpm -qR 包名：查询软件包的依耐性</li>
<li>选项：-R（requires 查询软件包的依耐性）</li>
</ol>
<p><strong>rpm包的依耐性</strong></p>
<ol>
<li>树形依赖：a-&gt;b-&gt;c</li>
<li>环形依赖：a-&gt;b-&gt;c-&gt;a</li>
<li>模块依赖：查询网址：<a href="www.rpmfind.net">www.rpmfind.net</a></li>
</ol>
<p><strong>6、RPM包校验</strong></p>
<ol>
<li>rpm -V 已安装软件包</li>
<li>选项：-V（verify校验指定rpm包的文件）</li>
</ol>
<p><strong>文件类型：</strong></p>
<table>
<thead>
<tr>
<th>选项</th>
<th>释义</th>
</tr>
</thead>
<tbody><tr>
<td>-c （config file）</td>
<td>配置文件</td>
</tr>
<tr>
<td>-d （documentation）</td>
<td>普通文档</td>
</tr>
<tr>
<td>-d （documentation）</td>
<td>“鬼文件”，指该文件不应该被rpm包包含</td>
</tr>
<tr>
<td>-L （license file）</td>
<td>授权文件</td>
</tr>
<tr>
<td>-r （read me）</td>
<td>描述文件</td>
</tr>
</tbody></table>
<p><strong>内容校验：验证内容中的8个信息的具体内容如下</strong></p>
<table>
<thead>
<tr>
<th>选项</th>
<th>释义</th>
</tr>
</thead>
<tbody><tr>
<td>-S</td>
<td>文件大小是否改变</td>
</tr>
<tr>
<td>-M</td>
<td>文件的类型或文件权限（rwx）是否被改变</td>
</tr>
<tr>
<td>-5</td>
<td>MD5校验，文件内容是否改变</td>
</tr>
<tr>
<td>-D</td>
<td>设备的主从代码是否改变</td>
</tr>
<tr>
<td>-L</td>
<td>文件路径是否改变</td>
</tr>
<tr>
<td>-U</td>
<td>文件所有者是否改变</td>
</tr>
<tr>
<td>-G</td>
<td>文件属组是否改变</td>
</tr>
<tr>
<td>-T</td>
<td>文件修改时间是否改变</td>
</tr>
</tbody></table>
<p><strong>7、rpm包的安装卸载与升级</strong></p>
<table>
<thead>
<tr>
<th>选项</th>
<th>释义</th>
</tr>
</thead>
<tbody><tr>
<td>-i</td>
<td>（install：安装）</td>
</tr>
<tr>
<td>-v</td>
<td>（verbose</td>
</tr>
<tr>
<td>-h</td>
<td>（hash：显示进度）</td>
</tr>
<tr>
<td>-U</td>
<td>（upgrade：升级）</td>
</tr>
<tr>
<td>-e</td>
<td>（erase：卸载）</td>
</tr>
<tr>
<td>–nodeps</td>
<td>（不检测依赖性）</td>
</tr>
</tbody></table>
<ol>
<li><strong>安装</strong>：rpm -ivh 接包全名</li>
<li><strong>卸载</strong>：rpm -e 接包名（你要卸载的软件）</li>
<li><strong>升级</strong>：rpm -Uvh 接包名</li>
</ol>
<p><strong>8、rpm包中文件提取</strong><br>rpm2cpio 包全名 | cpio -idv文件绝对路径</p>
<ol>
<li>rpm2cpio：将rpm转换为cpio格式</li>
<li>cpio：标准工具，用于创建软件档案文件以及从文件中提取文件</li>
</ol>
<p><strong>cpio</strong> 选项 &lt; [文件][设备]<br>这里是标准格式，当然可以使用上面介绍的管道符方式。</p>
<p>例如：cpio -idv &lt; test.txt<br>选项：</p>
<ol>
<li>-i：（copy-in模式，还原）</li>
<li>-d：还原时自动新建目录</li>
<li>-v：显示还原过程</li>
</ol>
<h3 id="yum-dnf-在线安装"><a href="#yum-dnf-在线安装" class="headerlink" title="yum &amp; dnf 在线安装"></a>yum &amp; dnf 在线安装</h3><p>RHEL 8之前的版本，只能使用 yum 工具管理，RHEL 8 以及目前最新的RHEL9 同时支持dnf和 yum 命令，可以将yum当成dnf的别名。</p>
<blockquote>
<p>在 Red Hat Enterprise Linux 9 中，dnf 工具用于软件安装。Red Hat 继续支持使用 yum 术语与之前发行的 RHEL<br>主要版本保持一致。如果你输入 yum 而不是 dnf，命令可以正常工作，因为这两者是兼容性的别名</p>
</blockquote>
<p>dnf 管理工具功能不局限于限安装和卸载，当然还可以进行搜索软件包、列出软件包信息、软件仓库、软件包组、可用模块等等。下面介绍，依旧基于 yum 命令演示。</p>
<p><strong>1、常用的yum命令</strong></p>
<ol>
<li>yum list，查询所有可用软件包列表</li>
<li>yum search 包名，搜索服务器上所有和关键字相关的包</li>
</ol>
<p>示例，搜索httpd 核心包：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum search httpd-core</span><br><span class="line">httpd-core.x86_64 : httpd minimal core</span><br></pre></td></tr></table></figure>



<p><strong>2、安装</strong><br>yum -y install  包名</p>
<p>参数含义：</p>
<ol>
<li>install：安装</li>
<li>-y：自动回答yes</li>
</ol>
<p>例如安装 httpd：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install httpd</span><br></pre></td></tr></table></figure>



<p><strong>3、升级</strong><br>yum -y update 包名</p>
<ol>
<li>update：升级</li>
</ol>
<p><strong>4、卸载</strong></p>
<ol>
<li>yum -y remove 包名</li>
<li>remove：卸载</li>
</ol>
<p><strong>5、yum软件组管理命令</strong></p>
<ol>
<li>yum grouplist：列出所有可用的软件组列表</li>
<li>yum groupinstall：软件组名，安装指定软件组，组名可以由grouplist查询出来</li>
<li>yum groupremove：软件组名，卸载指定软件组</li>
</ol>
<p><strong>6、yum源文件讲解</strong></p>
<p>老版本RHEL6 &amp; RHEL7 系列（centos6.x或者centos7.x） 编辑网络yum源：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/yum.repos.d/CentOS-Base.repo</span><br></pre></td></tr></table></figure>

<p>在 Rocky Linux 9中编辑：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/yum.repos.d/rocky.repo</span><br></pre></td></tr></table></figure>

<p>使用 tree 命令查看 &#x2F;etc&#x2F;yum.repos.d&#x2F;：</p>
<p><img data-src="https://s1.ax1x.com/2023/05/08/p90l1n1.png"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tree /etc/yum.repos.d/</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>选项</th>
<th>释义</th>
</tr>
</thead>
<tbody><tr>
<td>[base]</td>
<td>容器名称，一定要放在[]中</td>
</tr>
<tr>
<td>name</td>
<td>容器说明，可以自己随便写</td>
</tr>
<tr>
<td>mirrorlist</td>
<td>镜像站点，这个可以注释掉</td>
</tr>
<tr>
<td>baseurl</td>
<td>yum源服务器的地址。默认是CentOS官方的服务器，可以使用的，如果你觉得慢可以改成你喜欢的yum源地址。</td>
</tr>
<tr>
<td>enabled</td>
<td>此容器是否生效，如果不写或者写成enabled&#x3D;1都是生效，改为enabled&#x3D;0就是不生效。</td>
</tr>
<tr>
<td>gpgcheck</td>
<td>如果是1，指RPM数字证书生效，为0则不生效。</td>
</tr>
<tr>
<td>gpgkey</td>
<td>数字证书的公钥文件保存位置，不用修改。</td>
</tr>
</tbody></table>
<p>如果你想替换为国内镜像 yum 源，可以做如下操作，<strong>注意 rocky大小写，Linux平台对大小写敏感</strong>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -e <span class="string">&#x27;s|^mirrorlist=|#mirrorlist=|g&#x27;</span> \</span><br><span class="line">    -e <span class="string">&#x27;s|^#baseurl=http://dl.rockylinux.org/$contentdir|baseurl=https://mirrors.aliyun.com/rockylinux|g&#x27;</span> \</span><br><span class="line">    -i.bak \</span><br><span class="line">    /etc/yum.repos.d/rocky-*.repo</span><br></pre></td></tr></table></figure>

<p>再次执行，替换 rocky.repo 镜像源地址：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -e <span class="string">&#x27;s|^mirrorlist=|#mirrorlist=|g&#x27;</span> \</span><br><span class="line">    -e <span class="string">&#x27;s|^#baseurl=http://dl.rockylinux.org/$contentdir|baseurl=https://mirrors.aliyun.com/rockylinux|g&#x27;</span> \</span><br><span class="line">    -i.bak \</span><br><span class="line">    /etc/yum.repos.d/rocky.repo</span><br></pre></td></tr></table></figure>

<p>更新 dnf 源：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dnf makecache</span><br></pre></td></tr></table></figure>



<p>原始链接配置方法有点小问题，实际替换 rocky 应该是是纯小写的：<span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIuYWxpeXVuLmNvbS9taXJyb3Ivcm9ja3lsaW51eD9zcG09YTJjNmguMTM2NTExMDIuMC4wLjZiZDcxYjExWFdtbzNY">https://developer.aliyun.com/mirror/rockylinux?spm=a2c6h.13651102.0.0.6bd71b11XWmo3X<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="脚本安装包"><a href="#脚本安装包" class="headerlink" title="脚本安装包"></a>脚本安装包</h3><p>centos.sh 脚本分析：一键安装包，实际上还是安装的源码包和rpm包，只是把安装过程写成了脚本，便于初学者安装。</p>
<p> <strong>优点</strong>：简单，快速，方便。</p>
<p> <strong>缺点</strong>：</p>
<ol>
<li>不能定义安装软件的版本，选择余地较少；</li>
<li>不能定义所需软件功能；</li>
<li>源码包的优势丧失。</li>
</ol>
<p><strong>例如</strong>：</p>
<p>典型的一键安装包有lnmp（Nginx + MySQL + php），还有 lnmpa（Nginx + MySQL + php + Apache）以及lamp（Apache + MySQL + php）随着一键安装包的优化，用起来更方便，便于初学者使用。</p>
<p>具体不做过多介绍，网址：<span class="exturl" data-url="aHR0cHM6Ly9sbm1wLm9yZy8=">https://lnmp.org/<i class="fa fa-external-link-alt"></i></span>（对于入门来说的确很好用），目前已经更新到：2022-6-1 LNMP1.9 正式版。</p>
<p><strong>参考资料</strong><br>Neovim wiki ：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL25lb3ZpbS9uZW92aW0vd2lraS9CdWlsZGluZy1OZW92aW0jcXVpY2stc3RhcnQ=">https://github.com/neovim/neovim/wiki/Building-Neovim#quick-start<i class="fa fa-external-link-alt"></i></span></p>
<p>Epel：<span class="exturl" data-url="aHR0cHM6Ly9kb2NzLmZlZG9yYXByb2plY3Qub3JnL2VuLVVTL2VwZWwv">https://docs.fedoraproject.org/en-US/epel/<i class="fa fa-external-link-alt"></i></span></p>
<p>REHL9 DNF 管理工具：<span class="exturl" data-url="aHR0cHM6Ly9hY2Nlc3MucmVkaGF0LmNvbS9kb2N1bWVudGF0aW9uL3poLWNuL3JlZF9oYXRfZW50ZXJwcmlzZV9saW51eC85L2h0bWwvbWFuYWdpbmdfc29mdHdhcmVfd2l0aF90aGVfZG5mX3Rvb2wvaW5kZXg=">https://access.redhat.com/documentation/zh-cn/red_hat_enterprise_linux&#x2F;9&#x2F;html&#x2F;managing_software_with_the_dnf_tool&#x2F;index<i class="fa fa-external-link-alt"></i></span></p>
<p>—END—</p>
]]></content>
      <categories>
        <category>开发运维</category>
      </categories>
      <tags>
        <tag>rocky</tag>
      </tags>
  </entry>
  <entry>
    <title>SQL基础知识扫盲</title>
    <url>/2023/03/16/SQL%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%89%AB%E7%9B%B2/</url>
    <content><![CDATA[<p>此篇总结是对之前发出的 SQL是什么 进行补充。</p>
<p>进入正题之前，我想聊聊其它的知识点，一点点思考。</p>
<p>学习某个技能点或者是新知识点时，可以尝试建立一项知识梳理体系，如下：</p>
<ol>
<li><strong>输入</strong>：可以照葫芦画瓢，亲自动手实践。</li>
<li><strong>分析</strong>：有自己独立的分析和思考。</li>
<li><strong>输出</strong>：产出的内容与预期进行对比。</li>
<li><strong>札记</strong>：记录收获过程（手写或者以电子文档形式记录）。</li>
</ol>
<p>这张流程图制作比较粗糙，权当梳理基本知识参考。</p>
<p>上面也谈到了，学习新知识点。善于总结，可以使用流程图或者思维导图构建知识体系。</p>
<p><a href="https://imgse.com/i/pp8KvDg"><img data-src="https://s1.ax1x.com/2023/03/16/pp8KvDg.png" alt="pp8KvDg.png"></a></p>
<h1 id="SQL-数据库基础知识扫盲"><a href="#SQL-数据库基础知识扫盲" class="headerlink" title="SQL &amp; 数据库基础知识扫盲"></a>SQL &amp; 数据库基础知识扫盲</h1><p>一般而言，在日常工作交流中，大家所描述的SQL是标准SQL（Standardized SQL），非特指某一数据库厂商（DBMS）专有语言。</p>
<h3 id="SQL是什么？"><a href="#SQL是什么？" class="headerlink" title="SQL是什么？"></a>SQL是什么？</h3><p>SQL必知必会这样描述到：</p>
<p><strong>SQL</strong>（发音为字母S-Q-L或sequel）是Structure Query Language（<strong>结构化查询语言</strong>）的缩写。SQL是一种专业用于与数据库沟通交互的语言。</p>
<p>与其他语言（比如英语或者Java、C、PHP这类编程语言）不一样，SQL中只有很少的词，这是有意而为。设计SQL的目的是便于完成一项任务，提供一种<strong>从数据库中读写数据的简单有效方法</strong>。</p>
<p>用一句话总结：SQL是Structure Query Language（<strong>结构化查询语言</strong>）。</p>
<p>维基百科这样描述到：</p>
<ol>
<li><p>全称是Structure Query Language（<strong>结构化查询语言</strong>）是一种<strong>特定目的编程语言</strong>，一般简称为<strong>SQL</strong>。</p>
</li>
<li><p><strong>用于管理关系数据库管理系统</strong>（RDBMS）。它是使用<strong>关系模型的数据库应用语言</strong>，由IBM在20世纪70年代开发出来，作为IBM数据库System R的原型关系语言，<strong>实现数据库中信息检索</strong>。</p>
</li>
<li><p>20世纪80年代初，美国国家标准学会（ANSI）开始着手定制SQL标准。最早的ANSI始于1986年，被称为SQL-86，在1987年成为国际标准化组织（ISO）标准。尽管SQL并非完全按照科德的关系模型设计，但其依然成为最为广泛运用的数据库语言。此后，这一标准经过了一系列的增订，加入了大量新特性。虽然有这一标准的存在，但大部分的SQL代码在不同的数据库系统中并不具有完全的跨平台性。</p>
</li>
</ol>
<p>用我自己的经验总结概括：其实是将数据有规律地存放在特定容器中的一种结构化查询语言。</p>
<p><strong>SQL有哪些优点呢</strong>？</p>
<ol>
<li>SQL不是某一特定数据库厂商专有语言。绝大多数流行的DBMS支持SQL，所以学习标准SQL可以让你和大多数数据库打交道。</li>
<li>SQL简单易学。它的语句是有很强描述性的英语单词组成，而这些单词数目不多。</li>
<li>SQL看上去（入门）很简单，实际上是一种强有力的语言，灵活使用其语言元素，可以进行非常复杂和高级的数据库操作。</li>
</ol>
<p><strong>SQL扩展说明</strong>：许多DBMS厂商通过增加语句或指令，对SQL进行扩展，目的是提供执行特定操作的额外功能或简化方法。虽然这种扩展使用很便捷，但一般情况是针对个别DBMS，很少有两个厂商同时支持这种扩展。列举两个例子，比如Oracle分页可以使用rownum实现，而MySQL分页使用limit关键字。</p>
<h3 id="数据库是什么？"><a href="#数据库是什么？" class="headerlink" title="数据库是什么？"></a>数据库是什么？</h3><p><strong>数据库</strong></p>
<p>数据库（database）：保存有组织数据的容器，通常是一个文件或一组文件。</p>
<p><strong>tips</strong>：通常说数据库指关系型数据库（RDBMS）。</p>
<p><strong>注意混淆</strong>平时工作交流，大家通常用数据库这个术语来代表使用的数据软件，这种表述不完全正确，因此产生了许多混淆。确切地说，数据库软件指<strong>数据库管理系统（DBMS）</strong> 。数据库是通过DBMS创建和操作的容器，它具体是什么，形式如何，各种数据库有所差异。这种差异表现在：各大数据库厂商基于标准SQL进行各自的扩展。</p>
<p><strong>简易说明</strong><br>在MySQL中创建数据库语法：<code>create database db_name</code>。而在Oracle数据库中创建数据库语法<code>create user db_name</code>，你没看错，Oracle中基于用户进行描述与管理。如果你在Oracle中使用<code>create database db_name</code>，会提示数据库已装载。</p>
<p><strong>表</strong></p>
<p>表（table）：某种特定类型数据库结构化清单。</p>
<p><strong>表名</strong></p>
<p>表名（table name）：<strong>表名是唯一的</strong>（不可重复），实际上是数据库名和表名等的组合，数据库名理解为用户会容易接受一点。有的数据库使用数据库拥有者的名字作为唯一名的一部分，例如Oracle、达梦数据库。在同一个数据中不能使用相同的表名，但在不同的数据库中可以使用相同的表名。</p>
<p><strong>模式</strong></p>
<p>模式：关于数据库和<strong>表的布局及特性</strong>的信息。</p>
<p><strong>列</strong></p>
<p>列（column）：<strong>表中的一个字段</strong>。所有表由一个列或多列组成。</p>
<p>数据分解：合理将数据分解为多个列尤为重要。例如：城市、州、邮政编码总是彼此独立的列。通过分解这些数据，才有可能利用特定的列对数据进行分类和过滤（比如找出特定州或城市的所有顾客）。如果城市和州组合到一个列中，则按州分类或过滤会很困难。</p>
<p>当然，你可以根据自己的需求将数据分解到何种程度。例如，一般可以将街道名和门牌号一起存储到地址里，没有特殊需求是可以这样处理。如果那一天，需求发生变化，根据门牌号进行排序或过滤，最好将门牌号和街道名分开。</p>
<p><strong>数据类型</strong></p>
<p>数据类型：允许哪一种数据类型。每一张表中列具有相应数据类型，限制（或允许）该列中存储哪一种类型的数据。</p>
<p><strong>行</strong></p>
<p>行（row）：表中列一条或多条记录。</p>
<p><strong>主键</strong></p>
<p>主键（primary key）：一列（或几列），其值可以唯一标识表中每一行。</p>
<p>定义主键：或许并不总是需要主键，达到便于管理目的，大多数数据设计者会保证他们创建的每张表具有一个主键。</p>
<p><strong>外键</strong></p>
<p>外键（foreign key）：用来保证参照完整性，通常在两张或多张表中存在。如果有两张表：主表（parent table）和子表（child table），在子表中拥有主表外键约束；你想同时删除两张表；MySQL提示需要先删除约束，才能彻底删除。也有例外，比如设置了级联（cascade）。</p>
<p><strong>理论知识看得再多，不如亲自实践一遍，效果来得更快</strong>。</p>
<h3 id="挺身入局，实践出真知"><a href="#挺身入局，实践出真知" class="headerlink" title="挺身入局，实践出真知"></a>挺身入局，实践出真知</h3><p><strong>选择</strong></p>
<ol>
<li>选择：选择一种<strong>流行</strong>且<strong>社区活跃</strong>DBMS厂商发行版数据库软件进行入门。</li>
<li>安装：云服务器或者本机亦或是<strong>虚拟机模拟环境</strong>。</li>
<li>初学：建议使用各大厂商自带GUI<strong>字符命令界面</strong>进行交互。</li>
</ol>
<p><strong>推荐</strong></p>
<p>个人推荐学习MySQL（MariaDB），逐步学习，深入浅出。为什么推荐入门首选学习MySQL，上面提到了<strong>流行</strong>、<strong>社区活跃</strong>，换句话说，MySQL资源丰富，官方文档全面，更新频繁。</p>
<p><strong>关于CRUD：增删查改</strong></p>
<p>一般而言，CRUD是指对数据库表行记录进行新增（insert）、删除（delete）、查询（select）以及修改（update）操作。</p>
<p><strong>各大DBMS厂商数据库官方文档地址整合</strong>：</p>
<p><a href="https://blog.cnwangk.top/2022/03/17/MySQL%E7%AD%89%E4%B8%BB%E6%B5%81%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8E%82%E5%95%86%EF%BC%88DBMS%EF%BC%89-%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3%E5%9C%B0%E5%9D%80">https://blog.cnwangk.top/2022/03/17/MySQL等主流数据库厂商（DBMS）-官方文档地址</a></p>
<h1 id="DBMS初体验"><a href="#DBMS初体验" class="headerlink" title="DBMS初体验"></a>DBMS初体验</h1><ol>
<li>MySQL（MariaDB）</li>
<li>Oracle</li>
<li>postgreSQL</li>
</ol>
<h3 id="MySQL：初体验"><a href="#MySQL：初体验" class="headerlink" title="MySQL：初体验"></a>MySQL：初体验</h3><ol>
<li>部署MySQL；</li>
<li>检验（启动与关闭服务）；</li>
<li>修改密码与权限（为第5步做准备）；</li>
<li>字符命令界面进行交互；</li>
<li>工具：MySQL workbench、DBeaver（通用数据库管理器）或者SQLyog；</li>
<li>基本操作（CRUD：insert、delete、update、select）；</li>
<li>参考官方文档 &amp; 官方完整Demo示例。</li>
</ol>
<p>当你看到这篇教程时，MySQL最新稳定版可能已经更新到 8.0.34，创新版 MySQL 8.1.0。</p>
<p><strong>部署MySQL8.0.x</strong></p>
<p><strong>Windows install MySQL8.0.x (Archive zip) 简易安装教程</strong></p>
<ol>
<li>解压免安装版MySQL：<code>unzip mysql-8.0.x-winx64.zip</code></li>
<li>切换到MySQL解压目录：<code>cd mysql-8.0.x-winx64</code></li>
<li>新增MySQL配置文件： my.ini</li>
<li>初始化MySQL：<code>bin\mysqld --initialize-insecure</code> 或者 <code>bin\mysqld --initialize-insecure --console</code> </li>
<li>注册MySQL服务：<code>bin\mysqld --install MySQL80</code>（将MySQL服务注册到service，可以使用net命令进行管理）</li>
<li>启动MySQL服务：net start MySQL80 或者 sc start MySQL80</li>
<li>登录MySQL字符管理界面：<code>mysql -uroot -p</code></li>
</ol>
<p><strong>注意</strong>：版本选择：带有GA（General Availability）标识为稳定版，目前最新稳定是MySQL 8.0.32 发布于2023-01-17。x代表使用MySQL8.0具体版本。打开CMD或者Powershell时以管理员身份运行，如果没有，安装服务时则会提示权限拒绝，如下所示。</p>
<p>D:\mysql-8.0.32-winx64\bin&gt;<code>mysqld --install MySQL80</code><br>Install&#x2F;Remove of the Service Denied!</p>
<p>Windows环境新建my.ini做如下设置，指定基本安装目录与数据存放目录：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">basedir=D:\\mysql-8.0.32-winx64</span><br><span class="line">datadir=D:\\mysql-8.0.32-winx64\\data</span><br></pre></td></tr></table></figure>



<p><strong>登录到命令行字符界面</strong></p>
<p>Windows 平台打开CMD、Powershell或者Windows terminal（win + x 打开Windows终端（管理员））</p>
<p><strong>参数作用</strong>：</p>
<ul>
<li>-u：指定用户为root。</li>
<li>-p ：回车后输入密码，如果直接输入密码回车即可登录。</li>
<li>-P ：指定端口号（port），默认为3306。</li>
</ul>
<p>Windows平台修改my.ini指定MySQL server端口，Linux平台修改my.cnf指定端口。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql -uroot -p -P 3306</span><br></pre></td></tr></table></figure>

<p>Linux发行版打开终端（terminal）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql -uroot -p -P 3306</span><br></pre></td></tr></table></figure>

<p><strong>输入</strong>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="number">1</span>\G</span><br></pre></td></tr></table></figure>

<p><strong>分析</strong>：</p>
<p>登录到MySQL字符操作界面，输入select 1\G、select 1；或者select 1\g，会得到输出内容：1。这种情况MySQL不用访问表或索引，直接得到结果，通过explain使用执行计划（后续可以了解）可以看出type&#x3D;NULL，此时效率最高。</p>
<p><strong>输出</strong>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line"><span class="number">1</span>: <span class="number">1</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<p>提示：同样在postgreSQL中也是支持select 1；或者select 1\g，输出结果：1。</p>
<p><strong>做笔记：SQL CRUD</strong></p>
<p>在创建数据库（用户)、表，最好统一大小写、驼峰命名、下划线，不要混搭使用。个人给出的建议是：要么纯大写，要么纯小写，要么使用下划线进行分割。<strong>使用拼音命名库名、表名、字段名的时候（最好不要简写），如果简写，也请写好注释</strong>。比如地标性的命名北京（beijing）、上海（shanghai）、广州（guangzhou）、深圳（shenzhen），使用全拼音这是可以的，即便查询字典大概也是这样命名的，最好与你的合作团队达成统一意见。</p>
<p>当然，你看到我所演示SQL语句，关键字部分统一使用大写，库名、表名、字段名使用小写。</p>
<p><strong>注释使用</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">/** MySQL基础知识扫盲 **/</span></span><br><span class="line"><span class="comment">-- MySQL基础知识扫盲</span></span><br></pre></td></tr></table></figure>



<p><strong>创建数据库</strong></p>
<p>创建管理用户study（习惯叫数据库），注意: 执行更新操作时，时刻牢记数据无价，指定条件。最大程度避免给自己带来不必要的工作麻烦。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> DATABASE study;</span><br></pre></td></tr></table></figure>

<p><strong>切换用户</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">USE study;</span><br></pre></td></tr></table></figure>

<p><strong>建表语句</strong></p>
<p>创建表，在study用户下分别创建表：girl、books。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> study.girl(</span><br><span class="line">    id <span class="type">INT</span>  <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">    girl_name <span class="type">VARCHAR</span>(<span class="number">64</span>),</span><br><span class="line">    girl_age <span class="type">VARCHAR</span>(<span class="number">64</span>),</span><br><span class="line">    cup_size <span class="type">VARCHAR</span>(<span class="number">64</span>),</span><br><span class="line">    stu_num <span class="type">VARCHAR</span>(<span class="number">64</span>) </span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> study.books(</span><br><span class="line">    id <span class="type">VARCHAR</span>(<span class="number">32</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">    book_names <span class="type">VARCHAR</span>(<span class="number">64</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    isbn <span class="type">VARCHAR</span>(<span class="number">64</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    author <span class="type">VARCHAR</span>(<span class="number">16</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure>



<p><strong>第一张表girl</strong>：使用CRUD语句 &amp; 开启显式开启事务（MySQL &amp; MariaDB默认开启自动autocommit提交）。</p>
<p><strong>显式开启事务</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">BEGIN</span>;</span><br><span class="line"><span class="comment">-- start transaction;</span></span><br></pre></td></tr></table></figure>

<p><strong>查询</strong>：标准写法，<strong>指定字段名</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> sg.id,sg.girl_name,sg.girl_age,sg.cup_size,sg.stu_num <span class="keyword">FROM</span> study.girl sg;</span><br></pre></td></tr></table></figure>

<p>查询：偷懒写法</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> study.girl sg;</span><br></pre></td></tr></table></figure>

<p><strong>插入</strong>一条数据：标准写法，<strong>指定字段名</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> study.girl(id,girl_name,girl_age,cup_size,stu_num) <span class="keyword">VALUES</span>(<span class="number">1001</span>,<span class="string">&#x27;梦梦&#x27;</span>,<span class="string">&#x27;16&#x27;</span>,<span class="string">&#x27;B&#x27;</span>,<span class="string">&#x27;tolovemm16&#x27;</span>);</span><br></pre></td></tr></table></figure>

<p>插入一条数据：偷懒写法</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> study.girl <span class="keyword">VALUES</span>(<span class="number">1001</span>,<span class="string">&#x27;梦梦&#x27;</span>,<span class="string">&#x27;16&#x27;</span>,<span class="string">&#x27;B&#x27;</span>,<span class="string">&#x27;tolovemm16&#x27;</span>);</span><br></pre></td></tr></table></figure>

<p><strong>删除</strong>数据：指定条件</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> study.girl sg <span class="keyword">WHERE</span> sg.id<span class="operator">=</span><span class="number">1001</span>;</span><br></pre></td></tr></table></figure>

<p><strong>修改</strong>数据：指定条件</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> study.girl(id,girl_name,girl_age,cup_size,stu_num) sg <span class="keyword">SET</span> sg.stu_num<span class="operator">=</span><span class="string">&#x27;toloveC16&#x27;</span>  <span class="keyword">WHERE</span> sg.id<span class="operator">=</span><span class="number">1001</span>;</span><br><span class="line"><span class="keyword">UPDATE</span> study.girl sg <span class="keyword">SET</span> sg.cup_size<span class="operator">=</span><span class="string">&#x27;C&#x27;</span>  <span class="keyword">WHERE</span> sg.id<span class="operator">=</span><span class="number">1001</span>;</span><br></pre></td></tr></table></figure>

<p><strong>回滚</strong>操作</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ROLLBACK</span>;</span><br></pre></td></tr></table></figure>

<p><strong>提交</strong>事务</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">COMMIT</span>;</span><br></pre></td></tr></table></figure>



<p><strong>第二张表books</strong>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 插入</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> study.books <span class="keyword">VALUES</span>(<span class="string">&#x27;1001&#x27;</span>,<span class="string">&#x27;books&#x27;</span>,<span class="string">&#x27;2023-3-15-miji&#x27;</span>,<span class="string">&#x27;张三&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 修改</span></span><br><span class="line"><span class="keyword">UPDATE</span> study.books b  <span class="keyword">SET</span> b.book_names<span class="operator">=</span><span class="string">&#x27;绝世武功秘籍&#x27;</span> <span class="keyword">WHERE</span> b.id<span class="operator">=</span><span class="string">&#x27;1001&#x27;</span>; </span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> study.books;</span><br><span class="line"><span class="comment">-- 不用带上用户名也能查询，切换用户操作：use study</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> books;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除全表数据内容</span></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> study.books;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除全表数据内容：TRUNCATE [TABLE] tbl_name</span></span><br><span class="line"><span class="keyword">TRUNCATE</span> <span class="keyword">TABLE</span> study.books;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除表结构与内容,注意：无法回滚</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> study.books; </span><br></pre></td></tr></table></figure>








<p><strong>MySQL官方完整Demo示例</strong></p>
<p>最后附上官方示例数据库，<strong>sakila-db数据库</strong>一个非常完整的示例。包含：视图、函数、触发器以及存储过程，当然也存在使用外键。</p>
<p><strong>sakila-db数据库</strong>包含三个文件，便于大家获取与使用：</p>
<ol>
<li>sakila-schema.sql：数据库表结构；</li>
<li>sakila-data.sql：数据库示例模拟数据；</li>
<li>sakila.mwb：数据库物理模型，在MySQL workbench中可以打开查看。</li>
</ol>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZHMubXlzcWwuY29tL2RvY3Mvc2FraWxhLWRiLnppcA==">https://downloads.mysql.com/docs/sakila-db.zip<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p><strong>用于用于简单测试学习，可以使用world-db</strong>：</p>
<p><strong>world-db数据库</strong>，包含三张表：city、country、countrylanguage。</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZHMubXlzcWwuY29tL2RvY3Mvd29ybGQtZGIuemlw">https://downloads.mysql.com/docs/world-db.zip<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p>MySQL官方文档（5.6、5.7、8.0）整合：</p>
<p>链接: <span class="exturl" data-url="aHR0cHM6Ly9wYW4uYmFpZHUuY29tL3MvMThUUFc3TGFuMldvSmhIeFdKVU0zY3c/cHdkPWJ4NDQ=">https://pan.baidu.com/s/18TPW7Lan2WoJhHxWJUM3cw?pwd=bx44<i class="fa fa-external-link-alt"></i></span> </p>
<p>提取码: bx44 </p>
<h3 id="Oracle：初体验"><a href="#Oracle：初体验" class="headerlink" title="Oracle：初体验"></a>Oracle：初体验</h3><p>初步使用，建议掌握Oracle自带的字符命令操作工具 SQL plus。</p>
<p>其次掌握第三方管理工具 PLSQL developer，管理Oracle很好用，免费30天试用，付费软件。</p>
<p>个人认为，有必要了解Oracle自带SQL客户端管理工具SQL developer，免费使用。</p>
<ol>
<li>SQL plus</li>
<li>PLSQL developer</li>
<li>SQL developer</li>
</ol>
<p>以下将演示在Oracle数据库中如何构建用户、表、对数据查询、新增、修改、删除操作。</p>
<p><strong>1、创建用户</strong></p>
<p>创建数据库test，在Oracle中指创建用户用于管理</p>
<p>常规（Oracle12c是一个拐点，有CDB和PDB之分）建表用法：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> test identified <span class="keyword">by</span> <span class="number">123456</span>;</span><br></pre></td></tr></table></figure>

<p>新版Oracle19c（带c，默认为CDB模式），新建用户</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> c##test identified <span class="keyword">by</span> <span class="number">123456</span>;</span><br></pre></td></tr></table></figure>



<p><strong>2、授权</strong></p>
<p>授予用户test权限resource，connect</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">grant</span> resource,<span class="keyword">connect</span> <span class="keyword">to</span> test;</span><br></pre></td></tr></table></figure>

<p><strong>3、建表</strong></p>
<p>创建表girl，指定了用户为test</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> test.girl(</span><br><span class="line">    ID VARCHAR2(<span class="number">32</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">    GIRL_NAME VARCHAR2(<span class="number">64</span>),</span><br><span class="line">    GIRL_SEX VARCHAR2(<span class="number">2</span>)</span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<p><strong>4、索引</strong></p>
<p>添加主键索引</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> test.girl <span class="keyword">add</span> <span class="keyword">primary</span> key(ID);</span><br></pre></td></tr></table></figure>

<p><strong>5、查询、新增、修改、删除</strong></p>
<p>查询表girl</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> test.girl;</span><br></pre></td></tr></table></figure>

<p>新增数据</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> test.girl <span class="keyword">values</span>(<span class="string">&#x27;1001&#x27;</span>,<span class="string">&#x27;梦梦&#x27;</span>,<span class="string">&#x27;女&#x27;</span>);</span><br></pre></td></tr></table></figure>

<p>修改数据</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">update</span> test.girl t <span class="keyword">set</span> t.ID<span class="operator">=</span><span class="string">&#x27;1002&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p>删除数据</p>
<p>删除表中全部数据，但不删除表结构。使用drop则删除表结构以及数据。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> test.girl;</span><br></pre></td></tr></table></figure>





<h3 id="PostgreSQL：初体验"><a href="#PostgreSQL：初体验" class="headerlink" title="PostgreSQL：初体验"></a>PostgreSQL：初体验</h3><p>主要熟悉PostgreSQL自带的SQL shell字符命令工具和pgAdmin客户端管理工具的使用。</p>
<ol>
<li>SQL shell</li>
<li>pgAdmin</li>
</ol>
<p>可以在我个人公众号历史文章中找到关于PostgreSQL入门教程。</p>
<h3 id="Demo示例"><a href="#Demo示例" class="headerlink" title="Demo示例"></a>Demo示例</h3><p><strong>SQL必知必会demo示例</strong></p>
<p>官网地址：<span class="exturl" data-url="aHR0cHM6Ly9mb3J0YS5jb20vYm9va3MvMDEzNTE4Mjc5NC8=">https://forta.com/books/0135182794/<i class="fa fa-external-link-alt"></i></span></p>
<p>涵盖DBMS示例：DB2、SQLserver、MySQL、Oracle、PostgreSQL、SQLite</p>
<p><strong>SQL表结构示例下载</strong></p>
<p>个人整理一些资料进行整合打包。</p>
<p>链接: <span class="exturl" data-url="aHR0cHM6Ly9wYW4uYmFpZHUuY29tL3MvMU1IVmEtb28yMlhLSm9MbWY3TnJVNEE=">https://pan.baidu.com/s/1MHVa-oo22XKJoLmf7NrU4A<i class="fa fa-external-link-alt"></i></span>	</p>
<p>提取码: cx3p </p>
<p><strong>参考资料</strong>：</p>
<ol>
<li>SQL必知必会第5版。</li>
</ol>
<p>最后，以上总结仅供参考哟！</p>
<p><strong>——END——</strong></p>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>SQL</tag>
      </tags>
  </entry>
  <entry>
    <title>SQL模糊匹配--通配符--高级过滤</title>
    <url>/2022/03/14/SQL%E6%A8%A1%E7%B3%8A%E5%8C%B9%E9%85%8D-%E9%80%9A%E9%85%8D%E7%AC%A6-%E9%AB%98%E7%BA%A7%E8%BF%87%E6%BB%A4/</url>
    <content><![CDATA[<p>SQL查漏补缺：like模糊匹配、通配符、高级过滤。</p>
<p><strong>tips</strong>：图片资源可能被防盗链（寄）了，可以<strong>右键属性复制地址在地址栏查看</strong>哈。</p>
<span id="more"></span>

<h1 id="SQL查漏补缺"><a href="#SQL查漏补缺" class="headerlink" title="SQL查漏补缺"></a>SQL查漏补缺</h1><p>个人感觉对实际工作作用比较大的一些SQL关键字总结。</p>
<h2 id="通配符过滤数据"><a href="#通配符过滤数据" class="headerlink" title="通配符过滤数据"></a>通配符过滤数据</h2><p><strong>通配符</strong>：用来匹配值的一部分的特殊字符。</p>
<p><strong>搜索模式</strong>：由字面值、通配符或者两者组合构成的搜索条件。</p>
<h3 id="百分号-通配符"><a href="#百分号-通配符" class="headerlink" title="百分号%通配符"></a>百分号%通配符</h3><p><strong>作用</strong>：个人在工作中，最常用通配符是百分号（%）。在搜索字符中，%表示任何字符出现任意次数。</p>
<p><strong>例如</strong>：在使用show查询MySQL自带一些参数时，配合like去模糊匹配，并且使用通配符百分号%。</p>
<p><strong>查询当前session所有统计记录</strong>，如果直接在字符命令界面去查询，共有175条记录</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">show</span> status <span class="keyword">LIKE</span> <span class="string">&#x27;com_%&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name                       <span class="operator">|</span> <span class="keyword">Value</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> Com_commit                          <span class="operator">|</span> <span class="number">0</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Com_rollback                        <span class="operator">|</span> <span class="number">0</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------------------+-------+</span></span><br><span class="line">...</span><br><span class="line"><span class="number">175</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<p><img data-src="https://picx.zhimg.com/80/v2-37ef2ec605774497aa351dc63f86a406_720w.jpg?source=d16d100b" alt="img"></p>
<p><strong>Com_xx部分参数作用说明</strong>：</p>
<ol>
<li>Com_xx：代表某某语句执行次数，一般我们关心的是CURD操作（select、insert、update、delete）。</li>
<li>Com_select：执行select操作次数，每次累加1次。</li>
<li>Com_insert：执行insert操作次数，对于批量执行插入的insert操作只累加1次。</li>
<li>Com_update：执行update操作次数。</li>
<li>Com_delete：执行delete操作次数。</li>
</ol>
<p>有几个参数<strong>便于用户了解数据库情况</strong>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">show</span> status <span class="keyword">LIKE</span> <span class="string">&#x27;conn%&#x27;</span>;</span><br><span class="line"><span class="keyword">show</span> status <span class="keyword">LIKE</span> <span class="string">&#x27;upti%&#x27;</span>;</span><br><span class="line"><span class="keyword">show</span> status <span class="keyword">LIKE</span> <span class="string">&#x27;slow_q%&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p><img data-src="https://picx.zhimg.com/80/v2-5c5ceefabd4b73d061ce8bb5bf6c1271_720w.jpg?source=d16d100b" alt="img"></p>
<ul>
<li>Connections：试图连接MySQL服务器次数。</li>
<li>Uptime：服务器工作时间。</li>
<li>Slow_queries：慢查询次数。</li>
</ul>
<h3 id="下划线（-）通配符"><a href="#下划线（-）通配符" class="headerlink" title="下划线（_）通配符"></a>下划线（_）通配符</h3><p><strong>作用</strong>：这同样是一个比较有用的通配符。下划线用途和%一样，但有限制，只匹配单个字符。</p>
<p><strong>示例</strong>：在MySQL中创建数据库、表以及插入演示数据。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 1.创建数据库test</span></span><br><span class="line"><span class="keyword">create</span> database test;</span><br><span class="line">use test;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 2.创建一张表演示。</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `bols` (</span><br><span class="line">  `id` <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  `girl_names` <span class="type">varchar</span>(<span class="number">64</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `sex` <span class="type">varchar</span>(<span class="number">2</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `cup_size` <span class="type">varchar</span>(<span class="number">8</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8_bin</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 3.插入数据,省略掉了字段，实际工作开发中建议加上字段。</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> test.bols <span class="keyword">values</span>(<span class="number">1001</span>,<span class="string">&#x27;18 bols D&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="string">&#x27;D&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> test.bols <span class="keyword">values</span>(<span class="number">1005</span>,<span class="string">&#x27;20 bols D&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="string">&#x27;D&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> test.bols <span class="keyword">values</span>(<span class="number">1006</span>,<span class="string">&#x27;9 bols A&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="string">&#x27;A&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 4.使用通配符下划线_匹配。</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> test.bols <span class="keyword">where</span> girl_names <span class="keyword">like</span>  <span class="string">&#x27;__ bols D&#x27;</span>; <span class="comment">-- 两个占位符</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+------------+-----+----------+</span></span><br><span class="line"><span class="operator">|</span> id   <span class="operator">|</span> girl_names <span class="operator">|</span> sex <span class="operator">|</span> cup_size <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+------------+-----+----------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1001</span> <span class="operator">|</span> <span class="number">18</span> bols D  <span class="operator">|</span> 女  <span class="operator">|</span> D        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1005</span> <span class="operator">|</span> <span class="number">20</span> bols D  <span class="operator">|</span> 女  <span class="operator">|</span> D        <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+------------+-----+----------+</span></span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> test.bols <span class="keyword">where</span> girl_names <span class="keyword">like</span>  <span class="string">&#x27;_ bols A&#x27;</span>; <span class="comment">-- 1个占位符</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+------------+-----+----------+</span></span><br><span class="line"><span class="operator">|</span> id   <span class="operator">|</span> girl_names <span class="operator">|</span> sex <span class="operator">|</span> cup_size <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+------------+-----+----------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1006</span> <span class="operator">|</span> <span class="number">9</span> bols A   <span class="operator">|</span> 女  <span class="operator">|</span> A        <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+------------+-----+----------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<p><strong>tips</strong>：DB2不支持下划线（_）通配符。</p>
<h3 id="方括号-通配符"><a href="#方括号-通配符" class="headerlink" title="方括号[ ]通配符"></a>方括号[ ]通配符</h3><p><strong>作用</strong>：方括号[ ]通配符用来指定一个字符集，它必须匹配指定位置（通配符的位置）的一个字符。</p>
<p><strong>tips</strong>：与上述示范的通配符不一样，并不是所有DBMS都支持用来创建集合的[ ]。微软的SQL Server支持集合，但是MySQL，Oracle，DB2，SQLite都不支持。验证你使用的DBMS是否支持集合，请参考各自厂商提供的官方文档。</p>
<p><strong>例如</strong>：我想匹配含有b和o的老师姓名，<strong>在SQL Server2012中演示</strong>。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> dbo.girl <span class="keyword">where</span> girl_name <span class="keyword">like</span>  <span class="string">&#x27;[bo]%&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">------+------------+-----+----------+</span></span><br><span class="line"><span class="operator">|</span> id   <span class="operator">|</span> girl_name  <span class="operator">|</span> sex <span class="operator">|</span> cup_size <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+------------+-----+----------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1004</span> <span class="operator">|</span> bols D <span class="number">18</span>  <span class="operator">|</span> 女  <span class="operator">|</span>     D    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1005</span> <span class="operator">|</span> bols D <span class="number">20</span>  <span class="operator">|</span> 女  <span class="operator">|</span>     D    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+------------+-----+----------+</span></span><br></pre></td></tr></table></figure>

<p><strong>1.4   使用通配符技巧</strong></p>
<ol>
<li>不过度使用通配符。</li>
<li>尽量不要将通配符放搜索模式的最开始处。</li>
<li>注意通配符位置。</li>
</ol>
<h2 id="高级数据过滤"><a href="#高级数据过滤" class="headerlink" title="高级数据过滤"></a>高级数据过滤</h2><p><strong>操作符</strong>：用来联结或改变where子句中的子句的关键字，也称为逻辑操作符（local operator）。</p>
<p>我们通常使用where子句进行过滤数据时，一般是单过滤条件。</p>
<p><strong>组合where子句</strong>：为了进行更强的过滤控制。当然也可以使用多个where子句过滤，比如使用and子句或者or子句。</p>
<ol>
<li>and操作符；</li>
<li>or操作符；</li>
<li>in操作符；</li>
<li>not操作符。</li>
</ol>
<h3 id="and-操作符"><a href="#and-操作符" class="headerlink" title="and 操作符"></a>and 操作符</h3><p>使用and操作符给where子句附加条件，多重过滤。</p>
<p><strong>作用</strong>：用在where子句中的关键字，用来指示检索满足所有给定条件的行。通俗点讲，给定条件都要满足才能检索出数据行。</p>
<p><strong>示例</strong>：接着上面通配符bols示例继续，查询尺寸为D并且ID小于1005。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> test.bols <span class="keyword">where</span> (cup_size<span class="operator">=</span><span class="string">&#x27;D&#x27;</span> <span class="keyword">and</span> id<span class="operator">&lt;</span><span class="number">1005</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">------+------------+-----+----------+</span></span><br><span class="line"><span class="operator">|</span> id   <span class="operator">|</span> girl_names <span class="operator">|</span> sex <span class="operator">|</span> cup_size <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+------------+-----+----------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1001</span> <span class="operator">|</span> <span class="number">18</span> bols D  <span class="operator">|</span> 女  <span class="operator">|</span> D        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1004</span> <span class="operator">|</span> <span class="number">16</span> bols C  <span class="operator">|</span> 女  <span class="operator">|</span> D        <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+------------+-----+----------+</span></span><br></pre></td></tr></table></figure>



<h3 id="or-操作符"><a href="#or-操作符" class="headerlink" title="or 操作符"></a>or 操作符</h3><p>or操作符与and操作符正好相反，指示DBMS满足任意一个条件即可检索出数据行。</p>
<p>实际上，许多DBMS在 or where子句的第一个条件得到满足情况下，就不再计算第二个条件（即在第一个条件满足时，无论第二个条件是否满足，相应行都将被匹配出来）。</p>
<p><strong>作用</strong>：where子句中使用的关键字，用来表示检索匹配任意给定条件的行。</p>
<p><strong>示例</strong>：查询尺寸为D或者尺寸为C的数据行。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> test.bols <span class="keyword">where</span> (cup_size<span class="operator">=</span><span class="string">&#x27;D&#x27;</span> <span class="keyword">or</span> cup_size<span class="operator">=</span><span class="string">&#x27;C&#x27;</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">------+------------+-----+----------+</span></span><br><span class="line"><span class="operator">|</span> id   <span class="operator">|</span> girl_names <span class="operator">|</span> sex <span class="operator">|</span> cup_size <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+------------+-----+----------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1001</span> <span class="operator">|</span> <span class="number">18</span> bols D  <span class="operator">|</span> 女  <span class="operator">|</span> D        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1002</span> <span class="operator">|</span> <span class="number">18</span> jizels  <span class="operator">|</span> 女  <span class="operator">|</span> C        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1003</span> <span class="operator">|</span> longls     <span class="operator">|</span> 女  <span class="operator">|</span> C        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1004</span> <span class="operator">|</span> <span class="number">16</span> bols C  <span class="operator">|</span> 女  <span class="operator">|</span> D        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1005</span> <span class="operator">|</span> <span class="number">20</span> bols D  <span class="operator">|</span> 女  <span class="operator">|</span> D        <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+------------+-----+----------+</span></span><br></pre></td></tr></table></figure>

<p><strong>分析</strong>：使用or操作符，满足D或者C任一条件，返回匹配行，5条数据全部检索出。如果换成and操作符，则不会检索到匹配的数据行。</p>
<p><strong>总结</strong>：任何时候使用and和or操作符的where子句，应该使用圆括号明确地分组操作符。不应过分依赖默认求值顺序，即使它明确是你希望得到的结果。使用圆括号并没啥坏处，相反可以养成好习惯。</p>
<h3 id="in-操作符"><a href="#in-操作符" class="headerlink" title="in 操作符"></a>in 操作符</h3><p>in操作符用来指定条件范围，范围中每个条件都可以进行匹配。in取一组逗号分隔，圈在圆括号中的合法值。</p>
<p><strong>作用</strong>：where子句中用来指定要匹配值清单的关键字，功能与or相当。</p>
<p><strong>示例</strong>：取姓名为longls和jizels两条数据行。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 1.示例，修改一条数据，便于演示</span></span><br><span class="line"><span class="keyword">update</span> test.bols <span class="keyword">set</span> girl_names<span class="operator">=</span><span class="string">&#x27;jizels&#x27;</span> <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1002</span>;</span><br><span class="line"><span class="keyword">commit</span>;<span class="comment">-- 提交事务</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 2.使用in操作符</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> test.bols <span class="keyword">where</span> girl_names <span class="keyword">in</span>(<span class="string">&#x27;longls&#x27;</span>,<span class="string">&#x27;jizels&#x27;</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">------+------------+-----+----------+</span></span><br><span class="line"><span class="operator">|</span> id   <span class="operator">|</span> girl_names <span class="operator">|</span> sex <span class="operator">|</span> cup_size <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+------------+-----+----------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1002</span> <span class="operator">|</span> jizels     <span class="operator">|</span> 女  <span class="operator">|</span> C        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1003</span> <span class="operator">|</span> longls     <span class="operator">|</span> 女  <span class="operator">|</span> C        <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+------------+-----+----------+</span></span><br></pre></td></tr></table></figure>

<p><strong>in操作符优点</strong>：</p>
<ol>
<li>很多场景下，in操作符语法更清楚，更直观。</li>
<li>与其它and和or操作符组合使用时，求职顺序更容易管理。</li>
<li>一般比一组or操作符执行更快。</li>
<li>最大优点可以包含其它select语句，动态建立where子句。</li>
</ol>
<h3 id="not-操作符"><a href="#not-操作符" class="headerlink" title="not 操作符"></a>not 操作符</h3><p>where子句中的操作符有且只有一个功能，否定其后多跟的任何条件。因为not基本不单独使用，，往往与其它操作符组合使用。</p>
<p><strong>作用</strong>：where子句中用来否定其后条件的关键字。</p>
<p><strong>示例</strong>：匹配出不包含longls和jizels的数据行，和in操作符组合使用，否定in条件中的两条数据行。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> test.bols <span class="keyword">where</span> girl_names <span class="keyword">not</span> <span class="keyword">in</span>(<span class="string">&#x27;longls&#x27;</span>,<span class="string">&#x27;jizels&#x27;</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">------+------------+-----+----------+</span></span><br><span class="line"><span class="operator">|</span> id   <span class="operator">|</span> girl_names <span class="operator">|</span> sex <span class="operator">|</span> cup_size <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+------------+-----+----------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1001</span> <span class="operator">|</span> <span class="number">18</span> bols D  <span class="operator">|</span> 女  <span class="operator">|</span> D        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1004</span> <span class="operator">|</span> <span class="number">16</span> bols C  <span class="operator">|</span> 女  <span class="operator">|</span> D        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1005</span> <span class="operator">|</span> <span class="number">20</span> bols D  <span class="operator">|</span> 女  <span class="operator">|</span> D        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1006</span> <span class="operator">|</span> <span class="number">9</span> bols A   <span class="operator">|</span> 女  <span class="operator">|</span> A        <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+------------+-----+----------+</span></span><br></pre></td></tr></table></figure>

<p><strong>tips</strong>：MariaDB中的not操作符。MariaDB支持使用not否定in、between和exists子句。大多数DBMS允许not否定任何条件。</p>
<h2 id="show关键字（MySQL）"><a href="#show关键字（MySQL）" class="headerlink" title="show关键字（MySQL）"></a>show关键字（MySQL）</h2><p>列举一些MySQL中常用show使用方式。</p>
<h3 id="查询MySQL有哪些自带数据库"><a href="#查询MySQL有哪些自带数据库" class="headerlink" title="查询MySQL有哪些自带数据库"></a>查询MySQL有哪些自带数据库</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator">&gt;</span>mysql <span class="keyword">show</span> databases;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+</span></span><br><span class="line"><span class="operator">|</span> Database           <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+</span></span><br><span class="line"><span class="operator">|</span> information_schema <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> mysql              <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> performance_schema <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> sys                <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+</span></span><br></pre></td></tr></table></figure>

<p><strong>tips</strong>：在mysql中可以使用系统帮助命令 ? show查看用法。</p>
<h3 id="SQL优化，统计CURD（增删改查）操作次数"><a href="#SQL优化，统计CURD（增删改查）操作次数" class="headerlink" title="SQL优化，统计CURD（增删改查）操作次数"></a>SQL优化，统计CURD（增删改查）操作次数</h3><p>从下面Com_select为44，可以看出select查询次数已经使用了44次。</p>
<p><strong>示例</strong>：同理可以查询Com_insert、Com_delete和Com_update，一般情况会配合通配符使用哟。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> status <span class="keyword">like</span> <span class="string">&#x27;Com_se%&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name          <span class="operator">|</span> <span class="keyword">Value</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> Com_select             <span class="operator">|</span> <span class="number">44</span>    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Com_set_option         <span class="operator">|</span> <span class="number">2</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Com_set_password       <span class="operator">|</span> <span class="number">0</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Com_set_resource_group <span class="operator">|</span> <span class="number">0</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Com_set_role           <span class="operator">|</span> <span class="number">0</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------+-------+</span></span><br></pre></td></tr></table></figure>

<p><strong>注意</strong>：在MySQL中不同存储引擎查询结果可能略微有所不同。</p>
<p><strong>参考资料</strong>：</p>
<ul>
<li>《SQL必知必会第五版》</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9kZXYubXlzcWwuY29tL2RvYy9yZWZtYW4vOC4wL2VuLw==">《MySQL8.0 官方文档》<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<h2 id="莫问收获，但问耕耘"><a href="#莫问收获，但问耕耘" class="headerlink" title="莫问收获，但问耕耘"></a>莫问收获，但问耕耘</h2><p>静下心来，才发现原来不会的还有很多。</p>
<p>一分耕耘，一分收获。</p>
<p>多总结，你会发现，自己的知识宝库越来越丰富。</p>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>SQL</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu20.04优麒麟：手动开启root用户</title>
    <url>/2021/08/01/Ubuntu20-04%E4%BC%98%E9%BA%92%E9%BA%9F%E6%89%8B%E5%8A%A8%E5%BC%80%E5%90%AFroot%E7%94%A8%E6%88%B7/</url>
    <content><![CDATA[<p><strong>基于Ubuntu20.04优麒麟系统开启root用户，开启root以及普通用户远程登录</strong></p>
<p>1、需要手动修改root用户密码，默认没启动</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">sudo root passwd</span><br></pre></td></tr></table></figure>

<p>2、安装<code>openssh-server</code></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install openssh<span class="literal">-server</span></span><br></pre></td></tr></table></figure>

<p>3、启动<code>sshd</code></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">start</span> sshd</span><br></pre></td></tr></table></figure>

<p>4、查看sshd状态</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">systemctl status sshd</span><br></pre></td></tr></table></figure>
<p><img data-src="https://img-blog.csdnimg.cn/72ec2971dc4d446a9e29c5a907b6b0bd.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70#" alt="在这里插入图片描述"></p>
<p>5、修改启动root远程登录</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#编辑sshd_config</span></span><br><span class="line">vim /etc/ssh/sshd_config</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置为yes，然后保存，如果没有手动加上就行PermitRootLogin yes</span></span><br><span class="line">PermitRootLogin yes</span><br></pre></td></tr></table></figure>
<p><img data-src="https://img-blog.csdnimg.cn/927ba5f910264a69ad4c11e5d04fe1bf.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>6、普通用户<code>sudo</code>提权<br><strong>需要将普通用户添加在&#x2F;etc&#x2F;sudoers&#x2F;文件下，并赋予指定以及ALL权限</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim /etc/sudoers</span></span><br></pre></td></tr></table></figure>

<p><img data-src="https://img-blog.csdnimg.cn/eaab28c896cf4827be81342f991911b4.png" alt="在这里插入图片描述"></p>
<p>7、使用xshell7个人版登录（免费正版，个人使用足以）<br>填写信息，使用邮箱接收即可<br>正版商用下载地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cubmV0c2FyYW5nLmNvbS9lbi94c2hlbGwtZG93bmxvYWQv">https://www.netsarang.com/en/xshell-download/<i class="fa fa-external-link-alt"></i></span><br>个人版下载地址直通车（免费）：<span class="exturl" data-url="aHR0cHM6Ly93d3cubmV0c2FyYW5nLmNvbS9lbi9mcmVlLWZvci1ob21lLXNjaG9vbC8=">https://www.netsarang.com/en/free-for-home-school/<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>开发运维</category>
      </categories>
      <tags>
        <tag>Ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringBoot应用集成微服务组件Nacos</title>
    <url>/2023/04/15/SpringBoot%E5%BA%94%E7%94%A8%E9%9B%86%E6%88%90%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%BB%84%E4%BB%B6Nacos/</url>
    <content><![CDATA[<p>第一篇基础篇，可在博客园，个人公众号以及站内搜索：MySQL数据库与Nacos搭建监控服务。</p>
<p>本篇是个人nacos系列文章第二篇springboot项目集成微服务组件nacos。</p>
<p><img data-src="https://s1.ax1x.com/2023/04/20/p9ADUsI.png"></p>
<p><strong>前情提要</strong></p>
<p>当你看到此篇文章时，nacos目前最新稳定版本为：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2FsaWJhYmEvbmFjb3MvcmVsZWFzZXMvdGFnLzIuMi4y">2.2.2 (Apr 11, 2023)<i class="fa fa-external-link-alt"></i></span> <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2FsaWJhYmEvbmFjb3MvcmVsZWFzZXMvbGF0ZXN0">Latest<i class="fa fa-external-link-alt"></i></span></p>
<p>版本不在于有多新，在于与当前场景环境匹配正常，稳中求快。万一你用了比较新的版本，遇到问题怎么办？有问题，那就找李元芳吧！开个玩笑。你可以去 nacos 的github仓库issues提问、追问选择解决方案，促进开源社区的和谐发展。</p>
<p><strong>整体思路，个人nacos系列博文一共分为三篇</strong>：</p>
<ul>
<li>基础篇：《MySQL数据库与Nacos搭建监控服务》，Nacos与MySQL基本介绍。</li>
<li>开发篇：《开发篇：springboot与微服务组件nacos》，从代码开始构建，集成微服务组件。</li>
<li>运维篇：《运维篇：nacos prometheus grafana》，服务监控篇，主要以Linux发行版为主。</li>
</ul>
<p><strong>骚话环节</strong></p>
<p>一入编程深似海，从此节操是路人。脱发已是常态，致富还需绝顶。</p>
<p>那天我听说程序员之间还相互鄙视，其中不能忍的终极鄙视：有女朋友的程序员鄙视没有女朋友的程序员。这不能忍，打不过怎么办，问就是加入吧。</p>
<p>由于是测试环境，使用版本比较新，学当然要学新知识吸收精华，羽化成仙，做那万人敬仰韩天尊。啊，不好意思，扯远了。开个玩笑，我们依旧<strong>使用稳定版本</strong>。此次在Linux发行版操作系统中全程使用root用户进行测试避免权限问题带来的干扰，如果使用普通用户请自行测试提权赋予所有者或者所属组权限。</p>
<p>骚话不多说，<strong>直接进入今天的主题springboot项目集成微服务组件nacos</strong>。</p>
<h1 id="springboot与微服务组件nacos"><a href="#springboot与微服务组件nacos" class="headerlink" title="springboot与微服务组件nacos"></a>springboot与微服务组件nacos</h1><p><strong>必备环境，前置条件尽量保持一致</strong>：</p>
<ul>
<li>JDK版本： JDK17</li>
<li>开发工具和项目构建工具：STS4 &amp; Maven3.6</li>
<li>Springboot版本：Springboot2.7.x</li>
<li>服务监控三件套：Nacos2.x、Prometheus2.3.x、Grafana9.3.x</li>
<li>开发测试环境：Linux（centos-stream-9）云服务器或者VMware搭建环境</li>
</ul>
<p>你可以了解到的知识：从项目开发构建到线上测试发布，不过，需要具备一点点Java或者其它编程语言基础知识。</p>
<p><strong>tips</strong>：做实验时请检查是否关安装防火墙管理工具，关闭防火墙服务或者开启相应端口，或者放通云服务器安全组。</p>
<p><strong>企业中生产环境，唯稳，稳中求快</strong>。</p>
<p><img data-src="https://s1.ax1x.com/2023/03/23/ppwyHDs.png"></p>
<h2 id="Nacos服务快速启动"><a href="#Nacos服务快速启动" class="headerlink" title="Nacos服务快速启动"></a>Nacos服务快速启动</h2><p>关于nacos2.2.0相关配置说明以及数据源说明，遇到问题总结，可以参考如下文章：</p>
<p><a href="https://blog.cnwangk.top/2023/03/30/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%8ENacos%E6%90%AD%E5%BB%BA%E7%9B%91%E6%8E%A7%E6%9C%8D%E5%8A%A1/">https://blog.cnwangk.top/2023/03/30/MySQL数据库与Nacos搭建监控服务/</a></p>
<p>使用hexo搭建静态博客网站，感兴趣可以自己搭建一个，利用github pages和cloudflare pages等进行同步。之所以给出上面的链接，因为一篇优质的教程，会持续更新迭代。当然，在个人公众号里面同样可以搜索到相关教程。</p>
<p><strong>根据个人或者团队开发环境，可以选择框架开发环境：spring、springboot以及springcloud集成nacos</strong>。</p>
<p><strong>值得注意的地方</strong></p>
<p>服务器部署nacos服务支持多种场景：</p>
<ol>
<li>Nacos原生形式部署。</li>
<li>Nacos Docker形式部署。</li>
<li>Nacos Kubernetes形式部署。</li>
</ol>
<p>至于用哪种方式，根据实际业务场景分析，选择符合个人或者公司业务场景的最佳方式。</p>
<p>Nacos支持三种部署模式</p>
<ul>
<li>单机模式：用于测试和单机试用。</li>
<li>集群模式：用于生产环境，确保高可用。</li>
<li>多集群模式：用于多数据中心场景。</li>
</ul>
<p>高可用环境准备</p>
<ul>
<li>建议支撑环境：部署JDK，需要 1.8 及其以上版本</li>
<li>建议硬件配置：2核 CPU &#x2F; 4G 内存 及其以上</li>
<li>建议软件配置：生产环境 3 个节点 及其以上</li>
</ul>
<p>Nacos 依赖 Java 环境来运行。如果您是从代码开始构建并运行Nacos，还需要为此配置 Maven环境，请确保是在以下版本环境中安装使用：</p>
<p>1、预备环境准备</p>
<ul>
<li><p>64 bit OS，支持 Linux&#x2F;Unix&#x2F;Mac&#x2F;Windows，<strong>推荐选用 Linux&#x2F;Unix&#x2F;Mac</strong>。</p>
</li>
<li><p>64 bit JDK 1.8+ 。</p>
</li>
<li><p>Maven 3.2.x+ 。</p>
</li>
</ul>
<p>2、下载源码或者安装包</p>
<p>你可以通过<strong>源码</strong>和<strong>发行包</strong>两种方式来获取 Nacos。</p>
<p><strong>个人推荐</strong>：下载发行包。关于版本，使用稳定版本（<strong>通常有GA标识</strong>），个人习惯使用官方推荐的上一个小版本。有特殊需求可以下载源码包，修改源码重新编译。</p>
<p>从 Github 获取源码方式，使用<code>git clone</code>命令，<strong>值得注意的是你需要部署Git环境</strong>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/alibaba/nacos.git</span><br><span class="line"><span class="built_in">cd</span> nacos/</span><br><span class="line">mvn -Prelease-nacos -Dmaven.test.skip=<span class="literal">true</span> clean install -U  </span><br><span class="line"><span class="built_in">ls</span> -al distribution/target/</span><br><span class="line">// change the <span class="variable">$version</span> to your actual path</span><br><span class="line"><span class="built_in">cd</span> distribution/target/nacos-server-<span class="variable">$version</span>/nacos/bin</span><br></pre></td></tr></table></figure>

<p>​	</p>
<p><strong>nacos发行包下载地址</strong>：</p>
<ul>
<li><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2FsaWJhYmEvbmFjb3MvcmVsZWFzZXM=">https://github.com/alibaba/nacos/releases<i class="fa fa-external-link-alt"></i></span></p>
</li>
<li><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2FsaWJhYmEvbmFjb3MvcmVsZWFzZXMvdGFnLzIuMS4x">https://github.com/alibaba/nacos/releases/tag/2.1.1<i class="fa fa-external-link-alt"></i></span></p>
</li>
</ul>
<p>下载编译后压缩包方式，您可以从 最新稳定版本 下载 nacos-server-$version.zip 包。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">unzip nacos-server-<span class="variable">$version</span>.zip 或者 tar -zxvf nacos-server-<span class="variable">$version</span>.tar.gz</span><br><span class="line"><span class="built_in">cd</span> nacos/bin</span><br></pre></td></tr></table></figure>

<ul>
<li><p>$version指具体nacos版本号，比如具体版本：nacos-server-2.1.1。</p>
</li>
<li><p>Windows平台建议下载以 .zip结尾的压缩包：nacos-server-2.1.1.zip。</p>
</li>
<li><p>Linux平台建议下载以 .tar.gz 结尾的压缩包：nacos-server-2.1.1.tar.gz。</p>
</li>
</ul>
<p><strong>3、修改配置文件</strong></p>
<p><strong>注意</strong>：修改<code>conf</code>目录下的<code>application.properties</code>文件。设置其中的<code>nacos.core.auth.plugin.nacos.token.secret.key</code>值，详情可查看鉴权-自定义密钥：</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9uYWNvcy5pby96aC1jbi9kb2NzL3YyL3BsdWdpbi9hdXRoLXBsdWdpbi5odG1s">https://nacos.io/zh-cn/docs/v2/plugin/auth-plugin.html<i class="fa fa-external-link-alt"></i></span></p>
<blockquote>
<p>注意，文档中的默认值<code>SecretKey012345678901234567890123456789012345678901234567890123456789</code>和<code>VGhpc0lzTXlDdXN0b21TZWNyZXRLZXkwMTIzNDU2Nzg=</code>为公开默认值，可用于临时测试，实际使用时请<strong>务必</strong>更换为自定义的其他有效值。</p>
</blockquote>
<p><strong>4、启动服务器</strong></p>
<p><strong>Linux&#x2F;Unix&#x2F;Mac：执行startup.sh脚本</strong><br>启动命令（standalone代表着单机模式运行，非集群模式）：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sh startup.sh -m standalone</span><br></pre></td></tr></table></figure>

<p>如果您使用的是ubuntu系统，或者运行脚本报错提示[[符号找不到，可尝试如下运行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash startup.sh -m standalone</span><br></pre></td></tr></table></figure>

<p><strong>Windows平台：执行startup.cmd脚本</strong><br>启动命令（standalone代表着单机模式运行，非集群模式）：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">startup.cmd -m standalone</span><br></pre></td></tr></table></figure>



<p><strong>5、关闭服务器</strong></p>
<p><strong>Linux&#x2F;Unix&#x2F;Mac：执行shutdown.sh脚本</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sh shutdown.sh</span><br></pre></td></tr></table></figure>

<p><strong>Windows平台：执行shutdown.cmd脚本</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">shutdown.cmd</span><br></pre></td></tr></table></figure>

<p>可以在Windows中使用terminal或者cmd命令行运行shutdown.cmd命令，也可以双击shutdown.cmd运行文件。</p>
<p><strong>以下为个人实战总结，仅供参考</strong></p>
<p><strong>个人开发以及测试环境</strong>：</p>
<ul>
<li>Spring Tool Suite4</li>
<li>JDK17</li>
<li>Maven3.6</li>
<li>Springboot2.7.6</li>
<li>VMware16 &amp; Linux（Centos-9-Stream）</li>
</ul>
<p><strong>关于IDE的选择</strong>：</p>
<p>有人喜欢使用 IntelliJ IDEA ，有人喜欢用 Vim，有人喜欢用VSCode，还有人就偏爱 eclipse 。开发工具 IDE 的选择，不一定非要和我保持一致。个人开发者可以根据自己的喜好选择，怎么顺手怎么来，主打一个用的舒心。如果是团队开发，最优质的方案是与团队保持一致。</p>
<p>可能是入坑最开始接触的 IDE 是eclipse，习惯了。个人小项目偶尔会用VSCode，大型项目更趋向于 eclipse 或者 IntelliJ IDEA。</p>
<h2 id="STS4-开发工具"><a href="#STS4-开发工具" class="headerlink" title="STS4 开发工具"></a>STS4 开发工具</h2><p>支持OS版本，彼时最新版本是4.17.1</p>
<ul>
<li>Linux X86_64、Linux ARM_64</li>
<li>MACOS X86_64、MACOS ARM_64</li>
<li>WINDOWS X86_64</li>
</ul>
<p>官网：<span class="exturl" data-url="aHR0cHM6Ly9zcHJpbmcuaW8vdG9vbHM=">https://spring.io/tools<i class="fa fa-external-link-alt"></i></span></p>
<p>下载地址：<span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC5zcHJpbmdzb3VyY2UuY29tL3JlbGVhc2UvU1RTNC80LjE2LjEuUkVMRUFTRS9kaXN0L2U0LjI1L3NwcmluZy10b29sLXN1aXRlLTQtNC4xNi4xLlJFTEVBU0UtZTQuMjUuMC13aW4zMi53aW4zMi54ODZfNjQuc2VsZi1leHRyYWN0aW5nLmphcg==">https://download.springsource.com/release/STS4/4.16.1.RELEASE/dist/e4.25/spring-tool-suite-4-4.16.1.RELEASE-e4.25.0-win32.win32.x86_64.self-extracting.jar<i class="fa fa-external-link-alt"></i></span></p>
<p><img data-src="https://s1.ax1x.com/2023/04/20/p9kLjqx.png"></p>
<h2 id="Maven-环境配置"><a href="#Maven-环境配置" class="headerlink" title="Maven 环境配置"></a>Maven 环境配置</h2><h3 id="STS4开发工具引入Maven配置"><a href="#STS4开发工具引入Maven配置" class="headerlink" title="STS4开发工具引入Maven配置"></a>STS4开发工具引入Maven配置</h3><p>依次找到顶部菜单栏：Window—&gt; Preferences—&gt; Maven—&gt;User Settings—&gt;Global Settings &amp; User Settings—&gt;Apply</p>
<p><strong>配置完记得点击Apply或者Apply and Close</strong></p>
<p><img data-src="https://s1.ax1x.com/2023/04/20/p9kLOMR.png"></p>
<h3 id="Maven-Repo配置阿里云镜像源"><a href="#Maven-Repo配置阿里云镜像源" class="headerlink" title="Maven Repo配置阿里云镜像源"></a>Maven Repo配置阿里云镜像源</h3><p>本地maven环境配置conf\settings.xml（使用阿里云镜像地址），<strong>maven版本</strong>：apache-maven-3.6.3</p>
<p><strong>配置本地repo仓库存储目录</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">localRepository</span>&gt;</span>D:\Maven\repo<span class="tag">&lt;/<span class="name">localRepository</span>&gt;</span>	</span><br></pre></td></tr></table></figure>

<p><strong>配置mirrors</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirrors</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>aliyunmaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun maven<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 老版本url --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 新版本url --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--&lt;url&gt;https://maven.aliyun.com/repository/public/&lt;/url&gt;--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span>        </span><br><span class="line">  <span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirrors</span>&gt;</span></span><br></pre></td></tr></table></figure>



<p>阿里云Maven中央仓库为 <span class="exturl" data-url="aHR0cHM6Ly9kZXZvcHMuYWxpeXVuLmNvbS8/Y2hhbm5lbD1tYXZlbi5hbGl5dW4=">阿里云云效<i class="fa fa-external-link-alt"></i></span> 提供的公共代理仓库，帮助研发人员提高研发生产效率，使用阿里云Maven中央仓库作为下载源，速度更快更稳定。</p>
<table>
<thead>
<tr>
<th align="left">仓库名称</th>
<th align="left">阿里云仓库地址</th>
<th align="left">阿里云仓库地址(老版)</th>
<th align="left">源地址</th>
</tr>
</thead>
<tbody><tr>
<td align="left">central</td>
<td align="left"><span class="exturl" data-url="aHR0cHM6Ly9tYXZlbi5hbGl5dW4uY29tL3JlcG9zaXRvcnkvY2VudHJhbA==">https://maven.aliyun.com/repository/central<i class="fa fa-external-link-alt"></i></span></td>
<td align="left"><span class="exturl" data-url="aHR0cHM6Ly9tYXZlbi5hbGl5dW4uY29tL25leHVzL2NvbnRlbnQvcmVwb3NpdG9yaWVzL2NlbnRyYWw=">https://maven.aliyun.com/nexus/content/repositories/central<i class="fa fa-external-link-alt"></i></span></td>
<td align="left"><span class="exturl" data-url="aHR0cHM6Ly9yZXBvMS5tYXZlbi5vcmcvbWF2ZW4yLw==">https://repo1.maven.org/maven2/<i class="fa fa-external-link-alt"></i></span></td>
</tr>
<tr>
<td align="left">jcenter</td>
<td align="left"><span class="exturl" data-url="aHR0cHM6Ly9tYXZlbi5hbGl5dW4uY29tL3JlcG9zaXRvcnkvcHVibGlj">https://maven.aliyun.com/repository/public<i class="fa fa-external-link-alt"></i></span></td>
<td align="left"><span class="exturl" data-url="aHR0cHM6Ly9tYXZlbi5hbGl5dW4uY29tL25leHVzL2NvbnRlbnQvcmVwb3NpdG9yaWVzL2pjZW50ZXI=">https://maven.aliyun.com/nexus/content/repositories/jcenter<i class="fa fa-external-link-alt"></i></span></td>
<td align="left"><span class="exturl" data-url="aHR0cDovL2pjZW50ZXIuYmludHJheS5jb20v">http://jcenter.bintray.com/<i class="fa fa-external-link-alt"></i></span></td>
</tr>
<tr>
<td align="left">public</td>
<td align="left"><span class="exturl" data-url="aHR0cHM6Ly9tYXZlbi5hbGl5dW4uY29tL3JlcG9zaXRvcnkvcHVibGlj">https://maven.aliyun.com/repository/public<i class="fa fa-external-link-alt"></i></span></td>
<td align="left"><span class="exturl" data-url="aHR0cHM6Ly9tYXZlbi5hbGl5dW4uY29tL25leHVzL2NvbnRlbnQvZ3JvdXBzL3B1YmxpYw==">https://maven.aliyun.com/nexus/content/groups/public<i class="fa fa-external-link-alt"></i></span></td>
<td align="left">central仓和jcenter仓的聚合仓</td>
</tr>
<tr>
<td align="left">google</td>
<td align="left"><span class="exturl" data-url="aHR0cHM6Ly9tYXZlbi5hbGl5dW4uY29tL3JlcG9zaXRvcnkvZ29vZ2xl">https://maven.aliyun.com/repository/google<i class="fa fa-external-link-alt"></i></span></td>
<td align="left"><span class="exturl" data-url="aHR0cHM6Ly9tYXZlbi5hbGl5dW4uY29tL25leHVzL2NvbnRlbnQvcmVwb3NpdG9yaWVzL2dvb2dsZQ==">https://maven.aliyun.com/nexus/content/repositories/google<i class="fa fa-external-link-alt"></i></span></td>
<td align="left"><span class="exturl" data-url="aHR0cHM6Ly9tYXZlbi5nb29nbGUuY29tLw==">https://maven.google.com/<i class="fa fa-external-link-alt"></i></span></td>
</tr>
<tr>
<td align="left">gradle-plugin</td>
<td align="left"><span class="exturl" data-url="aHR0cHM6Ly9tYXZlbi5hbGl5dW4uY29tL3JlcG9zaXRvcnkvZ3JhZGxlLXBsdWdpbg==">https://maven.aliyun.com/repository/gradle-plugin<i class="fa fa-external-link-alt"></i></span></td>
<td align="left"><span class="exturl" data-url="aHR0cHM6Ly9tYXZlbi5hbGl5dW4uY29tL25leHVzL2NvbnRlbnQvcmVwb3NpdG9yaWVzL2dyYWRsZS1wbHVnaW4=">https://maven.aliyun.com/nexus/content/repositories/gradle-plugin<i class="fa fa-external-link-alt"></i></span></td>
<td align="left"><span class="exturl" data-url="aHR0cHM6Ly9wbHVnaW5zLmdyYWRsZS5vcmcvbTIv">https://plugins.gradle.org/m2/<i class="fa fa-external-link-alt"></i></span></td>
</tr>
<tr>
<td align="left">spring</td>
<td align="left"><span class="exturl" data-url="aHR0cHM6Ly9tYXZlbi5hbGl5dW4uY29tL3JlcG9zaXRvcnkvc3ByaW5n">https://maven.aliyun.com/repository/spring<i class="fa fa-external-link-alt"></i></span></td>
<td align="left"><span class="exturl" data-url="aHR0cHM6Ly9tYXZlbi5hbGl5dW4uY29tL25leHVzL2NvbnRlbnQvcmVwb3NpdG9yaWVzL3NwcmluZw==">https://maven.aliyun.com/nexus/content/repositories/spring<i class="fa fa-external-link-alt"></i></span></td>
<td align="left"><span class="exturl" data-url="aHR0cDovL3JlcG8uc3ByaW5nLmlvL2xpYnMtbWlsZXN0b25lLw==">http://repo.spring.io/libs-milestone/<i class="fa fa-external-link-alt"></i></span></td>
</tr>
<tr>
<td align="left">spring-plugin</td>
<td align="left"><span class="exturl" data-url="aHR0cHM6Ly9tYXZlbi5hbGl5dW4uY29tL3JlcG9zaXRvcnkvc3ByaW5nLXBsdWdpbg==">https://maven.aliyun.com/repository/spring-plugin<i class="fa fa-external-link-alt"></i></span></td>
<td align="left"><span class="exturl" data-url="aHR0cHM6Ly9tYXZlbi5hbGl5dW4uY29tL25leHVzL2NvbnRlbnQvcmVwb3NpdG9yaWVzL3NwcmluZy1wbHVnaW4=">https://maven.aliyun.com/nexus/content/repositories/spring-plugin<i class="fa fa-external-link-alt"></i></span></td>
<td align="left"><span class="exturl" data-url="aHR0cDovL3JlcG8uc3ByaW5nLmlvL3BsdWdpbnMtcmVsZWFzZS8=">http://repo.spring.io/plugins-release/<i class="fa fa-external-link-alt"></i></span></td>
</tr>
<tr>
<td align="left">grails-core</td>
<td align="left"><span class="exturl" data-url="aHR0cHM6Ly9tYXZlbi5hbGl5dW4uY29tL3JlcG9zaXRvcnkvZ3JhaWxzLWNvcmU=">https://maven.aliyun.com/repository/grails-core<i class="fa fa-external-link-alt"></i></span></td>
<td align="left"><span class="exturl" data-url="aHR0cHM6Ly9tYXZlbi5hbGl5dW4uY29tL25leHVzL2NvbnRlbnQvcmVwb3NpdG9yaWVzL2dyYWlscy1jb3Jl">https://maven.aliyun.com/nexus/content/repositories/grails-core<i class="fa fa-external-link-alt"></i></span></td>
<td align="left"><span class="exturl" data-url="aHR0cHM6Ly9yZXBvLmdyYWlscy5vcmcvZ3JhaWxzL2NvcmU=">https://repo.grails.org/grails/core<i class="fa fa-external-link-alt"></i></span></td>
</tr>
<tr>
<td align="left">apache snapshots</td>
<td align="left"><span class="exturl" data-url="aHR0cHM6Ly9tYXZlbi5hbGl5dW4uY29tL3JlcG9zaXRvcnkvYXBhY2hlLXNuYXBzaG90cw==">https://maven.aliyun.com/repository/apache-snapshots<i class="fa fa-external-link-alt"></i></span></td>
<td align="left"><span class="exturl" data-url="aHR0cHM6Ly9tYXZlbi5hbGl5dW4uY29tL25leHVzL2NvbnRlbnQvcmVwb3NpdG9yaWVzL2FwYWNoZS1zbmFwc2hvdHM=">https://maven.aliyun.com/nexus/content/repositories/apache-snapshots<i class="fa fa-external-link-alt"></i></span></td>
<td align="left"><span class="exturl" data-url="aHR0cHM6Ly9yZXBvc2l0b3J5LmFwYWNoZS5vcmcvc25hcHNob3RzLw==">https://repository.apache.org/snapshots/<i class="fa fa-external-link-alt"></i></span></td>
</tr>
</tbody></table>
<p><strong>在线搜索jar包依赖</strong>：<span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIuYWxpeXVuLmNvbS9tdm4vc2VhcmNo">https://developer.aliyun.com/mvn/search<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="Springboot集成nacos服务"><a href="#Springboot集成nacos服务" class="headerlink" title="Springboot集成nacos服务"></a>Springboot集成nacos服务</h2><p>主要介绍Springboot项目以微服务形式集成nacos，如果使用springmvc或者是普通springboot项目集成nacos服务，可以参考官方文档。<strong>关于版本问题</strong>，我将官方部分（个人感觉初次使用可能用得上，并非全部）文档引入到本次教程。</p>
<p><strong>tips</strong>：sts个性化注解设置，Window—&gt; Preferences—&gt;Java—&gt;Code Style—&gt;Code Templates—&gt;Comments：Types method</p>
<p>在集成nacos服务之前，一步一步来，从构建第一个springboot项目开始。</p>
<h3 id="springboot项目构建"><a href="#springboot项目构建" class="headerlink" title="springboot项目构建"></a>springboot项目构建</h3><p>可能你有疑问，springboot版本如何选择，下图支持最后维护时间可供参考：</p>
<p><img data-src="https://s1.ax1x.com/2023/04/20/p9kL7iF.png"></p>
<p>目前Springboot官网最新稳定版本是Springboot3.0.5，实际工作中个人使用2.7.x版本，未来主流可能是3.X版本。目前主流依旧是Springboot2.x，更倾向于2.6.x或者2.7.x作为开发构建版本，当然也是以spring官网显示维护时间作为参考。</p>
<p>项目构建方式有多种，总体上分官网脚手架构建和开发工具构建，此处以官网和STS4为示例。不必纠结，怎么顺手怎么来。</p>
<ul>
<li>官网构建：<span class="exturl" data-url="aHR0cHM6Ly9zdGFydC5zcHJpbmcuaW8v">https://start.spring.io/<i class="fa fa-external-link-alt"></i></span> </li>
<li>STS4开发工具构建</li>
<li>VSCode 开发工具构建</li>
<li>IntelliJ IDEA工具构建</li>
</ul>
<p><strong>如果官网访问速度缓慢，你还可以通过阿里云脚手架网站构建</strong>：<span class="exturl" data-url="aHR0cHM6Ly9zdGFydC5hbGl5dW4uY29tLw==">https://start.aliyun.com/<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>springboot项目之官网构建</strong></p>
<p>访问：<span class="exturl" data-url="aHR0cHM6Ly9zdGFydC5zcHJpbmcuaW8v">https://start.spring.io/<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>第一步</strong></p>
<ol>
<li>Project：选择Maven作为项目构建方式</li>
<li>Language：选择Java作为开发语言</li>
<li>Spring Boot：选择springboot2.7.6稳定版本作为构建版本</li>
<li>Dependencies：选择pom依赖的jar包</li>
</ol>
<p><img data-src="https://s1.ax1x.com/2023/04/20/p9kLIaT.png"></p>
<p><strong>第二步</strong></p>
<ol>
<li>Project Metadata：项目元数据，Group组名、Artifact工程名、Name项目名称、Description项目描述、Package name包名。</li>
<li>Packaging：选择Jar作为默认打包方式。</li>
<li>Java：选择JDK17作为Java项目默认构建版本。</li>
<li>GENERATE：生成构建项目demo并下载。</li>
<li>EXPLORE：展示出构建项目结构清单以及文件具体内容。</li>
</ol>
<p>以下展示Project Metadata截图以及EXPLORE截图。</p>
<p><img data-src="https://s1.ax1x.com/2023/04/20/p9kLoIU.png"></p>
<p>EXPLORE：展示项目层次结构</p>
<p><img data-src="https://s1.ax1x.com/2023/04/20/p9kLhq0.png"></p>
<p><strong>springboot项目之STS4工具构建</strong></p>
<p>依次选择File–&gt;new–&gt;Spring Starter Project，或者使用快捷键ALT+SHIFT+N。</p>
<p><strong>配置Project步骤一</strong></p>
<p>具体含义参考上面官网构建时说明。</p>
<p><img data-src="https://s1.ax1x.com/2023/04/20/p9kLHG4.png"></p>
<p><strong>配置Project步骤二</strong></p>
<p>选择springboot版本，以及配置所需要的pom.xml依赖。</p>
<p>如下图所示，<strong>Spring Boot Version</strong>个人选择的是springboot2.7.6稳定版本作为演示，目前最新稳定版本可选为springboot3.0.5。<strong>Frequently Used</strong>表示官方建议使用到的一些工具，讲几个个人使用过的。</p>
<p>Lombok用于简化实体类（bean、entity、repository）get、set方法以及log日志打印，个人开发很实用，团队中慎重使用。</p>
<p>MariaDB Driver是MariaDB数据库驱动，可以看做是MySQL替代产品。Spring Data JPA是对ORM持久化框架Hibernate近一步封装，简化了SQL操作。Spring Data MongoDB是nosql数据库中的一种，其它有Redis，主要用于做缓存使用。Spring Data Redis是nosql数据库中的一种，前面刚好介绍到了。</p>
<p><strong>搜索框Type to search dependencies</strong>，可以进行检索需要的依赖，也可以展开下面小箭头选择依赖。比如展开下图上的SQL选项，有多种数据库驱动依赖可供选择使用。</p>
<p><img data-src="https://s1.ax1x.com/2023/04/20/p9kLqz9.png"></p>
<h3 id="springboot集成微服务nacos"><a href="#springboot集成微服务nacos" class="headerlink" title="springboot集成微服务nacos"></a>springboot集成微服务nacos</h3><p>正式搭建之前，注意项目环境：使用Spring如何集成nacos？使用springboot如何集成nacos？使用springcloud微服务组件如何集成nacos？此处发出了三连问，也许你在使用时也会遇到。不同的环境，可能得到的结果不一样。</p>
<p>**下面将演示 springboot 项目集成微服务组件 nacos 过程 **。</p>
<p><strong>1、启动示例</strong></p>
<p>本地正常启动场景，使用127.0.0.1或者localhost，默认端口：8080。特殊情况在配置文件指定了固定IP地址。例如在application.properties 或者 application.yml 指定IP和端口，两种配置方式保留一种即可。</p>
<p>示例：application.properties</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">server.port</span>=<span class="string">8081</span></span><br><span class="line"><span class="attr">server.address</span>=<span class="string">192.168.1.111</span></span><br></pre></td></tr></table></figure>

<p>示例：application.yml </p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8081</span></span><br><span class="line">  <span class="attr">address:</span> <span class="number">192.168</span><span class="number">.1</span><span class="number">.111</span></span><br></pre></td></tr></table></figure>

<p>springboot启动过程：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">  .   ____          _            __ _ _</span><br><span class="line"> /\\ / ___<span class="string">&#x27;_ __ _ _(_)_ __  __ _ \ \ \ \</span></span><br><span class="line"><span class="string">( ( )\___ | &#x27;</span>_ | <span class="string">&#x27;_| | &#x27;</span>_ \/ _` | \ \ \ \</span><br><span class="line"> \\/  ___)| |_)| | | | | || (_| |  ) ) ) )</span><br><span class="line">  <span class="string">&#x27;  |____| .__|_| |_|_| |_\__, | / / / /</span></span><br><span class="line"><span class="string"> =========|_|==============|___/=/_/_/_/</span></span><br><span class="line"><span class="string"> :: Spring Boot ::                (v2.7.6)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">2022-10-26 20:13:06.902  INFO 16620 --- [           main] com.test.demo.Application                : Starting Application using Java 17.0.2 on kart with PID 16620 (...)</span></span><br><span class="line"><span class="string">2022-10-26 20:13:08.091  INFO 16620 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)</span></span><br><span class="line"><span class="string">...</span></span><br><span class="line"><span class="string">2022-10-26 20:13:10.260  INFO 16620 --- [           main] c.a.c.n.registry.NacosServiceRegistry    : nacos registry, DEFAULT_GROUP springboot-test 192.168.245.1:8080 register finished</span></span><br><span class="line"><span class="string">2022-10-26 20:13:10.579  INFO 16620 --- [           main] com.test.demo.Application                : Started Application in 4.45 seconds (JVM running for 5.251)</span></span><br></pre></td></tr></table></figure>



<p><strong>2、配置pom.xml</strong></p>
<p> <strong>springbot版本简要说明</strong>：springboot GA(General Availability 表示稳定版本)，各分支最新稳定版本2.3.12、2.4.13、2.5.14、2.6.14、2.7.10、3.0.5</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- springboot GA(最新稳定版本):2.3.12、2.4.13、2.5.14、2.6.14、2.7.10、3.0.5 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- springboot pom.xml parent父类 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>2.7.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>统一版本管理</strong>：JDK版本：17，spring-cloud-dependencies版本采用2021.0.4，spring-cloud-alibaba-dependencies版本采用：2021.0.4.0，和我保持一致，可以采用springboot2.7.x进行测试使用。目前，如果使用阿里云脚手架构建，springboot版本推荐不高于2.6.13。在nacos系列博文第一篇《MySQL数据库与Nacos搭建监控服务》中有写到如何构建，这里不在赘述。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">java.version</span>&gt;</span>17<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">spring-cloud-dependencies.version</span>&gt;</span>2021.0.4<span class="tag">&lt;/<span class="name">spring-cloud-dependencies.version</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">spring-cloud-alibaba-dependencies.version</span>&gt;</span>2021.0.4.0<span class="tag">&lt;/<span class="name">spring-cloud-alibaba-dependencies.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span>	</span><br></pre></td></tr></table></figure>

<p><strong>pom依赖管理：dependency</strong></p>
<p>主要注意版本对应：</p>
<ul>
<li>微服务：spring cloud依赖</li>
<li>微服务：spring cloud alibaba依赖</li>
<li>微服务：nacos config依赖、nacos discovery依赖、bootstrap依赖</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 总包管理 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- spring cloud依赖 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-cloud-dependencies.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">			    <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">			    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- spring cloud alibaba依赖 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-alibaba-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-cloud-alibaba-dependencies.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">			    <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">			    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span>	</span><br><span class="line"><span class="comment">&lt;!-- 引入相关依赖 --&gt;</span>	</span><br><span class="line">	<span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 微服务 nacos config依赖 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">   			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    		<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-config<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 微服务 nacos discovery依赖 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    		<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 微服务 bootstrap依赖  --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">		    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">		    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-bootstrap<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span>	</span><br></pre></td></tr></table></figure>



<p><strong>3、配置application.properties &amp; application.yml &amp; bootstrap.properties</strong></p>
<p>如果使用开发环境多配置文件设置，可以使用：dev、prod、test进行区分，使用参数 spring.profiles.active&#x3D;dev 进行指定为开发环境。</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="comment"># api port</span></span><br><span class="line"><span class="attr">server.port</span>=<span class="string">8080</span></span><br><span class="line"><span class="comment"># 开发环境多配置文件设置：dev、prod、test</span></span><br><span class="line"><span class="attr">spring.profiles.active</span>=<span class="string">dev</span></span><br><span class="line"><span class="comment"># 服务名称</span></span><br><span class="line"><span class="attr">spring.application.name</span>=<span class="string">springboot-test</span></span><br><span class="line"><span class="comment">###################################nacos配置#######################################</span></span><br><span class="line"><span class="comment"># nacos 打开监控 配合普罗米修斯进行监控 官方提供了MySQL初始化sql文件 在conf目录下：nacos-mysql.sql</span></span><br><span class="line"><span class="comment"># 暴露metrics数据</span></span><br><span class="line"><span class="attr">management.endpoints.web.exposure.include</span>=<span class="string">*</span></span><br><span class="line"><span class="comment"># nacos 配置注册远程服务地址&#123;config.server-addr和server-addr&#125;</span></span><br><span class="line"><span class="comment">#spring.cloud.nacos.config.server-addr=192.168.245.132:8848</span></span><br><span class="line"><span class="comment"># nacos 配置注册与发现&#123;discovery.server-addr&#125;</span></span><br><span class="line"><span class="attr">spring.cloud.nacos.discovery.server-addr</span>=<span class="string">192.168.245.132:8848</span></span><br><span class="line"><span class="comment">#spring.cloud.nacos.discovery.namespace=public</span></span><br><span class="line"><span class="attr">spring.cloud.nacos.config.file-extension</span>=<span class="string">properties</span></span><br><span class="line"><span class="comment">###################################nacos配置#######################################</span></span><br></pre></td></tr></table></figure>

<p><strong>bootstrap.properties</strong></p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="comment">#bootstrap.properties基础配置</span></span><br><span class="line"><span class="comment">#服务名称</span></span><br><span class="line"><span class="attr">spring.application.name</span>=<span class="string">springboot-test</span></span><br><span class="line"><span class="comment">#暴露config配置服务地址(动态更新)</span></span><br><span class="line"><span class="attr">spring.cloud.nacos.config.server-addr</span>=<span class="string">192.168.245.132:8848</span></span><br><span class="line"><span class="comment">#配置config文件扩展名(properties &amp; yml)</span></span><br><span class="line"><span class="attr">spring.cloud.nacos.config.file-extension</span>=<span class="string">properties</span></span><br></pre></td></tr></table></figure>



<p><strong>4、springboot入口：配置Application.java</strong></p>
<ul>
<li>@SpringBootApplication：sringboot启动必备注解</li>
<li>@EnableDiscoveryClient：用于nacos发现客户端注解</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span>	<span class="comment">//sringboot启动必备注解</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span>  <span class="comment">//用于nacos发现客户端注解</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Application</span> &#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">		SpringApplication.run(Application.class, args);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>TestController类引入测试代码：使用 Spring Cloud 原生注解，开启自动更新。</p>
<p>单一配置场景，通过@Value注解，配置动态配置获取测试。</p>
<p>多属性配置场景，可以通过@Autowired 注解注入自定义配置类。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RefreshScope</span> <span class="comment">// Spring Cloud 原生注解 开启自动更新</span></span><br><span class="line"><span class="meta">@RequestMapping(value = &quot;/t&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestController</span> &#123;</span><br><span class="line">	<span class="comment">/** 使用动态配置获取测试 --BEGIN-- **/</span></span><br><span class="line">	<span class="meta">@Value(&quot;$&#123;alibaba.config.discovery&#125;&quot;)</span></span><br><span class="line">	<span class="keyword">private</span> String discovery;</span><br><span class="line">	</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;alibaba.config.name&#125;&quot;)</span></span><br><span class="line">	<span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@GetMapping(&quot;/getConfig&quot;)</span></span><br><span class="line">	<span class="keyword">public</span> String <span class="title function_">getConfig</span><span class="params">()</span> &#123;</span><br><span class="line">		log.info(<span class="string">&quot;getConfig&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&quot;</span>);</span><br><span class="line">		<span class="keyword">return</span> <span class="string">&quot;getConfig&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&quot;</span> + <span class="string">&quot;发现：&quot;</span> + discovery + <span class="string">&quot;&gt;&gt;&gt;服务名称：&quot;</span> + name;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="meta">@Value(&quot;$&#123;custom.config.find&#125;&quot;)</span></span><br><span class="line">	<span class="keyword">private</span> String find;</span><br><span class="line">	</span><br><span class="line">	<span class="meta">@Value(&quot;$&#123;custom.config.say&#125;&quot;)</span></span><br><span class="line">	<span class="keyword">private</span> String say;</span><br><span class="line">	</span><br><span class="line">	<span class="meta">@GetMapping(&quot;/meet&quot;)</span></span><br><span class="line">	<span class="keyword">public</span> String <span class="title function_">meet</span><span class="params">()</span> &#123;</span><br><span class="line">		log.info(<span class="string">&quot;meet&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&quot;</span>);</span><br><span class="line">		<span class="keyword">return</span> <span class="string">&quot;meet&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&quot;</span> + <span class="string">&quot;偶遇老湿：&quot;</span> + find + <span class="string">&quot;&gt;&gt;&gt;你好：&quot;</span> + say;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">/** 使用动态配置获取测试 --END-- **/</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>可以根据业务情况而定，将多个配置封装到一个类里面，如下所示，新建CustomConf类：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * desc:对象配置类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Value</span> </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Component</span> <span class="doctag">@ConfigurationProperties</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@ConfigurationProperties(prefix = &quot;custom&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CustomConf</span> &#123;</span><br><span class="line">	<span class="keyword">private</span> Integer one;</span><br><span class="line">	<span class="keyword">private</span> Integer two;</span><br><span class="line">	<span class="keyword">private</span> Integer three;</span><br><span class="line">	<span class="keyword">private</span> String description;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 此处省略掉了 get set 方法，实际需要补上</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>使用到注解：</p>
<ul>
<li>@Value ：通常情况，使用注解取值。</li>
<li>@Component ：加入注解，便于被扫描到。</li>
<li>@ConfigurationProperties：引入配置，通过prefix指定配置前缀。</li>
</ul>
<p>在项目中注入：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> CustomConf custom;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/custom&quot;)</span></span><br><span class="line">   <span class="keyword">public</span> String <span class="title function_">custom</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="keyword">return</span> <span class="string">&quot;[custom] &quot;</span> + custom;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>





<p><strong>nacos 控制台：新建配置</strong>：springboot-test.properties</p>
<p><img data-src="https://img2023.cnblogs.com/blog/1440924/202304/1440924-20230420163226056-1625896026.png"></p>
<p><strong>nacos 控制台：配置详情</strong>：配置的比较随意，参考看看就行</p>
<p><img data-src="https://img2023.cnblogs.com/blog/1440924/202304/1440924-20230420163225744-1095188210.png"></p>
<p><strong>运行服务</strong>：</p>
<ul>
<li>nohup：代表脱离终端运行</li>
<li>&amp;：代表放入后台</li>
<li>-Dspring.profiles.active&#x3D;prod：指定为生产环境</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@Centos9-Stream <span class="built_in">test</span>]<span class="comment"># nohup java -jar -Dspring.profiles.active=prod /opt/workspace/test/springboot-nacos-cloud-0.0.1-SNAPSHOT.jar  &gt; /opt/</span></span><br><span class="line">workspace/test/springboot-nacos.log 2&gt;&amp;1 &amp;</span><br><span class="line">[1] 4628</span><br></pre></td></tr></table></figure>

<p><strong>测试接口</strong>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://192.168.245.132:8082/t/getConfig</span><br></pre></td></tr></table></figure>

<p>你也可以使用curl命令请求：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -X GET http://192.168.245.132:8082/t/getConfig</span><br></pre></td></tr></table></figure>

<p><strong>得到输出结果</strong>：</p>
<p>getConfig&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;发现：配置&gt;&gt;&gt;服务名称：nacos服务</p>
<p>查看日志验证：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">tail</span> -n 5 springboot-nacos.log</span><br></pre></td></tr></table></figure>



<p><img data-src="https://img2023.cnblogs.com/blog/1440924/202304/1440924-20230420163225861-2052120334.png"></p>
<p>验证成功，getConfig日志打印出来了。</p>
<p>至此，springboot集成微服务组件nacos联动完成，详细说明可以参考上一篇文章，文初有说明，这里不在赘述。</p>
<p><strong>实际使用过程中，难免会遇到各种问题，此时不用慌，有详细官方文档可供参考。如下引入了nacos部分文档，解决搭建过程中遇到的问题，提供参考</strong>。</p>
<h3 id="nacos版本问题"><a href="#nacos版本问题" class="headerlink" title="nacos版本问题"></a>nacos版本问题</h3><p><strong>如果你使用nacos 1.x升级到nacos 2.x版本，建议参考官方兼容性说明与升级文档</strong>。</p>
<h4 id="nacos2-0-0版本兼容性说明"><a href="#nacos2-0-0版本兼容性说明" class="headerlink" title="nacos2.0.0版本兼容性说明"></a>nacos2.0.0版本兼容性说明</h4><p>兼容性说明：<span class="exturl" data-url="aHR0cHM6Ly9uYWNvcy5pby96aC1jbi9kb2NzL3YyL3VwZ3JhZGluZy8yLjAuMC1jb21wYXRpYmlsaXR5Lmh0bWw=">https://nacos.io/zh-cn/docs/v2/upgrading/2.0.0-compatibility.html<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>目前官网推荐使用nacos2.1.1稳定版</strong>，推荐的上一个稳定版本是2.0.3。</p>
<p>Nacos2.0版本相比1.X新增了gRPC的通信方式，因此需要增加2个端口。新增端口是在配置的主端口(server.port)基础上，进行一定偏移量自动生成。</p>
<table>
<thead>
<tr>
<th>端口</th>
<th>与主端口的偏移量</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>9848</td>
<td>1000</td>
<td>客户端gRPC请求服务端端口，用于客户端向服务端发起连接和请求</td>
</tr>
<tr>
<td>9849</td>
<td>1001</td>
<td>服务端gRPC请求服务端端口，用于服务间同步等</td>
</tr>
</tbody></table>
<p><strong>使用VIP&#x2F;nginx请求时，需要配置成TCP转发，不能配置http2转发，否则连接会被nginx断开。</strong></p>
<p>客户端拥有相同的计算逻辑，用户如同1.X的使用方式，配置主端口(默认8848)，通过相同的偏移量，计算对应gRPC端口(默认9848)。</p>
<p>因此<strong>如果客户端和服务端之前存在端口转发或防火墙时，需要对端口转发配置和防火墙配置做相应的调整</strong>。</p>
<h4 id="nacos升级文档"><a href="#nacos升级文档" class="headerlink" title="nacos升级文档"></a>nacos升级文档</h4><p>升级文档：<span class="exturl" data-url="aHR0cHM6Ly9uYWNvcy5pby96aC1jbi9kb2NzL3YyL3VwZ3JhZGluZy8yLjAuMC11cGdyYWRpbmcuaHRtbA==">https://nacos.io/zh-cn/docs/v2/upgrading/2.0.0-upgrading.html<i class="fa fa-external-link-alt"></i></span></p>
<h4 id="nacos版本与spring-cloud对应关系"><a href="#nacos版本与spring-cloud对应关系" class="headerlink" title="nacos版本与spring cloud对应关系"></a>nacos版本与spring cloud对应关系</h4><blockquote>
<p>由于 Spring Boot 3.0，Spring Boot 2.7~2.4 和 2.4 以下版本之间变化较大，目前企业级客户老项目相关 Spring Boot 版本仍停留在 Spring Boot 2.4 以下，为了同时满足存量用户和新用户不同需求，社区以 Spring Boot 3.0 和 2.4 分别为分界线，同时维护 2022.x、2021.x、2.2.x 三个分支迭代。 为了规避相关构建过程中的依赖冲突问题，我们建议可以通过 <span class="exturl" data-url="aHR0cHM6Ly9zdGFydC5hbGl5dW4uY29tLw==">云原生应用脚手架<i class="fa fa-external-link-alt"></i></span> 进行项目创建。</p>
</blockquote>
<p><strong>2022.x 分支</strong></p>
<p>适配 Spring Boot 3.0，Spring Cloud 2022.x 版本及以上的 Spring Cloud Alibaba 版本按从新到旧排列如下表（最新版本用*标记）： (注意，该分支 Spring Cloud Alibaba 版本命名方式进行了调整，未来将对应 Spring Cloud 版本，前三位为 Spring Cloud 版本，最后一位为扩展版本，比如适配 Spring Cloud 2022.0.0 版本对应的 Spring Cloud Alibaba 第一个版本为：2022.0.0.0，第个二版本为：2022.0.0.1，依此类推)</p>
<table>
<thead>
<tr>
<th>Spring Cloud Alibaba Version</th>
<th>Spring Cloud Version</th>
<th>Spring Boot Version</th>
</tr>
</thead>
<tbody><tr>
<td>2022.0.0.0-RC*</td>
<td>Spring Cloud 2022.0.0</td>
<td>3.0.0</td>
</tr>
</tbody></table>
<p><strong>2021.x 分支</strong></p>
<p>适配 Spring Boot 2.4，Spring Cloud 2021.x 版本及以上的 Spring Cloud Alibaba 版本按从新到旧排列如下表（最新版本用*标记）： (注意，该分支 Spring Cloud Alibaba 版本命名方式进行了调整，未来将对应 Spring Cloud 版本，前三位为 Spring Cloud 版本，最后一位为扩展版本，比如适配 Spring Cloud 2021.0.1 版本对应的 Spring Cloud Alibaba 第一个版本为：2021.0.1.0，第个二版本为：2021.0.1.1，依此类推)</p>
<table>
<thead>
<tr>
<th>Spring Cloud Alibaba Version</th>
<th>Spring Cloud Version</th>
<th>Spring Boot Version</th>
</tr>
</thead>
<tbody><tr>
<td>2021.0.5.0*</td>
<td>Spring Cloud 2021.0.5</td>
<td>2.6.13</td>
</tr>
<tr>
<td>2021.0.4.0*</td>
<td>Spring Cloud 2021.0.4</td>
<td>2.6.11</td>
</tr>
<tr>
<td>2021.0.1.0</td>
<td>Spring Cloud 2021.0.1</td>
<td>2.6.3</td>
</tr>
<tr>
<td>2021.1</td>
<td>Spring Cloud 2020.0.1</td>
<td>2.4.2</td>
</tr>
</tbody></table>
<p><strong>2.2.x 分支</strong></p>
<p>适配 Spring Boot 为 2.4，Spring Cloud Hoxton 版本及以下的 Spring Cloud Alibaba 版本按从新到旧排列如下表（最新版本用*标记）：</p>
<table>
<thead>
<tr>
<th>Spring Cloud Alibaba Version</th>
<th>Spring Cloud Version</th>
<th>Spring Boot Version</th>
</tr>
</thead>
<tbody><tr>
<td>2.2.10-RC1*</td>
<td>Spring Cloud Hoxton.SR12</td>
<td>2.3.12.RELEASE</td>
</tr>
<tr>
<td>2.2.9.RELEASE*</td>
<td>Spring Cloud Hoxton.SR12</td>
<td>2.3.12.RELEASE</td>
</tr>
<tr>
<td>2.2.8.RELEASE</td>
<td>Spring Cloud Hoxton.SR12</td>
<td>2.3.12.RELEASE</td>
</tr>
<tr>
<td>2.2.7.RELEASE</td>
<td>Spring Cloud Hoxton.SR12</td>
<td>2.3.12.RELEASE</td>
</tr>
<tr>
<td>2.2.6.RELEASE</td>
<td>Spring Cloud Hoxton.SR9</td>
<td>2.3.2.RELEASE</td>
</tr>
<tr>
<td>2.2.1.RELEASE</td>
<td>Spring Cloud Hoxton.SR3</td>
<td>2.2.5.RELEASE</td>
</tr>
<tr>
<td>2.2.0.RELEASE</td>
<td>Spring Cloud Hoxton.RELEASE</td>
<td>2.2.X.RELEASE</td>
</tr>
<tr>
<td>2.1.4.RELEASE</td>
<td>Spring Cloud Greenwich.SR6</td>
<td>2.1.13.RELEASE</td>
</tr>
<tr>
<td>2.1.2.RELEASE</td>
<td>Spring Cloud Greenwich</td>
<td>2.1.X.RELEASE</td>
</tr>
<tr>
<td>2.0.4.RELEASE(停止维护，建议升级)</td>
<td>Spring Cloud Finchley</td>
<td>2.0.X.RELEASE</td>
</tr>
<tr>
<td>1.5.1.RELEASE(停止维护，建议升级)</td>
<td>Spring Cloud Edgware</td>
<td>1.5.X.RELEASE</td>
</tr>
</tbody></table>
<h4 id="组件版本关系"><a href="#组件版本关系" class="headerlink" title="组件版本关系"></a>组件版本关系</h4><p><strong>版本说明</strong>：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2FsaWJhYmEvc3ByaW5nLWNsb3VkLWFsaWJhYmEvd2lraS8lRTclODklODglRTYlOUMlQUMlRTglQUYlQjQlRTYlOTglOEU=">https://github.com/alibaba/spring-cloud-alibaba/wiki/版本说明<i class="fa fa-external-link-alt"></i></span></p>
<p>每个 Spring Cloud Alibaba 版本及其自身所适配的各组件对应版本如下表所示（注意，Spring Cloud Dubbo 从 2021.0.1.0 起已被移除出主干，不再随主干演进）：</p>
<table>
<thead>
<tr>
<th>Spring Cloud Alibaba Version</th>
<th>Sentinel Version</th>
<th>Nacos Version</th>
<th>RocketMQ Version</th>
<th>Dubbo Version</th>
<th>Seata Version</th>
</tr>
</thead>
<tbody><tr>
<td>2021.0.5.0</td>
<td>1.8.6</td>
<td>2.2.0</td>
<td>4.9.4</td>
<td>~</td>
<td>1.6.1</td>
</tr>
<tr>
<td>2.2.10-RC1</td>
<td>1.8.6</td>
<td>2.2.0</td>
<td>4.9.4</td>
<td>~</td>
<td>1.6.1</td>
</tr>
<tr>
<td>2022.0.0.0-RC1</td>
<td>1.8.6</td>
<td>2.2.1-RC</td>
<td>4.9.4</td>
<td>~</td>
<td>1.6.1</td>
</tr>
<tr>
<td>2.2.9.RELEASE</td>
<td>1.8.5</td>
<td>2.1.0</td>
<td>4.9.4</td>
<td>~</td>
<td>1.5.2</td>
</tr>
<tr>
<td>2021.0.4.0</td>
<td>1.8.5</td>
<td>2.0.4</td>
<td>4.9.4</td>
<td>~</td>
<td>1.5.2</td>
</tr>
<tr>
<td>2.2.8.RELEASE</td>
<td>1.8.4</td>
<td>2.1.0</td>
<td>4.9.3</td>
<td>~</td>
<td>1.5.1</td>
</tr>
<tr>
<td>2021.0.1.0</td>
<td>1.8.3</td>
<td>1.4.2</td>
<td>4.9.2</td>
<td>~</td>
<td>1.4.2</td>
</tr>
<tr>
<td>2.2.7.RELEASE</td>
<td>1.8.1</td>
<td>2.0.3</td>
<td>4.6.1</td>
<td>2.7.13</td>
<td>1.3.0</td>
</tr>
<tr>
<td>2.2.6.RELEASE</td>
<td>1.8.1</td>
<td>1.4.2</td>
<td>4.4.0</td>
<td>2.7.8</td>
<td>1.3.0</td>
</tr>
<tr>
<td>2021.1 or 2.2.5.RELEASE or 2.1.4.RELEASE or 2.0.4.RELEASE</td>
<td>1.8.0</td>
<td>1.4.1</td>
<td>4.4.0</td>
<td>2.7.8</td>
<td>1.3.0</td>
</tr>
<tr>
<td>2.2.3.RELEASE or 2.1.3.RELEASE or 2.0.3.RELEASE</td>
<td>1.8.0</td>
<td>1.3.3</td>
<td>4.4.0</td>
<td>2.7.8</td>
<td>1.3.0</td>
</tr>
<tr>
<td>2.2.1.RELEASE or 2.1.2.RELEASE or 2.0.2.RELEASE</td>
<td>1.7.1</td>
<td>1.2.1</td>
<td>4.4.0</td>
<td>2.7.6</td>
<td>1.2.0</td>
</tr>
<tr>
<td>2.2.0.RELEASE</td>
<td>1.7.1</td>
<td>1.1.4</td>
<td>4.4.0</td>
<td>2.7.4.1</td>
<td>1.0.0</td>
</tr>
<tr>
<td>2.1.1.RELEASE or 2.0.1.RELEASE or 1.5.1.RELEASE</td>
<td>1.7.0</td>
<td>1.1.4</td>
<td>4.4.0</td>
<td>2.7.3</td>
<td>0.9.0</td>
</tr>
<tr>
<td>2.1.0.RELEASE or 2.0.0.RELEASE or 1.5.0.RELEASE</td>
<td>1.6.3</td>
<td>1.1.1</td>
<td>4.4.0</td>
<td>2.7.3</td>
<td>0.7.1</td>
</tr>
</tbody></table>
<h4 id="排查错误"><a href="#排查错误" class="headerlink" title="排查错误"></a>排查错误</h4><p><strong>启动时报错<code>Connection is unregistered.</code>或<code>Client not connected,current status:STARTING</code>.</strong></p>
<p>原因是<strong>客户端gRPC无法和服务端创建连接</strong>，请先使用<code>telnet $&#123;nacos.server.address&#125;:$&#123;nacos.server.grpc.port&#125;</code>进行测试，查看网络是否畅通，服务端端口是否已经正确监听。</p>
<p><strong>Nacos2.0增加了9848，9849端口来进行GRPC通信，我需要在application.properties中额外配置吗？</strong></p>
<p>不需要，这两个端口在Nacos2.0内部是通过8848+1000以及8848+1001这种偏移量方式计算出来的，不需要用户额外在配置文件中配置。但如果使用的是docker或存在端口转发方式启动，需要把这两个端口进行配置。</p>
<p><strong>启动nacos2.0时希望用nginx 代理，9848这个端口怎样处理，要通过nginx暴露出来么？以及docker是否需要映射？</strong></p>
<p>如果存在防火墙或者nginx端口转发问题，需要进行相应的端口暴露配置。如在nginx中，在已经暴露8848(x)的基础上，需要额外暴露9848（x+1000)。</p>
<p><strong>解决版本冲突问题时遇到端口未开放</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">2022-12-07 20:08:13.792  INFO 17152 --- [t.remote.worker] com.alibaba.nacos.common.remote.client   : [236c02fe-157b-475e-9540-b11bf110f49e_config-0] Fail to connect server, after trying 2 <span class="built_in">times</span>, last try server is &#123;serverIp = <span class="string">&#x27;192.168.245.132&#x27;</span>, server main port = 8858&#125;, error = unknown</span><br><span class="line">2022-12-07 20:08:16.213 ERROR 17152 --- [           main] c.a.n.c.remote.client.grpc.GrpcClient    : Server check fail, please check server 192.168.245.132 ,port 9858 is available , error =&#123;&#125;</span><br></pre></td></tr></table></figure>



<p><strong>分析问题</strong>：检查192.168.245.132服务器的端口9858是否可用。如果参考了上面文档，你会发现我默认端口为8858，nacos2.x使用gRPC通信方式，+1000偏移量检测9858是否可用，由于防火墙或端口转发等原因，需要开发相应端口。</p>
<p><strong>开放相应端口</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=9858/tcp --permanent</span><br><span class="line">firewall-cmd --zone=public --add-port=9859/tcp --permanent</span><br></pre></td></tr></table></figure>

<p><strong>重载firewall-cmd服务</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure>

<p><strong>查看开放的端口</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@Centos9-Stream nacos-2.0.4]<span class="comment"># firewall-cmd --list-all</span></span><br><span class="line">public (active)</span><br><span class="line">...</span><br><span class="line">ports: 8848/tcp 9001-9010/tcp 8081/tcp 3000/tcp 8082/tcp 8083/tcp 8858/tcp 9858/tcp</span><br><span class="line">...</span><br></pre></td></tr></table></figure>



<p><strong>启动多个nacos server服务导致nacos-server.jar占用 PID 问题</strong></p>
<p>定位问题：查看nacos.log日志文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">2022-12-07 20:19:02,601 INFO Starting Nacos v2.0.3 on Centos9-Stream with PID 34970 (/usr/local/nacos/target/nacos-server.jar started by root <span class="keyword">in</span> /usr/local/nacos-2.0.4)</span><br></pre></td></tr></table></figure>



<p><strong>参考资料</strong>：</p>
<ul>
<li>springboot2.7.x官方文档：<span class="exturl" data-url="aHR0cHM6Ly9kb2NzLnNwcmluZy5pby9zcHJpbmctYm9vdC9kb2NzLzIuNy4xMC9yZWZlcmVuY2UvcGRmL3NwcmluZy1ib290LXJlZmVyZW5jZS5wZGY=">https://docs.spring.io/spring-boot/docs/2.7.10/reference/pdf/spring-boot-reference.pdf<i class="fa fa-external-link-alt"></i></span></li>
<li>nacos2.x官方文档：<span class="exturl" data-url="aHR0cHM6Ly9uYWNvcy5pby96aC1jbi9kb2NzL3YyL3F1aWNrc3RhcnQvcXVpY2stc3RhcnQuaHRtbA==">https://nacos.io/zh-cn/docs/v2/quickstart/quick-start.html<i class="fa fa-external-link-alt"></i></span></li>
<li>prometheus官方文档：<span class="exturl" data-url="aHR0cHM6Ly9wcm9tZXRoZXVzLmlvL2RvY3MvcHJvbWV0aGV1cy8yLjM3L2dldHRpbmdfc3RhcnRlZC8=">https://prometheus.io/docs/prometheus/2.37/getting_started&#x2F;<i class="fa fa-external-link-alt"></i></span></li>
<li>grafana官方文档：<span class="exturl" data-url="aHR0cHM6Ly9ncmFmYW5hLmNvbS9kb2NzL2dyYWZhbmEvbGF0ZXN0L2dldHRpbmctc3RhcnRlZC8=">https://grafana.com/docs/grafana/latest/getting-started/<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>切记切记，以上总结，仅供参考！别人提供的是思考方向，具体实践还需亲自测试印证。</p>
<h2 id="END—"><a href="#END—" class="headerlink" title="END—-"></a>END—-</h2><p>静下心来，才发现原来不会的还有很多。</p>
<p>一分耕耘，一分收获。</p>
<p>多总结，你会发现，自己的知识宝库越来越丰富。</p>
]]></content>
      <categories>
        <category>web开发</category>
      </categories>
      <tags>
        <tag>nacos</tag>
      </tags>
  </entry>
  <entry>
    <title>VSCode配合插件入门指南</title>
    <url>/2022/01/09/VSCode%E9%85%8D%E5%90%88%E6%8F%92%E4%BB%B6%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<p>给大家推荐一款比较使用的markdown编辑器。换个说法描述更为贴切，其实是一款综合性的开源软件集合，配合其强大的各种插件，作为开发人员的工具也是绰绰有余。我平时用来编辑yaml、xml、sql、Java、或者md文件等等，用起来比较方便。</p>
<p><strong>VSCode官网下载地址</strong></p>
<p><span class="exturl" data-url="aHR0cHM6Ly9jb2RlLnZpc3VhbHN0dWRpby5jb20vRG93bmxvYWQ=">https://code.visualstudio.com/Download<i class="fa fa-external-link-alt"></i></span></p>
<p><img data-src="https://gitee.com/dywangk/img/raw/master/images/VSCode%E4%B8%8B%E8%BD%BD_proc.jpg"></p>
<p><strong>支持范围</strong>：Windows（7、8、10、11）、Linux（.rpm包、.deb包）、macOS（10.11+）</p>
<h1 id="一、VSCODE常用的快捷键"><a href="#一、VSCODE常用的快捷键" class="headerlink" title="一、VSCODE常用的快捷键"></a>一、VSCODE常用的快捷键</h1><p>快速进入扩展（这个快捷键是最常用的之一）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ctrl + <span class="built_in">shift</span> + x</span><br></pre></td></tr></table></figure>

<p>运行和调试</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ctrl + <span class="built_in">shift</span> + d</span><br></pre></td></tr></table></figure>



<p>源代码管理</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ctrl + <span class="built_in">shift</span> + g</span><br></pre></td></tr></table></figure>

<p>搜索</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ctrl + <span class="built_in">shift</span> + f</span><br></pre></td></tr></table></figure>

<p>资源管理器</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ctrl + <span class="built_in">shift</span> + e</span><br></pre></td></tr></table></figure>

<p>调试控制台</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ctrl + <span class="built_in">shift</span> + y</span><br></pre></td></tr></table></figure>

<p>查找</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ctrl + f</span><br></pre></td></tr></table></figure>

<p>替换</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ctrl + h</span><br></pre></td></tr></table></figure>

<p>快速打开终端</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ctrl + <span class="built_in">shift</span> + `</span><br></pre></td></tr></table></figure>

<h1 id="二、VSCode强大的插件支持"><a href="#二、VSCode强大的插件支持" class="headerlink" title="二、VSCode强大的插件支持"></a>二、VSCode强大的插件支持</h1><p>1、Chinese（中文简体）Language for pack visual studio code<br>简体中文插件支持，官方提供的插件。虽然中文版看起来怪怪的，但是更符合我们的使用习惯，连github都做中文适配了。</p>
<p><img data-src="https://gitee.com/dywangk/img/raw/master/images/VSCode%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87%E6%8F%92%E4%BB%B6.png"></p>
<p><strong>2、gitee插件</strong></p>
<p>介绍gitee插件，是因为访问gitee速度更快，中文支持非常友好。</p>
<p><img data-src="https://gitee.com/dywangk/img/raw/master/images/gitee%E6%8F%92%E4%BB%B6_proc.jpg"></p>
<p><strong>3、picgo图床工具插件</strong></p>
<p>picgo图床工具插件配合gitee或者github、七牛云、腾讯云以及阿里云作为图片仓库（记笔记的好帮手）。</p>
<p><img data-src="https://gitee.com/dywangk/img/raw/master/images/PicGo%E6%8F%92%E4%BB%B6_proc.jpg"></p>
<p><strong>4、markdown诸多插件</strong></p>
<p>VSCode本身就自带了一些插件，不用下载也对markdown原生支持还可以的，也支持预览。在VSCode强大的插件库搜索，诸多markdown插件可供下载使用，比如配置自己喜欢的主题风格以及更加强大的预览和思维导图的支持。</p>
<p><strong>主题风格插件</strong></p>
<p><img data-src="https://gitee.com/dywangk/img/raw/master/images/%E6%8F%92%E4%BB%B6markdown_theme_kit_proc.jpg"></p>
<p><strong>思维导图mermaid插件</strong></p>
<p><img data-src="https://gitee.com/dywangk/img/raw/master/images/%E6%8F%92%E4%BB%B6markdown_preview_mermaid_support_proc.jpg"></p>
<p><strong>预览markdown_preview_enhanced插件</strong></p>
<p><img data-src="https://gitee.com/dywangk/img/raw/master/images/%E6%8F%92%E4%BB%B6markdown_preview_enhanced_proc.jpg"></p>
<p>插件就介绍这么多，更多好用、实用的插件在于大家去挖掘，这就是开源的魅力所在。</p>
<h1 id="三、VSCode设置"><a href="#三、VSCode设置" class="headerlink" title="三、VSCode设置"></a>三、VSCode设置</h1><p>中文版界面，需要安装汉化插件，打开扩展搜索Chinese（中文简体）Language for pack visual studio code安装即可。</p>
<p><img data-src="https://gitee.com/dywangk/img/raw/master/images/VSCode%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87%E6%8F%92%E4%BB%B6.png"></p>
<p>1、依次找到<strong>文件-&gt;首选项-&gt;设置</strong></p>
<p>安装中文插件后，汉化的还可以，部分界面显示如下：</p>
<p><img data-src="https://gitee.com/dywangk/img/raw/master/images/VSCode%E4%B8%AD%E6%96%87%E7%89%88%E7%95%8C%E9%9D%A2.png"></p>
<p><strong>选中文件找到首选项</strong></p>
<p><img data-src="https://gitee.com/dywangk/img/raw/master/images/VSCode%E8%BF%9B%E5%85%A5%E8%AE%BE%E7%BD%AE_proc.jpg"></p>
<p><strong>设置更新，建议设置手动更新</strong></p>
<p>进入设置后，直接搜索更新即可。</p>
<p><img data-src="https://gitee.com/dywangk/img/raw/master/images/VSCode%E6%9B%B4%E6%96%B0%E8%AE%BE%E7%BD%AE_proc.jpg"></p>
<p><strong>2、设置字体</strong></p>
<p>更具各自喜好风格设置，很多都喜欢用<strong>Consolas</strong>这个字体。辨识度比较高，所以很受欢迎。</p>
<p><img data-src="https://gitee.com/dywangk/img/raw/master/images/VSCode%E8%AE%BE%E7%BD%AE%E5%AD%97%E4%BD%93_proc.jpg"></p>
<p>好了，整个VSCode的简单入门使用介绍就到此为止。</p>
]]></content>
      <categories>
        <category>开发工具</category>
      </categories>
      <tags>
        <tag>VScode</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows 10平台安装PostgreSQL 14.2详细教程</title>
    <url>/2022/03/20/Windows-10%E5%B9%B3%E5%8F%B0%E5%AE%89%E8%A3%85PostgreSQL-14-2%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<p>Windows 10平台安装postgreSQL 14.2.1，安装步骤很简单，基本上是点击下一步（next）。</p>
<p>使用SQL Shell（psql）进行交互；使用pgAdmin工具进行管理。</p>
<p><strong>tips</strong>：注意选择安装目录（请不要放到C盘，虚拟机搭建测试环境另说）。如果图片挂了，可以前往个人公众号搜索 <span class="exturl" data-url="aHR0cHM6Ly9tcC53ZWl4aW4ucXEuY29tL3M/X19iaXo9TXpVMk16YzBNekUwTmc9PSZtaWQ9MjI0NzQ4Njc5OSZpZHg9MSZzbj1kNTg2OWRjOGQ4ZGY2MmU3MGUxZDU4ODVjNmMwNWYzOCZjaGtzbT1mYzU0ZGQ4YWNiMjM1NDljMTgzMmNhZjI4NDE3MTQ1NDg2ZWZkNzgyNjQ4MzIyY2M2YWZjNDhiYzQ4YTgyYjBkZWUzNTJhNDE2MGYxI3Jk">Windows 10平台安装PostgreSQL 14.2详细教程<i class="fa fa-external-link-alt"></i></span>。</p>
<h1 id="postgreSQL安装详细教程"><a href="#postgreSQL安装详细教程" class="headerlink" title="postgreSQL安装详细教程"></a>postgreSQL安装详细教程</h1><h2 id="一postgreSQL-安装步骤"><a href="#一postgreSQL-安装步骤" class="headerlink" title="一	postgreSQL 安装步骤"></a>一	postgreSQL 安装步骤</h2><h3 id="01-下载postgreSQL"><a href="#01-下载postgreSQL" class="headerlink" title="01 下载postgreSQL"></a>01 下载postgreSQL</h3><p>Windows版本（64位）postgreSQL 14.2.1下载地址：</p>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cuZW50ZXJwcmlzZWRiLmNvbS9wb3N0Z3Jlc3FsLXR1dG9yaWFsLXJlc291cmNlcy10cmFpbmluZz91dWlkPWRiNTVlMzJkLWU5ZjAtNGQ3Yy05YWVmLWIxN2QwMTIxMDcwNCZjYW1wYWlnbklkPTcwMTJKMDAwMDAxTmhzelFBQw==">https://www.enterprisedb.com/postgresql-tutorial-resources-training?uuid=db55e32d-e9f0-4d7c-9aef-b17d01210704&campaignId=7012J000001NhszQAC<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>官网</strong>：<span class="exturl" data-url="aHR0cHM6Ly93d3cucG9zdGdyZXNxbC5vcmcv">https://www.postgresql.org<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>官方文档</strong>：</p>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cucG9zdGdyZXNxbC5vcmcvZG9jcy8=">https://www.postgresql.org/docs/<i class="fa fa-external-link-alt"></i></span></p>
<p>最新版本14的PDF下载地址：</p>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cucG9zdGdyZXNxbC5vcmcvZmlsZXMvZG9jdW1lbnRhdGlvbi9wZGYvMTQvcG9zdGdyZXNxbC0xNC1BNC5wZGY=">https://www.postgresql.org/files/documentation/pdf/14/postgresql-14-A4.pdf<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="02Windows-10安装postgreSQL-14-2"><a href="#02Windows-10安装postgreSQL-14-2" class="headerlink" title="02	Windows 10安装postgreSQL 14.2"></a>02	Windows 10安装postgreSQL 14.2</h3><p><strong>2.1	安装步骤01</strong></p>
<p>Setup	—— PostgreSQL</p>
<p>进入PostgreSQL安装界面</p>
<p><strong>2.2	安装步骤02</strong></p>
<p>Installation Directory</p>
<p><strong>注意</strong>：选择安装目录，推荐安装至D盘或者顺延。</p>
<p><strong>2.3	安装步骤03</strong></p>
<p>Select components</p>
<p><strong>选择需要安装的服务</strong>：</p>
<ol>
<li>PostgreSQL Server：数据库（DBMS）服务，<strong>必选项</strong>。</li>
<li>pgAdmin 4：客户端管理工具，建议勾选。</li>
<li>Stack Builder：依据需求选择。</li>
<li>Command Line Tools：命令行工具，交互<strong>必选项</strong>。</li>
</ol>
<p><strong>2.4	安装步骤04</strong></p>
<p>Data Directory</p>
<p>设置数据库实例化数据存放目录。类似于MySQ初始化生成data目录。</p>
<p><strong>2.5	安装步骤05</strong></p>
<p>Set Password</p>
<p>设置数据库超级用户（postgres）密码。</p>
<p>如果初始化失败，后续则不会生效。</p>
<p><strong>2.6	安装步骤06</strong></p>
<p>Port</p>
<p>设置默认监听端口（port）：5432</p>
<p><strong>2.7	安装步骤07</strong></p>
<p>Advanced Options</p>
<p>建议选择数据库群组（database cluster），下拉有中文简体可选。</p>
<p>cluster有集群的意思，但在此处指的是组、群组、国别地区（安装支持的语言）。</p>
<p><strong>注意</strong>：这一步初始化后生成的data目录是空的，可能是权限问题（<strong>会有警告提示</strong>，导致初始化失败，虽然最终安装完成）。</p>
<p><strong>2.8	安装步骤08</strong></p>
<p>Pre Installation Summary</p>
<p><strong>打印出安装配置信息</strong>，其它数据库厂商（DBMS）提供的可视化界面安装一样会有信息显示，例如Oracle数据库。</p>
<p><strong>2.9	安装步骤09</strong></p>
<p>Ready to Install</p>
<p>到了这一步，真正开始执行安装过程。</p>
<p>关于遇到的警告问题，会在遇到问题解决方案进行展示说明，并给出个人解决方案。</p>
<h3 id="03postgreSQL-安装目录说明"><a href="#03postgreSQL-安装目录说明" class="headerlink" title="03	postgreSQL 安装目录说明"></a>03	postgreSQL 安装目录说明</h3><p><strong>3.1	postgreSQL 安装目录重点说明</strong></p>
<ol>
<li>bin：bin目录一般存放与数据库服务进行交互的命令脚本。</li>
<li>data：data目录是初始化完成后生成的数据库文件，包含配置文件postgresql.conf。</li>
<li>pgAdmin 4 ：存放pgAdmin 4客户端管理工具文件。</li>
<li>uninstall-postgresql.dat与uninstall-postgresql.exe：提供便捷式卸载。</li>
</ol>
<p><strong>3.2	data目录</strong></p>
<ol>
<li>主要注意postgresql.conf配置文件，比如配置监听端口（port）和主机（IP）地址。</li>
</ol>
<p><strong>3.3	配置文件设置</strong></p>
<ol>
<li>listen_addresses：设置监听主机地址，重启服务生效。</li>
<li>port：设置监听服务默认端口，重启服务生效。</li>
</ol>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># - Connection Settings -</span></span><br><span class="line"><span class="attr">listen_addresses</span> = <span class="string">&#x27;localhost&#x27;</span>		<span class="comment"># what IP address(es) to listen on;</span></span><br><span class="line">					<span class="comment"># comma-separated list of addresses;</span></span><br><span class="line">					<span class="comment"># defaults to &#x27;localhost&#x27;; use &#x27;*&#x27; for all</span></span><br><span class="line">					<span class="comment"># (change requires restart)</span></span><br><span class="line"><span class="attr">port</span> = <span class="number">5432</span>				<span class="comment"># (change requires restart)</span></span><br><span class="line"><span class="attr">max_connections</span> = <span class="number">100</span>			<span class="comment"># (change requires restart)</span></span><br><span class="line"><span class="comment">#superuser_reserved_connections = 3	# (change requires restart)</span></span><br><span class="line"><span class="comment">#unix_socket_directories = &#x27;&#x27;	# comma-separated list of directories</span></span><br><span class="line">					<span class="comment"># (change requires restart)</span></span><br></pre></td></tr></table></figure>







<h2 id="二postgreSQL-遇到问题解决方案"><a href="#二postgreSQL-遇到问题解决方案" class="headerlink" title="二	postgreSQL 遇到问题解决方案"></a>二	postgreSQL 遇到问题解决方案</h2><h3 id="01遇到问题处理方法"><a href="#01遇到问题处理方法" class="headerlink" title="01	遇到问题处理方法"></a>01	遇到问题处理方法</h3><ol>
<li><strong>定位问题</strong>：遇到问题别慌，也别急着去使用搜索引擎，先将问题定位好。</li>
<li>文档：<strong>参考官方文档</strong>。</li>
<li>善于使用搜索引擎和<strong>StackOverflow</strong>以及<strong>github的Issues</strong>。</li>
<li>使用浏览器过滤方式：-xx网址或者-site:xx网址。</li>
</ol>
<p>例如，<strong>个人安装遇到问题</strong>（Warning）警告：</p>
<blockquote>
<p>Problem running  post-install  step. Installation may not complete correctly</p>
<p>The database cluster installation failed  </p>
</blockquote>
<p>我第一时间联想到的是初始化出问题了，<strong>去检查data目录</strong>，果不其然是空的。</p>
<p>如果你有一些英语底子（说实话，个人基本是靠平时积累的词汇量和有道），一些命令基本上可以猜个八九不离十。</p>
<p>以前我的同事问我，你是猜的？结果发现还挺准的。后面还有一句话没说出来而已，其实是有一定依据才去试一试的。</p>
<h3 id="02实际解决方案"><a href="#02实际解决方案" class="headerlink" title="02	实际解决方案"></a>02	实际解决方案</h3><p>个人根据以前使用MySQL（其它数据库）的经验进行判断，结合官方文档进行思考的临时解决方案。</p>
<p>出现警告后，使用以下方式解决无法启动postgreSQL：</p>
<ol>
<li><p>检查data目录是空的（初始化失败了）。</p>
</li>
<li><p>使用cmd（管理员身份）执行initdb命令初始化。</p>
</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">D:\software\PostgreSQL\14\bin&gt;initdb <span class="string">&quot;D:\software\PostgreSQL\14\data&quot;</span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>继续在cmd（管理员身份）窗口执行创建用户。</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">D:\software\PostgreSQL\14\bin&gt;createuser postgres</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>普通用户身份启动postgreSQL。</li>
</ol>
<p>​	   如果没有配置环境变量，注意在<strong>PostgreSQL\14\bin目录下执行postgres命令</strong>。使用这种方式启动服务，<strong>使用Ctrl + c快捷键即可退出服务</strong>。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">D:\software\PostgreSQL\14\bin&gt;postgres --config-file=<span class="string">&quot;D:\\software\\PostgreSQL\\14\\data\\postgresql.conf&quot;</span> -D <span class="string">&quot;D:\\software\\PostgreSQL\\14\\data&quot;</span></span><br></pre></td></tr></table></figure>

<ol start="5">
<li>或者使用<code>pg_ctl start</code>命令启动服务（postgreSQL加入path环境变量）。</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">D:\&gt;pg_ctl start -D <span class="string">&quot;D:\software\PostgreSQL\14\data&quot;</span></span><br></pre></td></tr></table></figure>

<ol start="6">
<li>使用<code>pg_ctl stop</code>命令关闭服务。</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">D:\&gt;pg_ctl stop -D <span class="string">&quot;D:\software\PostgreSQL\14\data&quot;</span></span><br></pre></td></tr></table></figure>

<p>如下是使用<code>pg_ctl</code>命令启动服务，然后使用<code>netstat</code>命令去验证服务是否启动。</p>
<p>安装后第二天查阅StackOverflow：其实解决方案相差不大，和我思考分方向是一致的，可以参考。</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvMzI0NTM0NTEvcG9zdGdyZXMtaW5zdGFsbGF0aW9uLXRoZS1kYXRhYmFzZS1jbHVzdGVyLWluaXRpYWxpemF0aW9uLWZhaWxlZC1wb3N0Z3Jlc3FsLXZl">https://stackoverflow.com/questions/32453451/postgres-installation-the-database-cluster-initialization-failed-postgresql-ve<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<h2 id="三使用SQL-Shell（psql）进行交互"><a href="#三使用SQL-Shell（psql）进行交互" class="headerlink" title="三	使用SQL Shell（psql）进行交互"></a>三	使用SQL Shell（psql）进行交互</h2><h3 id="01使用select语句验证"><a href="#01使用select语句验证" class="headerlink" title="01	使用select语句验证"></a>01	使用select语句验证</h3><p>进入SQL Shell（psql）交互界面，直接回车即可进入（<strong>前提是服务启动成功</strong>）</p>
<p>如同在MySQL中，使用select 1直接返回结果，这种方式是不走表的，通过explain分析就可看出。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="number">1</span>;</span><br></pre></td></tr></table></figure>





<h3 id="02使用explain进行测试"><a href="#02使用explain进行测试" class="headerlink" title="02	使用explain进行测试"></a>02	使用explain进行测试</h3><p>使用explain测试select 1：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">explain <span class="keyword">select</span> <span class="number">1</span>;</span><br></pre></td></tr></table></figure>





<h2 id="四使用pgAdmin进行管理"><a href="#四使用pgAdmin进行管理" class="headerlink" title="四	使用pgAdmin进行管理"></a>四	使用pgAdmin进行管理</h2><p><strong>01	配置服务名称</strong></p>
<p><strong>注意</strong>：Name是必填项。</p>
<p><strong>02	配置连接</strong></p>
<ol>
<li>HOST name、address：配置主机名或者IP地址。</li>
<li>Port：配置连接监听端口（启动服务时，在配置文件设置的端口）。</li>
<li>Usernam：用户名。</li>
<li>Password：用户密码。</li>
</ol>
<p><strong>03	初次进入pgAdmin需要配置密码</strong></p>
<p><strong>04	配置完后的界面</strong></p>
<p>progres和test是自己使用命令创建的：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">createuser progres</span><br><span class="line">createuser test</span><br></pre></td></tr></table></figure>





<p>—END—</p>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>PostgreSQL</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows 原版镜像下载地址</title>
    <url>/2022/06/30/Windows-%E5%8E%9F%E7%89%88%E9%95%9C%E5%83%8F%E4%B8%8B%E8%BD%BD%E5%9C%B0%E5%9D%80/</url>
    <content><![CDATA[<p>搜集了部分个人使用过的 Windows 原版镜像地址，均来自网络资源，仅供学习交流参考哟！</p>
<p><strong>友情提醒</strong>：如果你购买了品牌机，一般会预装 OEM 厂商版（Windows 家庭版）正版操作系统。个人使用 22H2 一年多了，还算稳定。不过，偶尔也会出现任务栏崩溃的情况。目前不建议立即升Windows 23H2，可以使用 VMware 体验。如果想立即体验23H2，啊这，也不是不行哟。</p>
<p><strong>关于下载</strong>：建议使用 BT（比如，那个你们曾今下载缓存过无数日本小姑娘的软件） 工具下载，效果更佳。</p>
<p>business editions：商业多版本选择（包含企业版、专业版、家庭版等…），一般而言我们选择下载这个版本；下载对应自己平台（比如 x64 或者 ARM64 ），这里只提供 64 位版本链接地址。</p>
<p><strong>简单科普</strong>，关于镜像命名名称，如何解读？</p>
<p>zh-cn_windows_11_business_editions_version_22h2_x64_dvd_914b57a5.iso</p>
<ul>
<li>zh-cn：通常代表有简体中文支持；</li>
<li>windows_11：表示 Windows 操作系统版本第 11 代；</li>
<li>business_editions_version：商业版本（包含企业版、专业版、家庭版等…）；</li>
<li>22h2：可以看做是发行版的版本代号；</li>
<li>x64_dvd：64 位操作系统，DVD（光盘镜像）形式发售。</li>
</ul>
<span id="more"></span>



<h2 id="Windows11原版镜像下载地址"><a href="#Windows11原版镜像下载地址" class="headerlink" title="Windows11	原版镜像下载地址"></a>Windows11	原版镜像下载地址</h2><p><strong>Windows 官方地址</strong>：<span class="exturl" data-url="aHR0cHM6Ly93d3cubWljcm9zb2Z0LmNvbS96aC1jbi93aW5kb3dzL2dldC13aW5kb3dzLTEx">如何为您的兼容 PC 获取 Windows 11| Microsoft<i class="fa fa-external-link-alt"></i></span></p>
<p>Windows 11 官方下载地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cubWljcm9zb2Z0LmNvbS96aC1jbi9zb2Z0d2FyZS1kb3dubG9hZC93aW5kb3dzMTE=">Download Windows 11 (microsoft.com)<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="整理表格（部分）"><a href="#整理表格（部分）" class="headerlink" title="整理表格（部分）"></a>整理表格（部分）</h3><table>
<thead>
<tr>
<th>发布时间</th>
<th>版本</th>
<th>BT</th>
</tr>
</thead>
<tbody><tr>
<td>2023-10-31</td>
<td>Windows11 business  23H2</td>
<td><span class="exturl" data-url="bWFnbmV0Oj94dD11cm46YnRpaDpiNWZlZDRlZTE2YjFjOWI4ODZmNDRkZDMwY2Q3MGZkZjc0NmY1OGY1JmRuPXpoLWNuX3dpbmRvd3NfMTFfYnVzaW5lc3NfZWRpdGlvbnNfdmVyc2lvbl8yM2gyX3g2NF9kdmRfMmE3OWUwZjEuaXNvJnhsPTY2MTM1NzE1ODQ=">magnet:?xt&#x3D;urn:btih:b5fed4ee16b1c9b886f44dd30cd70fdf746f58f5&amp;dn&#x3D;zh-cn_windows_11_business_editions_version_23h2_x64_dvd_2a79e0f1.iso&amp;xl&#x3D;6613571584<i class="fa fa-external-link-alt"></i></span></td>
</tr>
<tr>
<td>2023-10-31</td>
<td>Windows11 consumer 23H2</td>
<td><span class="exturl" data-url="bWFnbmV0Oj94dD11cm46YnRpaDoxOWZmZTRkZWJlMGUwNDY2ZGNmN2E5M2RjOTEwNzU2ZTIzZDc3MzU2JmRuPXpoLWNuX3dpbmRvd3NfMTFfY29uc3VtZXJfZWRpdGlvbnNfdmVyc2lvbl8yM2gyX3g2NF9kdmRfOTEyMDc3ODAuaXNvJnhsPTY3MTQ2NTA2MjQ=">magnet:?xt&#x3D;urn:btih:19ffe4debe0e0466dcf7a93dc910756e23d77356&amp;dn&#x3D;zh-cn_windows_11_consumer_editions_version_23h2_x64_dvd_91207780.iso&amp;xl&#x3D;6714650624<i class="fa fa-external-link-alt"></i></span></td>
</tr>
<tr>
<td>2023-10-17</td>
<td>Windows11 business</td>
<td><span class="exturl" data-url="bWFnbmV0Oj94dD11cm46YnRpaDo1MzhmMzczYzAyY2E5YTcxNjE2YmY5YzZjYzM1NGYwYTlhM2VkYjg4JmRuPXpoLWNuX3dpbmRvd3NfMTFfYnVzaW5lc3NfZWRpdGlvbnNfdmVyc2lvbl8yMmgyX3VwZGF0ZWRfb2N0XzIwMjNfeDY0X2R2ZF8zNzBlZDFiNy5pc28meGw9NjYxNTQ1OTg0MA==">magnet:?xt&#x3D;urn:btih:538f373c02ca9a71616bf9c6cc354f0a9a3edb88&amp;dn&#x3D;zh-cn_windows_11_business_editions_version_22h2_updated_oct_2023_x64_dvd_370ed1b7.iso&amp;xl&#x3D;6615459840<i class="fa fa-external-link-alt"></i></span></td>
</tr>
<tr>
<td>2023-10-17</td>
<td>Windows11 consumer</td>
<td><span class="exturl" data-url="bWFnbmV0Oj94dD11cm46YnRpaDplYTc0NGZiZDJjYzMxMDhlMzliODgxYjg1MmUxNDQyNTkyMDA0MDQyJmRuPXpoLWNuX3dpbmRvd3NfMTFfY29uc3VtZXJfZWRpdGlvbnNfdmVyc2lvbl8yMmgyX3VwZGF0ZWRfb2N0XzIwMjNfeDY0X2R2ZF8wZjA5ZjQwYS5pc28meGw9NjcyMDcyMjk0NA==">magnet:?xt&#x3D;urn:btih:ea744fbd2cc3108e39b881b852e1442592004042&amp;dn&#x3D;zh-cn_windows_11_consumer_editions_version_22h2_updated_oct_2023_x64_dvd_0f09f40a.iso&amp;xl&#x3D;6720722944<i class="fa fa-external-link-alt"></i></span></td>
</tr>
</tbody></table>
<h2 id="按时间顺序整理"><a href="#按时间顺序整理" class="headerlink" title="按时间顺序整理"></a>按时间顺序整理</h2><h3 id="Windows-11-2023-23H2"><a href="#Windows-11-2023-23H2" class="headerlink" title="Windows 11 2023 23H2"></a>Windows 11 2023 23H2</h3><p><strong>ARM64版本</strong>：Windows 11, version 23H2 (ARM64) - DVD (Chinese-Simplified)</p>
<p><strong>ED2K</strong></p>
<p><span class="exturl" data-url="ZWQyazovL3xmaWxlfFNXX0RWRDlfV2luX1Byb18xMV8yM0gyX0FybTY0X0NoblNpbXBfUHJvX0VudF9FRFVfTl9NTEZfWDIzLTU5NTE4LklTT3w3MTQyMTI1NTY4fDc2OTk0OTI5MTUyNEZERTgyQTBCQjUyMTM4NDMzRjA2fC8=">ed2k:&#x2F;&#x2F;|file|SW_DVD9_Win_Pro_11_23H2_Arm64_ChnSimp_Pro_Ent_EDU_N_MLF_X23-59518.ISO|7142125568|769949291524FDE82A0BB52138433F06|&#x2F;<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>BT</strong></p>
<p><span class="exturl" data-url="bWFnbmV0Oj94dD11cm46YnRpaDo2NGZiN2MwMTFmNDA3NjI4NDcxNDMyZDhjZDUyYjJiNWM2YzUyNjczJmRuPVNXX0RWRDlfV2luX1Byb18xMV8yM0gyX0FybTY0X0NoblNpbXBfUHJvX0VudF9FRFVfTl9NTEZfWDIzLTU5NTE4LklTTyZ4bD03MTQyMTI1NTY4">magnet:?xt&#x3D;urn:btih:64fb7c011f407628471432d8cd52b2b5c6c52673&amp;dn&#x3D;SW_DVD9_Win_Pro_11_23H2_Arm64_ChnSimp_Pro_Ent_EDU_N_MLF_X23-59518.ISO&amp;xl&#x3D;7142125568<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>商业版</strong>：Windows 11 (business editions), version 23H2 (x64) - DVD (Chinese-Simplified)</p>
<p><strong>ED2K</strong></p>
<p><span class="exturl" data-url="ZWQyazovL3xmaWxlfHpoLWNuX3dpbmRvd3NfMTFfYnVzaW5lc3NfZWRpdGlvbnNfdmVyc2lvbl8yM2gyX3g2NF9kdmRfMmE3OWUwZjEuaXNvfDY2MTM1NzE1ODR8MUFGQURFQkM1OTY2RTlFNjg5RjI0MjU0OUZGQjU1NjJ8Lw==">ed2k:&#x2F;&#x2F;|file|zh-cn_windows_11_business_editions_version_23h2_x64_dvd_2a79e0f1.iso|6613571584|1AFADEBC5966E9E689F242549FFB5562|&#x2F;<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>BT</strong></p>
<p><span class="exturl" data-url="bWFnbmV0Oj94dD11cm46YnRpaDpiNWZlZDRlZTE2YjFjOWI4ODZmNDRkZDMwY2Q3MGZkZjc0NmY1OGY1JmRuPXpoLWNuX3dpbmRvd3NfMTFfYnVzaW5lc3NfZWRpdGlvbnNfdmVyc2lvbl8yM2gyX3g2NF9kdmRfMmE3OWUwZjEuaXNvJnhsPTY2MTM1NzE1ODQ=">magnet:?xt&#x3D;urn:btih:b5fed4ee16b1c9b886f44dd30cd70fdf746f58f5&amp;dn&#x3D;zh-cn_windows_11_business_editions_version_23h2_x64_dvd_2a79e0f1.iso&amp;xl&#x3D;6613571584<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>消费者版</strong>：Windows 11 (consumer editions), version 23H2 (x64) - DVD (Chinese-Simplified)</p>
<p><strong>ED2K</strong></p>
<p><span class="exturl" data-url="ZWQyazovL3xmaWxlfHpoLWNuX3dpbmRvd3NfMTFfY29uc3VtZXJfZWRpdGlvbnNfdmVyc2lvbl8yM2gyX3g2NF9kdmRfOTEyMDc3ODAuaXNvfDY3MTQ2NTA2MjR8NUU5MjdFRjlGQTY1RDc4RDE4OTgyMTMyODFDQjM3NTd8Lw==">ed2k:&#x2F;&#x2F;|file|zh-cn_windows_11_consumer_editions_version_23h2_x64_dvd_91207780.iso|6714650624|5E927EF9FA65D78D1898213281CB3757|&#x2F;<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>BT</strong></p>
<p><span class="exturl" data-url="bWFnbmV0Oj94dD11cm46YnRpaDoxOWZmZTRkZWJlMGUwNDY2ZGNmN2E5M2RjOTEwNzU2ZTIzZDc3MzU2JmRuPXpoLWNuX3dpbmRvd3NfMTFfY29uc3VtZXJfZWRpdGlvbnNfdmVyc2lvbl8yM2gyX3g2NF9kdmRfOTEyMDc3ODAuaXNvJnhsPTY3MTQ2NTA2MjQ=">magnet:?xt&#x3D;urn:btih:19ffe4debe0e0466dcf7a93dc910756e23d77356&amp;dn&#x3D;zh-cn_windows_11_consumer_editions_version_23h2_x64_dvd_91207780.iso&amp;xl&#x3D;6714650624<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="Windows-11-2023-22H2"><a href="#Windows-11-2023-22H2" class="headerlink" title="Windows 11 2023 22H2"></a>Windows 11 2023 22H2</h3><p><strong>发布时间：2023-10-17</strong></p>
<p><strong>商业版</strong>：Windows 11 (business editions), version 22H2 (updated Oct 2023) (x64) - DVD (Chinese-Simplified)</p>
<p><strong>ED2K</strong></p>
<p><span class="exturl" data-url="ZWQyazovL3xmaWxlfHpoLWNuX3dpbmRvd3NfMTFfYnVzaW5lc3NfZWRpdGlvbnNfdmVyc2lvbl8yMmgyX3VwZGF0ZWRfb2N0XzIwMjNfeDY0X2R2ZF8zNzBlZDFiNy5pc298NjYxNTQ1OTg0MHw4RjQ2Q0VGQTU1RjQzNDA0NTM1QUY5NjBCNDc4NEU2N3wv">ed2k:&#x2F;&#x2F;|file|zh-cn_windows_11_business_editions_version_22h2_updated_oct_2023_x64_dvd_370ed1b7.iso|6615459840|8F46CEFA55F43404535AF960B4784E67|&#x2F;<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>BT</strong></p>
<p><span class="exturl" data-url="bWFnbmV0Oj94dD11cm46YnRpaDo1MzhmMzczYzAyY2E5YTcxNjE2YmY5YzZjYzM1NGYwYTlhM2VkYjg4JmRuPXpoLWNuX3dpbmRvd3NfMTFfYnVzaW5lc3NfZWRpdGlvbnNfdmVyc2lvbl8yMmgyX3VwZGF0ZWRfb2N0XzIwMjNfeDY0X2R2ZF8zNzBlZDFiNy5pc28meGw9NjYxNTQ1OTg0MA==">magnet:?xt&#x3D;urn:btih:538f373c02ca9a71616bf9c6cc354f0a9a3edb88&amp;dn&#x3D;zh-cn_windows_11_business_editions_version_22h2_updated_oct_2023_x64_dvd_370ed1b7.iso&amp;xl&#x3D;6615459840<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>消费者版</strong>：Windows 11 (consumer editions), version 22H2 (updated Oct 2023) (x64) - DVD (Chinese-Simplified)</p>
<p><strong>ED2K</strong></p>
<p><span class="exturl" data-url="ZWQyazovL3xmaWxlfHpoLWNuX3dpbmRvd3NfMTFfY29uc3VtZXJfZWRpdGlvbnNfdmVyc2lvbl8yMmgyX3VwZGF0ZWRfb2N0XzIwMjNfeDY0X2R2ZF8wZjA5ZjQwYS5pc298NjcyMDcyMjk0NHw1NjhBMTAzMDVGNDdDNEMzNzVFNjg5OUU4NEJENzA2Nnwv">ed2k:&#x2F;&#x2F;|file|zh-cn_windows_11_consumer_editions_version_22h2_updated_oct_2023_x64_dvd_0f09f40a.iso|6720722944|568A10305F47C4C375E6899E84BD7066|&#x2F;<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>BT</strong></p>
<p><span class="exturl" data-url="bWFnbmV0Oj94dD11cm46YnRpaDplYTc0NGZiZDJjYzMxMDhlMzliODgxYjg1MmUxNDQyNTkyMDA0MDQyJmRuPXpoLWNuX3dpbmRvd3NfMTFfY29uc3VtZXJfZWRpdGlvbnNfdmVyc2lvbl8yMmgyX3VwZGF0ZWRfb2N0XzIwMjNfeDY0X2R2ZF8wZjA5ZjQwYS5pc28meGw9NjcyMDcyMjk0NA==">magnet:?xt&#x3D;urn:btih:ea744fbd2cc3108e39b881b852e1442592004042&amp;dn&#x3D;zh-cn_windows_11_consumer_editions_version_22h2_updated_oct_2023_x64_dvd_0f09f40a.iso&amp;xl&#x3D;6720722944<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>发布时间：2023-04-18</strong></p>
<p><strong>商业版</strong>：Windows 11 (business editions), version 22H2 (updated April 2023) (x64) - DVD (中文简体版)<br><strong>ED2K</strong><br><span class="exturl" data-url="ZWQyazovL3xmaWxlfHpoLWNuX3dpbmRvd3NfMTFfYnVzaW5lc3NfZWRpdGlvbnNfdmVyc2lvbl8yMmgyX3VwZGF0ZWRfYXByaWxfMjAyM194NjRfZHZkXzdmM2YzMTliLmlzb3w1Njk5NjgyMzA0fDcyMjZDODQyMDM1ODRCREMzM0ExRTg2OTRDNkM1NzBFfC8=">ed2k:&#x2F;&#x2F;|file|zh-cn_windows_11_business_editions_version_22h2_updated_april_2023_x64_dvd_7f3f319b.iso|5699682304|7226C84203584BDC33A1E8694C6C570E|&#x2F;<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>BT</strong><br><a href="">magnet:?xt&#x3D;urn:btih:509989ac652c2f748c894ab77c9e2faa336cd826&amp;dn&#x3D;zh-cn_windows_11_business_editions_version_22h2_updated_april_2023_x64_dvd_7f3f319b.iso&amp;xl&#x3D;5699682304</a></p>
<p><strong>消费者版</strong>：Windows 11 (consumer editions), version 22H2 (updated April 2023) (x64) - DVD (中文简体版)<br><strong>ED2K</strong><br><span class="exturl" data-url="ZWQyazovL3xmaWxlfHpoLWNuX3dpbmRvd3NfMTFfY29uc3VtZXJfZWRpdGlvbnNfdmVyc2lvbl8yMmgyX3VwZGF0ZWRfYXByaWxfMjAyM194NjRfZHZkXzczYmQ5YTVlLmlzb3w1Nzk3MzQzMjMyfDJGMTEwRTUwOTRGRDgwNDQ2NTNGMjc2RDJGQTZBMzNDfC8=">ed2k:&#x2F;&#x2F;|file|zh-cn_windows_11_consumer_editions_version_22h2_updated_april_2023_x64_dvd_73bd9a5e.iso|5797343232|2F110E5094FD8044653F276D2FA6A33C|&#x2F;<i class="fa fa-external-link-alt"></i></span><br><strong>BT</strong><br><a href="">magnet:?xt&#x3D;urn:btih:fefcbc14217031fa53a448d9e48a9389b16f4465&amp;dn&#x3D;zh-cn_windows_11_consumer_editions_version_22h2_updated_april_2023_x64_dvd_73bd9a5e.iso&amp;xl&#x3D;5797343232</a></p>
<p><strong>ARM64版本</strong>： Windows 11, version 22H2 (ARM64) - DVD (中文简体版)</p>
<p><strong>ED2K</strong><br><span class="exturl" data-url="ZWQyazovL3xmaWxlfFNXX0RWRDlfV2luX1Byb18xMV8yMkgyXzY0QVJNX0NoblNpbXBfUHJvX0VudF9FRFVfTl9NTEZfWDIzLTEyNzU1LklTT3w1NzE5ODk2MDY0fEQ2REUxNTE0Qzk0MkVEODREQjAzN0Y1NkU0NDU3OTA0fC8=">ed2k:&#x2F;&#x2F;|file|SW_DVD9_Win_Pro_11_22H2_64ARM_ChnSimp_Pro_Ent_EDU_N_MLF_X23-12755.ISO|5719896064|D6DE1514C942ED84DB037F56E4457904|&#x2F;<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>BT</strong><br><a href="">magnet:?xt&#x3D;urn:btih:e8c15208116083660709eac9aee124e025c01447&amp;dn&#x3D;SW_DVD9_Win_Pro_11_22H2_64ARM_ChnSimp_Pro_Ent_EDU_N_MLF_X23-12755.ISO&amp;xl&#x3D;5719896064</a></p>
<p><strong>发布时间：2023-02-21</strong></p>
<p><strong>商业版</strong>：<br>Windows 11 (business editions), version 22H2 (updated Feb 2023) (x64) - DVD (中文简体版)<br><strong>ED2K</strong><br><span class="exturl" data-url="ZWQyazovL3xmaWxlfHpoLWNuX3dpbmRvd3NfMTFfYnVzaW5lc3NfZWRpdGlvbnNfdmVyc2lvbl8yMmgyX3VwZGF0ZWRfZmViXzIwMjNfeDY0X2R2ZF82MzI2NDlhMi5pc298NTY0NDA0NDI4OHw4QzIxRjA0RTc2MTc0RjM3M0IwRTVCRjE5RTQyQzRBQnwv">ed2k:&#x2F;&#x2F;|file|zh-cn_windows_11_business_editions_version_22h2_updated_feb_2023_x64_dvd_632649a2.iso|5644044288|8C21F04E76174F373B0E5BF19E42C4AB|&#x2F;<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>BT</strong><br><a href="">magnet:?xt&#x3D;urn:btih:acf32c35ef8b07fb57f7169cf7f5b2ff75d8a13a&amp;dn&#x3D;zh-cn_windows_11_business_editions_version_22h2_updated_feb_2023_x64_dvd_632649a2.iso&amp;xl&#x3D;5644044288</a></p>
<p><strong>消费者版</strong>：<br>Windows 11 (consumer editions), version 22H2 (updated Feb 2023) (x64) - DVD (中文简体版)<br><strong>ED2K</strong><br><span class="exturl" data-url="ZWQyazovL3xmaWxlfHpoLWNuX3dpbmRvd3NfMTFfY29uc3VtZXJfZWRpdGlvbnNfdmVyc2lvbl8yMmgyX3VwZGF0ZWRfZmViXzIwMjNfeDY0X2R2ZF9kZGMxNDE1My5pc298NTc0NTA5NjcwNHw3RDM5MjA3NEM2MTU4QzE5Q0I0QzFGMDMwMzY0NjE1Qnwv">ed2k:&#x2F;&#x2F;|file|zh-cn_windows_11_consumer_editions_version_22h2_updated_feb_2023_x64_dvd_ddc14153.iso|5745096704|7D392074C6158C19CB4C1F030364615B|&#x2F;<i class="fa fa-external-link-alt"></i></span><br><strong>BT</strong><br><a href="">magnet:?xt&#x3D;urn:btih:89800269883fe3e03665ae511365a87d96bbf5c1&amp;dn&#x3D;zh-cn_windows_11_consumer_editions_version_22h2_updated_feb_2023_x64_dvd_ddc14153.iso&amp;xl&#x3D;5745096704</a></p>
<h3 id="Windows-11-2022-22H2"><a href="#Windows-11-2022-22H2" class="headerlink" title="Windows 11 2022 22H2"></a>Windows 11 2022 22H2</h3><p><strong>发布时间：2022-12-20</strong></p>
<p><strong>商业版</strong>：<br>Windows 11 (business editions), version 22H2 (updated Dec 2022) (x64) - DVD (中文简体版)<br><strong>ED2K</strong><br><span class="exturl" data-url="ZWQyazovL3xmaWxlfHpoLWNuX3dpbmRvd3NfMTFfYnVzaW5lc3NfZWRpdGlvbnNfdmVyc2lvbl8yMmgyX3VwZGF0ZWRfZGVjXzIwMjJfeDY0X2R2ZF8wYjI2Y2E0OC5pc298NTYxNTg5NDUyOHxBOTk1MzhEMjQ4QTlFNEE5Q0RFRkMyQkM0NTE4QkI1OXwv">ed2k:&#x2F;&#x2F;|file|zh-cn_windows_11_business_editions_version_22h2_updated_dec_2022_x64_dvd_0b26ca48.iso|5615894528|A99538D248A9E4A9CDEFC2BC4518BB59|&#x2F;<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>BT</strong><br><a href="">magnet:?xt&#x3D;urn:btih:40023e91b42d468858a9332e6856b740a0ba8af0&amp;dn&#x3D;zh-cn_windows_11_business_editions_version_22h2_updated_dec_2022_x64_dvd_0b26ca48.iso&amp;xl&#x3D;5615894528</a></p>
<p><strong>消费者版</strong>：<br>Windows 11 (consumer editions), version 22H2 (updated Dec 2022) (x64) - DVD (中文简体版)<br><strong>ED2K</strong><br><span class="exturl" data-url="ZWQyazovL3xmaWxlfHpoLWNuX3dpbmRvd3NfMTFfY29uc3VtZXJfZWRpdGlvbnNfdmVyc2lvbl8yMmgyX3VwZGF0ZWRfZGVjXzIwMjJfeDY0X2R2ZF8xY2NjMmYwMS5pc298NTcxNDg3MjMyMHxBMzBGQjAwMTdEQUMzNkUwMDQ0OUJEODkxMTNBRkE0RHwv">ed2k:&#x2F;&#x2F;|file|zh-cn_windows_11_consumer_editions_version_22h2_updated_dec_2022_x64_dvd_1ccc2f01.iso|5714872320|A30FB0017DAC36E00449BD89113AFA4D|&#x2F;<i class="fa fa-external-link-alt"></i></span><br><strong>BT</strong><br><a href="">magnet:?xt&#x3D;urn:btih:8f168a814da2071076c8af6d13c38654324ccb36&amp;dn&#x3D;zh-cn_windows_11_consumer_editions_version_22h2_updated_dec_2022_x64_dvd_1ccc2f01.iso&amp;xl&#x3D;5714872320</a></p>
<p><strong>发布时间：2022-10-18</strong></p>
<p><strong>商业版</strong>：<br>Windows 11 (business editions), version 22H2 (updated Oct 2022) (x64) - DVD (Chinese-Simplified)<br><strong>ED2K</strong><br><span class="exturl" data-url="ZWQyazovL3xmaWxlfHpoLWNuX3dpbmRvd3NfMTFfYnVzaW5lc3NfZWRpdGlvbnNfdmVyc2lvbl8yMmgyX3VwZGF0ZWRfb2N0XzIwMjJfeDY0X2R2ZF9iNGUzYTRmOC5pc298NTUxNTg4NjU5MnxBRUUyQzI0QTcyOTNDRkJGMzhFNDhENDY5QzJENDJBMnwv">ed2k:&#x2F;&#x2F;|file|zh-cn_windows_11_business_editions_version_22h2_updated_oct_2022_x64_dvd_b4e3a4f8.iso|5515886592|AEE2C24A7293CFBF38E48D469C2D42A2|&#x2F;<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>BT</strong><br><a href="">magnet:?xt&#x3D;urn:btih:85730cfa4be6b8c3e655d76becc2f6d32f261ce4&amp;dn&#x3D;zh-cn_windows_11_business_editions_version_22h2_updated_oct_2022_x64_dvd_b4e3a4f8.iso&amp;xl&#x3D;5515886592</a></p>
<p><strong>消费者版</strong>：<br>Windows 11 (consumer editions), version 22H2 (updated Oct 2022) (x64) - DVD (Chinese-Simplified)<br><strong>ED2K</strong><br><span class="exturl" data-url="ZWQyazovL3xmaWxlfHpoLWNuX3dpbmRvd3NfMTFfY29uc3VtZXJfZWRpdGlvbnNfdmVyc2lvbl8yMmgyX3VwZGF0ZWRfb2N0XzIwMjJfeDY0X2R2ZF84ZjYyYWQzZC5pc298NTYyMDkyMDMyMHxFNzA4MDc3RjIwMUY4MjJCREQyN0I2NUU1RTJGRkZBNXwv">ed2k:&#x2F;&#x2F;|file|zh-cn_windows_11_consumer_editions_version_22h2_updated_oct_2022_x64_dvd_8f62ad3d.iso|5620920320|E708077F201F822BDD27B65E5E2FFFA5|&#x2F;<i class="fa fa-external-link-alt"></i></span><br><strong>BT</strong><br><a href="">magnet:?xt&#x3D;urn:btih:89ea6263bc88caef32b370d32fd86684d7bb96f3&amp;dn&#x3D;zh-cn_windows_11_consumer_editions_version_22h2_updated_oct_2022_x64_dvd_8f62ad3d.iso&amp;xl&#x3D;5620920320</a></p>
<p><strong>发布时间：2022-9-20</strong></p>
<p><strong>Windows 11, version 22H2 (ARM64) - DVD （ 简体中文版 ）</strong><br><strong>ED2K</strong>：<br><span class="exturl" data-url="ZWQyazovL3xmaWxlfFNXX0RWRDlfV2luX1Byb18xMV8yMkgyXzY0QVJNX0NoblNpbXBfUHJvX0VudF9FRFVfTl9NTEZfWDIzLTEyNzU1LklTT3w1NzE5ODk2MDY0fEQ2REUxNTE0Qzk0MkVEODREQjAzN0Y1NkU0NDU3OTA0fC8=">ed2k:&#x2F;&#x2F;|file|SW_DVD9_Win_Pro_11_22H2_64ARM_ChnSimp_Pro_Ent_EDU_N_MLF_X23-12755.ISO|5719896064|D6DE1514C942ED84DB037F56E4457904|&#x2F;<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>BT</strong>：<br><span class="exturl" data-url="bWFnbmV0Oj94dD11cm46YnRpaDplODRjOTQ2M2QzOWU2OGE3YzNkNWJiNDFhYmNmNTAxYjkxYjNlNWRhJmRuPXpoLWNuX3dpbmRvd3NfMTFfYnVzaW5lc3NfZWRpdGlvbnNfdmVyc2lvbl8yMmgyX3g2NF9kdmRfOTE0YjU3YTUuaXNvJnhsPTU0MTc5NzU4MDg=">magnet:?xt&#x3D;urn:btih:e84c9463d39e68a7c3d5bb41abcf501b91b3e5da&amp;dn&#x3D;zh-cn_windows_11_business_editions_version_22h2_x64_dvd_914b57a5.iso&amp;xl&#x3D;5417975808<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>Windows 11 (business editions), version 22H2 (x64) - DVD（ 简体中文版 ）</strong></p>
<p><strong>BT</strong>：<br><span class="exturl" data-url="bWFnbmV0Oj94dD11cm46YnRpaDplODRjOTQ2M2QzOWU2OGE3YzNkNWJiNDFhYmNmNTAxYjkxYjNlNWRhJmRuPXpoLWNuX3dpbmRvd3NfMTFfYnVzaW5lc3NfZWRpdGlvbnNfdmVyc2lvbl8yMmgyX3g2NF9kdmRfOTE0YjU3YTUuaXNvJnhsPTU0MTc5NzU4MDg=">magnet:?xt&#x3D;urn:btih:e84c9463d39e68a7c3d5bb41abcf501b91b3e5da&amp;dn&#x3D;zh-cn_windows_11_business_editions_version_22h2_x64_dvd_914b57a5.iso&amp;xl&#x3D;5417975808<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>ED2K</strong>:<br><span class="exturl" data-url="ZWQyazovL3xmaWxlfHpoLWNuX3dpbmRvd3NfMTFfYnVzaW5lc3NfZWRpdGlvbnNfdmVyc2lvbl8yMmgyX3g2NF9kdmRfOTE0YjU3YTUuaXNvfDU0MTc5NzU4MDh8NTMyNkE2QTdENjI5QUU4RjZBRTAwQzc3NkNDMkI5QzV8Lw==">ed2k:&#x2F;&#x2F;|file|zh-cn_windows_11_business_editions_version_22h2_x64_dvd_914b57a5.iso|5417975808|5326A6A7D629AE8F6AE00C776CC2B9C5|&#x2F;<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>Windows 11 (consumer editions), version 22H2 (x64) - DVD （ 简体中文版 ）</strong></p>
<p><strong>BT</strong>：<br><span class="exturl" data-url="bWFnbmV0Oj94dD11cm46YnRpaDo1NzZjYTAyZGI1YjNkOThhMjM3ZGU1MDgxMzlmOWY0NzFlNjllMjQ3JmRuPXpoLWNuX3dpbmRvd3NfMTFfY29uc3VtZXJfZWRpdGlvbnNfdmVyc2lvbl8yMmgyX3g2NF9kdmRfNTljZmU2ZWUuaXNvJnhsPTU1MTcxMjc2ODA=">magnet:?xt&#x3D;urn:btih:576ca02db5b3d98a237de508139f9f471e69e247&amp;dn&#x3D;zh-cn_windows_11_consumer_editions_version_22h2_x64_dvd_59cfe6ee.iso&amp;xl&#x3D;5517127680<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>ED2K</strong>:<br><span class="exturl" data-url="ZWQyazovL3xmaWxlfHpoLWNuX3dpbmRvd3NfMTFfY29uc3VtZXJfZWRpdGlvbnNfdmVyc2lvbl8yMmgyX3g2NF9kdmRfNTljZmU2ZWUuaXNvfDU1MTcxMjc2ODB8QzQ4QzM0QTBDRjY1RDM2M0I2ODI5NUJERDVBODkyNTJ8Lw==">ed2k:&#x2F;&#x2F;|file|zh-cn_windows_11_consumer_editions_version_22h2_x64_dvd_59cfe6ee.iso|5517127680|C48C34A0CF65D363B68295BDD5A89252|&#x2F;<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>发布时间：2022-8-16</strong></p>
<p><strong>business 版本</strong></p>
<p><strong>BT</strong>：<br><span class="exturl" data-url="bWFnbmV0Oj94dD11cm46YnRpaDpiMjM5YTlmMGJiMmE1OWQ2ZmIyYWU2MDIxNzFjNjZmMDUzMjQ2MzkxJmRuPXpoLWNuX3dpbmRvd3NfMTFfYnVzaW5lc3NfZWRpdGlvbnNfdmVyc2lvbl8yMWgyX3VwZGF0ZWRfYXVnXzIwMjJfeDY0X2R2ZF8wMWFiM2QxYS5pc28meGw9NTc3MzM2MTE1Mg==">magnet:?xt&#x3D;urn:btih:b239a9f0bb2a59d6fb2ae602171c66f053246391&amp;dn&#x3D;zh-cn_windows_11_business_editions_version_21h2_updated_aug_2022_x64_dvd_01ab3d1a.iso&amp;xl&#x3D;5773361152<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>ED2K</strong>:<br><span class="exturl" data-url="ZWQyazovL3xmaWxlfHpoLWNuX3dpbmRvd3NfMTFfYnVzaW5lc3NfZWRpdGlvbnNfdmVyc2lvbl8yMWgyX3VwZGF0ZWRfYXVnXzIwMjJfeDY0X2R2ZF8wMWFiM2QxYS5pc298NTc3MzM2MTE1MnxFMkU5NzlCQjNBMjRDRkYwMzAxMUM2ODg4RDRGM0M4RXwv">ed2k:&#x2F;&#x2F;|file|zh-cn_windows_11_business_editions_version_21h2_updated_aug_2022_x64_dvd_01ab3d1a.iso|5773361152|E2E979BB3A24CFF03011C6888D4F3C8E|&#x2F;<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>consumer 版本</strong></p>
<p><strong>BT</strong>：<br><span class="exturl" data-url="bWFnbmV0Oj94dD11cm46YnRpaDpjYTE1OWRiMmIxZTc4ZjZlOTVmZDk3MmJlNzIyNTFmOTY3ZjYzOWQ0JmRuPXpoLWNuX3dpbmRvd3NfMTFfY29uc3VtZXJfZWRpdGlvbnNfdmVyc2lvbl8yMWgyX3VwZGF0ZWRfYXVnXzIwMjJfeDY0X2R2ZF9hMjk5ODNkNS5pc28meGw9NTg5MTM2MDc2OA==">magnet:?xt&#x3D;urn:btih:ca159db2b1e78f6e95fd972be72251f967f639d4&amp;dn&#x3D;zh-cn_windows_11_consumer_editions_version_21h2_updated_aug_2022_x64_dvd_a29983d5.iso&amp;xl&#x3D;5891360768<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>ED2K</strong>:<br><span class="exturl" data-url="ZWQyazovL3xmaWxlfHpoLWNuX3dpbmRvd3NfMTFfY29uc3VtZXJfZWRpdGlvbnNfdmVyc2lvbl8yMWgyX3VwZGF0ZWRfYXVnXzIwMjJfeDY0X2R2ZF9hMjk5ODNkNS5pc298NTg5MTM2MDc2OHw5RTQ2NjZDMTNFMEVENzFEN0I4OEE3QTRCMzlFQUM4Q3wv">ed2k:&#x2F;&#x2F;|file|zh-cn_windows_11_consumer_editions_version_21h2_updated_aug_2022_x64_dvd_a29983d5.iso|5891360768|9E4666C13E0ED71D7B88A7A4B39EAC8C|&#x2F;<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>发布时间：2022-7-19</strong></p>
<p><strong>business 版本</strong></p>
<p><strong>BT</strong>：<br><span class="exturl" data-url="bWFnbmV0Oj94dD11cm46YnRpaDo1YmQzYzVjM2VlN2UxNjNiOWJjNGM5ZGVjY2UwZmUwMjNhODMyOGUyJmRuPXpoLWNuX3dpbmRvd3NfMTFfYnVzaW5lc3NfZWRpdGlvbnNfdmVyc2lvbl8yMWgyX3VwZGF0ZWRfanVseV8yMDIyX3g2NF9kdmRfYjUzZjQ1YmEuaXNvJnhsPTU3Mzg5NDI0NjQ=">magnet:?xt&#x3D;urn:btih:5bd3c5c3ee7e163b9bc4c9decce0fe023a8328e2&amp;dn&#x3D;zh-cn_windows_11_business_editions_version_21h2_updated_july_2022_x64_dvd_b53f45ba.iso&amp;xl&#x3D;5738942464<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>ED2K</strong>：<br><span class="exturl" data-url="ZWQyazovL3xmaWxlfHpoLWNuX3dpbmRvd3NfMTFfYnVzaW5lc3NfZWRpdGlvbnNfdmVyc2lvbl8yMWgyX3VwZGF0ZWRfanVseV8yMDIyX3g2NF9kdmRfYjUzZjQ1YmEuaXNvfDU3Mzg5NDI0NjR8QkU0NUE3MjNGQUE0NUYxMTFCRkYwM0VERTRERThGMkZ8Lw==">ed2k:&#x2F;&#x2F;|file|zh-cn_windows_11_business_editions_version_21h2_updated_july_2022_x64_dvd_b53f45ba.iso|5738942464|BE45A723FAA45F111BFF03EDE4DE8F2F|&#x2F;<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>consumer 版本</strong></p>
<p><strong>BT</strong>：<br><span class="exturl" data-url="bWFnbmV0Oj94dD11cm46YnRpaDphOWZmMjgwZDE0MThmOThmOWFkMDE2ZTNhMjBhY2VlMWJlYjJkZTQ2JmRuPXpoLWNuX3dpbmRvd3NfMTFfY29uc3VtZXJfZWRpdGlvbnNfdmVyc2lvbl8yMWgyX3VwZGF0ZWRfanVseV8yMDIyX3g2NF9kdmRfNTBhZDRhY2YuaXNvJnhsPTU4NTg4MTYwMDA=">magnet:?xt&#x3D;urn:btih:a9ff280d1418f98f9ad016e3a20acee1beb2de46&amp;dn&#x3D;zh-cn_windows_11_consumer_editions_version_21h2_updated_july_2022_x64_dvd_50ad4acf.iso&amp;xl&#x3D;5858816000<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>ED2K</strong>：<br><span class="exturl" data-url="ZWQyazovL3xmaWxlfHpoLWNuX3dpbmRvd3NfMTFfY29uc3VtZXJfZWRpdGlvbnNfdmVyc2lvbl8yMWgyX3VwZGF0ZWRfanVseV8yMDIyX3g2NF9kdmRfNTBhZDRhY2YuaXNvfDU4NTg4MTYwMDB8NkRGQUY4NkJGRDE0NjkyMUMyNzRFOEY3RkY2REQzMDV8Lw==">ed2k:&#x2F;&#x2F;|file|zh-cn_windows_11_consumer_editions_version_21h2_updated_july_2022_x64_dvd_50ad4acf.iso|5858816000|6DFAF86BFD146921C274E8F7FF6DD305|&#x2F;<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>发布时间：2022-6-21</strong></p>
<p><strong>business 版本</strong></p>
<p><strong>BT：</strong><br><span class="exturl" data-url="bWFnbmV0Oj94dD11cm46YnRpaDpmODY5MjAyYTAxNmMwZTNlMmZkNWU0MWZmYjAxMDY5NmZmNWQyYzAyJmRuPXpoLWNuX3dpbmRvd3NfMTFfYnVzaW5lc3NfZWRpdGlvbnNfdXBkYXRlZF9qdW5lXzIwMjJfeDY0X2R2ZF8wYjE2NWY2ZC5pc28meGw9NTcyNjYzODA4MA==">magnet:?xt&#x3D;urn:btih:f869202a016c0e3e2fd5e41ffb010696ff5d2c02&amp;dn&#x3D;zh-cn_windows_11_business_editions_updated_june_2022_x64_dvd_0b165f6d.iso&amp;xl&#x3D;5726638080<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>ED2K：</strong><br><span class="exturl" data-url="ZWQyazovL3xmaWxlfHpoLWNuX3dpbmRvd3NfMTFfYnVzaW5lc3NfZWRpdGlvbnNfdXBkYXRlZF9qdW5lXzIwMjJfeDY0X2R2ZF8wYjE2NWY2ZC5pc298NTcyNjYzODA4MHw1QkNEMzMwMzFCODZBQzY5M0IyQ0UzQzZDRjExQ0I5MHwv">ed2k:&#x2F;&#x2F;|file|zh-cn_windows_11_business_editions_updated_june_2022_x64_dvd_0b165f6d.iso|5726638080|5BCD33031B86AC693B2CE3C6CF11CB90|&#x2F;<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>consumer 版本</strong></p>
<p><strong>BT：</strong><br><span class="exturl" data-url="bWFnbmV0Oj94dD11cm46YnRpaDozYzQ2NGMzZDkxY2VhOTY3NTk2MDJmNjljOWIzMDBiMDNkZWMyZDhiJmRuPXpoLWNuX3dpbmRvd3NfMTFfY29uc3VtZXJfZWRpdGlvbnNfdXBkYXRlZF9qdW5lXzIwMjJfeDY0X2R2ZF9mZWIxMzRlOC5pc28meGw9NTg0NjI4MjI0MA==">magnet:?xt&#x3D;urn:btih:3c464c3d91cea96759602f69c9b300b03dec2d8b&amp;dn&#x3D;zh-cn_windows_11_consumer_editions_updated_june_2022_x64_dvd_feb134e8.iso&amp;xl&#x3D;5846282240<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>ED2K：</strong><br><span class="exturl" data-url="ZWQyazovL3xmaWxlfHpoLWNuX3dpbmRvd3NfMTFfY29uc3VtZXJfZWRpdGlvbnNfdXBkYXRlZF9qdW5lXzIwMjJfeDY0X2R2ZF9mZWIxMzRlOC5pc298NTg0NjI4MjI0MHw5N0ExMzY2NkFGQUE3Mjc2NjE4MjlCOTg3QzE0NUUyRnwv">ed2k:&#x2F;&#x2F;|file|zh-cn_windows_11_consumer_editions_updated_june_2022_x64_dvd_feb134e8.iso|5846282240|97A13666AFAA727661829B987C145E2F|&#x2F;<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>发布时间：2022-5-17</strong></p>
<p><strong>business 版本</strong></p>
<p><strong>BT：</strong><br><span class="exturl" data-url="bWFnbmV0Oj94dD11cm46YnRpaDpiZWE3MGM0MTQ2YjhkYzhhNWYyYmEzYzRiZjFmZjYxZGVmODRjMTBlJmRuPXpoLWNuX3dpbmRvd3NfMTFfYnVzaW5lc3NfZWRpdGlvbnNfdXBkYXRlZF9tYXlfMjAyMl94NjRfZHZkX2E1MjZmNGQ3LmlzbyZ4bD01Njk5MzUwNTI4">magnet:?xt&#x3D;urn:btih:bea70c4146b8dc8a5f2ba3c4bf1ff61def84c10e&amp;dn&#x3D;zh-cn_windows_11_business_editions_updated_may_2022_x64_dvd_a526f4d7.iso&amp;xl&#x3D;5699350528<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>ED2K：</strong><br><span class="exturl" data-url="ZWQyazovL3xmaWxlfHpoLWNuX3dpbmRvd3NfMTFfYnVzaW5lc3NfZWRpdGlvbnNfdXBkYXRlZF9tYXlfMjAyMl94NjRfZHZkX2E1MjZmNGQ3Lmlzb3w1Njk5MzUwNTI4fDNBREEwMkJDRUMxNUU4NjJFNDA2NjlCNUQ5MDlBQkQ2fC8=">ed2k:&#x2F;&#x2F;|file|zh-cn_windows_11_business_editions_updated_may_2022_x64_dvd_a526f4d7.iso|5699350528|3ADA02BCEC15E862E40669B5D909ABD6|&#x2F;<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>consumer 版本</strong></p>
<p><strong>BT：</strong><br><span class="exturl" data-url="bWFnbmV0Oj94dD11cm46YnRpaDo1MDYzM2NkZGRkNzYwMGFlMWM2ZjliNmI1NGU4MzVjMjYwMGU3ZDIxJmRuPXpoLWNuX3dpbmRvd3NfMTFfY29uc3VtZXJfZWRpdGlvbnNfdXBkYXRlZF9tYXlfMjAyMl94NjRfZHZkXzBmZDllZjdjLmlzbyZ4bD01ODE1NDc2MjI0">magnet:?xt&#x3D;urn:btih:50633cdddd7600ae1c6f9b6b54e835c2600e7d21&amp;dn&#x3D;zh-cn_windows_11_consumer_editions_updated_may_2022_x64_dvd_0fd9ef7c.iso&amp;xl&#x3D;5815476224<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>ED2K：</strong><br><span class="exturl" data-url="ZWQyazovL3xmaWxlfHpoLWNuX3dpbmRvd3NfMTFfY29uc3VtZXJfZWRpdGlvbnNfdXBkYXRlZF9tYXlfMjAyMl94NjRfZHZkXzBmZDllZjdjLmlzb3w1ODE1NDc2MjI0fEVFQUQyNDJFRjY5MDYxNzY1NjRCNTE3Q0I5MTU0MDlGfC8=">ed2k:&#x2F;&#x2F;|file|zh-cn_windows_11_consumer_editions_updated_may_2022_x64_dvd_0fd9ef7c.iso|5815476224|EEAD242EF6906176564B517CB915409F|&#x2F;<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>发布时间：2022-4-19</strong></p>
<p><strong>business 版本</strong></p>
<p><strong>BT：</strong><br><span class="exturl" data-url="bWFnbmV0Oj94dD11cm46YnRpaDo5MDBkZDBjMzU4Nzc4YTUzNzRhNDEzNmQyNDcyYmNmNDY5YzY4MDg1JmRuPXpoLWNuX3dpbmRvd3NfMTFfYnVzaW5lc3NfZWRpdGlvbnNfdXBkYXRlZF9hcHJpbF8yMDIyX3g2NF9kdmRfZGVjMGI5NjMuaXNvJnhsPTU2MzE1NzgxMTI=">magnet:?xt&#x3D;urn:btih:900dd0c358778a5374a4136d2472bcf469c68085&amp;dn&#x3D;zh-cn_windows_11_business_editions_updated_april_2022_x64_dvd_dec0b963.iso&amp;xl&#x3D;5631578112<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>ED2K：</strong><br><span class="exturl" data-url="ZWQyazovL3xmaWxlfHpoLWNuX3dpbmRvd3NfMTFfYnVzaW5lc3NfZWRpdGlvbnNfdXBkYXRlZF9hcHJpbF8yMDIyX3g2NF9kdmRfZGVjMGI5NjMuaXNvfDU2MzE1NzgxMTJ8OURERkMzRUY5QzVEOEQ3NDE4MjFEQzdDREI4N0I2MTN8Lw==">ed2k:&#x2F;&#x2F;|file|zh-cn_windows_11_business_editions_updated_april_2022_x64_dvd_dec0b963.iso|5631578112|9DDFC3EF9C5D8D741821DC7CDB87B613|&#x2F;<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>consumer 版本</strong></p>
<p><strong>BT：</strong><br><span class="exturl" data-url="bWFnbmV0Oj94dD11cm46YnRpaDpkMTAxODBhN2I5YzMzMWQ3M2JhZGZhZDE4Yjc3NDE4YmE3NTQyNTJjJmRuPXpoLWNuX3dpbmRvd3NfMTFfY29uc3VtZXJfZWRpdGlvbnNfdXBkYXRlZF9hcHJpbF8yMDIyX3g2NF9kdmRfMWY4YjQ5NTYuaXNvJnhsPTU3NDEwMzM0NzI=">magnet:?xt&#x3D;urn:btih:d10180a7b9c331d73badfad18b77418ba754252c&amp;dn&#x3D;zh-cn_windows_11_consumer_editions_updated_april_2022_x64_dvd_1f8b4956.iso&amp;xl&#x3D;5741033472<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>ED2K：</strong><br><span class="exturl" data-url="ZWQyazovL3xmaWxlfHpoLWNuX3dpbmRvd3NfMTFfY29uc3VtZXJfZWRpdGlvbnNfdXBkYXRlZF9hcHJpbF8yMDIyX3g2NF9kdmRfMWY4YjQ5NTYuaXNvfDU3NDEwMzM0NzJ8RUZGNjk2OTIwNzJGNDE4MjgyM0RCQTExMThFMjc3NzZ8Lw==">ed2k:&#x2F;&#x2F;|file|zh-cn_windows_11_consumer_editions_updated_april_2022_x64_dvd_1f8b4956.iso|5741033472|EFF69692072F4182823DBA1118E27776|&#x2F;<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>发布时间：2022-3-15</strong></p>
<p><strong>business 版本</strong></p>
<p><strong>BT：</strong><br><span class="exturl" data-url="bWFnbmV0Oj94dD11cm46YnRpaDo1OWFiYWFkOGU2ODgwNmViYWMxMDhiZDY5YjEzZDdlOWEzOGJlNWZiJmRuPXpoLWNuX3dpbmRvd3NfMTFfYnVzaW5lc3NfZWRpdGlvbnNfdXBkYXRlZF9tYXJjaF8yMDIyX3g2NF9kdmRfN2RmNmVhZTEuaXNvJnhsPTU1ODIyMzU2NDg=">magnet:?xt&#x3D;urn:btih:59abaad8e68806ebac108bd69b13d7e9a38be5fb&amp;dn&#x3D;zh-cn_windows_11_business_editions_updated_march_2022_x64_dvd_7df6eae1.iso&amp;xl&#x3D;5582235648<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>ED2K：</strong><br><span class="exturl" data-url="ZWQyazovL3xmaWxlfHpoLWNuX3dpbmRvd3NfMTFfYnVzaW5lc3NfZWRpdGlvbnNfdXBkYXRlZF9hcHJpbF8yMDIyX3g2NF9kdmRfZGVjMGI5NjMuaXNvfDU2MzE1NzgxMTJ8OURERkMzRUY5QzVEOEQ3NDE4MjFEQzdDREI4N0I2MTN8Lw==">ed2k:&#x2F;&#x2F;|file|zh-cn_windows_11_business_editions_updated_april_2022_x64_dvd_dec0b963.iso|5631578112|9DDFC3EF9C5D8D741821DC7CDB87B613|&#x2F;<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>consumer 版本</strong></p>
<p><strong>BT：</strong><br><span class="exturl" data-url="bWFnbmV0Oj94dD11cm46YnRpaDpkMTAxODBhN2I5YzMzMWQ3M2JhZGZhZDE4Yjc3NDE4YmE3NTQyNTJjJmRuPXpoLWNuX3dpbmRvd3NfMTFfY29uc3VtZXJfZWRpdGlvbnNfdXBkYXRlZF9hcHJpbF8yMDIyX3g2NF9kdmRfMWY4YjQ5NTYuaXNvJnhsPTU3NDEwMzM0NzI=">magnet:?xt&#x3D;urn:btih:d10180a7b9c331d73badfad18b77418ba754252c&amp;dn&#x3D;zh-cn_windows_11_consumer_editions_updated_april_2022_x64_dvd_1f8b4956.iso&amp;xl&#x3D;5741033472<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>ED2K：</strong></p>
<p><span class="exturl" data-url="ZWQyazovL3xmaWxlfHpoLWNuX3dpbmRvd3NfMTFfY29uc3VtZXJfZWRpdGlvbnNfdXBkYXRlZF9hcHJpbF8yMDIyX3g2NF9kdmRfMWY4YjQ5NTYuaXNvfDU3NDEwMzM0NzJ8RUZGNjk2OTIwNzJGNDE4MjgyM0RCQTExMThFMjc3NzZ8Lw==">ed2k:&#x2F;&#x2F;|file|zh-cn_windows_11_consumer_editions_updated_april_2022_x64_dvd_1f8b4956.iso|5741033472|EFF69692072F4182823DBA1118E27776|&#x2F;<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>发布时间：2022-2-15</strong></p>
<p><strong>business 版本</strong></p>
<p><strong>BT：</strong><br><span class="exturl" data-url="bWFnbmV0Oj94dD11cm46YnRpaDphNWM4NjE5MmE1YzI2Yzk3MjY4NDVmZWJjOTUyZDkzMDk4NjgwODRkJmRuPXpoLWNuX3dpbmRvd3NfMTFfYnVzaW5lc3NfZWRpdGlvbnNfdXBkYXRlZF9mZWJfMjAyMl94NjRfZHZkXzcyYjBkN2U2LmlzbyZ4bD01NTU1NDQzNzEy">magnet:?xt&#x3D;urn:btih:a5c86192a5c26c9726845febc952d9309868084d&amp;dn&#x3D;zh-cn_windows_11_business_editions_updated_feb_2022_x64_dvd_72b0d7e6.iso&amp;xl&#x3D;5555443712<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>ED2K：</strong><br><span class="exturl" data-url="ZWQyazovL3xmaWxlfHpoLWNuX3dpbmRvd3NfMTFfYnVzaW5lc3NfZWRpdGlvbnNfdXBkYXRlZF9mZWJfMjAyMl94NjRfZHZkXzcyYjBkN2U2Lmlzb3w1NTU1NDQzNzEyfDZBMkY0NDQ2NEExOTEwOTM4NUJFMzNEMTk2NTMzM0MyfC8=">ed2k:&#x2F;&#x2F;|file|zh-cn_windows_11_business_editions_updated_feb_2022_x64_dvd_72b0d7e6.iso|5555443712|6A2F44464A19109385BE33D1965333C2|&#x2F;<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>consumer 版本</strong></p>
<p><strong>BT：</strong><br><span class="exturl" data-url="bWFnbmV0Oj94dD11cm46YnRpaDowNDNjMDdmMzk3ZWVjNTg0NjIzY2UxMzU0ZmJlNjhlY2RmNmZkYzBmJmRuPXpoLWNuX3dpbmRvd3NfMTFfY29uc3VtZXJfZWRpdGlvbnNfdXBkYXRlZF9mZWJfMjAyMl94NjRfZHZkX2JmNDlmYWU0LmlzbyZ4bD01NjcwNzUyMjU2">magnet:?xt&#x3D;urn:btih:043c07f397eec584623ce1354fbe68ecdf6fdc0f&amp;dn&#x3D;zh-cn_windows_11_consumer_editions_updated_feb_2022_x64_dvd_bf49fae4.iso&amp;xl&#x3D;5670752256<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>ED2K：</strong><br><span class="exturl" data-url="ZWQyazovL3xmaWxlfHpoLWNuX3dpbmRvd3NfMTFfY29uc3VtZXJfZWRpdGlvbnNfdXBkYXRlZF9mZWJfMjAyMl94NjRfZHZkX2JmNDlmYWU0Lmlzb3w1NjcwNzUyMjU2fEFCNjA4RTc4OTFDNzUzMzY3QTkwNjcxRDlDNTM2MEFGfC8=">ed2k:&#x2F;&#x2F;|file|zh-cn_windows_11_consumer_editions_updated_feb_2022_x64_dvd_bf49fae4.iso|5670752256|AB608E7891C753367A90671D9C5360AF|&#x2F;<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="Windows10原版镜像下载地址"><a href="#Windows10原版镜像下载地址" class="headerlink" title="Windows10	原版镜像下载地址"></a>Windows10	原版镜像下载地址</h2><h3 id="整理表格（部分）-1"><a href="#整理表格（部分）-1" class="headerlink" title="整理表格（部分）"></a>整理表格（部分）</h3><table>
<thead>
<tr>
<th>发布时间</th>
<th>版本</th>
<th>BT</th>
</tr>
</thead>
<tbody><tr>
<td>2022-06-21</td>
<td>Windows 10 business (21H2)</td>
<td><span class="exturl" data-url="bWFnbmV0Oj94dD11cm46YnRpaDphYWQyNWY1YmQ5NmFkMDllMzQ4Nzg2MGExM2M3NTY2NGY4Yjg5YzhlJmRuPXpoLWNuX3dpbmRvd3NfMTBfYnVzaW5lc3NfZWRpdGlvbnNfdmVyc2lvbl8yMWgyX3VwZGF0ZWRfanVuZV8yMDIyX3g2NF9kdmRfOTNmOGQ5ZjYuaXNvJnhsPTU4ODkwMDU1Njg=">magnet:?xt&#x3D;urn:btih:aad25f5bd96ad09e3487860a13c75664f8b89c8e&amp;dn&#x3D;zh-cn_windows_10_business_editions_version_21h2_updated_june_2022_x64_dvd_93f8d9f6.iso&amp;xl&#x3D;5889005568<i class="fa fa-external-link-alt"></i></span></td>
</tr>
</tbody></table>
<h3 id="按时间顺序整理-1"><a href="#按时间顺序整理-1" class="headerlink" title="按时间顺序整理"></a>按时间顺序整理</h3><h4 id="Windows-10-21H2"><a href="#Windows-10-21H2" class="headerlink" title="Windows 10 21H2"></a>Windows 10 21H2</h4><p><strong>21H2</strong>  </p>
<p><strong>2022-06-21</strong>	</p>
<p>Windows 10 (business editions), version 21H2 (updated June 2022) (x64) - DVD （ 简体中文版 ）</p>
<p><strong>BT：</strong><br><span class="exturl" data-url="bWFnbmV0Oj94dD11cm46YnRpaDphYWQyNWY1YmQ5NmFkMDllMzQ4Nzg2MGExM2M3NTY2NGY4Yjg5YzhlJmRuPXpoLWNuX3dpbmRvd3NfMTBfYnVzaW5lc3NfZWRpdGlvbnNfdmVyc2lvbl8yMWgyX3VwZGF0ZWRfanVuZV8yMDIyX3g2NF9kdmRfOTNmOGQ5ZjYuaXNvJnhsPTU4ODkwMDU1Njg=">magnet:?xt&#x3D;urn:btih:aad25f5bd96ad09e3487860a13c75664f8b89c8e&amp;dn&#x3D;zh-cn_windows_10_business_editions_version_21h2_updated_june_2022_x64_dvd_93f8d9f6.iso&amp;xl&#x3D;5889005568<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>ED2K：</strong><br><span class="exturl" data-url="ZWQyazovL3xmaWxlfHpoLWNuX3dpbmRvd3NfMTBfYnVzaW5lc3NfZWRpdGlvbnNfdmVyc2lvbl8yMWgyX3VwZGF0ZWRfanVuZV8yMDIyX3g2NF9kdmRfOTNmOGQ5ZjYuaXNvfDU4ODkwMDU1Njh8MDM4M0ExNjM5QjcyRjI4QjE0QTE5RTgzREE0MUE2MzB8Lw==">ed2k:&#x2F;&#x2F;|file|zh-cn_windows_10_business_editions_version_21h2_updated_june_2022_x64_dvd_93f8d9f6.iso|5889005568|0383A1639B72F28B14A19E83DA41A630|&#x2F;<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>1703</strong><br>Windows 10 Enterprise, Version 1703 (Updated July 2017) (x64) - DVD (Chinese-Simplified)</p>
<p><strong>ED2K：</strong><br><span class="exturl" data-url="ZWQyazovL3xmaWxlfGNuX3dpbmRvd3NfMTBfZW50ZXJwcmlzZV92ZXJzaW9uXzE3MDNfdXBkYXRlZF9qdWx5XzIwMTdfeDY0X2R2ZF8xMDkyNTM5MC5pc298NTA1NzY4NTUwNHxDNTdDRjhCRTU3MDBERTJBQ0I3RENGMjI5NjMyMTIwQnwv">ed2k:&#x2F;&#x2F;|file|cn_windows_10_enterprise_version_1703_updated_july_2017_x64_dvd_10925390.iso|5057685504|C57CF8BE5700DE2ACB7DCF229632120B|&#x2F;<i class="fa fa-external-link-alt"></i></span></p>
<p>Windows 10 (Multiple Editions), Version 1703 (Updated July 2017) (x64) - DVD (Chinese-Simplified)<br><strong>ED2K：</strong><br><span class="exturl" data-url="ZWQyazovL3xmaWxlfGNuX3dpbmRvd3NfMTBfbXVsdGlwbGVfZWRpdGlvbnNfdmVyc2lvbl8xNzAzX3VwZGF0ZWRfanVseV8yMDE3X3g2NF9kdmRfMTA5MjUzODIuaXNvfDU4NDk1MTM5ODR8RDRBMTg2OTQwNTEyOTM5RUFGNzJFRjkxRkU3NEMwRjh8Lw==">ed2k:&#x2F;&#x2F;|file|cn_windows_10_multiple_editions_version_1703_updated_july_2017_x64_dvd_10925382.iso|5849513984|D4A186940512939EAF72EF91FE74C0F8|&#x2F;<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="Windows-7原版镜像旗舰版下载地址"><a href="#Windows-7原版镜像旗舰版下载地址" class="headerlink" title="Windows 7	原版镜像旗舰版下载地址"></a>Windows 7	原版镜像旗舰版下载地址</h2><h3 id="整理表格（部分）-2"><a href="#整理表格（部分）-2" class="headerlink" title="整理表格（部分）"></a>整理表格（部分）</h3><table>
<thead>
<tr>
<th>发布时间</th>
<th>版本</th>
<th>BT</th>
</tr>
</thead>
<tbody><tr>
<td>2019</td>
<td>Windows 7 Ultimate</td>
<td><span class="exturl" data-url="bWFnbmV0Oj94dD11cm46YnRpaDowNDk5Rjg0REIyNDIwOTZGMjE4NUUzOEI2OTZDRDNENkM4RDBFNjJDJmRuPTc2MDEuMjQyMTQuMTgwODAxLTE3MDAud2luN3NwMV9sZHJfZXNjcm93X0NMSUVOVF9VTFRJTUFURV94NjRGUkVfZW4tdXMuaXNvJnhsPTU4NzYzNTcxMjA=">magnet:?xt&#x3D;urn:btih:0499F84DB242096F2185E38B696CD3D6C8D0E62C&amp;dn&#x3D;7601.24214.180801-1700.win7sp1_ldr_escrow_CLIENT_ULTIMATE_x64FRE_en-us.iso&amp;xl&#x3D;5876357120<i class="fa fa-external-link-alt"></i></span></td>
</tr>
<tr>
<td>2017</td>
<td>Windows 7 Ultimate</td>
<td><span class="exturl" data-url="bWFnbmV0Oj94dD11cm46YnRpaDpFODY0MTRGNjM4RTExMTA0MjQ4MTA4QjE1NUJFOTQwOEE4MzYyNTA5JmRuPWNuX3dpbmRvd3NfN191bHRpbWF0ZV93aXRoX3NwMV94NjRfZHZkX3VfNjc3NDA4LmlzbyZ4bD0zNDIwNTU3MzEy">magnet:?xt&#x3D;urn:btih:E86414F638E11104248108B155BE9408A8362509&amp;dn&#x3D;cn_windows_7_ultimate_with_sp1_x64_dvd_u_677408.iso&amp;xl&#x3D;3420557312<i class="fa fa-external-link-alt"></i></span></td>
</tr>
<tr>
<td></td>
<td>Windows 7 SP1 x64 简体中文语言包</td>
<td><span class="exturl" data-url="bWFnbmV0Oj94dD11cm46YnRpaDpEQzUwOTQyQTA4ODZCQzJCMjJBMUJCNTZDQTdEQkFCNTgwNTY2QUNBJmRuPXdpbmRvd3M2LjEta2IyNDgzMTM5LXg2NC16aC1jbl8yYzE4ODRiNGZkZjZjOGU5MTk4NjM2OWQ4OGJiY2FhZTAxYzZmMTg3LmV4ZSZ4bD0xNzQ1ODcxNzY=">magnet:?xt&#x3D;urn:btih:DC50942A0886BC2B22A1BB56CA7DBAB580566ACA&amp;dn&#x3D;windows6.1-kb2483139-x64-zh-cn_2c1884b4fdf6c8e91986369d88bbcaae01c6f187.exe&amp;xl&#x3D;174587176<i class="fa fa-external-link-alt"></i></span></td>
</tr>
</tbody></table>
<h3 id="按时间顺序整理-2"><a href="#按时间顺序整理-2" class="headerlink" title="按时间顺序整理"></a>按时间顺序整理</h3><h4 id="Windows-7-2019"><a href="#Windows-7-2019" class="headerlink" title="Windows 7 2019"></a>Windows 7 2019</h4><p><strong>2019</strong><br>Windows 7 Ultimate （Windows 7 旗舰版，English 版本）</p>
<p><strong>BT：</strong><br><span class="exturl" data-url="bWFnbmV0Oj94dD11cm46YnRpaDowNDk5Rjg0REIyNDIwOTZGMjE4NUUzOEI2OTZDRDNENkM4RDBFNjJDJmRuPTc2MDEuMjQyMTQuMTgwODAxLTE3MDAud2luN3NwMV9sZHJfZXNjcm93X0NMSUVOVF9VTFRJTUFURV94NjRGUkVfZW4tdXMuaXNvJnhsPTU4NzYzNTcxMjA=">magnet:?xt&#x3D;urn:btih:0499F84DB242096F2185E38B696CD3D6C8D0E62C&amp;dn&#x3D;7601.24214.180801-1700.win7sp1_ldr_escrow_CLIENT_ULTIMATE_x64FRE_en-us.iso&amp;xl&#x3D;5876357120<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>ED2K：</strong><br><span class="exturl" data-url="ZWQyazovL3xmaWxlfDc2MDEuMjQyMTQuMTgwODAxLTE3MDAud2luN3NwMV9sZHJfZXNjcm93X0NMSUVOVF9VTFRJTUFURV94NjRGUkVfZW4tdXMuaXNvfDU4NzYzNTcxMjB8OUM1NUEwMjBCMzI3QUQ2MENCOEEzN0QwMzE3NzQzRjJ8Lw==">ed2k:&#x2F;&#x2F;|file|7601.24214.180801-1700.win7sp1_ldr_escrow_CLIENT_ULTIMATE_x64FRE_en-us.iso|5876357120|9C55A020B327AD60CB8A37D0317743F2|&#x2F;<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>Windows 7 SP1 x64 简体中文语言包</strong><br><strong>BT：</strong><br><span class="exturl" data-url="bWFnbmV0Oj94dD11cm46YnRpaDpEQzUwOTQyQTA4ODZCQzJCMjJBMUJCNTZDQTdEQkFCNTgwNTY2QUNBJmRuPXdpbmRvd3M2LjEta2IyNDgzMTM5LXg2NC16aC1jbl8yYzE4ODRiNGZkZjZjOGU5MTk4NjM2OWQ4OGJiY2FhZTAxYzZmMTg3LmV4ZSZ4bD0xNzQ1ODcxNzY=">magnet:?xt&#x3D;urn:btih:DC50942A0886BC2B22A1BB56CA7DBAB580566ACA&amp;dn&#x3D;windows6.1-kb2483139-x64-zh-cn_2c1884b4fdf6c8e91986369d88bbcaae01c6f187.exe&amp;xl&#x3D;174587176<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>ED2K：</strong><br><span class="exturl" data-url="ZWQyazovL3xmaWxlfHdpbmRvd3M2LjEta2IyNDgzMTM5LXg2NC16aC1jbl8yYzE4ODRiNGZkZjZjOGU5MTk4NjM2OWQ4OGJiY2FhZTAxYzZmMTg3LmV4ZXwxNzQ1ODcxNzZ8RDI4QTBEQjQ3QTIyOUY3RTA0OTE1MzkzQ0UwRTM1RTZ8Lw==">ed2k:&#x2F;&#x2F;|file|windows6.1-kb2483139-x64-zh-cn_2c1884b4fdf6c8e91986369d88bbcaae01c6f187.exe|174587176|D28A0DB47A229F7E04915393CE0E35E6|&#x2F;<i class="fa fa-external-link-alt"></i></span></p>
<h4 id="Windows-7-2011"><a href="#Windows-7-2011" class="headerlink" title="Windows 7 2011"></a>Windows 7 2011</h4><p><strong>2011 SP1</strong><br>Windows 7 Ultimate （Windows 7 旗舰版，简体中文）</p>
<p><strong>BT：</strong><br><span class="exturl" data-url="bWFnbmV0Oj94dD11cm46YnRpaDpFODY0MTRGNjM4RTExMTA0MjQ4MTA4QjE1NUJFOTQwOEE4MzYyNTA5JmRuPWNuX3dpbmRvd3NfN191bHRpbWF0ZV93aXRoX3NwMV94NjRfZHZkX3VfNjc3NDA4LmlzbyZ4bD0zNDIwNTU3MzEy">magnet:?xt&#x3D;urn:btih:E86414F638E11104248108B155BE9408A8362509&amp;dn&#x3D;cn_windows_7_ultimate_with_sp1_x64_dvd_u_677408.iso&amp;xl&#x3D;3420557312<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>ED2K：</strong><br><span class="exturl" data-url="ZWQyazovL3xmaWxlfGNuX3dpbmRvd3NfN191bHRpbWF0ZV93aXRoX3NwMV94NjRfZHZkX3VfNjc3NDA4Lmlzb3wzNDIwNTU3MzEyfEI1ODU0ODY4MTg1NDIzNkM3OTM5MDAzQjU4M0E4MDc4fC8=">ed2k:&#x2F;&#x2F;|file|cn_windows_7_ultimate_with_sp1_x64_dvd_u_677408.iso|3420557312|B58548681854236C7939003B583A8078|&#x2F;<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="Windows-官方地址"><a href="#Windows-官方地址" class="headerlink" title="Windows 官方地址"></a>Windows 官方地址</h2><p><strong>Windows 官方地址</strong>：<span class="exturl" data-url="aHR0cHM6Ly93d3cubWljcm9zb2Z0LmNvbS96aC1jbi93aW5kb3dzL2dldC13aW5kb3dzLTEx">如何为您的兼容 PC 获取 Windows 11| Microsoft<i class="fa fa-external-link-alt"></i></span></p>
<p>Windows 11 官方下载地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cubWljcm9zb2Z0LmNvbS96aC1jbi9zb2Z0d2FyZS1kb3dubG9hZC93aW5kb3dzMTE=">Download Windows 11 (microsoft.com)<i class="fa fa-external-link-alt"></i></span></p>
<p>Windows 10 官方下载地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cubWljcm9zb2Z0LmNvbS96aC1jbi9zb2Z0d2FyZS1kb3dubG9hZC93aW5kb3dzMTA=">下载 Windows 10 (microsoft.com)<i class="fa fa-external-link-alt"></i></span></p>
<p>Windows 8（生命周期已结束）：<span class="exturl" data-url="aHR0cHM6Ly9sZWFybi5taWNyb3NvZnQuY29tL3poLWNuL2xpZmVjeWNsZS9wcm9kdWN0cy93aW5kb3dzLTg=">Windows 8 - Microsoft Lifecycle | Microsoft Learn<i class="fa fa-external-link-alt"></i></span></p>
<p>Windows 7 （生命周期已结束）：<span class="exturl" data-url="aHR0cHM6Ly9sZWFybi5taWNyb3NvZnQuY29tL3poLWNuL2xpZmVjeWNsZS9wcm9kdWN0cy93aW5kb3dzLTc=">Windows 7 - Microsoft Lifecycle | Microsoft Learn<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="其它获取方式"><a href="#其它获取方式" class="headerlink" title="其它获取方式"></a>其它获取方式</h2><p>更多信息，可访问 MSDN，我告诉你：<span class="exturl" data-url="aHR0cHM6Ly9tc2RuLml0ZWxseW91LmNuLw==">https://msdn.itellyou.cn/<i class="fa fa-external-link-alt"></i></span>  ，不可多得的良心小站，多年一如既往。</p>
<p>MSDN，我告诉你，新网址： <span class="exturl" data-url="aHR0cHM6Ly9uZXh0Lml0ZWxseW91LmNuLw==">https://next.itellyou.cn<i class="fa fa-external-link-alt"></i></span></p>
<p>以上均为个人手动搜集总结，仅供参考哟！仅供学习交流，请勿做商业用途。</p>
<p>希望对你的工作有所帮助哟！</p>
<p>—END—</p>
]]></content>
      <categories>
        <category>通用工具</category>
      </categories>
      <tags>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows10日常使用点滴记录：禁用自动更新</title>
    <url>/2020/12/14/Windows10%E6%97%A5%E5%B8%B8%E4%BD%BF%E7%94%A8%E7%82%B9%E6%BB%B4%E8%AE%B0%E5%BD%95%EF%BC%9A%E7%A6%81%E7%94%A8%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>win10这个自动下载更新着实很流氓，禁用掉需要尝试各种方法，像极了牛皮膏药。<strong>你更新我并不反感，但请不要耍流氓般的强制性更新，在后台下载偷跑流量这就不厚道了，真是苟的不行。</strong><br><img data-src="https://img-blog.csdnimg.cn/20210405205100599.png" alt="在这里插入图片描述"></p>
<p><strong>找到设置，建议开启按流量计费</strong><br><img data-src="https://img-blog.csdnimg.cn/20210101193132286.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p><strong>这种方式禁用不是长久之计</strong><br><img data-src="https://img-blog.csdnimg.cn/20201228152111985.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>需要你每天检查一下windows update服务是否被流氓系统自动开启了，<strong>长期坚持下来也是一种良好的使用习惯</strong>。</p>
<p><img data-src="https://img-blog.csdnimg.cn/20210405210009708.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>会死恢复原，老流氓了</strong><br><img data-src="https://img-blog.csdnimg.cn/20201228152235148.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><p><strong>win10系统更新存放文件位置</strong></p>
<p>看着自己的C盘越来越臃肿，心里一万个草泥马奔腾而过。<br><img data-src="https://img-blog.csdnimg.cn/20210405210632354.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">C:\Windows\SoftwareDistribution\Download</span><br></pre></td></tr></table></figure>
<p>发现系统盘越来越臃肿了，心里一万个mmp奔腾而过。咱是文明人，找到文件删除即可。关于禁用win10自动更新，很多方法都不是很实用，不持久。<br><img data-src="https://img-blog.csdnimg.cn/20201228152601255.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><code>win + r</code>快捷键键入上述的文件夹地址，删除里面包含的文件即可。</p>
<p><strong>禁用win10自动更新的几种方法</strong></p>
<h2 id="一、方法一"><a href="#一、方法一" class="headerlink" title="一、方法一"></a>一、方法一</h2><p>1、运行<strong>win + r</strong>快捷键<br>2、输入<strong>gpedit.msc</strong>进入本地组件策略编辑<br><img data-src="https://img-blog.csdnimg.cn/20201214140320618.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p><strong>禁用掉配置自动更新</strong><br><img data-src="https://img-blog.csdnimg.cn/20201228152859362.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>win + r</strong>快捷键输入<strong>gpedit.msc</strong>进入本地策略编辑器<br>1、首先进入本地策略编辑器<br>2、找到计算机配置<br>3、展开管理模板<br>4、展开Windows组件<br>5、选中Windows更新<br><strong>6、找到指定 Intranet Microsoft 更新服务位置编辑策略如下，填写一个网址，让win10找不到更新的地址。</strong><br><strong>7、最后记得重启电脑生效。</strong><br><img data-src="https://img-blog.csdnimg.cn/20201214140334612.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>在某乎上看到说有用，但是对于我这1703企业版并不管用。至少设置了不会出现小菊花转圈圈（内心是这样的：真想画个圈圈诅咒这个流氓系统。），<strong>正在配置Windows10更新中已完成70%，请勿关机。。。</strong> 之前在查询禁用方法的时候，无意间看到一张播新闻的图片，在结束的时候显示正在配置更新，请勿关机。且不论那图片真假，但是这个更新真的苟，原谅我不厚道的笑了。</p>
<p><img data-src="https://img-blog.csdnimg.cn/20210405203259445.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="二、方法二修改注册表"><a href="#二、方法二修改注册表" class="headerlink" title="二、方法二修改注册表"></a>二、方法二修改注册表</h2><p><strong>假如上述方法不起作用，使用以下方法尝试</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">\HKEY_LOCAL_MACHINE</span><br><span class="line">\SOFTWARE\Microsoft</span><br><span class="line">\Windows\CurrentVersion</span><br><span class="line">\Policies\Explorer</span><br></pre></td></tr></table></figure>
<p>选中Explorer，右键新建DWORD（32位），64位不知道能不能生效，未测试。注册表命名为NoWindowsUpdate，编辑将数值改为1。</p>
<p><img data-src="https://img-blog.csdnimg.cn/20201214141421977.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<br/>

<p><strong>假如上述方法不起作用，使用以下方法尝试</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">\HKEY_LOCAL_MACHINE</span><br><span class="line">\SOFTWARE\Policies</span><br><span class="line">\Microsoft\Windows</span><br><span class="line">\WindowsUpdate\AU</span><br></pre></td></tr></table></figure>
<p>1、新建一个名为「AUOptions」的 32 位 DWORD 值<br>2、编辑将数值改为2<br>3、重启电脑生效</p>
<p><strong>修改注册表start数值为4</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">\HKEY_LOCAL_MACHINE</span><br><span class="line">\SYSTEM\CurrentControlSet</span><br><span class="line">\Services\UsoSvc</span><br></pre></td></tr></table></figure>
<p><img data-src="https://img-blog.csdnimg.cn/20201228151741374.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>改注册表的方式重启会生效，但是能管多久需要时间的验证，个人试了好几种改注册表的方式，最终在再次开机时都是会死恢复原。。。</p>
<h2 id="三、window10检测笔记本电脑电池使用状况"><a href="#三、window10检测笔记本电脑电池使用状况" class="headerlink" title="三、window10检测笔记本电脑电池使用状况"></a>三、window10检测笔记本电脑电池使用状况</h2><p>1、首先在Windows系统下找到命令提示符。</p>
<p>2、右键以管理员身份运行命令提示符。</p>
<p>3、输入命令<code>Powercfg /batteryreport</code> ，系统会在控制台打印出指定路径，并形成你的电池使用报告，如下面的引用。建议使用<strong>Google Chrome</strong>或者<strong>Mozilla Firefox</strong>打开<strong>battery-report.html</strong>文件。</p>
<blockquote>
<p>C:\Windows\system32&gt;Powercfg &#x2F;batteryreport<br>电池使用时间报告已保存到文件路径   C:\Windows\system32\battery-report.html。</p>
</blockquote>
<p>一共七项，具体含义请用Google或者有道。</p>
<p>1、<strong>Battery report</strong> </p>
<p> 2、<strong>Installed batteries</strong><br>Information about each currently installed battery </p>
<p>3、<strong>Recent usage</strong><br>Power states over the last 3 days </p>
<p>4、<strong>Battery usage</strong><br>Battery drains over the last 3 days </p>
<p>5、 <strong>Usage history</strong><br>History of system usage on AC and battery </p>
<p>6、 <strong>Battery capacity history</strong><br>Charge capacity history of the system’s batteries </p>
<p>7、 <strong>Battery life estimates</strong><br>Battery life estimates based on observed drains </p>
]]></content>
      <tags>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows_server2012服务器部署Oracle11g：.NET和CPU核心数问题解决方案</title>
    <url>/2021/10/09/Windows_Server2012%E9%83%A8%E7%BD%B2Oracle11g%E6%95%B0%E6%8D%AE%E5%BA%93NET%E7%8E%AF%E5%A2%83%E5%92%8CCPU%E6%A0%B8%E5%BF%83%E6%95%B0%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>主要以 Windows server2012R2 为主进行介绍，解决实际工作中遇到到的一些问题。</p>
<p>比如服务器 CPU 核心数过高，导致 Oracle 数据库安装时卡在 2% 的情况。</p>
<p>在 Windows 平台，你可以安装 VMware 工具模拟使用 Windows server 达到熟悉的目的。</p>
<p><img data-src="https://picx.zhimg.com/80/v2-fe5ce26ed9df00d5a05d2aa236cb91f0_720w.jpeg?source=d16d100b" alt="img"></p>
<span id="more"></span>



<p>说句心里话，我真没想到过我会在Windows服务器上总结这么多。一分耕耘一分收获，但是血赚不亏。</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>第一次接触Windows服务器大约在5年前，那会的活动价我入手了入门级的Windows服务器。第一次安装了Windows server2012，低配版的服务器确实很吃力。</p>
<p>想熟悉Windows server服务器最新版，建议使用VMware配合服务器镜像。</p>
<p><strong>镜像获取地址</strong>，推荐 <span class="exturl" data-url="aHR0cHM6Ly9tc2RuLml0ZWxseW91LmNuLw==">msdn，我告诉你<i class="fa fa-external-link-alt"></i></span>。良心网站，专业收集原版镜像。</p>
<p><strong>关于想体验最新版的Windows11或者Windows server2022服务器</strong>，可以访问新地址 <span class="exturl" data-url="aHR0cHM6Ly9uZXh0Lml0ZWxseW91LmNuLw==">https://next.itellyou.cn/<i class="fa fa-external-link-alt"></i></span>。</p>
<h2 id="一、Oracle数据库安装开在2"><a href="#一、Oracle数据库安装开在2" class="headerlink" title="一、Oracle数据库安装开在2%"></a>一、Oracle数据库安装开在2%</h2><h3 id="1、问题描述"><a href="#1、问题描述" class="headerlink" title="1、问题描述"></a>1、问题描述</h3><p>1.1、<strong>服务器CPU核心数过高</strong>。在使用 Windows server2012 或者是其它 Windows 服务器，可能也会遇到这类问题。</p>
<h3 id="2、解决问题"><a href="#2、解决问题" class="headerlink" title="2、解决问题"></a>2、解决问题</h3><p>2.1、<strong>解决问题，进入服务器的系统配置</strong>，一次找到引导-&gt;高级选项，<strong>设置处理器的核心数为16，然后重启即可生效</strong>。</p>
<p>2.2、小技巧</p>
<p><strong>快捷键win + r，然后输入msconfig</strong>命令即可快速进入系统配置。</p>
<p><img data-src="https://pic1.zhimg.com/80/v2-0ea42e97764352b980208b492cbf0645_720w.jpg?source=d16d100b" alt="img"></p>
<h2 id="二、安装-net3-5失败"><a href="#二、安装-net3-5失败" class="headerlink" title="二、安装.net3.5失败"></a>二、安装.net3.5失败</h2><h3 id="1、准备工作，提取sxs"><a href="#1、准备工作，提取sxs" class="headerlink" title="1、准备工作，提取sxs"></a>1、准备工作，提取sxs</h3><p>1.1、准备服务器镜像，可以<strong>通过我上面提到的网址进行获取</strong>。</p>
<p><img data-src="https://picx.zhimg.com/80/v2-ae35ab73de16263bce32c41625b60259_720w.png?source=d16d100b" alt="img"></p>
<p><strong>1.2、提取sxs</strong></p>
<p>使用解压缩软件或者iso模拟软件打开镜像包，然后<strong>进入&#x2F;source&#x2F;找到sxs</strong>复制出来。在安装.net3.5时作为备用源使用，安装Oracle11gR2时需要安装.net3.5。</p>
<p>解压缩软件推荐360zip国际版（旧版1.0几的无广告）或者7z（体积小）。</p>
<p><img data-src="https://pic1.zhimg.com/80/v2-e952c64714b504b3455d1eb68b4ee687_720w.jpg?source=d16d100b" alt="img"></p>
<h3 id="2、再次安装-net3-5"><a href="#2、再次安装-net3-5" class="headerlink" title="2、再次安装.net3.5"></a>2、再次安装.net3.5</h3><h3 id="2-1、指定依赖sxs，安装-net3-5"><a href="#2-1、指定依赖sxs，安装-net3-5" class="headerlink" title="2.1、指定依赖sxs，安装.net3.5"></a>2.1、指定依赖sxs，安装.net3.5</h3><p>将之前从<strong>Windows server中提取的sxs</strong>复制到系统盘根目录下，然后在服务器仪表板中添加角色和功能（安装依赖），按照图上的提示<strong>指定我们准备好的sxs源路径</strong>，最终完美解决服务器上.net3.5无法安装的问题。</p>
<p><img data-src="https://pic1.zhimg.com/80/v2-ad95757957cdfb0499e6fd8b7f54ced5_720w.jpg?source=d16d100b" alt="img"></p>
<h3 id="2-2、Windows-server仪表板"><a href="#2-2、Windows-server仪表板" class="headerlink" title="2.2、Windows server仪表板"></a>2.2、Windows server仪表板</h3><p>添加角色与功能，选择需要安装的功能时用得上，比如上面安装.net3.5</p>
<p><img data-src="https://picx.zhimg.com/80/v2-f46dcdbdfa18f66c41eccd296fda511c_720w.jpg?source=d16d100b" alt="img"></p>
<h2 id="三、操作小技巧"><a href="#三、操作小技巧" class="headerlink" title="三、操作小技巧"></a>三、操作小技巧</h2><h3 id="1、以Oracle服务为例"><a href="#1、以Oracle服务为例" class="headerlink" title="1、以Oracle服务为例"></a>1、以Oracle服务为例</h3><p>1.1、进入服务快捷命令，<strong>win + r快捷键输入service.msc</strong>，如下图所示</p>
<p><img data-src="https://pic1.zhimg.com/80/v2-39f6f46ab6b769eb86ef340e8c5dba2a_720w.png?source=d16d100b" alt="img"></p>
<p>1.2、定位Oracle服务，你看到的Oracle服务是双倍的，因为我安装了双实例。实际工作中，并不推荐在单台服务器上部署双实例。不要问我为什么，因为实际中遇到过。内存也耗不起，最终把服务器拖挂掉了，最后通过清理日志解决。</p>
<p><img data-src="https://picx.zhimg.com/80/v2-c34e42b299d1a054b0a60e17f638d5f4_720w.jpg?source=d16d100b" alt="img"></p>
<h3 id="2、配置IP地址与DNS"><a href="#2、配置IP地址与DNS" class="headerlink" title="2、配置IP地址与DNS"></a>2、配置IP地址与DNS</h3><p>配置IP地址与DNS与平时使用的win7或者win10是一样的配置方法</p>
<p>2.1、<strong>进入控制面板找到网络和共享中心</strong></p>
<p>win + r 快捷键运行control命令进入控制面板，下图是VMware搭建的测试环境。</p>
<p><img data-src="https://picx.zhimg.com/80/v2-a5bc00f7ed3cce11c873923f78ad28f6_720w.jpg?source=d16d100b" alt="img"></p>
<p><strong>2.2、配置IP地址和DNS</strong></p>
<p><img data-src="https://pica.zhimg.com/80/v2-d19089effc245b475e2fd96af6dbaeba_720w.jpg?source=d16d100b" alt="img"></p>
<h3 id="3、磁盘管理"><a href="#3、磁盘管理" class="headerlink" title="3、磁盘管理"></a>3、磁盘管理</h3><p>最后再介绍一个小技巧，关于磁盘管理。当我们并不熟悉仪表板的操作时，或者旧版的服务器压根就没这玩意，如何处理。这是我们可以采用命令方式，先打开计算机管理。</p>
<p>同样使用win + r 快捷键，然后运行compmgmt.msc命令进入计算机管理，最后定位到磁盘管理。</p>
<p><img data-src="https://pic1.zhimg.com/80/v2-ff8ef218a407578907cdeb60580e459f_720w.jpg?source=d16d100b" alt="img"></p>
<p>以上均为实际运维工作中使用到的小技巧，方便我们去管理维护服务器。在实际工作中，更多的是经验的累积。在之前的公司遇到这样一种，服务器的硬盘突然就gg思密达了。结果去查看后简直是让我措手不及，服务器版本那叫一个老，一些命令都不适用。心里真想来句mmp，最后还是硬着头皮上解决问题。</p>
<p>说实话，当时我在Windows服务器的实施与运维经验还没linux上丰富，现在想来完全是<strong>工作让你不得不去适应</strong>。</p>
<p>以上总结，仅供参考哟！如果你有幸看到本篇博文，希望对你的学习和工作有所帮助。</p>
<p>—END—</p>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>Oracle</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows平台安装docker指定安装路径</title>
    <url>/2024/03/13/Windows%E5%B9%B3%E5%8F%B0%E5%AE%89%E8%A3%85docker%E6%8C%87%E5%AE%9A%E5%AE%89%E8%A3%85%E8%B7%AF%E5%BE%84/</url>
    <content><![CDATA[<p>演示使用 docker 版本：4.27.2</p>
<p>操作系统版本：Windows 11 家庭中文版 23H2  22631.3296</p>
<p>Windows 平台使用 PowerShell 7.2.5 安装 <span class="exturl" data-url="aHR0cHM6Ly9kZXNrdG9wLmRvY2tlci5jb20vd2luL21haW4vYW1kNjQvRG9ja2VyJTIwRGVza3RvcCUyMEluc3RhbGxlci5leGU=">Docker Desktop on Windows<i class="fa fa-external-link-alt"></i></span>，<strong>指定安装路径</strong>，比如 <code>install --installation-dir=D:\software\Docker</code>。如果你下载完，双击安装，<strong>默认安装路径</strong>为<code>C:\Program Files\Docker\Docker</code>。</p>
<p>如果遇到 <code>Start-Process: A positional parameter cannot be found that accepts argument &#39;--installation-dir=D:\software\Docker&#39;.</code>。</p>
<p>请尝试使用 <code>Start-Process &#39;.\Docker Desktop Installer.exe&#39; &#39;install --installation-dir=D:\software\Docker&#39;</code></p>
<p>做一个简单说明，在 Powershell 中使用某些命令指定参数，可能需要使用单引号或者双引号将指定参数拼接包裹起来，让系统将该命令识别为一个整体。</p>
<p><strong>友情提醒</strong>：我这边安装测试环境默认采用 WSL2，你也可以使用 Hyper-V。</p>
<span id="more"></span>



<h3 id="PowerShell-命令安装-docker"><a href="#PowerShell-命令安装-docker" class="headerlink" title="PowerShell 命令安装 docker"></a>PowerShell 命令安装 docker</h3><p><strong>执行安装命令时，请切换到你下载 docker 所在路径执行命令</strong>。</p>
<p>PowerShell 7.2.5 安装 Docker Desktop on Windows，<strong>指定安装路径</strong> <code>install --installation-dir=D:\software\Docker</code>：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Start-Process</span> <span class="string">&#x27;.\Docker Desktop Installer.exe&#x27;</span> <span class="string">&#x27;install --installation-dir=D:\software\Docker&#x27;</span></span><br></pre></td></tr></table></figure>



<p>PowerShell 7.2.5 安装 Docker 信息日志：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">PS</span> E:\Downloads\Dev<span class="literal">-tools</span>\podman<span class="literal">-docker</span>&gt; <span class="built_in">Start-Process</span> <span class="string">&#x27;.\Docker Desktop Installer.exe&#x27;</span> <span class="string">&#x27;install --installation-dir=D:\software\Docker&#x27;</span></span><br><span class="line"><span class="built_in">PS</span> E:\Downloads\Dev<span class="literal">-tools</span>\podman<span class="literal">-docker</span>&gt; <span class="literal">--------------------------------------------------------------------------------</span>&gt;<span class="number">8</span></span><br><span class="line">Version: <span class="number">4.27</span>.<span class="number">2</span> (<span class="number">137060</span>)</span><br><span class="line">Sha1:</span><br><span class="line">Started on: <span class="number">2024</span><span class="literal">-03-13</span> <span class="number">02</span>:<span class="number">37</span>:<span class="number">03.038</span></span><br><span class="line">Resources: E:\Downloads\Dev<span class="literal">-tools</span>\podman<span class="literal">-docker</span>\resources</span><br><span class="line">OS: Windows <span class="number">10</span> Home China</span><br><span class="line">Edition: CoreCountrySpecific</span><br><span class="line">Id: <span class="number">2009</span></span><br><span class="line">Build: <span class="number">22631</span></span><br><span class="line">BuildLabName: <span class="number">22621.1</span>.amd64fre.ni_release.<span class="number">220506</span><span class="literal">-1250</span></span><br><span class="line">File: C:\ProgramData\DockerDesktop\<span class="built_in">install-log</span><span class="literal">-admin</span>.txt</span><br><span class="line">CommandLine: <span class="string">&quot;E:\Downloads\Dev-tools\podman-docker\Docker Desktop Installer.exe&quot;</span> install <span class="literal">--installation-dir</span>=D:\software\Docker</span><br><span class="line">You can send feedback, including this log file, at https://github.com/docker/<span class="keyword">for</span><span class="literal">-win</span>/issues</span><br><span class="line">[<span class="number">2024</span>-<span class="number">03</span>-<span class="number">13</span><span class="type">T02</span>:<span class="number">37</span>:<span class="number">03.207865500</span><span class="type">Z</span>][<span class="type">ManifestAndExistingInstallationLoader</span>][<span class="type">I</span>] Install path is D:\software\Docker. Loading manifest first</span><br><span class="line">[<span class="number">2024</span>-<span class="number">03</span>-<span class="number">13</span><span class="type">T02</span>:<span class="number">37</span>:<span class="number">03.214865600</span><span class="type">Z</span>][<span class="type">ManifestAndExistingInstallationLoader</span>][<span class="type">I</span>] No manifest found, returning no existing install</span><br><span class="line">[<span class="number">2024</span>-<span class="number">03</span>-<span class="number">13</span><span class="type">T02</span>:<span class="number">37</span>:<span class="number">03.214865600</span><span class="type">Z</span>][<span class="type">Installer</span>][<span class="type">I</span>] No installation found</span><br><span class="line">[<span class="number">2024</span>-<span class="number">03</span>-<span class="number">13</span><span class="type">T02</span>:<span class="number">37</span>:<span class="number">03.437269300</span><span class="type">Z</span>][<span class="type">InstallWorkflow</span>][<span class="type">I</span>] Cancel pending background download</span><br><span class="line">[<span class="number">2024</span>-<span class="number">03</span>-<span class="number">13</span><span class="type">T02</span>:<span class="number">37</span>:<span class="number">03.440268600</span><span class="type">Z</span>][<span class="type">BackgroundTransfer</span>][<span class="type">I</span>] Cancel current background transfer job</span><br><span class="line">[<span class="number">2024</span>-<span class="number">03</span>-<span class="number">13</span><span class="type">T02</span>:<span class="number">37</span>:<span class="number">07.684391600</span><span class="type">Z</span>][<span class="type">InstallWorkflow</span>][<span class="type">I</span>] <span class="keyword">Using</span> package: res:DockerDesktop</span><br><span class="line">[<span class="number">2024</span>-<span class="number">03</span>-<span class="number">13</span><span class="type">T02</span>:<span class="number">37</span>:<span class="number">07.685763700</span><span class="type">Z</span>][<span class="type">InstallWorkflow</span>][<span class="type">I</span>] Downloading</span><br><span class="line">[<span class="number">2024</span>-<span class="number">03</span>-<span class="number">13</span><span class="type">T02</span>:<span class="number">37</span>:<span class="number">08.963591300</span><span class="type">Z</span>][<span class="type">InstallWorkflow</span>][<span class="type">I</span>] Extracting manifest</span><br><span class="line">[<span class="number">2024</span>-<span class="number">03</span>-<span class="number">13</span><span class="type">T02</span>:<span class="number">37</span>:<span class="number">09.632584000</span><span class="type">Z</span>][<span class="type">InstallWorkflow</span>][<span class="type">I</span>] Manifest found: version=<span class="number">137060</span>, displayVersion=<span class="number">4.27</span>.<span class="number">2</span>, channelUrl=https://desktop<span class="literal">-stage</span>.docker.com/win/main/amd64/appcast.xml</span><br><span class="line">[<span class="number">2024</span>-<span class="number">03</span>-<span class="number">13</span><span class="type">T02</span>:<span class="number">37</span>:<span class="number">09.632584000</span><span class="type">Z</span>][<span class="type">InstallWorkflow</span>][<span class="type">I</span>] Checking prerequisites</span><br><span class="line">[<span class="number">2024</span>-<span class="number">03</span>-<span class="number">13</span><span class="type">T02</span>:<span class="number">37</span>:<span class="number">09.946644600</span><span class="type">Z</span>][<span class="type">InstallWorkflow</span>][<span class="type">I</span>] Prompting <span class="keyword">for</span> optional features</span><br><span class="line">[<span class="number">2024</span>-<span class="number">03</span>-<span class="number">13</span><span class="type">T02</span>:<span class="number">37</span>:<span class="number">36.239911500</span><span class="type">Z</span>][<span class="type">InstallWorkflow</span>][<span class="type">I</span>] Selected backend mode: wsl<span class="literal">-2</span></span><br><span class="line">[<span class="number">2024</span>-<span class="number">03</span>-<span class="number">13</span><span class="type">T02</span>:<span class="number">37</span>:<span class="number">36.241400800</span><span class="type">Z</span>][<span class="type">InstallWorkflow</span>][<span class="type">I</span>] Unpacking artifacts</span><br><span class="line">[<span class="number">2024</span>-<span class="number">03</span>-<span class="number">13</span><span class="type">T02</span>:<span class="number">39</span>:<span class="number">26.623864500</span><span class="type">Z</span>][<span class="type">InstallWorkflow</span>][<span class="type">I</span>] Deploying component Docker.Installer.CreateGroupAction</span><br><span class="line">[<span class="number">2024</span>-<span class="number">03</span>-<span class="number">13</span><span class="type">T02</span>:<span class="number">39</span>:<span class="number">40.326128200</span><span class="type">Z</span>][<span class="type">InstallWorkflow</span>][<span class="type">I</span>] Deploying component Docker.Installer.AddToGroupAction</span><br><span class="line">[<span class="number">2024</span>-<span class="number">03</span>-<span class="number">13</span><span class="type">T02</span>:<span class="number">39</span>:<span class="number">49.434171400</span><span class="type">Z</span>][<span class="type">InstallWorkflow</span>][<span class="type">I</span>] Deploying component Docker.Installer.EnableFeaturesAction</span><br><span class="line">[<span class="number">2024</span>-<span class="number">03</span>-<span class="number">13</span><span class="type">T02</span>:<span class="number">39</span>:<span class="number">49.451171500</span><span class="type">Z</span>][<span class="type">InstallWorkflow</span>-<span class="type">EnableFeaturesAction</span>][<span class="type">I</span>] Required features: VirtualMachinePlatform, Microsoft<span class="literal">-Windows-Subsystem-Linux</span></span><br><span class="line">[<span class="number">2024</span>-<span class="number">03</span>-<span class="number">13</span><span class="type">T02</span>:<span class="number">39</span>:<span class="number">50.034773100</span><span class="type">Z</span>][<span class="type">InstallWorkflow</span>][<span class="type">I</span>] Deploying component Docker.Installer.ServiceAction</span><br><span class="line">[<span class="number">2024</span>-<span class="number">03</span>-<span class="number">13</span><span class="type">T02</span>:<span class="number">39</span>:<span class="number">50.036773000</span><span class="type">Z</span>][<span class="type">InstallWorkflow</span>-<span class="type">ServiceAction</span>][<span class="type">I</span>] Removing service</span><br><span class="line">[<span class="number">2024</span>-<span class="number">03</span>-<span class="number">13</span><span class="type">T02</span>:<span class="number">39</span>:<span class="number">50.038772900</span><span class="type">Z</span>][<span class="type">InstallWorkflow</span>-<span class="type">ServiceAction</span>][<span class="type">I</span>] Creating service</span><br><span class="line">[<span class="number">2024</span>-<span class="number">03</span>-<span class="number">13</span><span class="type">T02</span>:<span class="number">39</span>:<span class="number">50.041394600</span><span class="type">Z</span>][<span class="type">InstallWorkflow</span>][<span class="type">I</span>] Deploying component Docker.Installer.ShortcutAction</span><br><span class="line">[<span class="number">2024</span>-<span class="number">03</span>-<span class="number">13</span><span class="type">T02</span>:<span class="number">39</span>:<span class="number">50.060434100</span><span class="type">Z</span>][<span class="type">InstallWorkflow</span>-<span class="type">ShortcutAction</span>][<span class="type">I</span>] Creating shortcut: C:\ProgramData\Microsoft\Windows\Start Menu\Docker Desktop.lnk/Docker Desktop</span><br><span class="line">[<span class="number">2024</span>-<span class="number">03</span>-<span class="number">13</span><span class="type">T02</span>:<span class="number">39</span>:<span class="number">50.067435200</span><span class="type">Z</span>][<span class="type">InstallWorkflow</span>][<span class="type">I</span>] Deploying component Docker.Installer.ShortcutAction</span><br><span class="line">[<span class="number">2024</span>-<span class="number">03</span>-<span class="number">13</span><span class="type">T02</span>:<span class="number">39</span>:<span class="number">50.069434700</span><span class="type">Z</span>][<span class="type">InstallWorkflow</span>-<span class="type">ShortcutAction</span>][<span class="type">I</span>] Creating shortcut: C:\Users\kart\Desktop\Docker Desktop.lnk/Docker Desktop</span><br><span class="line">[<span class="number">2024</span>-<span class="number">03</span>-<span class="number">13</span><span class="type">T02</span>:<span class="number">39</span>:<span class="number">50.071434500</span><span class="type">Z</span>][<span class="type">InstallWorkflow</span>][<span class="type">I</span>] Deploying component Docker.Installer.AutoStartAction</span><br><span class="line">[<span class="number">2024</span>-<span class="number">03</span>-<span class="number">13</span><span class="type">T02</span>:<span class="number">39</span>:<span class="number">50.072434700</span><span class="type">Z</span>][<span class="type">InstallWorkflow</span>][<span class="type">I</span>] Deploying component Docker.Installer.PathAction</span><br><span class="line">[<span class="number">2024</span>-<span class="number">03</span>-<span class="number">13</span><span class="type">T02</span>:<span class="number">39</span>:<span class="number">50.376848700</span><span class="type">Z</span>][<span class="type">InstallWorkflow</span>][<span class="type">I</span>] Deploying component Docker.Installer.ExecAction</span><br><span class="line">[<span class="number">2024</span>-<span class="number">03</span>-<span class="number">13</span><span class="type">T02</span>:<span class="number">39</span>:<span class="number">50.381848800</span><span class="type">Z</span>][<span class="type">InstallWorkflow</span>-<span class="type">ExecAction</span>][<span class="type">I</span>] Running: D:\software\Docker\InstallerCli.exe <span class="literal">-i</span> with timeout=<span class="literal">-1</span></span><br><span class="line">[<span class="number">2024</span>-<span class="number">03</span>-<span class="number">13</span><span class="type">T02</span>:<span class="number">39</span>:<span class="number">53.011361600</span><span class="type">Z</span>][<span class="type">InstallWorkflow</span>][<span class="type">I</span>] Registering product</span><br><span class="line">[<span class="number">2024</span>-<span class="number">03</span>-<span class="number">13</span><span class="type">T02</span>:<span class="number">39</span>:<span class="number">53.024361600</span><span class="type">Z</span>][<span class="type">InstallWorkflow</span>][<span class="type">I</span>] Deleting C:\ProgramData\DockerDesktop\<span class="built_in">install-settings</span>.json</span><br><span class="line">[<span class="number">2024</span>-<span class="number">03</span>-<span class="number">13</span><span class="type">T02</span>:<span class="number">39</span>:<span class="number">53.027361700</span><span class="type">Z</span>][<span class="type">InstallWorkflow</span>][<span class="type">I</span>] Installation succeeded</span><br></pre></td></tr></table></figure>

<p>当你看到 <code>Installation succeeded</code>，表示已经安装完成。</p>
<h3 id="CMD-命令安装-docker"><a href="#CMD-命令安装-docker" class="headerlink" title="CMD 命令安装 docker"></a>CMD 命令安装 docker</h3><p>没有指定安装路径，默认安装路径为<code>C:\Program Files\Docker\Docker</code></p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">start</span> /w &quot;&quot; &quot;Docker Desktop Installer.exe&quot; install</span><br></pre></td></tr></table></figure>

<p><strong>指定安装路径</strong>，示例使用参数<code>--installation-dir=&lt;path&gt;</code></p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">start</span> /w &quot;&quot; &quot;Docker Desktop Installer.exe&quot;  install --installation-<span class="built_in">dir</span>=&lt;<span class="built_in">path</span>&gt;</span><br></pre></td></tr></table></figure>

<p>将 <code>&lt;path&gt;</code> 替换成所需要安装的路径，比如<code>D:\software\Docker</code>。</p>
<p>演示我的安装路径，指定<code>--installation-dir=D:\software\Docker</code>。<strong>执行安装命令时，请切换到你下载docker所在路径执行命令</strong>。</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="function">e:\<span class="title">Downloads</span>\<span class="title">Dev</span>-<span class="title">tools</span>\<span class="title">podman</span>-<span class="title">docker</span>&gt;<span class="title">start</span> /<span class="title">w</span> &quot;&quot; &quot;<span class="title">Docker</span> <span class="title">Desktop</span> <span class="title">Installer.exe</span>&quot; <span class="title">install</span> --<span class="title">installation</span>-<span class="title">dir</span>=<span class="title">D</span>:\<span class="title">software</span>\<span class="title">Docker</span></span></span><br></pre></td></tr></table></figure>

<p>CMD 命令安装 Docker 信息日志：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="function">e:\<span class="title">Downloads</span>\<span class="title">Dev</span>-<span class="title">tools</span>\<span class="title">podman</span>-<span class="title">docker</span>&gt;<span class="title">start</span> /<span class="title">w</span> &quot;&quot; &quot;<span class="title">Docker</span> <span class="title">Desktop</span> <span class="title">Installer.exe</span>&quot; <span class="title">install</span> --<span class="title">installation</span>-<span class="title">dir</span>=<span class="title">D</span>:\<span class="title">software</span>\<span class="title">Docker</span></span></span><br><span class="line"><span class="function">--------------------------------------------------------------------------------&gt;8</span></span><br><span class="line"><span class="function"><span class="title">Version</span>: 4.27.2 (137060)</span></span><br><span class="line"><span class="function"><span class="title">Sha1</span>:</span></span><br><span class="line"><span class="function"><span class="title">Started</span> <span class="title">on</span>: 2024-03-13 03:54:47.600</span></span><br><span class="line"><span class="function"><span class="title">Resources</span>: <span class="title">e</span>:\<span class="title">Downloads</span>\<span class="title">Dev</span>-<span class="title">tools</span>\<span class="title">podman</span>-<span class="title">docker</span>\<span class="title">resources</span></span></span><br><span class="line"><span class="function"><span class="title">OS</span>: <span class="title">Windows</span> 10 <span class="title">Home</span> <span class="title">China</span></span></span><br><span class="line"><span class="function"><span class="title">Edition</span>: <span class="title">CoreCountrySpecific</span></span></span><br><span class="line"><span class="function"><span class="title">Id</span>: 2009</span></span><br><span class="line"><span class="function"><span class="title">Build</span>: 22631</span></span><br><span class="line"><span class="function"><span class="title">BuildLabName</span>: 22621.1.<span class="title">amd64fre.ni_release</span>.220506-1250</span></span><br><span class="line"><span class="function"><span class="title">File</span>: <span class="title">C</span>:\<span class="title">ProgramData</span>\<span class="title">DockerDesktop</span>\<span class="title">install</span>-<span class="title">log</span>-<span class="title">admin.txt</span></span></span><br><span class="line"><span class="function"><span class="title">CommandLine</span>: &quot;<span class="title">Docker</span> <span class="title">Desktop</span> <span class="title">Installer.exe</span>&quot;  <span class="title">install</span> --<span class="title">installation</span>-<span class="title">dir</span>=<span class="title">D</span>:\<span class="title">software</span>\<span class="title">Docker</span></span></span><br><span class="line"><span class="function"><span class="title">You</span> <span class="title">can</span> <span class="title">send</span> <span class="title">feedback</span>, <span class="title">including</span> <span class="title">this</span> <span class="title">log</span> <span class="title">file</span>, <span class="title">at</span> <span class="title">https</span>://<span class="title">github.com</span>/<span class="title">docker</span>/<span class="title">for</span>-<span class="title">win</span>/<span class="title">issues</span></span></span><br><span class="line"><span class="function">[2024-03-13<span class="title">T03</span>:54:47.772593000<span class="title">Z</span>][<span class="title">ManifestAndExistingInstallationLoader</span>][<span class="title">I</span>] <span class="title">Install</span> <span class="title">path</span> <span class="title">is</span> <span class="title">D</span>:\<span class="title">software</span>\<span class="title">Docker</span>. <span class="title">Loading</span> <span class="title">manifest</span> <span class="title">first</span></span></span><br><span class="line"><span class="function">[2024-03-13<span class="title">T03</span>:54:47.781274400<span class="title">Z</span>][<span class="title">ManifestAndExistingInstallationLoader</span>][<span class="title">I</span>] <span class="title">No</span> <span class="title">manifest</span> <span class="title">found</span>, <span class="title">returning</span> <span class="title">no</span> <span class="title">existing</span> <span class="title">install</span></span></span><br><span class="line"><span class="function">[2024-03-13<span class="title">T03</span>:54:47.781274400<span class="title">Z</span>][<span class="title">Installer</span>][<span class="title">I</span>] <span class="title">No</span> <span class="title">installation</span> <span class="title">found</span></span></span><br><span class="line"><span class="function">[2024-03-13<span class="title">T03</span>:54:48.006629000<span class="title">Z</span>][<span class="title">InstallWorkflow</span>][<span class="title">I</span>] <span class="title">Cancel</span> <span class="title">pending</span> <span class="title">background</span> <span class="title">download</span></span></span><br><span class="line"><span class="function">[2024-03-13<span class="title">T03</span>:54:48.010068800<span class="title">Z</span>][<span class="title">BackgroundTransfer</span>][<span class="title">I</span>] <span class="title">Cancel</span> <span class="title">current</span> <span class="title">background</span> <span class="title">transfer</span> <span class="title">job</span></span></span><br><span class="line"><span class="function">[2024-03-13<span class="title">T03</span>:54:52.222204900<span class="title">Z</span>][<span class="title">InstallWorkflow</span>][<span class="title">I</span>] <span class="title">Using</span> <span class="title">package</span>: <span class="title">res:DockerDesktop</span></span></span><br><span class="line"><span class="function">[2024-03-13<span class="title">T03</span>:54:52.224360200<span class="title">Z</span>][<span class="title">InstallWorkflow</span>][<span class="title">I</span>] <span class="title">Downloading</span></span></span><br><span class="line"><span class="function">[2024-03-13<span class="title">T03</span>:54:54.079911500<span class="title">Z</span>][<span class="title">InstallWorkflow</span>][<span class="title">I</span>] <span class="title">Extracting</span> <span class="title">manifest</span></span></span><br><span class="line"><span class="function">[2024-03-13<span class="title">T03</span>:54:54.982972600<span class="title">Z</span>][<span class="title">InstallWorkflow</span>][<span class="title">I</span>] <span class="title">Manifest</span> <span class="title">found</span>: <span class="title">version</span>=137060, <span class="title">displayVersion</span>=4.27.2, <span class="title">channelUrl</span>=<span class="title">https</span>://<span class="title">desktop</span>-<span class="title">stage.docker.com</span>/<span class="title">win</span>/<span class="title">main</span>/<span class="title">amd64</span>/<span class="title">appcast.xml</span></span></span><br><span class="line"><span class="function">[2024-03-13<span class="title">T03</span>:54:54.982972600<span class="title">Z</span>][<span class="title">InstallWorkflow</span>][<span class="title">I</span>] <span class="title">Checking</span> <span class="title">prerequisites</span></span></span><br><span class="line"><span class="function">[2024-03-13<span class="title">T03</span>:54:55.301899300<span class="title">Z</span>][<span class="title">InstallWorkflow</span>][<span class="title">I</span>] <span class="title">Prompting</span> <span class="title">for</span> <span class="title">optional</span> <span class="title">features</span></span></span><br><span class="line"><span class="function">[2024-03-13<span class="title">T03</span>:55:48.836177200<span class="title">Z</span>][<span class="title">InstallWorkflow</span>][<span class="title">I</span>] <span class="title">Selected</span> <span class="title">backend</span> <span class="title">mode</span>: <span class="title">wsl</span>-2</span></span><br><span class="line"><span class="function">[2024-03-13<span class="title">T03</span>:55:48.837178000<span class="title">Z</span>][<span class="title">InstallWorkflow</span>][<span class="title">I</span>] <span class="title">Unpacking</span> <span class="title">artifacts</span></span></span><br><span class="line"><span class="function">[2024-03-13<span class="title">T03</span>:57:39.572177600<span class="title">Z</span>][<span class="title">InstallWorkflow</span>][<span class="title">I</span>] <span class="title">Deploying</span> <span class="title">component</span> <span class="title">Docker.Installer.CreateGroupAction</span></span></span><br><span class="line"><span class="function">[2024-03-13<span class="title">T03</span>:57:53.305866500<span class="title">Z</span>][<span class="title">InstallWorkflow</span>][<span class="title">I</span>] <span class="title">Deploying</span> <span class="title">component</span> <span class="title">Docker.Installer.AddToGroupAction</span></span></span><br><span class="line"><span class="function">[2024-03-13<span class="title">T03</span>:58:02.385550200<span class="title">Z</span>][<span class="title">InstallWorkflow</span>][<span class="title">I</span>] <span class="title">Deploying</span> <span class="title">component</span> <span class="title">Docker.Installer.EnableFeaturesAction</span></span></span><br><span class="line"><span class="function">[2024-03-13<span class="title">T03</span>:58:02.403595700<span class="title">Z</span>][<span class="title">InstallWorkflow</span>-<span class="title">EnableFeaturesAction</span>][<span class="title">I</span>] <span class="title">Required</span> <span class="title">features</span>: <span class="title">VirtualMachinePlatform</span>, <span class="title">Microsoft</span>-<span class="title">Windows</span>-<span class="title">Subsystem</span>-<span class="title">Linux</span></span></span><br><span class="line"><span class="function">[2024-03-13<span class="title">T03</span>:58:02.980044400<span class="title">Z</span>][<span class="title">InstallWorkflow</span>][<span class="title">I</span>] <span class="title">Deploying</span> <span class="title">component</span> <span class="title">Docker.Installer.ServiceAction</span></span></span><br><span class="line"><span class="function">[2024-03-13<span class="title">T03</span>:58:02.982350300<span class="title">Z</span>][<span class="title">InstallWorkflow</span>-<span class="title">ServiceAction</span>][<span class="title">I</span>] <span class="title">Removing</span> <span class="title">service</span></span></span><br><span class="line"><span class="function">[2024-03-13<span class="title">T03</span>:58:02.984535100<span class="title">Z</span>][<span class="title">InstallWorkflow</span>-<span class="title">ServiceAction</span>][<span class="title">I</span>] <span class="title">Creating</span> <span class="title">service</span></span></span><br><span class="line"><span class="function">[2024-03-13<span class="title">T03</span>:58:02.986964900<span class="title">Z</span>][<span class="title">InstallWorkflow</span>][<span class="title">I</span>] <span class="title">Deploying</span> <span class="title">component</span> <span class="title">Docker.Installer.ShortcutAction</span></span></span><br><span class="line"><span class="function">[2024-03-13<span class="title">T03</span>:58:03.003453900<span class="title">Z</span>][<span class="title">InstallWorkflow</span>-<span class="title">ShortcutAction</span>][<span class="title">I</span>] <span class="title">Creating</span> <span class="title">shortcut</span>: <span class="title">C</span>:\<span class="title">ProgramData</span>\<span class="title">Microsoft</span>\<span class="title">Windows</span>\<span class="title">Start</span> <span class="title">Menu</span>\<span class="title">Docker</span> <span class="title">Desktop.lnk</span>/<span class="title">Docker</span> <span class="title">Desktop</span></span></span><br><span class="line"><span class="function">[2024-03-13<span class="title">T03</span>:58:03.108383600<span class="title">Z</span>][<span class="title">InstallWorkflow</span>][<span class="title">I</span>] <span class="title">Deploying</span> <span class="title">component</span> <span class="title">Docker.Installer.ShortcutAction</span></span></span><br><span class="line"><span class="function">[2024-03-13<span class="title">T03</span>:58:03.110665600<span class="title">Z</span>][<span class="title">InstallWorkflow</span>-<span class="title">ShortcutAction</span>][<span class="title">I</span>] <span class="title">Creating</span> <span class="title">shortcut</span>: <span class="title">C</span>:\<span class="title">Users</span>\<span class="title">kart</span>\<span class="title">Desktop</span>\<span class="title">Docker</span> <span class="title">Desktop.lnk</span>/<span class="title">Docker</span> <span class="title">Desktop</span></span></span><br><span class="line"><span class="function">[2024-03-13<span class="title">T03</span>:58:03.112045900<span class="title">Z</span>][<span class="title">InstallWorkflow</span>][<span class="title">I</span>] <span class="title">Deploying</span> <span class="title">component</span> <span class="title">Docker.Installer.AutoStartAction</span></span></span><br><span class="line"><span class="function">[2024-03-13<span class="title">T03</span>:58:03.114763000<span class="title">Z</span>][<span class="title">InstallWorkflow</span>][<span class="title">I</span>] <span class="title">Deploying</span> <span class="title">component</span> <span class="title">Docker.Installer.PathAction</span></span></span><br><span class="line"><span class="function">[2024-03-13<span class="title">T03</span>:58:03.527912400<span class="title">Z</span>][<span class="title">InstallWorkflow</span>][<span class="title">I</span>] <span class="title">Deploying</span> <span class="title">component</span> <span class="title">Docker.Installer.ExecAction</span></span></span><br><span class="line"><span class="function">[2024-03-13<span class="title">T03</span>:58:03.533301600<span class="title">Z</span>][<span class="title">InstallWorkflow</span>-<span class="title">ExecAction</span>][<span class="title">I</span>] <span class="title">Running</span>: <span class="title">D</span>:\<span class="title">software</span>\<span class="title">Docker</span>\<span class="title">InstallerCli.exe</span> -<span class="title">i</span> <span class="title">with</span> <span class="title">timeout</span>=-1</span></span><br><span class="line"><span class="function">[2024-03-13<span class="title">T03</span>:58:06.207667600<span class="title">Z</span>][<span class="title">InstallWorkflow</span>][<span class="title">I</span>] <span class="title">Registering</span> <span class="title">product</span></span></span><br><span class="line"><span class="function">[2024-03-13<span class="title">T03</span>:58:06.220682100<span class="title">Z</span>][<span class="title">InstallWorkflow</span>][<span class="title">I</span>] <span class="title">Deleting</span> <span class="title">C</span>:\<span class="title">ProgramData</span>\<span class="title">DockerDesktop</span>\<span class="title">install</span>-<span class="title">settings.json</span></span></span><br><span class="line"><span class="function">[2024-03-13<span class="title">T03</span>:58:06.222835500<span class="title">Z</span>][<span class="title">InstallWorkflow</span>][<span class="title">I</span>] <span class="title">Installation</span> <span class="title">succeeded</span></span></span><br></pre></td></tr></table></figure>





<p>更详细的用法，请参考官方文档 <span class="exturl" data-url="aHR0cHM6Ly9kb2NzLmRvY2tlci5jb20vZGVza3RvcC9pbnN0YWxsL3dpbmRvd3MtaW5zdGFsbC8=">windows-install-docker<i class="fa fa-external-link-alt"></i></span>。</p>
<p>以上总结仅供参考哟！最后希望对你的学习和工作有所帮助。</p>
<p>参考资料：</p>
<ul>
<li>docker 官方文档： <span class="exturl" data-url="aHR0cHM6Ly9kb2NzLmRvY2tlci5jb20vZGVza3RvcC9pbnN0YWxsL3dpbmRvd3MtaW5zdGFsbC8=">windows-install-docker<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>—END—</p>
]]></content>
      <categories>
        <category>开发运维</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows与Linux安装JDK17</title>
    <url>/2022/02/25/Windows%E4%B8%8ELinux%E5%AE%89%E8%A3%85JDK17/</url>
    <content><![CDATA[<p><strong>友情提醒</strong>：当你看到本篇博文时，目前 JDK17 最新版已经更新到 JDK17.0.7。latest 代表最新版，当你点击如下给出的下载地址时，下载当前最新版本。</p>
<p>JDK 最新版 JDK17 下载与安装；Windows 版本与 Linux（ REHL 系列安装配置 JDK17），在 Windows 平台下 Eclipse ID E配置 JDK17。历史版本需要注册账号登录才能下载，真的太骚了，看着那个锁标志是锁住的。</p>
<p>前段时间，在某平台看到有人吐槽 CSDN 下载 JDK17 还需要付费。官方免费提供下载，CSDN欺负萌新不懂吗？</p>
<p>顺带一提目前使用比较广泛的两个 JDK 版本 JDK8 和 JDK11 最新版，需要登录账号才能下载哟：</p>
<ol>
<li>JDK8最新版本：JDK8u321。</li>
<li>JDK11最新版本：JDK11.0.14。</li>
</ol>
<p>在正式介绍 JDK 下载、安装、配置时，先来点科普知识。</p>
<ol>
<li>JRE：Java 运行时环境（Java Runtime Environment），如果在非开发环境，只需运行，下载 JRE 即可。</li>
<li>JDK：Java 开发环境（Java Development Kit），通常包含 JDK 和 JRE ，某些新版本可能需要手动生成 JRE 。</li>
</ol>
<p>Linux 平台 shell 环境变量调用顺序流程图：</p>
<p><img data-src="https://s1.ax1x.com/2023/04/20/p9kLfrq.png"></p>
<span id="more"></span>



<h1 id="BEGIN-JDK17下载与安装"><a href="#BEGIN-JDK17下载与安装" class="headerlink" title="BEGIN JDK17下载与安装"></a>BEGIN JDK17下载与安装</h1><h2 id="一、JDK17下载地址"><a href="#一、JDK17下载地址" class="headerlink" title="一、JDK17下载地址"></a>一、JDK17下载地址</h2><p>JDK官网提供三大平台下载地址：</p>
<ol>
<li>Linux 版本 JDK 下载地址（ARM64和x64）。</li>
<li>macOS 版本 JDK 下载地址（ARM64和x64）。</li>
<li>Windows 版本 JDK 下载地址（x64）。</li>
</ol>
<h3 id="01-Windows-版本-JDK17"><a href="#01-Windows-版本-JDK17" class="headerlink" title="01 Windows 版本 JDK17"></a>01 Windows 版本 JDK17</h3><p><strong>tips</strong>：图片资源可能被防盗链（寄）了，可以<strong>右键属性复制地址在地址栏查看</strong>哈。</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cub3JhY2xlLmNvbS9qYXZhL3RlY2hub2xvZ2llcy9kb3dubG9hZHMvI2pkazE3LXdpbmRvd3M=">https://www.oracle.com/java/technologies/downloads/#jdk17-windows<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<ol>
<li>Compressed Archive：被压缩的归档包文件，其实是JDK归档压缩包，需要手动安装JRE。</li>
<li>x64 installer：x64架构exe安装包文件。</li>
<li>x64 msi installer：x64架构msi安装包文件。</li>
</ol>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/d94f4c4cc7463d16ef2b996f4c14f567.png"></p>
<p><strong>Windows版本zip压缩包JDK17.0.2下载地址</strong>：</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC5vcmFjbGUuY29tL2phdmEvMTcvbGF0ZXN0L2pkay0xN193aW5kb3dzLXg2NF9iaW4uemlw">https://download.oracle.com/java/17/latest/jdk-17_windows-x64_bin.zip<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p>Windows版本x64安装包exe文件安装包文件JDK17下载地址：</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC5vcmFjbGUuY29tL2phdmEvMTcvbGF0ZXN0L2pkay0xN193aW5kb3dzLXg2NF9iaW4uZXhl">https://download.oracle.com/java/17/latest/jdk-17_windows-x64_bin.exe<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p>Windows版本x64安装包msi安装包文件JDK17下载地址：</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC5vcmFjbGUuY29tL2phdmEvMTcvbGF0ZXN0L2pkay0xN193aW5kb3dzLXg2NF9iaW4ubXNp">https://download.oracle.com/java/17/latest/jdk-17_windows-x64_bin.msi<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<h3 id="02-Linux-版本-JDK17"><a href="#02-Linux-版本-JDK17" class="headerlink" title="02 Linux 版本 JDK17"></a>02 Linux 版本 JDK17</h3><p>Linux版JDK17.0.2下载：分为ARM64和x64架构</p>
<ol>
<li>ARM64 Compressed Archive：被压缩的归档包文件，其实是JDK归档压缩包。</li>
<li>ARM64 RPM Packages：ARM64架构rpm包。</li>
<li><strong>x64 Compressed Archive</strong>：被压缩的归档包文件，其实是JDK归档压缩包，编译后的二进制包。</li>
<li>x64 Debian Packages：x64架构deb包，在某版本之后同样适用于Ubuntu系列、中标麒麟以及银河麒麟。</li>
<li>x64 RPM Packages：x64架构rpm包。</li>
</ol>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cub3JhY2xlLmNvbS9qYXZhL3RlY2hub2xvZ2llcy9kb3dubG9hZHMvI2pkazE3LWxpbnV4">https://www.oracle.com/java/technologies/downloads/#jdk17-linux<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/1e54cdae9e37be028d8526de78baecdd.png"></p>
<p>JDK 二进制包下载地址：</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC5vcmFjbGUuY29tL2phdmEvMTcvbGF0ZXN0L2pkay0xN19saW51eC14NjRfYmluLnRhci5neg==">https://download.oracle.com/java/17/latest/jdk-17_linux-x64_bin.tar.gz<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<h3 id="03-MacOS-版本-JDK17"><a href="#03-MacOS-版本-JDK17" class="headerlink" title="03 MacOS 版本 JDK17"></a>03 MacOS 版本 JDK17</h3><p>MAC版本JDK17下载地址：</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cub3JhY2xlLmNvbS9qYXZhL3RlY2hub2xvZ2llcy9kb3dubG9hZHMvI2pkazE3LW1hYw==">https://www.oracle.com/java/technologies/downloads/#jdk17-mac<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/3a7e6ab587c3c985eb2cfb96a30d32ce.png"></p>
<h2 id="二、Windows-安装-JDK17（Archive）"><a href="#二、Windows-安装-JDK17（Archive）" class="headerlink" title="二、Windows 安装 JDK17（Archive）"></a>二、Windows 安装 JDK17（Archive）</h2><p>介绍zip包的使用，不用点那个烦人的下一步下一步，比较自由，得自己控制。</p>
<p><strong>注意</strong>：有可能存在配置环境变量后没有及时生效，重启就好了。</p>
<h3 id="01-zip-包-JDK-手动安装-JRE"><a href="#01-zip-包-JDK-手动安装-JRE" class="headerlink" title="01 zip 包 JDK 手动安装 JRE"></a>01 zip 包 JDK 手动安装 JRE</h3><p>当然我自己也做了测试，对于<code>jdk12</code>、<code>jdk14</code>、<code>jdk17</code>都适用。其它版本，没测试过。</p>
<ol>
<li>切换至jdk解压目录：D:\work\JavaEE\jdk17.0.2</li>
<li>查看当前JDK版本，切换至jdk17.0.2\bin目录执行：<code>java -version</code>，看下面代码示例就很清晰。</li>
<li>执行命令：bin\jlink.exe –module-path jmods –add-modules java.desktop –output jre，<strong>注意我执行命令的目录</strong>。</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> D:\work\JavaEE\jdk17.0.2\bin</span><br><span class="line"><span class="comment">#1.查看jdk版本</span></span><br><span class="line">java -version</span><br><span class="line">java version <span class="string">&quot;17.0.2&quot;</span> 2022-01-18 LTS</span><br><span class="line">Java(TM) SE Runtime Environment (build 17.0.2+8-LTS-86)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 17.0.2+8-LTS-86, mixed mode, sharing)</span><br><span class="line"><span class="comment">#2.生成jre,注意我执行命令的目录</span></span><br><span class="line">D:\work\JavaEE\jdk17.0.2&gt;bin\jlink.exe --module-path jmods --add-modules java.desktop --output jre</span><br></pre></td></tr></table></figure>



<h3 id="02-Eclipse-IDE-添加-JDK17"><a href="#02-Eclipse-IDE-添加-JDK17" class="headerlink" title="02 Eclipse IDE 添加 JDK17"></a>02 Eclipse IDE 添加 JDK17</h3><ol>
<li>找到Eclipse IDE状态栏的Windows选项。</li>
<li>点击Windows然后打开Preferences。</li>
<li>搜索<code>jres</code>，选中<code>Installed JREs</code>，点击右侧add添加JDK17。</li>
<li>添加完JDK选apply and close：应用并退出。</li>
</ol>
<p>Eclipse IDE添加JDK17第一步：<strong>选择Add添加</strong></p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/46b3699e169fe1969bbb836c9623ea65.png"></p>
<p>Eclipse IDE添加JDK17第二步：<strong>选择VM点击next进行下一步</strong></p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/635f7e2f692034c543bd8959a98b44d5.png"></p>
<p>Eclipse IDE添加JDK17第三步：<strong>选择Directory添加JDK安装目录，然后点击finish完成</strong>。</p>
<p> <img data-src="https://img-blog.csdnimg.cn/img_convert/742e118c4bd9868301426dce8a6fc3c2.png"></p>
<p><strong>完成添加JDK17，点击apply and close应用并提出当前窗口</strong>：</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/9ba43cb7f475baced5318fdc9d1fd3a5.png"></p>
<h3 id="03-Windows-下配置-JDK-环境变量"><a href="#03-Windows-下配置-JDK-环境变量" class="headerlink" title="03 Windows 下配置 JDK 环境变量"></a>03 Windows 下配置 JDK 环境变量</h3><p>根据自己需求来，为了方便，建议配置一个经常使用的版本作为当前用户或者全局环境变量。</p>
<p>在实际工作中，我可以有多种方式去给自己测试的web应用配置JDK，一般情况是<strong>startup.bat或者catalina.bat</strong>文件中指定，<strong>比如tomcat中指定JDK目录</strong>，或者在rocketmq中也可以指定JDK目录：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">JAVA_HOME=D:\work\JavaEE\jdk17.0.2</span><br></pre></td></tr></table></figure>

<p><strong>开始配置环境变量</strong>：</p>
<ol>
<li>编辑当前用户或者系统环境变量加入如下配置：D:\work\JavaEE\jdk17.0.2</li>
<li>编辑当前用户或者系统PATH环境变量加入如下配置：D:\work\JavaEE\jdk17.0.2\bin</li>
<li>编辑当前用户或者系统CLASS_PATH环境变量加入如下配置：<code>.;%JAVA_HOME%\bin;%JAVA_HOME%\lib\dt.jar;%Java_Home%\lib\tools.jar;%SystemRoot%/system32;%SystemRoot%;</code>，<strong>注意结尾英文分号隔开</strong>，在JDK5以后是可以不用配置这一选项。</li>
</ol>
<p>编辑当前用户或者系统环境变量：<strong>添加JAVA_HOME</strong></p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/dcddc9686691b52695804d069ca4dd95.png"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">变量名:JAVA_HOME</span><br><span class="line">变量值:D:\work\JavaEE\jdk17.0.2</span><br></pre></td></tr></table></figure>

<p>配置 JAVA_HOME 后的效果：</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/4ebf346824c82027d374dbdca36f5948.png"></p>
<p>编辑当前用户或者系统环境变量：<strong>添加PATH</strong></p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/8fa361711ae04248141699459c73d076.png"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">变量名: PATH</span><br><span class="line">变量值: D:\work\JavaEE\jdk17.0.2\bin </span><br><span class="line">或者配合成: %JAVA_HOME%</span><br></pre></td></tr></table></figure>

<p><strong>添加后的path环境变量</strong>，个人测试配置了很多，其实大部分是系统自动生成的：</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/7154927140f25deec45a18a4233985da.png"></p>
<p>编辑当前用户或者系统环境变量：<strong>添加CLASS_PATH</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">变量名:CLASS_PATH</span><br><span class="line">变量值:.;%JAVA_HOME%\bin;%JAVA_HOME%\lib\dt.jar;%Java_Home%\lib\tools.jar;%SystemRoot%/system32;%SystemRoot%;</span><br></pre></td></tr></table></figure>



<h2 id="三、Linux（REHL系列）安装-JDK17"><a href="#三、Linux（REHL系列）安装-JDK17" class="headerlink" title="三、Linux（REHL系列）安装 JDK17"></a>三、Linux（REHL系列）安装 JDK17</h2><p>Linux 平台 shell 环境变量调用顺序流程图：</p>
<p><img data-src="https://s1.ax1x.com/2023/04/20/p9kLfrq.png"></p>
<p>安利一款实用多终端管理工具tabby，其实也不用我安利，在github上已经快30K的star（星标）。最新版可以设置中文模式。当我更新到 Windows 11 后，自带的 Windows terminal 也可以满足一般需求，挺好用的。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/c1cea421255b93fc526c8a061b1e2ced.png"></p>
<p>如同 Windows 平台配置环境变量一样，Linux 平台也有当前用户和全局用户（root）环境变量两种配置方式。</p>
<p>以下均作为演示，仅供参考，不喜勿喷。</p>
<h3 id="01-Linux（REHL系列）安装-JDK17"><a href="#01-Linux（REHL系列）安装-JDK17" class="headerlink" title="01 Linux（REHL系列）安装 JDK17"></a>01 Linux（REHL系列）安装 JDK17</h3><ol>
<li>解压jdk17安装包</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@cnwangk work]<span class="comment"># tar -zxvf jdk-17_linux-x64_bin.tar.gz</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>修改名称为jdk17，为后面配置环境变量JAVA_HOM做准备</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@cnwangk work]<span class="comment"># mv jdk-17.0.2 jdk17 </span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>剪切jdk17到其它目录方便自己管理</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@cnwangk work]<span class="comment"># mv jdk17/ /usr/local/</span></span><br></pre></td></tr></table></figure>

<ol start="4">
<li>查看JDK版本，在没配置JAVA_HOME环境变量之前一样可以查看版本</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@cnwangk bin]<span class="comment"># ls</span></span><br><span class="line">jar        javac    jcmd      jdeprscan  jhsdb   jlink  jpackage    jshell  jstatd       serialver</span><br><span class="line">jarsigner  javadoc  jconsole  jdeps      jimage  jmap   jps         jstack  keytool</span><br><span class="line">java       javap    jdb       jfr        jinfo   jmod   jrunscript  jstat   rmiregistry</span><br><span class="line">[root@cnwangk bin]<span class="comment"># ./java -version</span></span><br><span class="line">java version <span class="string">&quot;17.0.2&quot;</span> 2022-01-18 LTS</span><br><span class="line">Java(TM) SE Runtime Environment (build 17.0.2+8-LTS-86)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 17.0.2+8-LTS-86, mixed mode, sharing)</span><br></pre></td></tr></table></figure>

<ol start="5">
<li>安装JRE，主要是利用<code>jlink</code>去生成，在解压后jdk17的bin目录下</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@cnwangk jdk17]<span class="comment"># ./bin/jlink --module-path jmods --add-modules java.desktop --output jre</span></span><br><span class="line">[root@cnwangk jdk17]<span class="comment"># ls</span></span><br><span class="line">bin  conf  include  jmods  jre  legal  lib  LICENSE  man  README  release</span><br></pre></td></tr></table></figure>

<p>能贴代码做演示的，我一般不愿意贴图，因为图片可能会因为各种原因挂掉。</p>
<h3 id="02-Linux（REHL系列）配置-JDK-环境变量"><a href="#02-Linux（REHL系列）配置-JDK-环境变量" class="headerlink" title="02 Linux（REHL系列）配置 JDK 环境变量"></a>02 Linux（REHL系列）配置 JDK 环境变量</h3><p>如果想环境变量即时生效，执行 <code>source /etc/profile</code>  命令即可。</p>
<ol>
<li>全局环境变量，<strong>需要root用户权限</strong></li>
<li>编辑<code>profile</code>文件：<code>vim /etc/profile</code>，加入如下配置：</li>
</ol>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/146ce95aa5e8e98fbe77e86d6f36b872.png"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#JAVA environment</span></span><br><span class="line">JAVA_HOME=/usr/local/jdk17</span><br><span class="line">PATH=<span class="variable">$PATH</span>:<span class="variable">$JAVA_HOME</span>/bin</span><br><span class="line"><span class="built_in">export</span> JAVA_HOME PATH</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>配置jdk环境变量在当前用户test生效</li>
<li>编辑<code>.bash_profile</code>文件：<code>vim /home/test/.bash_profile</code></li>
<li>在<code>.bashrc</code>和<code>.bash_profile</code>都有可以看到环境变量，个人一般编辑.bash_profile</li>
</ol>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/acb1355ed068ce1f592ba3330f714da7.png"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#JAVA environment</span></span><br><span class="line">JAVA_HOME=/usr/local/jdk17</span><br><span class="line">PATH=<span class="variable">$PATH</span>:<span class="variable">$JAVA_HOME</span>/bin</span><br><span class="line"><span class="built_in">export</span> JAVA_HOME PATH</span><br></pre></td></tr></table></figure>

<ol start="6">
<li><strong>因为上面配置了全局的</strong>，所以我在test用户下一样可以查看jdk版本</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[<span class="built_in">test</span>@cnwangk jdk17]$ java -version</span><br><span class="line">java version <span class="string">&quot;17.0.2&quot;</span> 2022-01-18 LTS</span><br><span class="line">Java(TM) SE Runtime Environment (build 17.0.2+8-LTS-86)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 17.0.2+8-LTS-86, mixed mode, sharing)</span><br></pre></td></tr></table></figure>


<p>Linux 环境变量<strong>立即生效</strong>两种方式：</p>
<ul>
<li>使用source命令：<code>source /etc/profile</code></li>
<li>重启服务器：<code>reboot</code> 或者 <code>shutdown -r now</code></li>
</ul>
<p>关于JDK17的下载与安装就介绍到这里。</p>
<h1 id="END-向阳而生"><a href="#END-向阳而生" class="headerlink" title="END 向阳而生"></a>END 向阳而生</h1><p>向阳而生，生而向阳。</p>
<p>静下来心才好做事，思路更清晰。每天进步一点，进步一小点那也是进步。</p>
<p>引用晚清中兴第一名臣，曾国藩家训中的一句名言，颇为受用：</p>
<blockquote>
<p>养得胸中一种恬静。</p>
</blockquote>
<p>以上总结，仅供参考哟！希望对你的学习和工作有所帮助。</p>
<p>——END——</p>
]]></content>
      <categories>
        <category>开发工具</category>
      </categories>
      <tags>
        <tag>JDK</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows平台安装stable-diffusion-webui-1.7.0解决少工具包clip-vit-large-patch14</title>
    <url>/2024/02/02/Windows%E5%B9%B3%E5%8F%B0%E5%AE%89%E8%A3%85stable-diffusion-webui-1.7.0%E8%A7%A3%E5%86%B3%E5%B0%91%E5%B7%A5%E5%85%B7%E5%8C%85clip-vit-large-patch14/</url>
    <content><![CDATA[<p>Windows 平台基于 <code>stable-diffusion-webui-1.7.0</code>进行部署。</p>
<p>遇到问题，先静下心来，找到关键词，定位分析错误日志。</p>
<p>个人心得，解决问题三步曲：</p>
<ol>
<li>定位问题，比如部署 stable-diffusion-webui 遇到问题，定位关键词Failed（执行失败），OSError（错误）。</li>
<li>分析问题，缺少 <code>openai/clip-vit-large-patch14</code> ，无法访问 <span class="exturl" data-url="aHR0cHM6Ly9odWdnaW5nZmFjZS5jby9tb2RlbHM=">https://huggingface.co/models<i class="fa fa-external-link-alt"></i></span> 网址。</li>
<li>如果无法独立解决，可以借助搜索引擎（必应或者谷歌）或者 github issues 以及 Stack Overflow 解决问题。</li>
</ol>
<p>部署 stable-diffusion-webui-1.7.0 过程中，解决缺少工具包<code>openai/clip-vit-large-patch14</code> 的问题，希望对你的工作或者学习有所帮助。</p>
<span id="more"></span>

<h3 id="错误日志"><a href="#错误日志" class="headerlink" title="错误日志"></a>错误日志</h3><p>运行<code>.\webui.bat</code>，进入控制台（Windows terminal）查看错误日志</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">PS</span> E:\AI\stable<span class="literal">-diffusion-webui-1</span>.<span class="number">7.0</span>&gt; .\webui.bat</span><br><span class="line">venv <span class="string">&quot;E:\AI\stable-diffusion-webui-1.7.0\venv\Scripts\Python.exe&quot;</span></span><br><span class="line">fatal: not a git repository (or any of the parent directories): .git</span><br><span class="line">fatal: not a git repository (or any of the parent directories): .git</span><br><span class="line">Python <span class="number">3.10</span>.<span class="number">6</span> (tags/v3.<span class="number">10.6</span>:<span class="number">9</span>c7b4bd, Aug  <span class="number">1</span> <span class="number">2022</span>, <span class="number">21</span>:<span class="number">53</span>:<span class="number">49</span>) [<span class="type">MSC</span> <span class="type">v.1932</span> <span class="number">64</span> <span class="type">bit</span> (<span class="type">AMD64</span>)]</span><br><span class="line">Version: <span class="number">1.7</span>.<span class="number">0</span></span><br><span class="line">Commit hash: &lt;none&gt;</span><br><span class="line">Launching Web UI with arguments:</span><br><span class="line">no module <span class="string">&#x27;xformers&#x27;</span>. Processing without...</span><br><span class="line">no module <span class="string">&#x27;xformers&#x27;</span>. Processing without...</span><br><span class="line">No module <span class="string">&#x27;xformers&#x27;</span>. Proceeding without it.</span><br><span class="line">Style database not found: E:\AI\stable<span class="literal">-diffusion-webui-1</span>.<span class="number">7.0</span>\styles.csv</span><br><span class="line">Loading weights [<span class="type">e903d5679c</span>] from E:\AI\stable<span class="literal">-diffusion-webui-1</span>.<span class="number">7.0</span>\models\Stable<span class="literal">-diffusion</span>\hanfu_song_v31.safetensors</span><br><span class="line">Creating model from config: E:\AI\stable<span class="literal">-diffusion-webui-1</span>.<span class="number">7.0</span>\configs\v1<span class="literal">-inference</span>.yaml</span><br><span class="line">Running on local URL:  http://<span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">7860</span></span><br><span class="line"></span><br><span class="line">To create a public link, <span class="built_in">set</span> `share=True` <span class="keyword">in</span> `launch()`.</span><br><span class="line">Startup time: <span class="number">20.8</span>s (prepare environment: <span class="number">5.5</span>s, import torch: <span class="number">6.0</span>s, import gradio: <span class="number">1.7</span>s, setup paths: <span class="number">2.4</span>s, initialize shared: <span class="number">0.3</span>s, other imports: <span class="number">1.0</span>s, setup codeformer: <span class="number">0.2</span>s, load scripts: <span class="number">2.0</span>s, create ui: <span class="number">0.8</span>s, gradio launch: <span class="number">0.8</span>s).</span><br><span class="line">creating model quickly: OSError</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;D:\software\Python310\lib\threading.py&quot;</span>, line <span class="number">973</span>, <span class="keyword">in</span> _bootstrap</span><br><span class="line">    self._bootstrap_inner()</span><br><span class="line">  File <span class="string">&quot;D:\software\Python310\lib\threading.py&quot;</span>, line <span class="number">1016</span>, <span class="keyword">in</span> _bootstrap_inner</span><br><span class="line">    self.run()</span><br><span class="line">  File <span class="string">&quot;D:\software\Python310\lib\threading.py&quot;</span>, line <span class="number">953</span>, <span class="keyword">in</span> run</span><br><span class="line">    self._target(*self._args, **self._kwargs)</span><br><span class="line">  File <span class="string">&quot;E:\AI\stable-diffusion-webui-1.7.0\modules\initialize.py&quot;</span>, line <span class="number">147</span>, <span class="keyword">in</span> load_model</span><br><span class="line">    shared.sd_model  <span class="comment"># noqa: B018</span></span><br><span class="line">  File <span class="string">&quot;E:\AI\stable-diffusion-webui-1.7.0\modules\shared_items.py&quot;</span>, line <span class="number">128</span>, <span class="keyword">in</span> sd_model</span><br><span class="line">    <span class="keyword">return</span> modules.sd_models.model_data.get_sd_model()</span><br><span class="line">  File <span class="string">&quot;E:\AI\stable-diffusion-webui-1.7.0\modules\sd_models.py&quot;</span>, line <span class="number">531</span>, <span class="keyword">in</span> get_sd_model</span><br><span class="line">    load_model()</span><br><span class="line">  File <span class="string">&quot;E:\AI\stable-diffusion-webui-1.7.0\modules\sd_models.py&quot;</span>, line <span class="number">634</span>, <span class="keyword">in</span> load_model</span><br><span class="line">    sd_model = instantiate_from_config(sd_config.model)</span><br><span class="line">  File <span class="string">&quot;E:\AI\stable-diffusion-webui-1.7.0\repositories\stable-diffusion-stability-ai\ldm\util.py&quot;</span>, line <span class="number">89</span>, <span class="keyword">in</span> instantiate_from_config</span><br><span class="line">    <span class="keyword">return</span> get_obj_from_str(config[<span class="string">&quot;target&quot;</span>])(**config.get(<span class="string">&quot;params&quot;</span>, dict()))</span><br><span class="line">  File <span class="string">&quot;E:\AI\stable-diffusion-webui-1.7.0\repositories\stable-diffusion-stability-ai\ldm\models\diffusion\ddpm.py&quot;</span>, line <span class="number">563</span>, <span class="keyword">in</span> __init__</span><br><span class="line">    self.instantiate_cond_stage(cond_stage_config)</span><br><span class="line">  File <span class="string">&quot;E:\AI\stable-diffusion-webui-1.7.0\repositories\stable-diffusion-stability-ai\ldm\models\diffusion\ddpm.py&quot;</span>, line <span class="number">630</span>, <span class="keyword">in</span> instantiate_cond_stage</span><br><span class="line">    model = instantiate_from_config(config)</span><br><span class="line">  File <span class="string">&quot;E:\AI\stable-diffusion-webui-1.7.0\repositories\stable-diffusion-stability-ai\ldm\util.py&quot;</span>, line <span class="number">89</span>, <span class="keyword">in</span> instantiate_from_config</span><br><span class="line">    <span class="keyword">return</span> get_obj_from_str(config[<span class="string">&quot;target&quot;</span>])(**config.get(<span class="string">&quot;params&quot;</span>, dict()))</span><br><span class="line">  File <span class="string">&quot;E:\AI\stable-diffusion-webui-1.7.0\repositories\stable-diffusion-stability-ai\ldm\modules\encoders\modules.py&quot;</span>, line <span class="number">103</span>, <span class="keyword">in</span> __init__</span><br><span class="line">    self.tokenizer = CLIPTokenizer.from_pretrained(version)</span><br><span class="line">  File <span class="string">&quot;E:\AI\stable-diffusion-webui-1.7.0\venv\lib\site-packages\transformers\tokenization_utils_base.py&quot;</span>, line <span class="number">1809</span>, <span class="keyword">in</span> from_pretrained</span><br><span class="line">    raise EnvironmentError(</span><br><span class="line">OSError: Can<span class="string">&#x27;t load tokenizer for &#x27;</span>openai/clip<span class="literal">-vit-large-patch14</span><span class="string">&#x27;. If you were trying to load it from &#x27;</span>https://huggingface.co/models<span class="string">&#x27;, make sure you don&#x27;</span>t have a local directory with the same name. Otherwise, make sure <span class="string">&#x27;openai/clip-vit-large-patch14&#x27;</span> is the correct path to a directory containing all relevant files <span class="keyword">for</span> a CLIPTokenizer tokenizer.</span><br><span class="line"></span><br><span class="line">Failed to create model quickly; will retry <span class="keyword">using</span> slow method.</span><br><span class="line">Stable diffusion model failed to load</span><br></pre></td></tr></table></figure>

<p>遇到问题不要害怕，或者说怕麻烦，就直接利用搜索引擎或者相关论坛。</p>
<p>个人心得，解决问题三步曲：</p>
<ol>
<li>定位问题，比如部署 stable-diffusion-webui 遇到问题，定位关键词Failed（执行失败），OSError（错误）。</li>
<li>分析问题，缺少 <code>openai/clip-vit-large-patch14</code> ，无法访问 <span class="exturl" data-url="aHR0cHM6Ly9odWdnaW5nZmFjZS5jby9tb2RlbHM=">https://huggingface.co/models<i class="fa fa-external-link-alt"></i></span> 网址。</li>
<li>如果无法独立解决，可以借助搜索引擎（必应或者谷歌）或者 github issues 以及 Stack Overflow 解决问题。</li>
</ol>
<p><strong>分析日志，划重点，缺少工具包openai&#x2F;clip-vit-large-patch14</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">OSError: Can<span class="string">&#x27;t load tokenizer for &#x27;</span>openai/clip<span class="literal">-vit-large-patch14</span><span class="string">&#x27;. If you were trying to load it from &#x27;</span>https://huggingface.co/models<span class="string">&#x27;, make sure you don&#x27;</span>t have a local directory with the same name. Otherwise, make sure <span class="string">&#x27;openai/clip-vit-large-patch14&#x27;</span> is the correct path to a directory containing all relevant files <span class="keyword">for</span> a CLIPTokenizer tokenizer.</span><br><span class="line"></span><br><span class="line">Stable diffusion model failed to load</span><br></pre></td></tr></table></figure>

<p>友情提醒：由于网络原因，无法访问 <span class="exturl" data-url="aHR0cHM6Ly9odWdnaW5nZmFjZS5jby9tb2RlbHM=">https://huggingface.co/models<i class="fa fa-external-link-alt"></i></span> ，可以通过国内镜像站获取资源。</p>
<h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>进入解压后的 stable-diffusion-webui-1.7.0 目录，创建目录 openai。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">PS</span> E:\AI\stable<span class="literal">-diffusion-webui-1</span>.<span class="number">7.0</span>&gt; mkdir openai</span><br><span class="line"></span><br><span class="line">    Directory: E:\AI\stable<span class="literal">-diffusion-webui-1</span>.<span class="number">7.0</span></span><br><span class="line"></span><br><span class="line">Mode                 LastWriteTime         Length Name</span><br><span class="line"><span class="literal">----</span>                 <span class="literal">-------------</span>         <span class="literal">------</span> <span class="literal">----</span></span><br><span class="line">d<span class="literal">----</span>            <span class="number">2024</span><span class="literal">-2-1</span>    <span class="number">12</span>:<span class="number">15</span>                openai</span><br></pre></td></tr></table></figure>



<p>进入目录 openai</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">PS</span> E:\AI\stable<span class="literal">-diffusion-webui-1</span>.<span class="number">7.0</span>&gt; <span class="built_in">cd</span> .\openai\</span><br></pre></td></tr></table></figure>



<p>通过魔搭社区镜像站获取 <code>clip-vit-large-patch14</code>，使用 git 获取，默认你已经部署并配置好 <span class="exturl" data-url="aHR0cHM6Ly9naXQtc2NtLmNvbS8=">Git<i class="fa fa-external-link-alt"></i></span> 环境，当然你还可以参考魔搭社区提供的<span class="exturl" data-url="aHR0cHM6Ly93d3cubW9kZWxzY29wZS5jbi9kb2NzLyVFNiVBOCVBMSVFNSU5RSU4QiVFNyU5QSU4NCVFNCVCOCU4QiVFOCVCRCVCRA==">参考文档<i class="fa fa-external-link-alt"></i></span></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">PS</span> E:\AI\stable<span class="literal">-diffusion-webui-1</span>.<span class="number">7.0</span>\openai&gt; git clone https://www.modelscope.cn/AI<span class="literal">-ModelScope</span>/clip<span class="literal">-vit-large-patch14</span>.git</span><br><span class="line">Cloning into <span class="string">&#x27;clip-vit-large-patch14&#x27;</span>...</span><br><span class="line">remote: Enumerating objects: <span class="number">22</span>, done.</span><br><span class="line">remote: Counting objects: <span class="number">100</span>% (<span class="number">22</span>/<span class="number">22</span>), done.</span><br><span class="line">remote: Compressing objects: <span class="number">100</span>% (<span class="number">21</span>/<span class="number">21</span>), done.</span><br><span class="line">remote: Total <span class="number">22</span> (delta <span class="number">1</span>), reused <span class="number">0</span> (delta <span class="number">0</span>), pack<span class="literal">-reused</span> <span class="number">0</span></span><br><span class="line">Receiving objects: <span class="number">100</span>% (<span class="number">22</span>/<span class="number">22</span>), <span class="number">1.08</span> MiB | <span class="number">2.22</span> MiB/s, done.</span><br><span class="line">Resolving deltas: <span class="number">100</span>% (<span class="number">1</span>/<span class="number">1</span>), done.</span><br><span class="line">Updating files: <span class="number">100</span>% (<span class="number">14</span>/<span class="number">14</span>), done.</span><br><span class="line">Filtering content: <span class="number">100</span>% (<span class="number">4</span>/<span class="number">4</span>), <span class="number">6.37</span> GiB | <span class="number">9.66</span> MiB/s, done.</span><br></pre></td></tr></table></figure>
<p>啊，你没有看错，你的 Git 并没有卡住。</p>
<p>下载完大约有 12.7GB 左右，所需时间可能有点长，这个还取决于你的下载网速和对方服务器所能提供的带宽速率。</p>
<p>——END——</p>
]]></content>
      <categories>
        <category>AI</category>
      </categories>
      <tags>
        <tag>stable-diffusion-webui</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows服务器运维常用小技巧</title>
    <url>/2022/02/18/Windows%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%90%E7%BB%B4%E5%B8%B8%E7%94%A8%E5%B0%8F%E6%8A%80%E5%B7%A7/</url>
    <content><![CDATA[<p>Windows下常用的以及不常用的运维命令以及小技巧，看了绝对不会后悔。</p>
<p>总结：不难发现，很多Windows下的命令，基本上以.msc结尾，前缀是程序名称。比如磁盘管理命令：<code>diskmgmt.msc</code></p>
<h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="一、远程桌面"><a href="#一、远程桌面" class="headerlink" title="一、远程桌面"></a>一、远程桌面</h2><p>快速进入远程桌面，主要是命令为<code>mstsc</code></p>
<p><strong>方式一</strong>：win + r打开运行输入<code>mstsc</code><br><img data-src="https://img-blog.csdnimg.cn/2382b87501614ca89f45bc888be647b7.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70#" alt="在这里插入图片描述"></p>
<p><strong>方式二</strong>：以管理员身份运行CMD输入以下命令：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">mstsc /v: <span class="number">192.168</span>.<span class="number">249.128</span> /console</span><br></pre></td></tr></table></figure>

<p><img data-src="https://img-blog.csdnimg.cn/089b96b94b7b496cbae7806733b36167.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70#" alt="在这里插入图片描述"></p>
<h2 id="二、win-r命令快速打开运行窗口"><a href="#二、win-r命令快速打开运行窗口" class="headerlink" title="二、win + r命令快速打开运行窗口"></a>二、win + r命令快速打开运行窗口</h2><h3 id="1、-win-r运行regedit：进入注册表"><a href="#1、-win-r运行regedit：进入注册表" class="headerlink" title="1、 win + r运行regedit：进入注册表"></a>1、 win + r运行regedit：进入注册表</h3><p><img data-src="https://img-blog.csdnimg.cn/e29e377dde74495ab590115dba60922e.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70#p" alt="在这里插入图片描述"></p>
<h3 id="2、win-e：快速进入资源管理器"><a href="#2、win-e：快速进入资源管理器" class="headerlink" title="2、win + e：快速进入资源管理器"></a>2、win + e：快速进入资源管理器</h3><h3 id="3、win-r运行入control：打开控制面板"><a href="#3、win-r运行入control：打开控制面板" class="headerlink" title="3、win + r运行入control：打开控制面板"></a>3、win + r运行入control：打开控制面板</h3><p><img data-src="https://img-blog.csdnimg.cn/23f8a9f6f46b4d80ba9cf5c8d7c12b76.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70#" alt="在这里插入图片描述"></p>
<h3 id="4、win-r运行services-msc：进入服务管理"><a href="#4、win-r运行services-msc：进入服务管理" class="headerlink" title="4、win + r运行services.msc：进入服务管理"></a>4、win + r运行services.msc：进入服务管理</h3><p><img data-src="https://img-blog.csdnimg.cn/095362cc626f499592020d8e7eedd29e.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70#" alt="在这里插入图片描述"></p>
<h3 id="5、运维使用小技巧"><a href="#5、运维使用小技巧" class="headerlink" title="5、运维使用小技巧"></a>5、运维使用小技巧</h3><p>以下均为使用 <strong>win + r</strong> 快捷键打开运行如下命令：</p>
<p><strong>5.1、进入odbc配置</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">odbcad32</span><br></pre></td></tr></table></figure>

<p><strong>5.2、进入磁盘清理</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">cleanmgr</span><br></pre></td></tr></table></figure>

<p><strong>5.3、进入防火墙设置</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">WF.msc</span><br></pre></td></tr></table></figure>

<p><strong>5.4、进入系统配置</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#在安装Oracle11gR2卡在2%时会用到此命令快速进入配置调CPU核心数</span></span><br><span class="line">msconfig</span><br></pre></td></tr></table></figure>
<p><strong>5.4.1、进入系统配置，调CPU核心数</strong><br><img data-src="https://img-blog.csdnimg.cn/dce3209e7c144afe8c6edbf5945491c6.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70#" alt="在这里插入图片描述"></p>
<p><strong>5.5、查看系统信息</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">msinfo32</span><br></pre></td></tr></table></figure>

<p><strong>5.6、打开远程桌面</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#这个命令上面也提到了，并做了详细截图</span></span><br><span class="line">mstsc</span><br></pre></td></tr></table></figure>

<h2 id="三、查看系统的磁盘信息命令list-disk"><a href="#三、查看系统的磁盘信息命令list-disk" class="headerlink" title="三、查看系统的磁盘信息命令list disk"></a>三、查看系统的磁盘信息命令list disk</h2><p>3.1、<strong>win10自带的管理工具：diskpart.exe</strong></p>
<p>a、首先以管理员身份运行<code>CMD</code><br>b、运行<code>diskpart</code><br>c、运行<code>list disk</code><br><img data-src="https://img-blog.csdnimg.cn/09ffbd9cf8084013a91f55ad4c665b9d.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70#" alt="在这里插入图片描述"><strong>3.2、进入磁盘管理命令</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#总结：不难发现，很多Windows下的命令，都是以.msc结尾，前缀这是程序名称。</span></span><br><span class="line">win + r快捷键打开运行：diskmgmt.msc</span><br></pre></td></tr></table></figure>
<p><img data-src="https://img-blog.csdnimg.cn/d65c717857374809a901a97233b57a8c.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70#" alt="在这里插入图片描述"></p>
<p><strong>3.3、进入计算机管理</strong></p>
<p><img data-src="https://img-blog.csdnimg.cn/540972f64863487e875b76e41bc5cce5.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70#" alt="在这里插入图片描述"></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">win + <span class="built_in">r</span>运行：compmgmt.msc</span><br></pre></td></tr></table></figure>

<p><strong>3.1.1、计算管理界面</strong>，同理也能看到上面的磁盘管理<br><img data-src="https://img-blog.csdnimg.cn/210347e6e5cd4dba94229896be83b5b8.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70#" alt="在这里插入图片描述"></p>
<h2 id="四、netstat-ano"><a href="#四、netstat-ano" class="headerlink" title="四、netstat -ano"></a>四、netstat -ano</h2><p> 单独拿出来讲，是因为netstat不仅仅在Linux下很实用，在Windows的DOS命令下一样很重要。</p>
<p>此命令主要用于查看占用的端口，通过管道符配合<code>findstr</code>命令缩小范围，类似于grep命令</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">netstat <span class="literal">-ano</span> | findstr /i  <span class="number">3306</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://img-blog.csdnimg.cn/5cd4d62dac444e27a11588d0f33a8928.png#" alt="在这里插入图片描述"></p>
<h2 id="五、tasklist命令"><a href="#五、tasklist命令" class="headerlink" title="五、tasklist命令"></a>五、tasklist命令</h2><p>tasklist命令一般配合netstat命令使用（在windows下搭配使用很nice）<br>以达梦数据库和MySQL(MariaDB)数据库为例讲解</p>
<p><strong>查询达梦数据库的默认端口号5236，查出对应的PID号</strong><br><img data-src="https://img-blog.csdnimg.cn/d5a006aab45c4b2da68f85275872991f.png?x-oss-process=,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA6b6Z6IW-5LiH6YeMc2t5,size_20,color_FFFFFF,t_70,g_se,x_16#" alt="在这里插入图片描述"></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">netstat <span class="literal">-ano</span> | grep <span class="number">5236</span></span><br></pre></td></tr></table></figure>

<p>配合tasklist定位进程名称</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">tasklist | grep PID_PORT</span><br></pre></td></tr></table></figure>

<p>查询MySQL(MariaDB)的默认端口号3306，查出对应的PID号</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">netstat <span class="literal">-ano</span> | grep <span class="number">3306</span></span><br></pre></td></tr></table></figure>

<p>配合tasklist定位进程名称</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">tasklist | grep PID_PORT</span><br></pre></td></tr></table></figure>

<p><strong>Windows服务器常用以及不常用的运维小技巧，持续更新中。。。</strong></p>
]]></content>
      <categories>
        <category>开发运维</category>
      </categories>
      <tags>
        <tag>Windows server</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows 平台使用 hexo 搭建个人博客</title>
    <url>/2022/03/15/Window%E5%B9%B3%E5%8F%B0%E4%BD%BF%E7%94%A8hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<p>Windows 平台使用 hexo 搭建个人博客。</p>
<p>既学了 git 和 github 的用法，也熟悉了 nodejs。</p>
<p>又多了一项打发业余时间的软技能。慢慢地变成硬技能，何乐而不为？</p>
<p>如果你从旧版本 Next 主题升级上来，请戳这篇 issues，相信会对你有所帮助：</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL25leHQtdGhlbWUvaGV4by10aGVtZS1uZXh0L2lzc3Vlcy80">https://github.com/next-theme/hexo-theme-next/issues/4<i class="fa fa-external-link-alt"></i></span></p>
<span id="more"></span>


<h1 id="Windows-平台使用-hexo-搭建私人博客"><a href="#Windows-平台使用-hexo-搭建私人博客" class="headerlink" title="Windows 平台使用 hexo 搭建私人博客"></a>Windows 平台使用 hexo 搭建私人博客</h1><p><strong>必备环境（Windows）</strong>：</p>
<ul>
<li><p>Nodejs：<span class="exturl" data-url="aHR0cHM6Ly9ub2RlanMub3JnL2VuLw==">https://nodejs.org/en/<i class="fa fa-external-link-alt"></i></span>（hexo 官方建议：Node.js 版本需不低于 10.13，建议使用 Node.js 12.0 及以上版本。）</p>
</li>
<li><p><strong>提醒</strong>：Node.js 14.0版本在运行hexo服务时会出现警告，<strong>但不影响使用</strong>，也可以升级更高版本。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">INFO  Start processing    <span class="comment"># 使用nodejs 14.0出现警告，搜索后发现基本是让降版本至nodejs 12.0</span></span><br><span class="line">INFO  Hexo is running at http://localhost:4000 . Press Ctrl+C to stop.</span><br><span class="line">(node:4464) Warning: Accessing non-existent property <span class="string">&#x27;lineno&#x27;</span> of module exports inside circular dependency</span><br><span class="line">(Use `node --trace-warnings ...` to show <span class="built_in">where</span> the warning was created)</span><br><span class="line">(node:4464) Warning: Accessing non-existent property <span class="string">&#x27;column&#x27;</span> of module exports inside circular dependency</span><br><span class="line">(node:4464) Warning: Accessing non-existent property <span class="string">&#x27;filename&#x27;</span> of module exports inside circular dependency</span><br><span class="line">(node:4464) Warning: Accessing non-existent property <span class="string">&#x27;lineno&#x27;</span> of module exports inside circular dependency</span><br><span class="line">(node:4464) Warning: Accessing non-existent property <span class="string">&#x27;column&#x27;</span> of module exports inside circular dependency</span><br><span class="line">(node:4464) Warning: Accessing non-existent property <span class="string">&#x27;filename&#x27;</span> of module exports inside circular dependency</span><br></pre></td></tr></table></figure>
</li>
<li><p>Git：<span class="exturl" data-url="aHR0cHM6Ly9naXQtc2NtLmNvbS9kb3dubG9hZHM=">https://git-scm.com/downloads<i class="fa fa-external-link-alt"></i></span>（个人使用版本：git version 2.31.1.windows.1）</p>
</li>
<li><p>Hexo：<span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL3poLWNuL2RvY3MvZ2l0aHViLXBhZ2Vz">https://hexo.io/zh-cn/docs/github-pages<i class="fa fa-external-link-alt"></i></span>（个人使用版本：6.3.0）</p>
</li>
</ul>
<p><strong>友情提醒</strong>：如果只是想简单发点私人博客，landscape 主题完全可以满足。</p>
<p><strong>如果想看简洁的界面，又想有许多新功能，那就使用 Next 主题，这款主题持续更新</strong>。</p>
<h2 id="一-安装hexo"><a href="#一-安装hexo" class="headerlink" title="一  安装hexo"></a>一  安装hexo</h2><h3 id="01-使用npm安装hexo环境"><a href="#01-使用npm安装hexo环境" class="headerlink" title="01  使用npm安装hexo环境"></a>01  使用npm安装hexo环境</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli   <span class="comment">#使用npm安装Hexo-cli</span></span><br><span class="line">npm install hexo          <span class="comment">#使用npm安装Hexo，熟悉的用户可以仅局部安装Hexo包</span></span><br></pre></td></tr></table></figure>

<p>做完上面操作，恭喜你可以进行初始化安装blog文件了。</p>
<h3 id="02-初始化博客（blog）目录"><a href="#02-初始化博客（blog）目录" class="headerlink" title="02  初始化博客（blog）目录"></a>02  初始化博客（blog）目录</h3><p>1、进入d盘（Windows terminal 下打开 cmd 或者 powershell）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> d:</span><br></pre></td></tr></table></figure>

<p>2、 创建hexo目录，方便自管理，知道这是使用hexo搭建的博客</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> hexo</span><br></pre></td></tr></table></figure>

<p>3、 切换到hexo目录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> hexo</span><br></pre></td></tr></table></figure>

<p>4、 初始化blog目录，如果速度很慢，建议替换为国内镜像源地址</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo init blog</span><br></pre></td></tr></table></figure>

<p>5、 新增md文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new <span class="string">&quot;hello my blog&quot;</span></span><br></pre></td></tr></table></figure>
<p>生成md（markdown）文件所在目录：source      </p>
<p>6、 生成静态文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure>
<p>生成静态文件所在目录：public</p>
<p>7、 启动服务</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure>
<p>或者指定 ip 地址和 port（端口）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo s -i 192.168.0.233 -p 4001</span><br></pre></td></tr></table></figure>





<h2 id="二-切换-nodejs-镜像源"><a href="#二-切换-nodejs-镜像源" class="headerlink" title="二  切换 nodejs 镜像源"></a>二  切换 nodejs 镜像源</h2><p>nodejs 临时配置国内 taobao 镜像源。</p>
<p>npm 镜像源地址，国内镜像站：</p>
<blockquote>
<p> <span class="exturl" data-url="aHR0cHM6Ly9ucG1taXJyb3IuY29tLw==">https://npmmirror.com/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p>nodejs 临时配置国内 taobao 镜像源：</p>
<blockquote>
<p>npm config set registry <span class="exturl" data-url="aHR0cDovL3JlZ2lzdHJ5Lm5wbS50YW9iYW8ub3JnLw==">http://registry.npm.taobao.org/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<h2 id="三-安装插件（进阶）"><a href="#三-安装插件（进阶）" class="headerlink" title="三  安装插件（进阶）"></a>三  安装插件（进阶）</h2><p>如果你会一丢丢前端（nodejs）知识，对这些插件使用会很顺手。</p>
<p>1、 安装hexo插件（Next主题）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-xxx-xxx --save</span><br></pre></td></tr></table></figure>

<p>安装插件目录：node_modules</p>
<p><strong>比较实用的几个插件</strong>：部分对landscape适用，主要是对Next主题适用。</p>
<ul>
<li>hexo-auto-excerpt：配置阅读全文功能，主页实现折叠效果（或者使用手动截断：<!-- more -->）。</li>
<li>hexo-generator-sitemap：Next主题配置站点。</li>
<li>hexo-leancloud-counter-security：配置博客阅读次数，需要在leancloud注册并配置应用凭证、结构化数据。</li>
<li>hexo-generator-searchdb：Next主题配置本地搜索，注意在hexo中也需要配置。</li>
</ul>
<p><strong>这里只详细介绍主题配置自动阅读</strong>（landscape和Next都适用）：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1. 在主题（Next或者landscape）中设置_yaml.config配置文件，添加如下配置文件</span></span><br><span class="line"><span class="comment">#https://github.com/ashisherc/hexo-auto-excerpt</span></span><br><span class="line"><span class="attr">auto_excerpt:</span> </span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">length:</span> <span class="number">100</span></span><br></pre></td></tr></table></figure>

<p><strong>cmd命令执行以下命令</strong>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 2. 测试效果（Windows下使用cmd命令）</span></span><br><span class="line">hexo g    <span class="comment"># 生成静态文件</span></span><br><span class="line">hexo s    <span class="comment"># 启动服务</span></span><br></pre></td></tr></table></figure>

<p><strong>测试访问</strong>：</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cDovL2xvY2FsaG9zdDo0MDAwLw==">http://localhost:4000<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p>2、 主题目录</p>
<p><strong>主题所在目录</strong>：themes</p>
<p><strong>获取Next主题</strong>：使用 git clone 或者直接下载</p>
<blockquote>
<p>git clone <span class="exturl" data-url="bWFpbHRvOiYjMTAzOyYjeDY5OyYjMTE2OyYjeDQwOyYjeDY3OyYjeDY5OyYjMTE2OyYjMTA0OyYjMTE3OyYjeDYyOyYjNDY7JiN4NjM7JiMxMTE7JiN4NmQ7">&#103;&#x69;&#116;&#x40;&#x67;&#x69;&#116;&#104;&#117;&#x62;&#46;&#x63;&#111;&#x6d;<i class="fa fa-external-link-alt"></i></span>:next-theme&#x2F;hexo-theme-next.git</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL25leHQtdGhlbWUvaGV4by10aGVtZS1uZXh0L2FyY2hpdmUvcmVmcy9oZWFkcy9tYXN0ZXIuemlw">https://github.com/next-theme/hexo-theme-next/archive/refs/heads/master.zip<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p>下载后复制到themes目录，然后<strong>修改hexo配置文件</strong>_config.yml：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">hexo-theme-next</span></span><br><span class="line"><span class="comment">#theme: landscape</span></span><br></pre></td></tr></table></figure>

<p>如果使用 npm 命令安装 next 主题：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-theme-next --save</span><br></pre></td></tr></table></figure>

<p>在 hexo 配置，需要变动：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">next</span></span><br></pre></td></tr></table></figure>
<p>还需要复制一份配置到 blog 根目录：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> .\node_modules\hexo-theme-next\_config.yml ._config.next.yml</span><br></pre></td></tr></table></figure>


<p>3、 hexo配置文件</p>
<p> blog目录下配置文件： _config.yml</p>
<p><strong>介绍一些使用比较多的参数</strong>：更多请参考 hexo 或者 Next 主题文档</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Site    #站点配置</span></span><br><span class="line"><span class="attr">title:</span>    <span class="comment">#网站标题：养得胸中一种恬静</span></span><br><span class="line"><span class="attr">subtitle:</span>   <span class="comment">#子标题</span></span><br><span class="line"><span class="attr">description:</span>  <span class="comment">#描述（个人简介）：莫问收获，但问耕耘</span></span><br><span class="line"><span class="attr">author:</span>     <span class="comment">#作者</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span> <span class="comment">#配置语言（中文）</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># search  #搜索</span></span><br><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">  <span class="attr">content:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">format:</span> <span class="string">html</span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># Deployment  #配置一键发布，需要获取github的私人令牌（token）</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class="line"><span class="comment">#deploy:</span></span><br><span class="line"><span class="comment">#  type: git</span></span><br><span class="line"><span class="comment">#  repo: https://github.com/username/username.github.io</span></span><br><span class="line"><span class="comment">#  example, https://github.com/hexojs/hexojs.github.io</span></span><br><span class="line"><span class="comment">#  branch: gh-pages</span></span><br></pre></td></tr></table></figure>


<p>4、 主题配置文件</p>
<p>themes目录landscape主题（hexo默认主题）： _config.yml</p>
<p>themes目录next主题hexo-theme-next： _config.yml</p>
<p><strong>Next主题仓库</strong>：</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL25leHQtdGhlbWUvaGV4by10aGVtZS1uZXh0">https://github.com/next-theme/hexo-theme-next<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p><strong>主要介绍一些个人配置Next主题重要部分</strong>：根据使用经验加了注释</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span>   <span class="comment">#菜单配置</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-home</span>               <span class="comment">#主页</span></span><br><span class="line">  <span class="attr">about:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-user</span>        <span class="comment">#关于页面（个人简介），默认需要手动创建</span></span><br><span class="line">  <span class="comment">#search: /search                    #配置搜索</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-tags</span>          <span class="comment">#配置标签页目录，默认需要手动创建</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-th</span>    <span class="comment">#配置类别目录，默认需要手动创建</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-archive</span>   <span class="comment">#配置归档目录</span></span><br><span class="line">  <span class="attr">schedule:</span> <span class="string">/schedule/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-calendar</span>  <span class="comment">#日程表</span></span><br><span class="line">  <span class="attr">sitemap:</span> <span class="string">/sitemap.xml</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-sitemap</span>  <span class="comment">#站点地图（xml文件，相当于一个导航）</span></span><br><span class="line">  <span class="attr">commonweal:</span> <span class="string">/404/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-heartbeat</span>    <span class="comment">#公益404界面，在source目录配置404.html即可</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Local Search  #配置本地搜索</span></span><br><span class="line"><span class="comment"># 下载插件：npm install hexo-generator-searchdb --save</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/next-theme/hexo-generator-searchdb </span></span><br><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># If auto, trigger search by changing input.</span></span><br><span class="line">  <span class="comment"># If manual, trigger search by pressing enter key or search button.</span></span><br><span class="line">  <span class="attr">trigger:</span> <span class="string">auto</span></span><br><span class="line">  <span class="comment"># Show top n results per article, show all results by setting to -1</span></span><br><span class="line">  <span class="attr">top_n_per_article:</span> <span class="number">1</span></span><br><span class="line">  <span class="comment"># Unescape html strings to the readable one.</span></span><br><span class="line">  <span class="attr">unescape:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Preload the search data when the page loads.</span></span><br><span class="line">  <span class="attr">preload:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#安装sitemap插件</span></span><br><span class="line"><span class="comment">#npm install hexo-generator-sitemap --save</span></span><br><span class="line"><span class="comment">#npm install hexo-generator-baidu-sitemap --save</span></span><br><span class="line"><span class="comment"># 自动生成sitemap</span></span><br><span class="line"><span class="attr">sitemap:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">sitemap.xml</span></span><br><span class="line">  </span><br><span class="line"><span class="comment">#导航栏在左侧、中间或者右侧</span></span><br><span class="line"><span class="attr">sidebar:</span></span><br><span class="line">  <span class="comment"># Sidebar Position.</span></span><br><span class="line">  <span class="attr">position:</span> <span class="string">left</span>  </span><br><span class="line"></span><br><span class="line"><span class="comment">#配置社交信息</span></span><br><span class="line"><span class="attr">social:</span></span><br><span class="line">  <span class="attr">GitHub:</span> <span class="string">https://github.com/cnwangk</span> <span class="string">||</span> <span class="string">fab</span> <span class="string">fa-github</span></span><br><span class="line">  <span class="attr">E-Mail:</span> <span class="string">mailto:dywangk@gmail.com</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-envelope</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#配置阅读全文效果</span></span><br><span class="line"><span class="comment">#https://github.com/ashisherc/hexo-auto-excerpt</span></span><br><span class="line"><span class="attr">auto_excerpt:</span> </span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">length:</span> <span class="number">100</span>  </span><br><span class="line"></span><br><span class="line"><span class="comment">#你主打的写作平台（比如公众号）</span></span><br><span class="line"><span class="attr">follow_me:</span></span><br><span class="line">  <span class="attr">WeChat:</span> <span class="string">/images/wechat_channel.jpg</span> <span class="string">||</span> <span class="string">fab</span> <span class="string">fa-weixin</span> <span class="comment">#设置公众号二维码，后台下载自己的二维码</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#配置代码高亮显示（默认是github浅色）</span></span><br><span class="line"><span class="attr">codeblock:</span></span><br><span class="line">  <span class="comment"># Code Highlight theme</span></span><br><span class="line">  <span class="comment"># Available value: </span></span><br><span class="line">  <span class="comment"># https://github.com/chriskempson/tomorrow-theme</span></span><br><span class="line">  <span class="comment">#highlight_theme: night eighties</span></span><br><span class="line">  <span class="comment"># All available themes: https://theme-next.js.org/highlight/</span></span><br><span class="line">  <span class="attr">theme:</span></span><br><span class="line">    <span class="comment">#light: default</span></span><br><span class="line">    <span class="attr">light:</span> <span class="string">atom-one-dark</span></span><br><span class="line">    <span class="attr">dark:</span> <span class="string">stackoverflow-dark</span>  </span><br><span class="line">    </span><br><span class="line"><span class="comment"># Baidu Analytics  #百度站点分析</span></span><br><span class="line"><span class="comment"># See: https://tongji.baidu.com</span></span><br><span class="line"><span class="attr">baidu_analytics:</span> <span class="comment">#注册账号建立分析站点生成的ID（一串字符串）</span></span><br></pre></td></tr></table></figure>


<p>更多配置说明，请参考Next主题文档介绍：</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly90aGVtZS1uZXh0LmpzLm9yZy8=">https://theme-next.js.org/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<h2 id="四-发布至github-pages"><a href="#四-发布至github-pages" class="headerlink" title="四  发布至github pages"></a>四  发布至github pages</h2><p>1、 发布至github pages</p>
<p><strong>前提</strong>：已经配置 git 环境（本地生成ssh公钥，然后配置到github）</p>
<p>如果你还没自己的 github 账号，也没配置 git 环境，可以参考我的历史博客：<strong>git推送项目到github并使用gitee做镜像仓库</strong>，如果图片被防盗链了，还可以在我的公众号上搜索查看。</p>
<p>也可以配置 deploy 一键发布，需要配置 github 私人令牌 token。</p>
<p>个人推荐使用 cp 命令将 public 目录下生成的静态文件复制到你的 repo（仓库），然后提交到远程仓库，这样操作更灵活一点。</p>
<p><strong>如下为提交至远程仓库详细步骤</strong>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> github <span class="comment"># 1. 创建github目录，用于存放（检出）自己的远程仓库</span></span><br><span class="line">git <span class="built_in">clone</span> git@github.com:yourUserName/yourUserName.github.io.git <span class="comment"># 2. 克隆远程仓库</span></span><br><span class="line"><span class="built_in">cd</span> yourUserName.github.io   <span class="comment"># 3. 切换到仓库</span></span><br><span class="line">git branch gh-pages       <span class="comment"># 4. 创建分支gh-pages</span></span><br><span class="line">git remote add origin git@github.com:yourUserName/userName.github.io.git <span class="comment"># 5. 连接远程仓库，已连接会提示exists</span></span><br><span class="line">git add --all         <span class="comment"># 6. 暂存所有有文件</span></span><br><span class="line">git commit -am <span class="string">&quot;初始化提交&quot;</span>    <span class="comment"># 7. 初始化提交所有文件  </span></span><br><span class="line">git push git@github.com:yourUserName/yourUserName.github.io.git <span class="comment"># 8. 推送至远程仓库</span></span><br></pre></td></tr></table></figure>

<p>做完上面提交操作，还需要给github仓库配置github pages服务。</p>
<p><strong>github pages的配置页面</strong>：</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2Nud2FuZ2svdGVzdC9zZXR0aW5ncy9wYWdlcw==">https://github.com/cnwangk/test/settings/pages<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p><strong>我测试配置了一个仓库</strong>：2022最新版github pages配置界面</p>
<p><strong>注意</strong>：仓库必须是公开的（public）、然后仓库命令可以命令为用户名加github.io。</p>
<p>默认进入一个设置好的<strong>gh-pages</strong>分支的仓库这样显示内容的：将gh-pages设置为默认仓库。</p>
<p><strong>Custom domain</strong>：配置域名，比如userName.github.io之外的域名。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/5869739fcaf91e45e689fafd53ee9b65.png"></p>
<p>2、访问验证博客</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">https://yourUserName.github.io</span><br></pre></td></tr></table></figure>

<p>可以访问我搭建好的示例：</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9jbndhbmdrLmdpdGh1Yi5pby8=">https://cnwangk.github.io/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<h2 id="五-hexo帮助命令"><a href="#五-hexo帮助命令" class="headerlink" title="五  hexo帮助命令"></a>五  hexo帮助命令</h2><p>1、 进入blog目录（cmd命令窗口）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> blog</span><br></pre></td></tr></table></figure>

<p>2、 执行帮助命令</p>
<p> 对使用比较有帮助的命令，根据个人实际使用经验，做了中文注释。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">D:\hexo\blog&gt;hexo --h             <span class="comment">#查看帮助命令，使用Next主题</span></span><br><span class="line">INFO  Validating config</span><br><span class="line">INFO  ==================================</span><br><span class="line">  ███╗   ██╗███████╗██╗  ██╗████████╗</span><br><span class="line">  ████╗  ██║██╔════╝╚██╗██╔╝╚══██╔══╝</span><br><span class="line">  ██╔██╗ ██║█████╗   ╚███╔╝    ██║</span><br><span class="line">  ██║╚██╗██║██╔══╝   ██╔██╗    ██║</span><br><span class="line">  ██║ ╚████║███████╗██╔╝ ██╗   ██║</span><br><span class="line">  ╚═╝  ╚═══╝╚══════╝╚═╝  ╚═╝   ╚═╝</span><br><span class="line">========================================</span><br><span class="line">NexT version 8.10.1               <span class="comment">#使用Next主题版本</span></span><br><span class="line">Documentation: https://theme-next.js.org</span><br><span class="line">========================================</span><br><span class="line">Usage: hexo &lt;<span class="built_in">command</span>&gt;</span><br><span class="line"></span><br><span class="line">Commands:  <span class="comment"># 命令</span></span><br><span class="line">  clean       Remove generated files and cache. <span class="comment"># 移除文件和缓存</span></span><br><span class="line">  config      Get or <span class="built_in">set</span> configurations.    <span class="comment"># 获取和设置配置</span></span><br><span class="line">  deploy      Deploy your website.        <span class="comment"># 发布到你的网站</span></span><br><span class="line">  generate    Generate static files.      <span class="comment"># 生成静态文件</span></span><br><span class="line">  <span class="built_in">help</span>        Get <span class="built_in">help</span> on a <span class="built_in">command</span>.      <span class="comment"># 获取帮助命令</span></span><br><span class="line">  init        Create a new Hexo folder.     <span class="comment"># 初始化，创建一个新的hexo目录</span></span><br><span class="line">  lc-counter  hexo-leancloud-counter-security <span class="comment"># 配置阅读数需要下载插件</span></span><br><span class="line">  list        List the information of the site  <span class="comment">#站点列表信息</span></span><br><span class="line">  migrate     Migrate your site from other system to Hexo.  </span><br><span class="line">  new         Create a new post.        <span class="comment">#新建一个md（markdown）文件</span></span><br><span class="line">  publish     Moves a draft post from _drafts to _posts folder.</span><br><span class="line">  render      Render files with renderer plugins.</span><br><span class="line">  server      Start the server.         <span class="comment">#启动hexo服务</span></span><br><span class="line">  version     Display version information.    <span class="comment">#查看hexo版本</span></span><br><span class="line"></span><br><span class="line">Global Options:</span><br><span class="line">  --config  Specify config file instead of using _config.yml  <span class="comment">#配置全局_config.yml文件</span></span><br><span class="line">  --cwd     Specify the CWD</span><br><span class="line">  --debug   Display all verbose messages <span class="keyword">in</span> the terminal    <span class="comment">#开启debug模式</span></span><br><span class="line">  --draft   Display draft posts                 </span><br><span class="line">  --safe    Disable all plugins and scripts           <span class="comment">#禁用所有插件</span></span><br><span class="line">  --silent  Hide output on console</span><br><span class="line"></span><br><span class="line">For more <span class="built_in">help</span>, you can use <span class="string">&#x27;hexo help [command]&#x27;</span> <span class="keyword">for</span> the detailed information</span><br><span class="line">or you can check the docs: http://hexo.io/docs/         <span class="comment">#hexo官方文档</span></span><br><span class="line">https://hexo.io/zh-cn/docs/                   <span class="comment">#hexo中文文档</span></span><br></pre></td></tr></table></figure>



<h2 id="六-个人配置示例效果"><a href="#六-个人配置示例效果" class="headerlink" title="六  个人配置示例效果"></a>六  个人配置示例效果</h2><p><a href="https://blog.cnwangk.top/">https://blog.cnwangk.top/</a></p>
<h1 id="莫问收获，但问耕耘"><a href="#莫问收获，但问耕耘" class="headerlink" title="莫问收获，但问耕耘"></a>莫问收获，但问耕耘</h1><blockquote>
<p>养得胸中一种恬静</p>
</blockquote>
<p>以上就是本文的全部内容，希望能对你的工作与学习有所帮助。感觉写的好，就拿出你的一键三连。在公众号上更新的可能要快一点，目前还在完善中。<strong>能看到这里的，都是帅哥靓妹</strong>。如果感觉总结的不到位，也希望能留下您宝贵的意见，我会在文章中进行调整优化。</p>
<p><strong>tips</strong>：使用hexo搭建的静态博客也会定期更新维护。</p>
<p>以上总结，仅供参考哟！希望对你有所帮助。</p>
<p>—END—</p>
]]></content>
      <categories>
        <category>静态博客</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>centos下使用国内的镜像yum源地址</title>
    <url>/2021/05/25/centos%E4%B8%8B%E4%BD%BF%E7%94%A8%E5%9B%BD%E5%86%85%E7%9A%84%E9%95%9C%E5%83%8Fyum%E6%BA%90%E5%9C%B0%E5%9D%80/</url>
    <content><![CDATA[<p><strong>国内镜像源</strong></p>
<p>aliyun镜像</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cDovL21pcnJvcnMuMTYzLmNvbS8=">http://mirrors.aliyun.com<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p>163镜像源</p>
<blockquote>
<p>  <span class="exturl" data-url="aHR0cDovL21pcnJvcnMuMTYzLmNvbS8=">http://mirrors.163.com<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p>中国科技大学</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cDovL21pcnJvcnMudXN0Yy5lZHUuY24v">http://mirrors.ustc.edu.cn<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p><strong>centos官方站点</strong></p>
<blockquote>
<p><span class="exturl" data-url="aHR0cDovL21pcnJvcmxpc3QuY2VudG9zLm9yZy8=">http://mirrorlist.centos.org	<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p>centos6.5的CentOS-Base.repo配置，修改的时候可以备份一份。</p>
<p><strong>使用cp命令备份</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> CentOS-Base.repo  /etc/yum.repos.d/CentOS-Base.repo.bak</span><br></pre></td></tr></table></figure>

<p>将$releasever 替换为版本号7，原因镜像源$releasever识别不了版本，6的版本无了，手动改为7</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[base]</span><br><span class="line">name=CentOS-<span class="variable">$releasever</span> - Base</span><br><span class="line"><span class="comment">#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=os</span></span><br><span class="line">baseurl=http://mirrors.163.com/centos/7/os/<span class="variable">$basearch</span>/</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=http://mirrors.163.com/centos/RPM-GPG-KEY-CentOS-7</span><br><span class="line"></span><br><span class="line"><span class="comment">#released updates </span></span><br><span class="line">[updates]</span><br><span class="line">name=CentOS-<span class="variable">$releasever</span> - Updates </span><br><span class="line"><span class="comment">#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=updates</span></span><br><span class="line">baseurl=http://mirrors.163.com/centos/7/updates/<span class="variable">$basearch</span>/</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=http://mirrors.163.com/centos/RPM-GPG-KEY-CentOS-7</span><br><span class="line"></span><br><span class="line"><span class="comment">#additional packages that may be useful</span></span><br><span class="line">[extras]</span><br><span class="line">name=CentOS-<span class="variable">$releasever</span> - Extras </span><br><span class="line"><span class="comment">#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=extras</span></span><br><span class="line">baseurl=http://mirrors.163.com/centos/7/extras/<span class="variable">$basearch</span>/</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=http://mirrors.163.com/centos/RPM-GPG-KEY-CentOS-7</span><br><span class="line"></span><br><span class="line"><span class="comment">#additional packages that extend functionality of existing packages</span></span><br><span class="line">[centosplus]</span><br><span class="line">name=CentOS-<span class="variable">$releasever</span> - Plus </span><br><span class="line"><span class="comment">#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=centosplus</span></span><br><span class="line">baseurl=http://mirrors.163.com/centos/7/centosplus/<span class="variable">$basearch</span>/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=0</span><br><span class="line">gpgkey=http://mirrors.163.com/centos/RPM-GPG-KEY-CentOS-7</span><br><span class="line"></span><br><span class="line"><span class="comment">#contrib - packages by Centos Users</span></span><br><span class="line">[contrib]</span><br><span class="line">name=CentOS-<span class="variable">$releasever</span> - Contrib </span><br><span class="line"><span class="comment">#mirrorlist=http://mirrorlist.centos.org/?release=releasever$&amp;arch=$basearch&amp;repo=contrib</span></span><br><span class="line">baseurl=http://mirrors.163.com/centos/7/contrib/<span class="variable">$basearch</span>/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=0</span><br><span class="line">gpgkey=http://mirrors.163.com/centos/RPM-GPG-KEY-CentOS-7</span><br></pre></td></tr></table></figure>



<p><strong>清除缓存</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum clean all </span><br></pre></td></tr></table></figure>

<p><strong>更新缓存</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum makecache</span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>开发运维</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2017/06/10/hello-world/</url>
    <content><![CDATA[<p>Welcome to <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvLw==">Hexo<i class="fa fa-external-link-alt"></i></span>! This is your very first post. Check <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv">documentation<i class="fa fa-external-link-alt"></i></span> for more info. If you get any problems when using Hexo, you can find the answer in <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=">troubleshooting<i class="fa fa-external-link-alt"></i></span> or you can ask me on <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==">GitHub<i class="fa fa-external-link-alt"></i></span>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s">Writing<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=">Server<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s">Generating<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s">Deployment<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>静态博客</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>git清除版本控制</title>
    <url>/2022/02/21/git%E6%B8%85%E9%99%A4%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/</url>
    <content><![CDATA[<p>如果不想让别人看到自己的提交记录，可以使用私有仓库+公有仓库配合使用。</p>
<p>在保留原始仓库状态情况下清除原始的分支，创建新的分支并强制推送至远程仓库。</p>
<p>如果想完全清除版本控制，删除隐藏的.git目录，然后重新初始化。</p>
<ol>
<li><p>创建并切换到新的分支</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git checkout --orphan br_latest</span><br></pre></td></tr></table></figure>


</li>
<li><p>暂存所有未追踪的文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git add --all</span><br></pre></td></tr></table></figure>


</li>
<li><p>提交所有更改</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git commit -am <span class="string">&quot;删除历史版本记录，初始化仓库&quot;</span></span><br></pre></td></tr></table></figure>


</li>
<li><p>删除原有分支</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git branch -D master</span><br></pre></td></tr></table></figure>


</li>
<li><p>将当前分支重命名</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git branch -m master</span><br></pre></td></tr></table></figure>


</li>
<li><p>强制更新存储库</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git push -f origin master</span><br></pre></td></tr></table></figure></li>
</ol>
<p>如果只是想完全去掉版本控制，完全可以删除隐藏文件.git目录，然后初始化git init。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">rm</span> -rf .git</span><br><span class="line">$ git init</span><br></pre></td></tr></table></figure>



<ol>
<li><p>将当前分支重命名为master</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git branch -m master</span><br></pre></td></tr></table></figure>


</li>
<li><p>连接远程仓库demo</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git remote add origin git@github.com:cnwangk/demo.git</span><br></pre></td></tr></table></figure>


</li>
<li><p>再强制更新远程仓库：-f为强制推送更新仓库</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git push -f origin master</span><br></pre></td></tr></table></figure>


</li>
<li><p>查看本地仓库大小</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">du</span> -sk -m</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>开发工具</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo博客部署到cloudflare pages示例</title>
    <url>/2023/05/05/hexo%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2%E5%88%B0cloudflare-pages%E7%A4%BA%E4%BE%8B/</url>
    <content><![CDATA[<p><strong>cloudflare pages 支持部署方式</strong></p>
<ul>
<li>连接至git：支持从 github &amp; gitlab 仓库导入 cloudflare pages。</li>
<li>直接上传：支持手动上传压缩包以及文件 cloudflare pages，直接上传可能会出现中文目录乱码（需要统一编码为：utf-8，否则大概率中文乱码）。</li>
<li>Wrangler CLI：支持wrangler cli 推送项目到 cloudflare pages，个人推荐这种方式或者链接 github 仓库。</li>
</ul>
<span id="more"></span>


<p><strong>示例：Wrangler CLI 创建项目</strong><br>使用 Wrangler CLI 创建项目，利用 Wrangler 命令行界面 (CLI) 创建和部署站点。</p>
<ol>
<li>npm install -g wrangler</li>
<li>wrangler login</li>
<li>npx wrangler pages publish 接项目（生成静态资源文件）所在目录</li>
<li>选择新建项目或者推送已有项目</li>
</ol>
<p>具体操作如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost blog]<span class="comment"># npx wrangler pages publish public/   #推送项目</span></span><br><span class="line">No project selected. Would you like to create one or use an existing project?</span><br><span class="line">  Create a new project      <span class="comment"># 创建新项目</span></span><br><span class="line">❯ Use an existing project   <span class="comment"># 使用已有项目</span></span><br><span class="line">Select a project:           <span class="comment"># 选择已有项目</span></span><br><span class="line">❯ blog-wangk-demo</span><br><span class="line">  blog-wangk-hexo</span><br><span class="line">  blog-wangk-hugo</span><br><span class="line">  blog-wangk-jekyll</span><br><span class="line">🌍  Uploading... (280/280)</span><br><span class="line"></span><br><span class="line">✨ Success! Uploaded 0 files (280 already uploaded) (1.82 sec)</span><br><span class="line"></span><br><span class="line">✨ Deployment complete! Take a peek over at https://05f68913.blog-wangk-demo.pages.dev</span><br></pre></td></tr></table></figure>

<p>输出：看到 Success! Uploaded 代表上传资源成功。</p>
<p>—END—</p>
]]></content>
      <categories>
        <category>静态博客</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo进阶玩法</title>
    <url>/2022/02/18/hexo%E8%BF%9B%E9%98%B6%E7%8E%A9%E6%B3%95/</url>
    <content><![CDATA[<p>目前个人主要以使用 Next 主题为主，Next 主题比较活跃、更新频繁，升级完成后记录过程。</p>
<p>如果你从旧版本 Next 主题升级上来，请戳这篇 issues，相信会对你有所帮助：</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL25leHQtdGhlbWUvaGV4by10aGVtZS1uZXh0L2lzc3Vlcy80">https://github.com/next-theme/hexo-theme-next/issues/4<i class="fa fa-external-link-alt"></i></span></p>
<p>关于hexo一些问题，基本上可以在官网找到解决方案，如果找不到可以在插件github issues寻找解决方案。<br><span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL3poLWNuL2RvY3MvdHJvdWJsZXNob290aW5n">https://hexo.io/zh-cn/docs/troubleshooting<i class="fa fa-external-link-alt"></i></span></p>
<span id="more"></span>

<h1 id="hexo-nextjs主题"><a href="#hexo-nextjs主题" class="headerlink" title="hexo nextjs主题"></a>hexo nextjs主题</h1><p>个人已经更新到最新环境：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo: 6.3.0</span><br><span class="line">hexo-cli: 4.3.0</span><br><span class="line">os: win32 10.0.22000</span><br><span class="line">node: 16.18.1</span><br><span class="line">nextjs：NexT version 8.16.0</span><br></pre></td></tr></table></figure>
<p>插件使用：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">&quot;hexo&quot;:</span> <span class="string">&quot;^6.3.0&quot;</span><span class="string">,</span></span><br><span class="line"><span class="attr">&quot;hexo-bilibili-bangumi&quot;:</span> <span class="string">&quot;^1.8.8&quot;</span><span class="string">,</span></span><br><span class="line"><span class="attr">&quot;hexo-deployer-git&quot;:</span> <span class="string">&quot;^4.0.0&quot;</span><span class="string">,</span></span><br><span class="line"><span class="attr">&quot;hexo-excerpt&quot;:</span> <span class="string">&quot;^1.3.0&quot;</span><span class="string">,</span></span><br><span class="line"><span class="attr">&quot;hexo-generator-archive&quot;:</span> <span class="string">&quot;^2.0.0&quot;</span><span class="string">,</span></span><br><span class="line"><span class="attr">&quot;hexo-generator-category&quot;:</span> <span class="string">&quot;^2.0.0&quot;</span><span class="string">,</span></span><br><span class="line"><span class="attr">&quot;hexo-generator-index&quot;:</span> <span class="string">&quot;^3.0.0&quot;</span><span class="string">,</span></span><br><span class="line"><span class="attr">&quot;hexo-generator-searchdb&quot;:</span> <span class="string">&quot;^1.4.1&quot;</span><span class="string">,</span></span><br><span class="line"><span class="attr">&quot;hexo-generator-sitemap&quot;:</span> <span class="string">&quot;^3.0.1&quot;</span><span class="string">,</span></span><br><span class="line"><span class="attr">&quot;hexo-generator-tag&quot;:</span> <span class="string">&quot;^2.0.0&quot;</span><span class="string">,</span></span><br><span class="line"><span class="attr">&quot;hexo-next-giscus&quot;:</span> <span class="string">&quot;^1.0.3&quot;</span><span class="string">,</span></span><br><span class="line"><span class="attr">&quot;hexo-related-posts&quot;:</span> <span class="string">&quot;^1.5.1&quot;</span><span class="string">,</span></span><br><span class="line"><span class="attr">&quot;hexo-renderer-ejs&quot;:</span> <span class="string">&quot;^2.0.0&quot;</span><span class="string">,</span></span><br><span class="line"><span class="attr">&quot;hexo-renderer-marked&quot;:</span> <span class="string">&quot;^6.0.0&quot;</span><span class="string">,</span></span><br><span class="line"><span class="attr">&quot;hexo-renderer-stylus&quot;:</span> <span class="string">&quot;^2.1.0&quot;</span><span class="string">,</span></span><br><span class="line"><span class="attr">&quot;hexo-server&quot;:</span> <span class="string">&quot;^3.0.0&quot;</span><span class="string">,</span></span><br><span class="line"><span class="attr">&quot;hexo-theme-next&quot;:</span> <span class="string">&quot;^8.16.0&quot;</span><span class="string">,</span></span><br><span class="line"><span class="attr">&quot;hexo-word-counter&quot;:</span> <span class="string">&quot;^0.1.0&quot;</span></span><br></pre></td></tr></table></figure>

<p>每安装一款插件，测试一下，暂时没发现冲突。</p>
<p>建议新建多个目录进行初始化：</p>
<ul>
<li>测试环境：blog-hexo-test</li>
<li>生产环境：blog-hexo-prod</li>
</ul>
<p>测试正常后，备份到生产环境使用。</p>
<h3 id="置顶插件"><a href="#置顶插件" class="headerlink" title="置顶插件"></a>置顶插件</h3><p>Next 主题自带功能（主题配置文件）：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 置顶文章</span></span><br><span class="line"><span class="comment"># Tabs tag</span></span><br><span class="line"><span class="attr">tabs:</span></span><br><span class="line">  <span class="comment"># Make the nav bar of tabs with long content stick to the top.</span></span><br><span class="line">  <span class="attr">sticky:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">transition:</span></span><br><span class="line">    <span class="attr">tabs:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">labels:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>文章配置：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">title: MySQL数据库与Nacos搭建监控服务</span><br><span class="line"><span class="built_in">date</span>: 2023-03-30 22:15:05</span><br><span class="line">sticky: 100</span><br><span class="line">tags: nacos</span><br><span class="line">categories: </span><br><span class="line">- [中间件]</span><br></pre></td></tr></table></figure>



<p><strong>其它方式</strong></p>
<p>你可以安装插件 pin-top</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-index-pin-top --save</span><br></pre></td></tr></table></figure>
<p>修改：post.njk：hexo\blog\themes\hexo-theme-next\layout_macro\post.njk<br>找到post-meta，追加如下判断</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> post.<span class="property">top</span> %&#125;</span><br><span class="line">   &lt;i <span class="keyword">class</span>=<span class="string">&quot;fa fa-thumb-tack&quot;</span>&gt;&lt;/i&gt;</span><br><span class="line">   <span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&quot;red&quot;</span>&gt;</span>置顶<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line">   &#123;### &lt;span <span class="keyword">class</span>=<span class="string">&quot;post-meta-divider&quot;</span>&gt; &lt;/span&gt; ###&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>
<p>此处置顶放在最后面显示，如需调整，可以F12调试定位。</p>
<p>修改：blog\themes\hexo-theme-next\layout_partials\post\post-meta.njk<br>还可以在 post-meta.njk文件 找到post.date在下面加入，置顶就放在发表日期前面显示。 </p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> post.<span class="property">top</span> %&#125;</span><br><span class="line">  &lt;i <span class="keyword">class</span>=<span class="string">&quot;fa fa-thumb-tack&quot;</span>&gt;&lt;/i&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&quot;RED&quot;</span>&gt;</span>置顶<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;post-meta-divider&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>

<p>md文章追加top设置，两种方式：使用true，也可以使用数字7来代替，数字越大排序越靠前</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">top: <span class="literal">true</span></span><br><span class="line">top: 7</span><br></pre></td></tr></table></figure>


<h3 id="主题颜色切换开关"><a href="#主题颜色切换开关" class="headerlink" title="主题颜色切换开关"></a>主题颜色切换开关</h3><p>安装插件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-next-darkmode --save</span><br></pre></td></tr></table></figure>

<p>next主题_config.yml加入如下配置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Darkmode JS</span></span><br><span class="line"><span class="comment"># For more information: https://github.com/rqh656418510/hexo-next-darkmode, https://github.com/sandoche/Darkmode.js</span></span><br><span class="line">darkmode_js:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  bottom: <span class="string">&#x27;64px&#x27;</span> <span class="comment"># default: &#x27;32px&#x27;</span></span><br><span class="line">  right: <span class="string">&#x27;32px&#x27;</span> <span class="comment"># default: &#x27;32px&#x27;</span></span><br><span class="line">  left: <span class="string">&#x27;unset&#x27;</span> <span class="comment"># default: &#x27;unset&#x27;</span></span><br><span class="line">  time: <span class="string">&#x27;0.5s&#x27;</span> <span class="comment"># default: &#x27;0.3s&#x27;</span></span><br><span class="line">  mixColor: <span class="string">&#x27;transparent&#x27;</span> <span class="comment"># default: &#x27;#fff&#x27;</span></span><br><span class="line">  backgroundColor: <span class="string">&#x27;transparent&#x27;</span> <span class="comment"># default: &#x27;#fff&#x27;</span></span><br><span class="line">  buttonColorDark: <span class="string">&#x27;#100f2c&#x27;</span> <span class="comment"># default: &#x27;#100f2c&#x27;</span></span><br><span class="line">  buttonColorLight: <span class="string">&#x27;#fff&#x27;</span> <span class="comment"># default: &#x27;#fff&#x27;</span></span><br><span class="line">  isActivated: <span class="literal">false</span> <span class="comment"># default false</span></span><br><span class="line">  saveInCookies: <span class="literal">true</span> <span class="comment"># default: true</span></span><br><span class="line">  label: <span class="string">&#x27;🌓&#x27;</span> <span class="comment"># default: &#x27;&#x27;</span></span><br><span class="line">  autoMatchOsTheme: <span class="literal">true</span> <span class="comment"># default: true</span></span><br><span class="line">  libUrl: <span class="comment"># Set custom library cdn url for Darkmode.js</span></span><br></pre></td></tr></table></figure>

<p>友情提示：会与文章底部社交功能（follow_me）显示图片功能冲突，影响鼠标悬浮事件。</p>
<p>问题排查：与 hexo-next-darkmode 插件冲突</p>
<p>插件地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3JxaDY1NjQxODUxMC9oZXhvLW5leHQtZGFya21vZGU=">https://github.com/rqh656418510/hexo-next-darkmode<i class="fa fa-external-link-alt"></i></span></p>
<p>版本：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">&quot;hexo-next-darkmode&quot;:</span> <span class="string">&quot;^0.1.10&quot;</span></span><br></pre></td></tr></table></figure>

<p>卸载：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm remove hexo-next-darkmode</span><br></pre></td></tr></table></figure>

<p>重启（清除缓存）：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo s -i 127.0.0.1  -p 4001</span><br></pre></td></tr></table></figure>
<p>再次验证 follow_me 设置图片，鼠标悬浮事件正常。</p>
<p>希望对看到这篇博文的你有所帮助。</p>
<h3 id="追加番剧-电视剧标签页"><a href="#追加番剧-电视剧标签页" class="headerlink" title="追加番剧 &amp; 电视剧标签页"></a>追加番剧 &amp; 电视剧标签页</h3><p>使用hexo静态博客，第一步少不了插件安装：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-bilibili-bangumi --save</span><br></pre></td></tr></table></figure>
<p>更新数据到本地json文件。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo bangumi -u</span><br><span class="line">hexo cinema -u</span><br></pre></td></tr></table></figure>

<p>hexo 主站本身_config.yml（不是主题）配置文件做如下设置：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># npm install hexo-bilibili-bangumi  --save</span></span><br><span class="line"><span class="attr">bangumi:</span> <span class="comment"># 追番设置</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">source:</span> <span class="string">bili</span></span><br><span class="line">  <span class="attr">bgmInfoSource:</span> <span class="string">&#x27;bgmApi&#x27;</span></span><br><span class="line">  <span class="attr">path:</span>  <span class="comment"># 设置二级菜单，可以这样设置： &#x27;/happy/bangumis/index.html&#x27;</span></span><br><span class="line">  <span class="attr">vmid:</span> <span class="string">&#x27;你的B站ID&#x27;</span></span><br><span class="line">  <span class="attr">title:</span> <span class="string">&#x27;追番列表&#x27;</span></span><br><span class="line">  <span class="attr">quote:</span> <span class="string">&#x27;一入编程深似海，从此节操是路人！&#x27;</span></span><br><span class="line">  <span class="attr">show:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">lazyload:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">srcValue:</span> <span class="string">&#x27;__image__&#x27;</span></span><br><span class="line">  <span class="attr">lazyloadAttrName:</span> <span class="string">&#x27;data-src=__image__&#x27;</span></span><br><span class="line">  <span class="attr">loading:</span></span><br><span class="line">  <span class="attr">showMyComment:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">pagination:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">metaColor:</span></span><br><span class="line">  <span class="attr">color:</span></span><br><span class="line">  <span class="attr">webp:</span></span><br><span class="line">  <span class="attr">progress:</span></span><br><span class="line">  <span class="attr">extraOrder:</span></span><br><span class="line">  <span class="attr">proxy:</span></span><br><span class="line">    <span class="attr">host:</span> <span class="string">&#x27;代理host&#x27;</span></span><br><span class="line">    <span class="attr">port:</span> <span class="string">&#x27;代理端口&#x27;</span></span><br><span class="line">  <span class="attr">extra_options:</span></span><br><span class="line">    <span class="attr">key:</span> <span class="string">value</span></span><br><span class="line"><span class="attr">cinema:</span> <span class="comment"># 追剧设置</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">path:</span>  <span class="comment"># 设置二级菜单，可以这样设置： &#x27;/happy/cinemas/index.html&#x27;</span></span><br><span class="line">  <span class="attr">vmid:</span> <span class="string">&#x27;你的B站ID&#x27;</span></span><br><span class="line">  <span class="attr">title:</span> <span class="string">&#x27;追剧列表&#x27;</span></span><br><span class="line">  <span class="attr">quote:</span> <span class="string">&#x27;一入编程深似海，从此节操是路人！&#x27;</span></span><br><span class="line">  <span class="attr">show:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">lazyload:</span> <span class="literal">true</span>  <span class="comment"># 懒加载可能会与主题设置懒加载冲突，可以设置 false 禁用</span></span><br><span class="line">  <span class="attr">srcValue:</span> <span class="string">&#x27;__image__&#x27;</span></span><br><span class="line">  <span class="attr">lazyloadAttrName:</span> <span class="string">&#x27;data-src=__image__&#x27;</span></span><br><span class="line">  <span class="attr">loading:</span></span><br><span class="line">  <span class="attr">metaColor:</span></span><br><span class="line">  <span class="attr">color:</span></span><br><span class="line">  <span class="attr">webp:</span></span><br><span class="line">  <span class="attr">progress:</span></span><br><span class="line">  <span class="attr">extraOrder:</span></span><br><span class="line">  <span class="attr">extra_options:</span></span><br><span class="line">    <span class="attr">key:</span> <span class="string">value</span></span><br></pre></td></tr></table></figure>

<p>新增番剧专题页面</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new page <span class="string">&quot;bangumis&quot;</span></span><br></pre></td></tr></table></figure>
<p>新增电视剧专题</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new page <span class="string">&quot;cinemas&quot;</span></span><br></pre></td></tr></table></figure>

<p>hexo next主题_config.yml配置bangumis和cinemas：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="attr">bangumis:</span> <span class="string">/bangumis/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-th</span></span><br><span class="line">  <span class="attr">cinemas:</span> <span class="string">/cinemas/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-th</span></span><br></pre></td></tr></table></figure>

<p>改成二级菜单形式：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="string">文娱:</span> <span class="comment"># 这样设置可能不优雅，你可以在 zh-CN.yml 进行汉化配置 </span></span><br><span class="line">     <span class="attr">default:</span> <span class="string">/happy/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-th</span></span><br><span class="line">     <span class="attr">bangumis:</span> <span class="string">/bangumis/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-th</span></span><br><span class="line">     <span class="attr">cinemas:</span> <span class="string">/cinemas/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-th</span></span><br></pre></td></tr></table></figure>

<p>自己添加后，需要手动追加汉化。配置blog-hexo-test\blog\themes\hexo-theme-next\languages目录下的zh-CN.yml：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">title:</span></span><br><span class="line">  <span class="attr">bangumis:</span> <span class="string">番剧</span></span><br><span class="line">  <span class="attr">cinemas:</span> <span class="string">电视剧</span></span><br><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">bangumis:</span> <span class="string">番剧</span></span><br><span class="line">  <span class="attr">cinemas:</span> <span class="string">电视剧</span></span><br></pre></td></tr></table></figure>

<p>省略一些配置，在标题title和菜单menu追加汉化。</p>
<h3 id="升级-排查插件冲突"><a href="#升级-排查插件冲突" class="headerlink" title="升级 &amp; 排查插件冲突"></a>升级 &amp; 排查插件冲突</h3><p>查看版本</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo version</span><br><span class="line">hexo 6.3.0</span><br><span class="line">theme-next-js 8.16.0</span><br><span class="line">npm 8.19.2</span><br><span class="line">node: 16.18.1</span><br></pre></td></tr></table></figure>

<p>对比hexo官方文档给出建议配置：<span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL3poLWNuL2RvY3MvI05vZGUtanMtJUU3JTg5JTg4JUU2JTlDJUFDJUU5JTk5JTkwJUU1JTg4JUI2">https://hexo.io/zh-cn/docs/#Node-js-版本限制<i class="fa fa-external-link-alt"></i></span></p>
<table>
<thead>
<tr>
<th align="left">Hexo 版本</th>
<th align="left">最低版本 (Node.js 版本)</th>
<th align="left">最高版本 (Node.js 版本)</th>
</tr>
</thead>
<tbody><tr>
<td align="left">6.2+</td>
<td align="left">12.13.0</td>
<td align="left">latest</td>
</tr>
<tr>
<td align="left">6.0+</td>
<td align="left">12.13.0</td>
<td align="left">18.5.0</td>
</tr>
<tr>
<td align="left">5.0+</td>
<td align="left">10.13.0</td>
<td align="left">12.0.0</td>
</tr>
<tr>
<td align="left">4.1 - 4.2</td>
<td align="left">8.10</td>
<td align="left">10.0.0</td>
</tr>
<tr>
<td align="left">4.0</td>
<td align="left">8.6</td>
<td align="left">8.10.0</td>
</tr>
<tr>
<td align="left">3.3 - 3.9</td>
<td align="left">6.9</td>
<td align="left">8.0.0</td>
</tr>
<tr>
<td align="left">3.2 - 3.3</td>
<td align="left">0.12</td>
<td align="left">未知</td>
</tr>
<tr>
<td align="left">3.0 - 3.1</td>
<td align="left">0.10 或 iojs</td>
<td align="left">未知</td>
</tr>
<tr>
<td align="left">0.0.1 - 2.8</td>
<td align="left">0.10</td>
<td align="left">未知</td>
</tr>
</tbody></table>
<p><strong>排查方法</strong></p>
<p>建议备份原始数据和配置文件。</p>
<p>使用 hexo g 出现 html 解析报错，部分分页页面出现问题，文章正常生成。感觉是：插件兼容性、标题过长或者链接失效问题，待排查。</p>
<p>初始化安装，排查插件冲突。</p>
<ol>
<li>安装一款插件排查一次。</li>
<li>开启debug排查：hexo –debug</li>
<li>执行：hexo clean &amp;&amp; hexo g</li>
<li>执行：hexo s</li>
</ol>
<p>发现与很久没有更新的插件：html_minifier 发生冲突，安装后与hexo6.3.0有冲突，可能与next主题冲突，也可能是文章内容格式冲突。<br>分页出现某些页面出现解析错误，卸载html_minifier则正常生成blog和分页。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-html-minifier --save </span><br><span class="line">ERROR Render HTML failed: page/11/index.html</span><br></pre></td></tr></table></figure>
<p>hexo-html-minifier很久没更新，建议使用替代品：html-minifier-terser</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install html-minifier-terser --save</span><br></pre></td></tr></table></figure>


<h1 id="hexo-landscape主题"><a href="#hexo-landscape主题" class="headerlink" title="hexo landscape主题"></a>hexo landscape主题</h1><p>个人推荐使用 more 形式截断，优点控制更加精确： </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;!--more--&gt;  </span><br></pre></td></tr></table></figure>

<p>hexo中实现首页文章折叠效果，通过修改article.ejs实现。<strong>初步使用，达到一个预期的效果图</strong>：</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/663f29857dc0bf201f3c42989463b20f.png"></p>
<p>可以思考一下，各大互联网博客平台以及公众号平台它们所使用的摘要内容是如何实现的，同样也限定了输入的字数。公众号平台限制的摘要字数在120字，CSDN的摘要字数限制在256字，掘金社区限制摘要在100字。摘要的作用，是通过简短且精炼的语句描述出文章的中心思想，换句话说就是突出文章的主题，让读者一眼就能获取到自己想要的知识点。</p>
<p><strong>hexo中实现首页文章折叠效果，通过修改article.ejs实现</strong>。</p>
<p>基于上面的思考，想出的解决办法，是通过截取去实现折叠效果。默认安装的主题本身是提供了开关，但并没有加入判断截取实现。</p>
<h3 id="修改ejs文件"><a href="#修改ejs文件" class="headerlink" title="修改ejs文件"></a>修改ejs文件</h3><h4 id="article-ejs目录"><a href="#article-ejs目录" class="headerlink" title="article.ejs目录"></a>article.ejs目录</h4><p>hexo这一层目录是自己新建的，article.ejs文件所在位置：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">\hexo\blog\themes\landscape\layout\_partial\article.ejs</span><br></pre></td></tr></table></figure>

<p><strong>默认主题原始article.ejs的read more设置</strong>：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;div class=&quot;article-entry&quot; itemprop=&quot;articleBody&quot;&gt;</span><br><span class="line">      &lt;% if (post.excerpt &amp;&amp; index)&#123; %&gt;</span><br><span class="line">        &lt;%- post.excerpt %&gt;</span><br><span class="line">        &lt;% if (theme.excerpt_link)&#123; %&gt;</span><br><span class="line">          &lt;p class=&quot;article-more-link&quot;&gt;</span><br><span class="line">            &lt;a href=&quot;&lt;%- url_for(post.path) %&gt;#more&quot;&gt;&lt;%= theme.excerpt_link %&gt;&lt;/a&gt;</span><br><span class="line">          &lt;/p&gt;</span><br><span class="line">        &lt;% &#125; %&gt;</span><br><span class="line">      &lt;% &#125; else &#123; %&gt;</span><br><span class="line">        &lt;%- post.content %&gt;</span><br><span class="line">      &lt;% &#125; %&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>



<h4 id="实现折叠方式一"><a href="#实现折叠方式一" class="headerlink" title="实现折叠方式一"></a>实现折叠方式一</h4><p>通过加入判断以及substring()函数进行截取方法一：</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/07ebf768900782d65d4518ff0cc705c6.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;div class=&quot;article-entry&quot; itemprop=&quot;articleBody&quot;&gt;</span><br><span class="line">  &lt;% if (post.excerpt &amp;&amp; index) &#123; %&gt;</span><br><span class="line">    &lt;%- post.excerpt %&gt;</span><br><span class="line">    &lt;% if (theme.excerpt_link) &#123; %&gt;</span><br><span class="line">      &lt;p class=&quot;article-more-link&quot;&gt;</span><br><span class="line">        &lt;a href=&quot;&lt;%- config.root %&gt;&lt;%- post.path %&gt;#more&quot;&gt;&lt;%= theme.excerpt_link %&gt;&lt;/a&gt;</span><br><span class="line">      &lt;/p&gt;</span><br><span class="line">    &lt;% &#125; %&gt;</span><br><span class="line">  &lt;% &#125; else &#123; %&gt;</span><br><span class="line">    &lt;% var br = post.content.indexOf(&#x27;\n&#x27;) %&gt;</span><br><span class="line">    &lt;% if(br &lt; 0 || !index) &#123; %&gt;</span><br><span class="line">      &lt;%- post.content %&gt;</span><br><span class="line">    &lt;% &#125; else &#123; %&gt;</span><br><span class="line">      &lt;%- post.content.substring(0, br) %&gt;</span><br><span class="line">      &lt;% if (theme.excerpt_link) &#123; %&gt;</span><br><span class="line">        &lt;p class=&quot;article-more-link&quot;&gt;</span><br><span class="line">          &lt;a href=&quot;&lt;%- config.root %&gt;&lt;%- post.path %&gt;#more&quot;&gt;&lt;%= theme.excerpt_link %&gt;&lt;/a&gt;</span><br><span class="line">        &lt;/p&gt;</span><br><span class="line">      &lt;% &#125; %&gt;</span><br><span class="line">    &lt;% &#125; %&gt;</span><br><span class="line">  &lt;% &#125; %&gt;     </span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>



<h4 id="实现折叠方式二"><a href="#实现折叠方式二" class="headerlink" title="实现折叠方式二"></a>实现折叠方式二</h4><p>下面给出的是一种实现方式，并没有给整体的代码。通过加入判断以及substring()函数进行截取方法二，<strong>可以针对上面进行改造ejs文件</strong>。你可以尝试加入几个判断语句，如果遇到代码块，看能否一样可以实现上面的折叠效果：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">      &lt;%else if post.excerpt%&gt;</span><br><span class="line">        &lt;%post.content.replace(/^\s*/, &#x27;&#x27;).replace(/\s*$/, &#x27;&#x27;).substring(0,140)%&gt;</span><br><span class="line">      &lt;%else%&gt;</span><br><span class="line">       &lt;% post.content.replace(/^\s*/, &#x27;&#x27;).replace(/\s*$/, &#x27;&#x27;).substring(0, 140)%&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>



<h3 id="测试read-more"><a href="#测试read-more" class="headerlink" title="测试read more"></a>测试read more</h3><p>修改完后，可以直接在浏览器中打开进行测试：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://localhost:4000</span><br></pre></td></tr></table></figure>

<p><strong>个人搭建测试效果</strong>：</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/663f29857dc0bf201f3c42989463b20f.png"></p>
<h3 id="底部的版权修改"><a href="#底部的版权修改" class="headerlink" title="底部的版权修改"></a>底部的版权修改</h3><p>同样进入landscape主题下的layout目录找到<code>footer.ejs</code>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">\hexo\blog\themes\landscape\layout\_partial\footer.ejs</span><br></pre></td></tr></table></figure>

<p><strong>对footer.ejs内容进行修改</strong>：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;footer id=&quot;footer&quot;&gt;</span><br><span class="line">  &lt;% if (theme.sidebar === &#x27;bottom&#x27;)&#123; %&gt;</span><br><span class="line">    &lt;%- partial(&#x27;_partial/sidebar&#x27;) %&gt;</span><br><span class="line">  &lt;% &#125; %&gt;</span><br><span class="line">  &lt;div class=&quot;outer&quot;&gt;</span><br><span class="line">    &lt;div id=&quot;footer-info&quot; class=&quot;inner&quot;&gt;</span><br><span class="line">      &amp;copy; &lt;%= date(new Date(), &#x27;YYYY&#x27;) %&gt; &lt;%= config.author || config.title %&gt;&lt;br&gt;</span><br><span class="line">      &lt;%= __(&#x27;powered_by&#x27;) %&gt; &lt;a href=&quot;修改成你的域名&quot; target=&quot;_blank&quot;&gt;填写作者名之类的&lt;/a&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/footer&gt;</span><br></pre></td></tr></table></figure>

<p>以上总结，仅供参考，希望对你有所帮助。</p>
<p>——END——</p>
]]></content>
      <categories>
        <category>静态博客</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>hugo初体验</title>
    <url>/2023/04/14/hugo%E5%88%9D%E4%BD%93%E9%AA%8C/</url>
    <content><![CDATA[<p>centos-stream-9 初体验hugo，初体验比较简化，只拿了一篇示例文章进行体验。</p>
<h3 id="centos-stream-9-环境"><a href="#centos-stream-9-环境" class="headerlink" title="centos-stream-9 环境"></a>centos-stream-9 环境</h3><p><strong>准备环境</strong>：</p>
<ul>
<li>hugo</li>
<li>git</li>
</ul>
<p><strong>说明</strong>：git 环境不是必要环境，如果你从远程仓库获取资源（比如获取 hugo 相关的主题），是需要 git 环境的。同时便于版本控制以及上传至提供 pages 服务的平台，比如 github 和 gitee。</p>
<h3 id="git-hugo-部署"><a href="#git-hugo-部署" class="headerlink" title="git &amp; hugo 部署"></a>git &amp; hugo 部署</h3><p>git 在线安装方式yum &amp; dnf工具：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install git</span><br><span class="line">dnf -y install git</span><br></pre></td></tr></table></figure>

<p>如何配置 git 环境，可在站内搜索 git 相关教程，这里不再赘述。</p>
<p>hugo快速开始文档：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hugo new site quickstart</span><br><span class="line"><span class="built_in">cd</span> quickstart</span><br><span class="line">git init</span><br><span class="line">git submodule add https://github.com/theNewDynamic/gohugo-theme-ananke themes/ananke</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;theme = &#x27;ananke&#x27;&quot;</span> &gt;&gt; config.toml</span><br><span class="line">hugo server</span><br></pre></td></tr></table></figure>



<p><strong>如下，是在Linux发行版 centos-stream-9 平台hugo的简易使用方法</strong>。</p>
<p>获取hugo：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://github.com/gohugoio/hugo/releases/download/v0.111.3/hugo_0.111.3_linux-amd64.tar.gz</span><br></pre></td></tr></table></figure>



<p>解压：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar -zxvf hugo_0.111.3_linux-amd64.tar.gz</span><br></pre></td></tr></table></figure>



<p>新建blog站点：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./hugo new site blog</span><br></pre></td></tr></table></figure>


<p>切换工作空间：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> blog/</span><br></pre></td></tr></table></figure>


<p>blog目录文件列表：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">archetypes  assets  config.toml  content  data  layouts  public  resources  static  themes</span><br></pre></td></tr></table></figure>



<p>git 初始化：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure>



<p>获取 hugo ananke主题：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git submodule add https://github.com/theNewDynamic/gohugo-theme-ananke themes/ananke</span><br></pre></td></tr></table></figure>



<p>运行服务：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./hugo server</span><br></pre></td></tr></table></figure>

<p>停止服务，使用快捷键：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ctrl + c</span><br></pre></td></tr></table></figure>



<p>测试，打开终端：看到终端有 html 代码展示，证明运行成功。 </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl http://127.0.0.1:1313</span><br></pre></td></tr></table></figure>

<p>此时还不具备远端访问，需要绑定远程 IP 地址。如果安装了防火墙管理工具，比如firewalld服务，需要手动放通端口1313：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=1313/tcp --permanent</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure>



<p>指定ip地址运行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/opt/workspace/blog-hugo-prod/hugo server --<span class="built_in">bind</span> 192.168.245.132</span><br></pre></td></tr></table></figure>
<p><strong>说明</strong>：&#x2F;opt&#x2F;workspace&#x2F;blog-hugo-prod&#x2F; 目录是解压后hugo脚本所在目录。</p>
<p>查看当前使用 hugo 版本：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@Centos9-Stream blog]<span class="comment"># /opt/workspace/blog-hugo-prod/hugo version</span></span><br><span class="line">hugo v0.111.3-5d4eb5154e1fed125ca8e9b5a0315c4180dab192 linux/amd64 BuildDate=2023-03-12T11:40:50Z VendorInfo=gohugoio</span><br></pre></td></tr></table></figure>



<p>复制已经制作完成的博客试验品到 &#x2F;content&#x2F;posts&#x2F; 目录下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> vim入门实战.md  /opt/workspace/blog-hugo-prod/blog/content/posts/</span><br></pre></td></tr></table></figure>

<p><strong>注意</strong>：规范格式，参考 hugo 文档给出的示例</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: <span class="string">&quot;My First Post&quot;</span></span><br><span class="line"><span class="built_in">date</span>: 2022-11-20T09:03:20-08:00</span><br><span class="line">draft: <span class="literal">true</span></span><br><span class="line">---</span><br><span class="line"><span class="comment">## Introduction</span></span><br><span class="line"></span><br><span class="line">This is **bold** text, and this is *emphasized* text.</span><br><span class="line"></span><br><span class="line">Visit the [Hugo](https://gohugo.io) website!</span><br></pre></td></tr></table></figure>

<p>hugo 配置文件 config.toml：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">baseURL = <span class="string">&#x27;http://example.org/&#x27;</span></span><br><span class="line">languageCode = <span class="string">&#x27;en-us&#x27;</span></span><br><span class="line">title = <span class="string">&#x27;My New Hugo Site&#x27;</span></span><br><span class="line">theme = <span class="string">&#x27;ananke&#x27;</span></span><br></pre></td></tr></table></figure>



<p>再次运行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/opt/workspace/blog-hugo-prod/hugo server --<span class="built_in">bind</span> 192.168.245.132</span><br></pre></td></tr></table></figure>



<p>访问示例：</p>
<p><span class="exturl" data-url="aHR0cDovLzE5Mi4xNjguMjQ1LjEzMjoxMzEzLw==">http://192.168.245.132:1313/<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="使用-hugo-theme-next-主题"><a href="#使用-hugo-theme-next-主题" class="headerlink" title="使用 hugo-theme-next 主题"></a>使用 hugo-theme-next 主题</h3><p>可能会遇到如下问题：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost blog]<span class="comment"># ./hugo server --bind 192.168.245.133</span></span><br><span class="line">Start building sites …</span><br><span class="line">hugo v0.111.3-5d4eb5154e1fed125ca8e9b5a0315c4180dab192 linux/amd64 BuildDate=2023-03-12T11:40:50Z VendorInfo=gohugoio</span><br><span class="line">WARN 2023/05/15 22:39:52 Hugo NexT 主题使用了 SCSS 框架，请到官方地址下载 Hugo Extended 版本：https://github.com/gohugoio/hugo/releases</span><br><span class="line">ERROR 2023/05/15 22:39:52 Because that use SCSS framework <span class="keyword">in</span> Hugo NexT, Please download Hugo extended version on offical site: https://github.com/gohugoio/hugo/releases</span><br><span class="line">Error: Error building site: TOCSS: failed to transform <span class="string">&quot;main.scss&quot;</span> (text/x-scss). Check your Hugo installation; you need the extended version to build SCSS/SASS with transpiler <span class="built_in">set</span> to <span class="string">&#x27;libsass&#x27;</span>.: this feature is not available <span class="keyword">in</span> your current Hugo version, see https://goo.gl/YMrWcn <span class="keyword">for</span> more information</span><br><span class="line">Built <span class="keyword">in</span> 47 ms</span><br></pre></td></tr></table></figure>

<p>文初介绍使用 hugo 版本是非扩展版本（Extended），提示我们下载：请到官方地址下载 Hugo Extended 版本：<br><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2dvaHVnb2lvL2h1Z28vcmVsZWFzZXM=">https://github.com/gohugoio/hugo/releases<i class="fa fa-external-link-alt"></i></span> </p>
<p>获取 Hugo Extended 版本：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://github.com/gohugoio/hugo/releases/download/v0.111.3/hugo_extended_0.111.3_linux-amd64.tar.gz</span><br></pre></td></tr></table></figure>

<p>解压 hugo_0.111.3_linux-amd64.tar.gz 到指定目录：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /opt/workspace/blog-hugo-prod/  <span class="comment"># 新建 hugo blog 工作空间</span></span><br><span class="line">tar -zxvf hugo_0.111.3_linux-amd64.tar.gz  --directory=/opt/workspace/blog-hugo-prod/ <span class="comment"># -C, --directory=DIR 指定解压目录</span></span><br></pre></td></tr></table></figure>

<p>再次执行，正常运行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./hugo server --<span class="built_in">bind</span> 192.168.245.133</span><br></pre></td></tr></table></figure>


<h3 id="hugo-在线初体验"><a href="#hugo-在线初体验" class="headerlink" title="hugo 在线初体验"></a>hugo 在线初体验</h3><p>个人搭建简单示例，已上传至cloudflare，可访问体验：</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLXdhbmdrLWh1Z28ucGFnZXMuZGV2Lw==">https://blog-wangk-hugo.pages.dev/<i class="fa fa-external-link-alt"></i></span></p>
<p>感兴趣的可以前往    <span class="exturl" data-url="aHR0cHM6Ly9kYXNoLmNsb3VkZmxhcmUuY29tLw==">https://dash.cloudflare.com/<i class="fa fa-external-link-alt"></i></span>    注册账号，然后选择 Pages，创建项目部署你的个人站点。</p>
<p><strong>个人搭建的实验品</strong>：</p>
<ul>
<li><p>hexo：<span class="exturl" data-url="aHR0cHM6Ly9jbndhbmdrLWdpdGh1Yi1pby5wYWdlcy5kZXYv">https://cnwangk-github-io.pages.dev/<i class="fa fa-external-link-alt"></i></span></p>
</li>
<li><p>jekyll：<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLXdhbmdrLnBhZ2VzLmRldi8=">https://blog-wangk.pages.dev/<i class="fa fa-external-link-alt"></i></span></p>
</li>
<li><p>hugo：<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLXdhbmdrLWh1Z28ucGFnZXMuZGV2Lw==">https://blog-wangk-hugo.pages.dev/<i class="fa fa-external-link-alt"></i></span></p>
</li>
</ul>
<p><strong>参考资料</strong>：</p>
<ul>
<li>hugo文档：<span class="exturl" data-url="aHR0cHM6Ly9nb2h1Z28uaW8vZ2V0dGluZy1zdGFydGVkL3F1aWNrLXN0YXJ0Lw==">https://gohugo.io/getting-started/quick-start/<i class="fa fa-external-link-alt"></i></span></li>
<li>hugo仓库：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2dvaHVnb2lvL2h1Z28=">https://github.com/gohugoio/hugo<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>—END—</p>
]]></content>
      <categories>
        <category>静态博客</category>
      </categories>
      <tags>
        <tag>hugo</tag>
      </tags>
  </entry>
  <entry>
    <title>nginx入门到实践</title>
    <url>/2022/01/15/nginx%E5%85%A5%E9%97%A8%E5%88%B0%E5%AE%9E%E8%B7%B5/</url>
    <content><![CDATA[<p>nginx1.21.6测试与使用；nginx下载与安装。nginx作为高性能web服务器配置详解，比较重要的一个参数epoll。nginx静态资源服务器；nginx配置反向代理；nginx配置负载均衡。测试nginx反向代理到Apache（httpd） 和Tomcat。</p>
<p>文末会提供一张nginx学习的思维导图。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/9d2c3cf04cf99372b64fbbc6aa029616.png"></p>
<h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><p>初次进入nginx官网，映入眼帘。给人的整体感觉就是简洁干净，一眼就能get到自己需要的资源。</p>
<p>nginx官网：<span class="exturl" data-url="aHR0cDovL25naW54Lm9yZy8=">http://nginx.org<i class="fa fa-external-link-alt"></i></span></p>
<p>nginx官方下载地址：<span class="exturl" data-url="aHR0cDovL25naW54Lm9yZy9lbi9kb3dubG9hZC5odG1s">http://nginx.org/en/download.html<i class="fa fa-external-link-alt"></i></span></p>
<p>在接下来的某些测试中，你可能看到使用的是root用户或者是nginx普通用户。使用root用户是为了方便演示，实际工作中一般你用的更多的是普通用户，一般只有管理员才有使用root用户的权限。</p>
<h2 id="一、nginx快速安装"><a href="#一、nginx快速安装" class="headerlink" title="一、nginx快速安装"></a>一、nginx快速安装</h2><p><strong>注意</strong>：nginx默认安装设置的sever是localhost，监听端口是80。</p>
<p>每一个代码块中都有详细注解进行解释，参考官方文档然后进行的翻译，并根据实际情况进行优化调整。</p>
<p>Windows版本的nginx官方文档地址：<span class="exturl" data-url="aHR0cDovL25naW54Lm9yZy9lbi9kb2NzL3dpbmRvd3MuaHRtbA==">http://nginx.org/en/docs/windows.html<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="1、Windows下安装nginx"><a href="#1、Windows下安装nginx" class="headerlink" title="1、Windows下安装nginx"></a>1、Windows下安装nginx</h3><p><strong>1.1、解压安装</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#以管理员身份运行CMD窗口，进入D盘</span></span><br><span class="line">d:</span><br><span class="line"><span class="comment">#新建work目录</span></span><br><span class="line"><span class="built_in">mkdir</span> work</span><br><span class="line"><span class="comment">#切换至work目录解压nginx</span></span><br><span class="line">unzip nginx-1.21.6.zip</span><br></pre></td></tr></table></figure>

<p><strong>1.2、启动nginx</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#进入nginx目录</span></span><br><span class="line"><span class="built_in">cd</span> work\nginx-1.21.6</span><br><span class="line"><span class="comment">#启动nginx服务</span></span><br><span class="line">start nginx</span><br></pre></td></tr></table></figure>

<p><strong>1.3、查看nginx服务</strong></p>
<p>nginx.conf文件中的参数：worker_processes 设置参数值为1，限制只能运行一个工作进程。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#查看nginx资源占用相关信息</span></span><br><span class="line">d:\work\nginx-1.21.6&gt;tasklist /fi <span class="string">&quot;imagename eq nginx.exe&quot;</span></span><br><span class="line"></span><br><span class="line">映像名称                       PID 会话名              会话<span class="comment">#       内存使用</span></span><br><span class="line">========================= ======== ================ =========== ============</span><br><span class="line">nginx.exe                     4108 Console                    6     11,232 K</span><br><span class="line">nginx.exe                     4144 Console                    6     11,552 K</span><br></pre></td></tr></table></figure>

<p><strong>1.4、配置日志以及默认首页</strong></p>
<p>在nginx解压目录中nginx-1.21.6\conf目录下打开nginx.conf配置文件，可以根据需求进行配置。此步骤下不做详细讲解，在接下来的配置说明进行详细讲解。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#配置日志与根目录首页</span></span><br><span class="line">access_log   logs/site.log;</span><br><span class="line">root         D:/web/html;</span><br></pre></td></tr></table></figure>

<p><strong>1.5、Windows下nginx命令管理</strong></p>
<p>nginx在Windows中的一些常用使用命令，在Linux中一样可以使用stop、quit、reload命令管理nginx服务。</p>
<ul>
<li>nginx -s stop：快速关闭服务；</li>
<li>nginx -s quit：优雅的关闭服务；</li>
<li>nginx -s reload：改变配置，启动一个新的工作进程配置，优雅地关闭旧的工作进程；</li>
<li>nginx -s reopen：重新打开日志文件；</li>
<li>nginx -t -c nginx.conf ：检测nginx语法配置。</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nginx -s stop   <span class="comment">#快速关闭服务</span></span><br><span class="line">nginx -s quit   <span class="comment">#优雅的关闭服务</span></span><br><span class="line">nginx -s reload <span class="comment">#改变配置，启动一个新的工作进程配置，优雅地关闭旧的工作进程</span></span><br><span class="line">nginx -s reopen <span class="comment">#重新打开日志文件</span></span><br><span class="line">nginx -t -c conf\nginx.conf <span class="comment">#检测nginx语法配置</span></span><br><span class="line">nginx: the configuration file D:\work\nginx-1.21.6/conf\nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file D:\work\nginx-1.21.6/conf\nginx.conf <span class="built_in">test</span> is successful</span><br></pre></td></tr></table></figure>

<h3 id="2、Linux下安装nginx"><a href="#2、Linux下安装nginx" class="headerlink" title="2、Linux下安装nginx"></a>2、Linux下安装nginx</h3><p><strong>仅供参考</strong>，应该以实际工作场景为准，关于Linux中权限知识可以自己进行测试。</p>
<p>支持的Linux发行版也很丰富，同样可以参考官方文档，下载Debian系列，Ubuntu系列，Redhat系列以及Centos系列等等。部分制作成了表格形式，便于参考。</p>
<table>
<thead>
<tr>
<th>nginx支持操作系统（列出部分）</th>
<th>版本</th>
<th>支持平台</th>
</tr>
</thead>
<tbody><tr>
<td>RHEL&#x2F;CentOS</td>
<td>7.4+</td>
<td>x86_64, ppc64le, aarch64&#x2F;arm64</td>
</tr>
<tr>
<td>RHEL&#x2F;CentOS</td>
<td>8.x</td>
<td>x86_64, aarch64&#x2F;arm64, s390x</td>
</tr>
<tr>
<td>Debian</td>
<td>10.x “buster”</td>
<td>x86_64, i386, aarch64&#x2F;arm64</td>
</tr>
<tr>
<td>Debian</td>
<td>11.x “bullseye”</td>
<td>x86_64, aarch64&#x2F;arm64</td>
</tr>
<tr>
<td>Ubuntu</td>
<td>18.04 “bionic”</td>
<td>x86_64, aarch64&#x2F;arm64</td>
</tr>
<tr>
<td>Ubuntu</td>
<td>18.04 “bionic”</td>
<td>x86_64, aarch64&#x2F;arm64, s390x</td>
</tr>
<tr>
<td>Ubuntu</td>
<td>21.10 “impish”</td>
<td>x86_64, aarch64&#x2F;arm64</td>
</tr>
</tbody></table>
<p>Linux下安装nginx，官网给出了便捷方式yum源、apt源等等：<span class="exturl" data-url="aHR0cDovL25naW54Lm9yZy9lbi9saW51eF9wYWNrYWdlcy5odG1s">http://nginx.org/en/linux_packages.html<i class="fa fa-external-link-alt"></i></span></p>
<p>个人演示使用下载的源码包。Redhat7系列以及Centos7系列安装nginx-1.21.6，目前最新版本。可以使用nginx官方提供的yum源进行安装，或者使用wget命令进行下载安装。个人给出使用tar包（源码包）安装方式，下载到本机然后上传至虚拟机搭建的Linux环境Centos7.5服务器上。</p>
<h4 id="2-1、安装依赖环境"><a href="#2-1、安装依赖环境" class="headerlink" title="2.1、安装依赖环境"></a>2.1、安装依赖环境</h4><p>安装需要的依赖环境，记住普通用户需要使用sudo提权，root用户则不需要。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># yum install -y gcc pcre pcre-devel openssl openssl-devel gd gd-devel zlib-devel yum-utils</span></span><br><span class="line">[nginx@localhost ~]$ sudo yum install -y gcc pcre pcre-devel openssl openssl-devel gd gd-devel zlib-devel yum-utils</span><br></pre></td></tr></table></figure>

<h4 id="2-2、解压安装nginx"><a href="#2-2、解压安装nginx" class="headerlink" title="2.2、解压安装nginx"></a>2.2、解压安装nginx</h4><p>配置可以参考nginx的官方文档，很详细。</p>
<p><span class="exturl" data-url="aHR0cDovL25naW54Lm9yZy9lbi9kb2NzL2NvbmZpZ3VyZS5odG1s">http://nginx.org/en/docs/configure.html<i class="fa fa-external-link-alt"></i></span></p>
<p>解压tar包，编译指定路径。不指定安装路径，默认安装到&#x2F;usr&#x2F;local&#x2F;nginx，源码包默认安装位置。配置–prefix参数，指定安装路径以及需要的模块(module)，使用make &amp;&amp; make install命令编译并安装。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#01、解压tar包</span></span><br><span class="line">tar -zxvf nginx-1.21.6.tar.gz</span><br><span class="line"><span class="comment">#02、编译指定路径，不指定一样默认安装到/usr/local,源码包默认安装位置</span></span><br><span class="line"><span class="built_in">cd</span> nginx-1.21.6/</span><br><span class="line"><span class="comment">#03、配置，--prefix指定安装路径以及需要的模块(module)</span></span><br><span class="line">./configure --prefix=/usr/local/nginx-t --with-http_stub_status_module --with-http_gzip_static_module --with-http_ssl_module</span><br><span class="line"><span class="comment">#04、编译并安装</span></span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>

<p><strong>查看nginx的版本</strong>：</p>
<ul>
<li>参数-v：nginx -v 命令查看nginx中间件的版本；</li>
<li>参数-V：nginx -V命令查看nginx版本以及系统使用GCC版本、OpenSSL版本和配置的–prefix参数。</li>
</ul>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/a8caf4c5c0ec2732bbcb58716476503b.png"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[nginx@localhost ~]$ sudo /usr/local/nginx/sbin/nginx -v</span><br><span class="line">nginx version: nginx/1.21.6</span><br><span class="line">[nginx@localhost ~]$ sudo /usr/local/nginx/sbin/nginx -V</span><br><span class="line">nginx version: nginx/1.21.6</span><br><span class="line">built by gcc 4.8.5 20150623 (Red Hat 4.8.5-44) (GCC) </span><br><span class="line">built with OpenSSL 1.0.2k-fips  26 Jan 2017</span><br><span class="line">TLS SNI support enabled</span><br><span class="line">configure arguments: --prefix=/usr/local/nginx --with-http_stub_status_module --with-http_gzip_static_module --with-http_ssl_module</span><br></pre></td></tr></table></figure>



<h4 id="2-3、管理nginx服务"><a href="#2-3、管理nginx服务" class="headerlink" title="2.3、管理nginx服务"></a>2.3、管理nginx服务</h4><p>安装nginx后的目录&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;，使用ls以及ll命令查看安装后的文件。然后以绝对路径方式启动nginx服务： sudo &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin&#x2F;nginx，在测试环境root用户下无需加sudo提权。新建用户，使用root用户身份权限新建。改变nginx安装目录所有者和所属组，赋予给nginx用户，此时登录nginx用户也可进行管理。</p>
<p>如何区分你使用的是超级管理用户root还是普通用户。</p>
<ul>
<li>#：带有#前缀符号则是超级管理员用户；</li>
<li>$：带有$前缀符号则是普通用户。</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#新建用户,使用root用户身份权限新建</span></span><br><span class="line">[root@localhost ~]<span class="comment"># useradd nginx #新建nginx用户 </span></span><br><span class="line">[root@localhost ~]<span class="comment"># passwd nginx  #修改密码</span></span><br><span class="line"><span class="comment">#仅供参考，应该以实际应用场景为准。</span></span><br><span class="line">[root@localhost ~]<span class="comment"># chown -R root:nginx /usr/local/nginx/</span></span><br><span class="line">[root@localhost nginx]<span class="comment"># ls /usr/local/nginx/</span></span><br><span class="line">client_body_temp    conf    fastcgi_temp    html    logs    </span><br><span class="line">proxy_temp  sbin    scgi_temp   uwsgi_temp</span><br><span class="line"><span class="comment">#安装nginx后的目录</span></span><br><span class="line">[root@localhost ~]<span class="comment"># ls /usr/local/nginx/</span></span><br><span class="line">conf  html  logs  sbin</span><br></pre></td></tr></table></figure>

<p><strong>授予普通用户nginx管理的权限</strong>。使用<code>visudo</code>或者<code>vim /etc/sudoers</code>，在文件末尾加上<code>nginx ALL=(ALL) /usr/local/nginx/sbin/nginx</code>。作用是给nginx用户使用nginx脚本命令的权限（使用sudo）。给用户的权限范围越精确，用户权限则越小。<strong>在你赋予权限的时候，理应思考是否合理</strong>。开个小玩笑，一不小心将服务器拱手让人了，哈哈。我经常在说的一句话，你能够将Linux的权限玩的明明白白，就已经领先很大一部分人。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># visudo</span></span><br><span class="line"><span class="comment"># vim /etc/sudoers</span></span><br><span class="line">nginx ALL=(ALL) /usr/local/nginx/sbin/nginx</span><br></pre></td></tr></table></figure>

<p><strong>启动nginx服务</strong>。root身份则无需提权，以绝对路径形式启动服务。普通用户，则需要使用sudo权限提权管理nginx服务。sudo的用法，可以使用man帮助命令查看。简单的提一下，使用命令visudo添加普通用户，或者编辑&#x2F;etc&#x2F;sudoers文件加入普通用户可执行的命令。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#root身份启动nginx服务</span></span><br><span class="line">[root@localhost ~]<span class="comment"># /usr/local/nginx/sbin/nginx </span></span><br><span class="line"><span class="comment">#普通用户身份启动nginx服务</span></span><br><span class="line">[nginx@localhost ~]$ sudo /usr/local/nginx/sbin/nginx </span><br></pre></td></tr></table></figure>

<p><strong>优雅的关闭nginx服务</strong>，实际上找的是nginx.pid文件中存储的pid号。可以通过cat查看&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;logs&#x2F;nginx.pid。在nginx.conf配置文件中去找到相应的设置，将#注释去掉：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pid        logs/nginx.pid;</span><br><span class="line">[root@localhost ~]<span class="comment"># cat /usr/local/nginx/logs/nginx.pid</span></span><br></pre></td></tr></table></figure>

<p><img data-src="https://img-blog.csdnimg.cn/img_convert/1596e54993fbc883b615248c776615e7.png"></p>
<p><strong>优雅的关闭nginx服务，nginx -s quit</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># /usr/local/nginx/sbin/nginx -s quit</span></span><br><span class="line">[nginx@localhost ~]$ sudo /usr/local/nginx/sbin/nginx -s quit</span><br></pre></td></tr></table></figure>

<p><strong>重载nginx服务，nginx -s reload</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># /usr/local/nginx/sbin/nginx -s reload</span></span><br><span class="line">[nginx@localhost ~]$ sudo /usr/local/nginx/sbin/nginx -s reload</span><br></pre></td></tr></table></figure>



<h4 id="2-4、查看nginx进程"><a href="#2-4、查看nginx进程" class="headerlink" title="2.4、查看nginx进程"></a>2.4、查看nginx进程</h4><p>可以使用<code>ps</code>命令配合<code>grep</code>搜素命令查看nginx服务进程状态，然后查看启动后的nginx目录多出了<strong>client_body_temp</strong>、<strong>fastcgi_temp</strong>、<strong>proxy_temp</strong>、<strong>scgi_temp</strong>、<strong>uwsgi_temp</strong>模块。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[nginx@localhost ~]$ ps -aux | grep nginx</span><br><span class="line">root       7355  0.0  0.0  45992  1136 ?        Ss    nginx: master process /usr/local/nginx/sbin/nginx</span><br><span class="line">nobody     7356  0.0  0.1  48528  1988 ?        S     nginx: worker process</span><br><span class="line">root       7368  0.0  0.0 112720   972 pts/1    S+    grep --color=auto nginx</span><br><span class="line">[nginx@localhost ~]$ <span class="built_in">ls</span> /usr/local/nginx/</span><br><span class="line">client_body_temp  conf  fastcgi_temp  html  logs  proxy_temp  sbin  scgi_temp  uwsgi_temp</span><br></pre></td></tr></table></figure>



<h4 id="2-5、验证nginx服务"><a href="#2-5、验证nginx服务" class="headerlink" title="2.5、验证nginx服务"></a>2.5、验证nginx服务</h4><p>使用netstat命令查看监听到的nginx服务，默认使用的是80端口，一般80是不对外开放的。为了演示，使用firewalld命令开启80端口，然后使用<code>firewall-cmd --reload</code>命令重载防火墙。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># netstat -tlunp | grep nginx</span></span><br><span class="line">tcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN      7355/nginx: master </span><br><span class="line">[root@localhost ~]<span class="comment"># firewall-cmd --zone=public --add-port=80/tcp --permanent </span></span><br><span class="line">success</span><br><span class="line">[root@localhost ~]<span class="comment"># firewall-cmd --zone=public --add-port=8081/tcp --permanent </span></span><br><span class="line">success</span><br><span class="line">[root@localhost ~]<span class="comment"># firewall-cmd --reload </span></span><br><span class="line">success</span><br></pre></td></tr></table></figure>

<p>使用Chrome浏览器登录nginx，比如我个人使用虚拟环境搭建的，访问即可看到nginx服务启动完毕。即可看到，欢迎访问nginx服务。这个index.html页面默认存放在nginx的安装目录中html目录下。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://192.168.245.147/</span><br></pre></td></tr></table></figure>

<p><img data-src="https://img-blog.csdnimg.cn/img_convert/e46d734c6b82b415c0118dd065355170.png"></p>
<p><strong>访问出现错误页面</strong>则为50x.html静态页面的内容，<strong>直接在url后拼接访问50x.html文件即可进行测试</strong>。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://192.168.245.147/50x.html</span><br></pre></td></tr></table></figure>

<p><img data-src="https://img-blog.csdnimg.cn/img_convert/3078706d6856c864148f513cc47e5533.png"></p>
<p>至此，在Windows与Linux服务器上安装nginx服务以及服务的管理介绍完毕。在Linux版本中，我介绍的是比较详细的，这也是为了照顾初学者。</p>
<h2 id="二、nginx做静态资源web服务器"><a href="#二、nginx做静态资源web服务器" class="headerlink" title="二、nginx做静态资源web服务器"></a>二、nginx做静态资源web服务器</h2><h3 id="1、nginx中常见的错误码"><a href="#1、nginx中常见的错误码" class="headerlink" title="1、nginx中常见的错误码"></a>1、nginx中常见的错误码</h3><table>
<thead>
<tr>
<th>http消息</th>
<th>状态码</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>已移动</td>
<td>http 301</td>
<td>请求的数据具有新的位置，并且永久更改。</td>
</tr>
<tr>
<td>已找到</td>
<td>http 302</td>
<td>请求的数据临时具有不同URI。</td>
</tr>
<tr>
<td>请参阅其它</td>
<td>http 303</td>
<td>可在另一URI下找到对请求的响应，并且使用get请求检索。</td>
</tr>
<tr>
<td>未修改</td>
<td>http 304</td>
<td>未按照预期修改文档。</td>
</tr>
<tr>
<td>使用代理</td>
<td>http 305</td>
<td>必须通过位置字段中提供的代理来访问请求的资源。</td>
</tr>
<tr>
<td>未使用</td>
<td>http 306</td>
<td>不再使用，但保留此代码以便将来使用。</td>
</tr>
<tr>
<td>无法找到网页</td>
<td>http 400</td>
<td>可以连接到web服务器，但由于web地址（URL）的问题无法找到网页。</td>
</tr>
<tr>
<td>网站拒绝显示此网页</td>
<td>http 403</td>
<td>可以连接到网站，但Internet Explorer没有访问网页文件的权限。</td>
</tr>
<tr>
<td>无法找到网页</td>
<td>http 404</td>
<td>可以连接到网站，但找不到网页。可能是网页暂不可用或者已被删除。</td>
</tr>
<tr>
<td>网站无法显示此网页</td>
<td>http 405</td>
<td>可以连接到网站，但网页内容无法下载到用户的计算机。可能是网页编码格式问题。</td>
</tr>
<tr>
<td>无法读取此网页格式</td>
<td>http 406</td>
<td>能从网站接收信息，但Internet Explorer无法识别格式，不能正确地显示消息。</td>
</tr>
<tr>
<td>网站忙，无法显示此网页</td>
<td>http 408或409</td>
<td>服务器显示网页时间过长，或对同一网页请求过多。</td>
</tr>
<tr>
<td>网页不复存在</td>
<td>http 410</td>
<td>可以连接到网站，但找不到网页。此错误为永久性的，而且由网站管理员打开。</td>
</tr>
<tr>
<td>网站无法显示该页面</td>
<td>http 500</td>
<td>正在访问的网站出现服务器问题，阻止此网页显示。正在维护或者交互程序出错。</td>
</tr>
<tr>
<td>未执行</td>
<td>http 501</td>
<td>没有将正在访问的网站设置为显示浏览器所请求的内容。</td>
</tr>
<tr>
<td>不支持的版本</td>
<td>http 505</td>
<td>该网站不支持浏览器用于请求网页的http协议。</td>
</tr>
</tbody></table>
<h3 id="2、hexo-nginx静态资源服务器"><a href="#2、hexo-nginx静态资源服务器" class="headerlink" title="2、hexo+nginx静态资源服务器"></a>2、hexo+nginx静态资源服务器</h3><p><strong>2.1、hexo的使用</strong></p>
<p>Windows下首先<span class="exturl" data-url="aHR0cHM6Ly9ub2RlanMub3JnL2VuLw==">安装node环境<i class="fa fa-external-link-alt"></i></span>，然后使用npm再安装hexo模块。这里只介绍Windows下安装hexo环境：</p>
<ul>
<li>01、安装node环境；</li>
<li>02、在node环境下安装hexo，打开cmd命令窗口执行：<code>npm install -g hexo-cli</code></li>
<li>03、继续在cmd窗口命令安装：<code>npm install hexo</code></li>
</ul>
<p>具体其它平台安装hexo可以参考官网中文文档：<span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL3poLWNuL2RvY3Mv">https://hexo.io/zh-cn/docs/<i class="fa fa-external-link-alt"></i></span></p>
<p>在node环境下安装hexo后生成的blog文件目录：</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/853c15888f8692c4aea143b3de51464c.png"></p>
<p><strong>使用hexo命令</strong>，hexo new命令生成文件，hexo server命令启动服务，通过<span class="exturl" data-url="aHR0cDovL2xvY2FsaG9zdDo0MDAw6K6/6ZeuaGV4b+OAgg==">http://localhost:4000访问hexo。<i class="fa fa-external-link-alt"></i></span></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">D:\work\createSpace\hexo\blog&gt;hexo new <span class="string">&quot;你要生成的md文件名&quot;</span></span><br><span class="line">hexo generate <span class="comment">#生成静态文件</span></span><br><span class="line">hexo server <span class="comment">#启动服务</span></span><br></pre></td></tr></table></figure>

<p><img data-src="https://img-blog.csdnimg.cn/img_convert/ad06dc8a1d969917bbe7017885505a34.png"></p>
<p><strong>2.2、在nginx中访问</strong></p>
<p>将hexo生成的静态html文件上传到虚拟环境中nginx服务器的html目录下，默认的设置的根目录和和首页配置不变。在虚拟机搭建的nginx静态资源服务器，并且使用了反向代理，代理了默认的80端口开启的nginx服务：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://192.168.245.147:8081/archives/2022/02/</span><br></pre></td></tr></table></figure>

<p><img data-src="https://img-blog.csdnimg.cn/img_convert/614735f3262214f8d5d136461fbbafcd.png"></p>
<p>如果想看具体效果可以访问我在github上搭建的测试环境：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">https://cnwangk.github.io/archives/2022/02/</span><br></pre></td></tr></table></figure>

<p>你可以使用hexo、jekyI以及hugo去生成静态网页，然后部署到nginx服务器上。如果买了云服务器，可以利用起来。再入手一个域名，申请蓝色的幕布，然后进行备案使用https解析，nginx同样也是支持ssl（解析https协议）的。</p>
<p>我同时开启了两个nginx服务，使用其中一个反向代理另一个nginx服务。配置文件如下设置，<strong>反向代理使用到关键字为proxy_pass</strong>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#在http模块中配置</span></span><br><span class="line">http&#123;</span><br><span class="line">    upstream <span class="built_in">test</span> &#123;</span><br><span class="line">        server 192.168.245.147;</span><br><span class="line">    &#125;</span><br><span class="line">    server &#123;</span><br><span class="line">            location / &#123;</span><br><span class="line">                proxy_pass http://test;</span><br><span class="line">                root   html;</span><br><span class="line">                index  index.html index.htm;</span><br><span class="line">            &#125;</span><br><span class="line">     &#125;</span><br><span class="line">&#125;   </span><br></pre></td></tr></table></figure>



<p><strong>查看nginx进程</strong>，发现有两个不同路径的进程，分别是nginx文件和nginx-t文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[nginx@localhost nginx-1.21.6]$ ps -aux | grep nginx</span><br><span class="line">root      15241  0.0  0.0  46004  1132 ?        Ss    nginx: master process </span><br><span class="line">/usr/local/nginx-t/sbin/nginx</span><br><span class="line">nobody    15242  0.0  0.1  48528  2488 ?        S     nginx: worker process</span><br><span class="line">root      15274  0.0  0.0  45992  1136 ?        Ss    nginx: master process /usr/local/nginx/sbin/nginx</span><br><span class="line">nobody    15275  0.0  0.1  48532  2240 ?        S     nginx: worker process</span><br><span class="line">root      15302  0.0  0.0 112724   968 pts/2    S+    grep --color=auto nginx</span><br></pre></td></tr></table></figure>

<p>进行测试演示。监听的端口，Redhat7系列使用firewall-cmd命令启用了80和8081端口。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[nginx@localhost nginx-1.21.6]$ netstat -tlunp | grep nginx</span><br><span class="line">tcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN      15274/nginx: master </span><br><span class="line">tcp        0      0 0.0.0.0:8081            0.0.0.0:*               LISTEN      15241/nginx: master </span><br></pre></td></tr></table></figure>

<h2 id="三、nginx代理服务"><a href="#三、nginx代理服务" class="headerlink" title="三、nginx代理服务"></a>三、nginx代理服务</h2><p>谈到代理，能联想到的有生活中的代理商，还有平时想翻山越海其实也是利用代理服务。国内某大厂原创game虽然火不久，但代理出了名，估计大家也猜出来了。在我们的nginx中间件中一样可以实现正向代理和反向代理，反向代理恰恰是nginx服务的重要功能之一。通过图形化可以更直观的理解代理。</p>
<p><strong>图1-1</strong>：<strong>正向代理</strong></p>
<p>nginx服务配置正向代理的3个指令：</p>
<ul>
<li>resolver：用于指定DNS服务器的IP地址。</li>
<li>resolver_timeout：用于设置DNS服务器域名解析超时时间。</li>
<li>proxy_pass：用于设置代理协议，同时也是配置反向代理的指令。</li>
</ul>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/81a3414efad61c1839d775dfdf284a63.png"></p>
<p><strong>图1-2</strong>：<strong>反向代理</strong></p>
<ul>
<li>proxy_pass：配置反向代理的主要参数，注意指明传输协议。</li>
<li>proxy_hide_header：用于隐藏一些头域信息。</li>
<li>proxy_pass_header：用于处理发送响应报文时接收一些date、server、x-accel头域信息。</li>
<li>proxy_set_header：用于更改nginx服务器接收到客户端请求的请求头信息。</li>
</ul>
<p>关于反向代理指令就介绍这几个，更多的可以参考ngx_http_proxy_module，<span class="exturl" data-url="aHR0cDovL25naW54Lm9yZy9lbi9kb2NzL2h0dHAvbmd4X2h0dHBfcHJveHlfbW9kdWxlLmh0bWw=">nginx官网proxy模块<i class="fa fa-external-link-alt"></i></span>。我也列出我在工作中实际应用到配置：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">proxy_pass_header User-Agent;</span><br><span class="line">proxy_set_header Host <span class="variable">$http_host</span>;</span><br><span class="line">proxy_next_upstream error <span class="built_in">timeout</span> invalid_header http_500 http_502 http_503;</span><br><span class="line">proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">proxy_set_header X-Forwarded-Proto https;</span><br></pre></td></tr></table></figure>

<p><img data-src="https://img-blog.csdnimg.cn/img_convert/9b22afbe448a79c6aa98e96f4221009b.png"></p>
<p><strong>代理区别</strong>：形式上服务的对象不一样。</p>
<ul>
<li>正向代理代理的对象是客户端，<strong>为客户端服务</strong>；</li>
<li>反向代理代理的对象是服务端，<strong>为服务端服务</strong>。</li>
</ul>
<p>为了演示进行测试，开启了<strong>nginx</strong>服务、<strong>httpd</strong>服务以及<strong>Tomcat</strong>服务。</p>
<p>在使用nginx代理服时，看看nginx支持哪些代理协议，如图1-3：</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/4564580c02f6614895870be8132f7a42.png"></p>
<p><strong>主要演示工作中一些场景</strong>：</p>
<ul>
<li>nginx代理到nginx；</li>
<li>nginx代理到Apache；</li>
<li>nginx代理到Tomcat；</li>
</ul>
<h3 id="1、nginx目录结构简介"><a href="#1、nginx目录结构简介" class="headerlink" title="1、nginx目录结构简介"></a>1、nginx目录结构简介</h3><p><strong>nginx目录作用</strong>：</p>
<ul>
<li>conf目录：主要存放nginx的配置文件，主要的控制文件。</li>
<li>html目录：存放静态资源目录。</li>
<li>logs目录：存放nginx生成的日志文件（包含错误日志）以及nginx.pid文件存放nginx分进程pid号。</li>
<li>sbin目录：nginx服务脚本，需要使用root管理员身份管理服务，或者使用sudo提权。</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[nginx@localhost ~]$ <span class="built_in">ls</span> /usr/local/nginx</span><br><span class="line">conf    html    logs    sbin</span><br></pre></td></tr></table></figure>

<h3 id="2、ngin-conf文件的介绍"><a href="#2、ngin-conf文件的介绍" class="headerlink" title="2、ngin.conf文件的介绍"></a>2、ngin.conf文件的介绍</h3><p>初学者在配置nginx.conf文件中的参数时，往往会遇到语法错误，可以<strong>使用nginx提供命令进行检测语法配置</strong>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[nginx@localhost ~]$ sudo /usr/local/nginx/sbin/nginx -t</span><br><span class="line">[nginx@localhost ~]$ sudo /usr/local/nginx/sbin/nginx -t -c /usr/local/nginx/conf/nginx.conf</span><br></pre></td></tr></table></figure>

<p>语法配置正确，则会有以下提示：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nginx: the configuration file /usr/local/nginx/conf/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /usr/local/nginx/conf/nginx.conf <span class="built_in">test</span> is successful</span><br></pre></td></tr></table></figure>

<p><strong>2.1、用户与进程配置区</strong></p>
<ul>
<li>user参数：用来配置用户以及用户组，如果配置为nobody代表不限制用户。</li>
<li>worker_processes：worker_processes参数配置工作进程。可以根据CPU核心数配置，比如4核配置4个工作进程，提高并发。</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#user  nobody;</span></span><br><span class="line">worker_processes  1;</span><br></pre></td></tr></table></figure>

<p><strong>2.2、日志与pid配置区</strong></p>
<ul>
<li>error_log：配置错误日志；</li>
<li>pid：配置nginx存储的pid号，临时的，服务关闭就消失了。可以根据pid号去杀死进程。</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#配置日志区</span></span><br><span class="line">error_log  logs/error.log;</span><br><span class="line">error_log  logs/error.log  notice;</span><br><span class="line">error_log  logs/error.log  info;</span><br><span class="line"><span class="comment">#pid存储位置，可以根据pid号去杀死进程</span></span><br><span class="line">pid        logs/nginx.pid;</span><br></pre></td></tr></table></figure>

<p><strong>2.3、events配置区</strong></p>
<p>events事件配置区，配置全局的。worker_connections参数默认配置的1024，可以根据系统去优化设置最大的工作连接数。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#配置连接数</span></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>2.4、http模块</strong></p>
<ul>
<li>包含server模块，可以配置多个。</li>
<li>包含location模块，同样可以配置多个。</li>
<li>负载均衡upstream同样配置在http模块中，server模块之外。</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http &#123;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line">    log_format  main  <span class="string">&#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span></span><br><span class="line">                      <span class="string">&#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span></span><br><span class="line">                      <span class="string">&#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;</span>;</span><br><span class="line">    access_log  logs/access.log  main;</span><br><span class="line">    sendfile        on;</span><br><span class="line">    <span class="comment">#tcp_nopush     on;</span></span><br><span class="line">    <span class="comment">#keepalive_timeout  0;</span></span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line">    <span class="comment">#配置负载均衡    </span></span><br><span class="line">    upstream tomcat &#123;</span><br><span class="line">        <span class="comment">#可以是域名,或者是ip加端口</span></span><br><span class="line">        server www.example.com;</span><br><span class="line">        server 192.168.245.147:8888;</span><br><span class="line">    &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>

<p><strong>2.5、server模块</strong></p>
<ul>
<li>listen：配置nginx服务监听端口，默认为80端口，可以根据实际需求更改；</li>
<li>server_name：配置服务名，可以是IP地址也可以是域名；</li>
<li>charset：配置字符集；</li>
<li>access_log：访问服务接收的日志所在主要目录；</li>
<li>location：包含location设置，主要有主页以及代理请求头等等参数配置。</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">       listen 8088;</span><br><span class="line">       <span class="comment">#listen       8443 ssl;</span></span><br><span class="line">       <span class="comment">#server_name  192.168.0.233;</span></span><br><span class="line">       server_name 127.0.0.1;</span><br><span class="line">       <span class="comment">#charset koi8-r;</span></span><br><span class="line">       access_log  logs/host.access.log  main;</span><br><span class="line">       <span class="comment">#读取根目录    </span></span><br><span class="line">       location / &#123;</span><br><span class="line">          proxy_pass http://test;</span><br><span class="line">          <span class="comment">#设置读取的目录 </span></span><br><span class="line">          root   html;</span><br><span class="line">          index  index.html index.htm;   </span><br><span class="line">       &#125;</span><br><span class="line">       <span class="comment">#error_page  404              /404.html;</span></span><br><span class="line">       <span class="comment"># redirect server error pages to the static page /50x.html</span></span><br><span class="line">       error_page   500 502 503 504  /50x.html;</span><br><span class="line">       location = /50x.html &#123;</span><br><span class="line">           root   html;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure>

<p><strong>2.6、location配置区</strong>，初次安装默认只有root配置根目录和index配置首页。proxy_pass是配置代理，我后面加的。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#读取根目录    </span></span><br><span class="line">location / &#123;</span><br><span class="line">      <span class="comment">#配置代理</span></span><br><span class="line">      proxy_pass http://192.168.245.233;</span><br><span class="line">      <span class="comment">#设置读取的目录 </span></span><br><span class="line">      root   html;</span><br><span class="line">      index  index.html index.htm;   </span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>

<p><strong>2.7、配置多个conf文件</strong></p>
<p><strong>在复杂的场景下可能会配置多个conf文件</strong>，使用include关键字包含其它的配置文件。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#配置多个conf文件包含进来</span></span><br><span class="line">include  conf/*.conf;</span><br></pre></td></tr></table></figure>

<h3 id="3、nginx反向代理配置"><a href="#3、nginx反向代理配置" class="headerlink" title="3、nginx反向代理配置"></a>3、nginx反向代理配置</h3><p>反向代理恰恰是nginx服务的重要功能之一，着重演示一下反向代理过程。其实配置参数很简单，使用proxy_pass即可配置反向代理，http:&#x2F;&#x2F;后面配置的可以是ip也可以是域名。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http&#123;</span><br><span class="line">    server&#123;</span><br><span class="line">        location / &#123;</span><br><span class="line">            proxy_pass http://192.168.245.233:88;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>3.1、反向代理到Apache</strong></p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/4ae05d5854b71d935561907c085bd9db.png"></p>
<p>3.1.1、在Redhat7系列直接使用yum命令安装Apache，通过rpm命令<strong>验证是否安装httpd服务</strong>。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[nginx@localhost ~]$ rpm -qa | grep httpd</span><br><span class="line">httpd-2.4.6-97.el7.centos.4.x86_64</span><br><span class="line">httpd-tools-2.4.6-97.el7.centos.4.x86_64</span><br></pre></td></tr></table></figure>

<p><strong>3.1.2、安装Apache服务</strong></p>
<p>Redhat系列使用yum命令安装httpd。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo yum -y install httpd</span><br><span class="line"><span class="comment"># yum -y install httpd</span></span><br></pre></td></tr></table></figure>

<p>httpd安装后的目录，主要配置文件存放在conf目录下：</p>
<ul>
<li>conf：httpd.conf配置文件目录；</li>
<li>conf.d：其它配置文件，比如用户存储目录配置；</li>
<li>logs：接收的日志文件access_log 、error_log；</li>
<li>modules：代理、请求以及重写规则等模块。</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[nginx@localhost ~]$ <span class="built_in">ls</span> /etc/httpd/</span><br><span class="line">conf  conf.d  conf.modules.d  logs  modules  run</span><br><span class="line">[nginx@localhost ~]$ <span class="built_in">ls</span> /etc/httpd/conf</span><br><span class="line">httpd.conf  magic</span><br></pre></td></tr></table></figure>

<p>使用yum命令安装后的命令脚本，使用whereis命令查看httpd，默认路径在&#x2F;usr&#x2F;sbin&#x2F;httpd。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[nginx@localhost ~]$ whereis httpd</span><br><span class="line">httpd: /usr/sbin/httpd /usr/lib64/httpd /etc/httpd /usr/share/httpd /usr/share/man/man8/httpd.8.gz</span><br><span class="line">[nginx@localhost ~]$ ll /usr/sbin/httpd</span><br><span class="line">-rwxr-xr-x. 1 root root 523640  /usr/sbin/httpd</span><br></pre></td></tr></table></figure>

<p>3.1.3、修改Apache服务监听的端口，修改Listen后面的参数为81端口进行测试。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/9503180ded1c2abec9856fa5b37ce089.png"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim /etc/httpd/conf/httpd.conf</span></span><br><span class="line">Listen 81</span><br></pre></td></tr></table></figure>

<p><strong>访问的html页面</strong>在<code>/usr/share/httpd/noindex</code>目录下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[nginx@localhost ~]$ <span class="built_in">ls</span> /usr/share/httpd/noindex/</span><br><span class="line">css  images  index.html</span><br></pre></td></tr></table></figure>

<p><strong>3.1.4、反向代理Apache</strong></p>
<p>配置负载均衡，<strong>设置了参数weight权重</strong>。在我们安装的nginx服务中进行配置代理，测试使用的nginx服务设置监听8081端口。并且给反向代理的Apache服务配置的权重为2，执行3次有两次会显示Apache服务页面。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http&#123;</span><br><span class="line">        upstream <span class="built_in">test</span> &#123;</span><br><span class="line">            server 192.168.245.147:81 weight=2;</span><br><span class="line">            server 192.168.245.147;</span><br><span class="line">    &#125;</span><br><span class="line">        server&#123;</span><br><span class="line">          listen       8081;</span><br><span class="line">          server_name  localhost;</span><br><span class="line">          location / &#123;</span><br><span class="line">                proxy_pass http://test;</span><br><span class="line">                root   html;</span><br><span class="line">                index  index.html index.htm;</span><br><span class="line">            &#125;</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在Chrome浏览器访问。使用upstream配置了负载均衡，访问3次有两次定位Apache页面，一次定位hexo搭建静态页面：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://192.168.245.147:8081</span><br></pre></td></tr></table></figure>

<p><img data-src="https://img-blog.csdnimg.cn/img_convert/aea0e04ccd19bc35d5833b7abb86d8d1.png"></p>
<p><strong>3.2、反向代理到Tomcat</strong></p>
<p>开启Tomcat服务默认使用端口8080，可以根据实际情况修改。<strong>加入到防火墙规则</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost conf]<span class="comment"># firewall-cmd --zone=public --add-port=8080/tcp --permanent </span></span><br><span class="line">success</span><br></pre></td></tr></table></figure>

<p><strong>重载防火墙</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost conf]<span class="comment"># firewall-cmd --reload </span></span><br><span class="line">success</span><br></pre></td></tr></table></figure>

<p>原始启动tomcat服务默认server.xml配置的是8080端口，我进行了反向代理使用8081访问。<strong>启动tomcat服务</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost conf]<span class="comment"># /usr/local/apache-tomcat-8.5.49/bin/catalina.sh run &amp;</span></span><br></pre></td></tr></table></figure>

<p>加入tomcat服务的ip地址到负载均衡。设置访问Apache服务的权重weight&#x3D;2，访问两个站点3次，其中两次会出现Apache页面，第三次则会出现Apache Tomcat页面。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">upstream <span class="built_in">test</span> &#123;</span><br><span class="line">      server 192.168.245.147:81 weight=2;</span><br><span class="line">      <span class="comment">#server 192.168.245.147;</span></span><br><span class="line">      server 192.168.245.147:8080;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<p><img data-src="https://img-blog.csdnimg.cn/img_convert/b4f8bc08f25ac29281b525f568bd76eb.png"></p>
<p>实际上你可以在nginx上再套一层nginx，nginx反向代理nginx，只是没有代理其它中间件来的那么直观。</p>
<h2 id="四、nginx负载均衡"><a href="#四、nginx负载均衡" class="headerlink" title="四、nginx负载均衡"></a>四、nginx负载均衡</h2><p>其实我在演示上面的反向代理过程中，就已经用到了负载均衡。在测试的过程中，<strong>请加入需要的防火墙规则</strong>，避免造成不必要的麻烦。</p>
<p>tips：server后面可以接ip，也可以接域名。</p>
<h3 id="1、负载均衡的几种模式"><a href="#1、负载均衡的几种模式" class="headerlink" title="1、负载均衡的几种模式"></a>1、负载均衡的几种模式</h3><p><strong>1.1、负载均衡默认配置</strong></p>
<p>默认的负载均衡设置，<strong>采用轮询的形式</strong>，权重是均衡的。如果想测试建议配置多个nginx监听服务，然后进行测试。非要问个为什么，那就是<strong>nginx很轻很小</strong>，<strong>但是功能很强大</strong>！</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#默认负载均衡（轮询）</span></span><br><span class="line">upstream proxy_demo1&#123;</span><br><span class="line">    server 192.168.245.233:8086;</span><br><span class="line">    server 192.168.245.233:8087;</span><br><span class="line">    server 192.168.245.233:8088;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>1.2、负载均衡加权轮询</strong></p>
<p>做5次刷新访问的页面测试，其中有3次会定位到设置权重为3的8087端口对应的ip上，剩余两次分别定位到8086和8088上。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#加权轮询负载均衡</span></span><br><span class="line">upstream proxy_demo2&#123;</span><br><span class="line">    server 192.168.245.233:8086;</span><br><span class="line">    server 192.168.245.233:8087 weight=3;</span><br><span class="line">    server 192.168.245.233:8088;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>1.3、负载均衡基于ip_hash</strong></p>
<p>ip_hash配置很简单：<span class="exturl" data-url="aHR0cDovL25naW54Lm9yZy9lbi9kb2NzL2h0dHAvbmd4X2h0dHBfdXBzdHJlYW1fbW9kdWxlLmh0bWwjaXBfaGFzaA==">http://nginx.org/en/docs/http/ngx_http_upstream_module.html#ip_hash<i class="fa fa-external-link-alt"></i></span></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#配置语法</span></span><br><span class="line">Syntax: ip_hash;    Default:    —       Context:    upstream</span><br><span class="line">upstream backend &#123;</span><br><span class="line">    ip_hash;<span class="comment">#加入参数即可</span></span><br><span class="line">    server backend1.example.com;</span><br><span class="line">    server backend2.example.com;</span><br><span class="line">    server backend3.example.com down;</span><br><span class="line">    server backend4.example.com;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><span class="exturl" data-url="aHR0cDovL25naW54Lm9yZy9lbi9kb2NzL2h0dHAvbmd4X2h0dHBfdXBzdHJlYW1fbW9kdWxlLmh0bWwjaXBfaGFzaA==">ip_hash策略<i class="fa fa-external-link-alt"></i></span>：是将前端的访问IP进行hash操作，然后根据hash结果将请求分配给不同的后端节点。可以将这种策略看成一种特殊的轮询策略，每个前端访问IP会固定访问一个后端节点。<strong>优势</strong>：避免考虑前端用户的session在后端多个节点上共享的问题。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#基于ip的hash</span></span><br><span class="line">upstream proxy_demo3&#123;</span><br><span class="line">    ip_hash;</span><br><span class="line">    server 192.168.245.233:8086;</span><br><span class="line">    server 192.168.245.233:8087;</span><br><span class="line">    server 192.168.245.233:8088;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>1.4、负载均衡基于url的hash</strong></p>
<p>url_hash策略和ip_hash类似，属于第三方扩展模块。不同点在于ip_hash策略是对前端访问IP进行hash操作；url_hash策略是对前端请求的url进行了hash操作。<strong>url_hash优势</strong>：如果后端有缓存服务器，他能够高缓存效率，同时解决session的问题。缺点是后端节点出现异常，不能自动排除此节点。说到web缓存，相信有不少web后端开发者对Squid服务器有所了解，<strong>经典组合方式nginx缓存功能配合Squid服务</strong>。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#基于url的hash</span></span><br><span class="line">upstream proxy_demo4&#123;</span><br><span class="line">    <span class="comment">#url_hash;</span></span><br><span class="line">    <span class="built_in">hash</span> <span class="variable">$request_uri</span>;</span><br><span class="line">    server 192.168.245.233:8086;</span><br><span class="line">    server 192.168.245.233:8087;</span><br><span class="line">    server 192.168.245.233:8088;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2、nginx优化"><a href="#2、nginx优化" class="headerlink" title="2、nginx优化"></a>2、nginx优化</h3><p>nginx的高级配置，针对内核、cpu、网络连接以及事件驱动模型进行配置的思考：</p>
<ul>
<li>ipv4内核7个参数；</li>
<li>cpu配置优化；</li>
<li>网络连接配置4个相关指令；</li>
<li>事件驱动模型8个指令。</li>
</ul>
<h3 id="3、nginx其它应用场景"><a href="#3、nginx其它应用场景" class="headerlink" title="3、nginx其它应用场景"></a>3、nginx其它应用场景</h3><p>nginx做缓存服务器</p>
<ul>
<li>nginx服务器基于proxy store的缓存机制；</li>
<li>nginx服务器基于memcached的缓存机制；</li>
<li>nginx服务器基于proxy cache的缓存机制。</li>
<li>nginx与squid服务器组合配置。</li>
</ul>
<p>感兴趣的可以对nginx的Rewrite功能、gzip模块；时间管理、内存管理以及工作进程进行深度学习。</p>
<p>文末提供一张nginx思维导图，这个链接可以直接访问，就不以大图形式展示了：</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRlZS5jb20vZHl3YW5nay9pbWcvcmF3L21hc3Rlci9pbWFnZXMvbmdpbnglRTUlODUlQTUlRTklOTclQTglRTUlODglQjAlRTUlQUUlOUUlRTglQjclQjUwMS5wbmc=">https://gitee.com/dywangk/img/raw/master/images/nginx%E5%85%A5%E9%97%A8%E5%88%B0%E5%AE%9E%E8%B7%B501.png<i class="fa fa-external-link-alt"></i></span></p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>以上就是本次nginx安装与配置的全部内容，希望能对你的工作与学习有所帮助。感觉写的好，就拿出你的一键三连。在公众号上更新的可能要快一点，公众号目前还在完善中。<strong>能看到这里的，都是帅哥靓妹</strong>。如果感觉总结的不到位，也希望能留下您宝贵的意见，我会在文章中进行调整优化。<br><img data-src="https://img-blog.csdnimg.cn/img_convert/6fff4cbd50a880b32af0315abc909e04.png"></p>
<p>原创不易，转载也请标明出处和作者，尊重原创。不定期上传到github或者gitee。认准龙腾万里sky，如果看见其它平台不是这个ID发出我的文章，就是转载的。<strong>MySQL系列文章</strong>：《<strong>MySQL开发篇，存储引擎的选择真的很重要吗？</strong>》已经上传至github和gitee仓库SQL-study。个人github仓库地址，一般会先更新PDF文件，然后再上传markdown文件。如果访问github太慢，可以使用gitee进行克隆。</p>
<H5 align=center><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2Nud2FuZ2svd2FuZ2stc3RpY2s=">作者：龙腾万里sky<i class="fa fa-external-link-alt"></i></span></H5>










]]></content>
      <categories>
        <category>中间件</category>
      </categories>
      <tags>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>markdown编辑器VSCode和Typora</title>
    <url>/2021/12/26/markdown%E7%BC%96%E8%BE%91%E5%99%A8VSCode%E5%92%8CTypora/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>今天的课题，给各位大佬介绍一款神奇、优美的写作工具markdown编辑器typora。能看到这篇文章的，我默认大家都会基本的编程知识以及markdown基本语法呦！</p>
<p>以前写作使用的工具五花八门，比如传统的office、wps和富文本编辑器，以及editplus、notepad++。自从接触了markdown编辑器，转而使用了sublime text。然而使用sublime text，需要下载插件配合使用，但是那个网速大家都懂得，龟速前行。作为替代记事本做普通编辑器还是很好用的，有时我打开xml、yaml、txt以及java和SQL文件（轻量级的）效果很不错。个人认为sublime text优势在于体量轻，编辑小的文件优势大。</p>
<p>某些网站，比如CSDN、简书、掘金社区、博客园或者知乎对markdown的支持也很好，支持多种文件上传适配。GitHub以及gitee两款代码托管平台，对markdown支持很nice。本机部署git，然后配置ssh验证连接服务器。写完文章，提交到GitHub或者gitee。你还可以通过Hugo、Hexo、jekyll这类静态网站生成器搭建个人博客或者站点，发布到github或者gitee。</p>
<p>后来无意间接触到了微软出的VSCODE编辑器，就毫不犹豫转到了VSCODE。不用下载插件，对markdown格式支持很友好。如果需要预览文章效果，额外下载插件可以很好地预览md文件。优势比sublime text要大的多，下载插件体验很好。</p>
<p><strong>个人推荐的markdown编辑器typora，有一种相见恨晚的feeling</strong>。在某个阳光明媚惬意的日子，我结识了写作的好友typora这款神奇的markdown编辑器，从此美滋滋。在前段时间，typora出了付费版，功能更强大。支持正版是好事，毕竟作者无私奉献也是需要花money维护的。但是，只要你不升级beta版，同样可以免费使用哟！</p>
<h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="一、Typora"><a href="#一、Typora" class="headerlink" title="一、Typora"></a>一、Typora</h2><h3 id="1、typora版本"><a href="#1、typora版本" class="headerlink" title="1、typora版本"></a>1、typora版本</h3><p>1.1、这里个人使用的是0.11.18（beta）版本，依旧够用。<br><img data-src="https://img-blog.csdnimg.cn/605456cf9a9d4fb1b7968b77a1dd4e57.png?x-oss-process=,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6b6Z6IW-5LiH6YeMc2t5,size_19,color_FFFFFF,t_70,g_se,x_16#"></p>
<h3 id="2、typora说明文档"><a href="#2、typora说明文档" class="headerlink" title="2、typora说明文档"></a>2、typora说明文档</h3><p>2.1 、Markdown Reference.md文件所在安装目录。默认会安装到C盘，你可以剪切到D盘或者E盘，不影响使用呦。<br><img data-src="https://img-blog.csdnimg.cn/85a9d26147ed4499a0d62fe7850cae2c.png?x-oss-process=,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6b6Z6IW-5LiH6YeMc2t5,size_20,color_FFFFFF,t_70,g_se,x_16#"></p>
<h3 id="3、typora支持的markdown用法"><a href="#3、typora支持的markdown用法" class="headerlink" title="3、typora支持的markdown用法"></a>3、typora支持的markdown用法</h3><p>这里只介绍一些常用的markdown语法，更多的请参考上面的Markdown Reference.md说明文档。</p>
<p><strong>3.1、标题支持</strong><br><img data-src="https://img-blog.csdnimg.cn/1af5ffb1a5d2458e9032cb80ff92220b.png?x-oss-process=,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6b6Z6IW-5LiH6YeMc2t5,size_20,color_FFFFFF,t_70,g_se,x_16#"></p>
<p><strong>3.2、引用支持</strong><br><img data-src="https://img-blog.csdnimg.cn/debb3db87e7349f89e972284fa4f352f.png?x-oss-process=,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6b6Z6IW-5LiH6YeMc2t5,size_20,color_FFFFFF,t_70,g_se,x_16#"></p>
<p><strong>3.3、列表支持</strong><br><img data-src="https://img-blog.csdnimg.cn/318c3bb15dfc442d82c1ab08a370beda.png?x-oss-process=,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6b6Z6IW-5LiH6YeMc2t5,size_20,color_FFFFFF,t_70,g_se,x_16#"></p>
<p><strong>3.4、任务列表支持，带有checkbox</strong><br><img data-src="https://img-blog.csdnimg.cn/720b81b0fad34268abacb093892c3bce.png?x-oss-process=,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6b6Z6IW-5LiH6YeMc2t5,size_20,color_FFFFFF,t_70,g_se,x_16#"></p>
<p><strong>3.5、代码块支持，比如Java、ruby、js等等</strong><br><img data-src="https://img-blog.csdnimg.cn/14db86cd1b814043895b4d5b1565da3e.png?x-oss-process=,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6b6Z6IW-5LiH6YeMc2t5,size_20,color_FFFFFF,t_70,g_se,x_16#"></p>
<p><strong>3.6、函数块支持</strong><br><img data-src="https://img-blog.csdnimg.cn/14262d0046d14f70a8e4676e013c1e14.png?x-oss-process=,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6b6Z6IW-5LiH6YeMc2t5,size_20,color_FFFFFF,t_70,g_se,x_16#"></p>
<p><strong>3.7、表格支持</strong><br><img data-src="https://img-blog.csdnimg.cn/69ed8a6450e44677a60a960ed18ba152.png?x-oss-process=,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6b6Z6IW-5LiH6YeMc2t5,size_20,color_FFFFFF,t_70,g_se,x_16#"></p>
<p><strong>3.8、字体加粗支持</strong><br><img data-src="https://img-blog.csdnimg.cn/4e5d2d954f4a4e989ee742e57814f277.png?x-oss-process=,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6b6Z6IW-5LiH6YeMc2t5,size_20,color_FFFFFF,t_70,g_se,x_16#"></p>
<p><strong>3.9、思维导图（mermaid）支持</strong><br><img data-src="https://img-blog.csdnimg.cn/c35d308dfada42108aa9ca73b433b293.png?x-oss-process=,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6b6Z6IW-5LiH6YeMc2t5,size_20,color_FFFFFF,t_70,g_se,x_16#"><br><img data-src="https://img-blog.csdnimg.cn/e97f730c59564a59b76c8e168d9d79a0.png?x-oss-process=,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6b6Z6IW-5LiH6YeMc2t5,size_20,color_FFFFFF,t_70,g_se,x_16#"></p>
<h2 id="二、VSCODE"><a href="#二、VSCODE" class="headerlink" title="二、VSCODE"></a>二、VSCODE</h2><h3 id="1、版本"><a href="#1、版本" class="headerlink" title="1、版本"></a>1、版本</h3><p>可以首选项中设置手动更新以及禁止更新。</p>
<p><img data-src="https://img-blog.csdnimg.cn/c8c08791f5824c22a7433bcc2e0432a3.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6b6Z6IW-5LiH6YeMc2t5,size_17,color_FFFFFF,t_70,g_se,x_16#pic_center"></p>
<h3 id="2、插件"><a href="#2、插件" class="headerlink" title="2、插件"></a>2、插件</h3><p><strong>2.1、VSCOD汉化插件</strong></p>
<p>个人看久了英文版其实更舒服。当然汉化更符合国人的使用习惯，前段时间看到GitHub的官方使用文档都做中文适配了。<br><img data-src="https://img-blog.csdnimg.cn/6883b0e78d75423bb32069702c5d798b.png?x-oss-process=,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6b6Z6IW-5LiH6YeMc2t5,size_20,color_FFFFFF,t_70,g_se,x_16#"></p>
<p><strong>2.2、预览插件markdown_preview_enhanced</strong><br><img data-src="https://img-blog.csdnimg.cn/f68a58b43d854a8e85accdd04d5e5265.png?x-oss-process=,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6b6Z6IW-5LiH6YeMc2t5,size_20,color_FFFFFF,t_70,g_se,x_16#"></p>
<p>2.3、github_styling插件<strong>markdown_preview_github_styling</strong><br><img data-src="https://img-blog.csdnimg.cn/a2f19ab6464642289c29ec330d2d38f7.png?x-oss-process=,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6b6Z6IW-5LiH6YeMc2t5,size_20,color_FFFFFF,t_70,g_se,x_16#"></p>
<p>2.4、mermaid插件<strong>markdown_preview_mermaid_support</strong><br><img data-src="https://img-blog.csdnimg.cn/b4c5c61470284c30b1bb04dd1a44198f.png?x-oss-process=,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6b6Z6IW-5LiH6YeMc2t5,size_20,color_FFFFFF,t_70,g_se,x_16#"></p>
<p>2.5、主题插件<strong>markdown_theme_kit</strong><br><img data-src="https://img-blog.csdnimg.cn/b6428c70ff3c4c509ca85ca021e203df.png?x-oss-process=,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6b6Z6IW-5LiH6YeMc2t5,size_20,color_FFFFFF,t_70,g_se,x_16#"></p>
<h2 id="三、sublime-text"><a href="#三、sublime-text" class="headerlink" title="三、sublime text"></a>三、sublime text</h2><h3 id="1、版本-1"><a href="#1、版本-1" class="headerlink" title="1、版本"></a>1、版本</h3><p><img data-src="https://img-blog.csdnimg.cn/98dcbe621f7f46f79e75fcb73941ba8c.png?x-oss-process=,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6b6Z6IW-5LiH6YeMc2t5,size_11,color_FFFFFF,t_70,g_se,x_16#"></p>
<h3 id="2、界面"><a href="#2、界面" class="headerlink" title="2、界面"></a>2、界面</h3><p><strong>2.1、UTF8界面</strong><br><img data-src="https://img-blog.csdnimg.cn/79f0af2a81724308a4643ce2514cb4ec.png?x-oss-process=,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6b6Z6IW-5LiH6YeMc2t5,size_20,color_FFFFFF,t_70,g_se,x_16#"></p>
<p>2.2、用户以及默认设置<br><img data-src="https://img-blog.csdnimg.cn/354d0770d513409cb1994cb3809f1253.png?x-oss-process=,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6b6Z6IW-5LiH6YeMc2t5,size_20,color_FFFFFF,t_70,g_se,x_16#"></p>
<h1 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h1><p>最后给出我使用过的几款markdown编辑器下载地址，你也可以去官网下载呦。<br><img data-src="https://img-blog.csdnimg.cn/b9a69d18e92d4ef4b9325e623478b6bc.png?x-oss-process=,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6b6Z6IW-5LiH6YeMc2t5,size_20,color_FFFFFF,t_70,g_se,x_16#"></p>
<p><strong>下载链接</strong>：「markdown_tools」<span class="exturl" data-url="aHR0cHM6Ly93d3cuYWxpeXVuZHJpdmUuY29tL3MvMTc1NVRnSDRDRVk=">https://www.aliyundrive.com/s/1755TgH4CEY<i class="fa fa-external-link-alt"></i></span></p>
<H5 align=center><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2Nud2FuZ2svU1FMLXN0dWR5">作者：龙腾万里sky<i class="fa fa-external-link-alt"></i></span></H5>
]]></content>
      <categories>
        <category>通用工具</category>
      </categories>
      <tags>
        <tag>编辑器</tag>
      </tags>
  </entry>
  <entry>
    <title>npm切换镜像源</title>
    <url>/2023/03/26/npm%E5%88%87%E6%8D%A2%E9%95%9C%E5%83%8F%E6%BA%90/</url>
    <content><![CDATA[<h1 id="npm切换镜像源"><a href="#npm切换镜像源" class="headerlink" title="npm切换镜像源"></a>npm切换镜像源</h1><h3 id="安装-npm-nodejs"><a href="#安装-npm-nodejs" class="headerlink" title="安装 npm &amp; nodejs"></a>安装 npm &amp; nodejs</h3><p>Linux（RHEL系列）安装npm &amp; nodejs</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install npm</span><br><span class="line">yum -y install node</span><br></pre></td></tr></table></figure>

<p>查看镜像源使用状态：npm config get registry<br>切换到官方镜像源：npm config set registry <span class="exturl" data-url="aHR0cDovL3d3dy5ucG1qcy5vcmcv">http://www.npmjs.org<i class="fa fa-external-link-alt"></i></span><br><strong>切换到淘宝镜像源</strong>：npm config set registry <span class="exturl" data-url="aHR0cDovL3JlZ2lzdHJ5Lm5wbS50YW9iYW8ub3JnLw==">http://registry.npm.taobao.org<i class="fa fa-external-link-alt"></i></span></p>
<p>切换npm源：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry http://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>

<h3 id="安装nrm插件"><a href="#安装nrm插件" class="headerlink" title="安装nrm插件"></a>安装nrm插件</h3><p>安装nrm插件:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install nrm -g</span><br></pre></td></tr></table></figure>

<p>查看支持镜像地址：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nrm <span class="built_in">ls</span></span><br><span class="line">npm ---------- https://registry.npmjs.org/</span><br><span class="line">yarn --------- https://registry.yarnpkg.com/</span><br><span class="line">tencent ------ https://mirrors.cloud.tencent.com/npm/</span><br><span class="line">cnpm --------- https://r.cnpmjs.org/</span><br><span class="line">taobao ------- https://registry.npmmirror.com/</span><br><span class="line">npmMirror ---- https://skimdb.npmjs.com/registry/</span><br></pre></td></tr></table></figure>

<p>如果出现如下错误提示：版本冲突</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Error [ERR_REQUIRE_ESM]: require() of ES Module /usr/local/lib/node_modules/nrm/node_modules/open/in</span><br><span class="line">[root@Centos9-Stream blog]<span class="comment"># nrm ls</span></span><br><span class="line">/usr/local/lib/node_modules/nrm/cli.js:9</span><br><span class="line">const open = require(<span class="string">&#x27;open&#x27;</span>);</span><br><span class="line">             ^</span><br><span class="line"></span><br><span class="line">Error [ERR_REQUIRE_ESM]: require() of ES Module /usr/local/lib/node_modules/nrm/node_modules/open/index.js from /usr/local/lib/node_modules/nrm/cli.js not supported.</span><br><span class="line">Instead change the require of index.js <span class="keyword">in</span> /usr/local/lib/node_modules/nrm/cli.js to a dynamic import() <span class="built_in">which</span> is available <span class="keyword">in</span> all CommonJS modules.</span><br><span class="line">    at Object.&lt;anonymous&gt; (/usr/local/lib/node_modules/nrm/cli.js:9:14) &#123;</span><br><span class="line">  code: <span class="string">&#x27;ERR_REQUIRE_ESM&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<p>解决方案：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g nrm open@8.4.2 --save</span><br></pre></td></tr></table></figure>

<p>——END——</p>
]]></content>
      <categories>
        <category>开发工具</category>
      </categories>
      <tags>
        <tag>npm</tag>
      </tags>
  </entry>
  <entry>
    <title>podman入门实战</title>
    <url>/2023/03/08/podman%E5%85%A5%E9%97%A8%E5%AE%9E%E6%88%98/</url>
    <content><![CDATA[<p><a href="https://imgse.com/i/ppma2p6"><img data-src="https://s1.ax1x.com/2023/03/08/ppma2p6.png" alt="ppma2p6.png"></a></p>
<p>一入编程深似海，从此节操是路人。</p>
<p>最近使用podman，就想着写一篇总结性的笔记，以备后续参考。就如同写代码，不写注释，过了一段时间可能会想这是我写的吗？不会吧，还要理一下逻辑才能读懂，不利于后期维护。</p>
<p>感觉整体体验下来，镜像获取、容器创建、容器监控、容器移除，和docker差不多，感觉可以作为替代品。</p>
<p><strong>什么是podman</strong>？</p>
<blockquote>
<p>Podman is a utility provided as part of the libpod library. It can be used to create and maintain containers. The following tutorial will teach you how to set up Podman and perform some basic commands.</p>
</blockquote>
<p>大意是 podman 使用libpod库提供的一部分，打造应用程序。你可以使用podman创建容器、维护容器。 </p>
<p><strong>每个人使用环境可能不一样，在介绍podman安装与使用时，我想先介绍自己的环境</strong>。</p>
<p><strong>个人使用环境</strong></p>
<p>操作系统：Linux发行版Centos9-stream。</p>
<p>容器环境：podman 4.2.0。</p>
<p>测试运行服务：Maven 构建 Java web 应用程序打包成 jar。</p>
<p>Linux-Centos9-stream使用podman(docker)制作本地镜像，Maven构建 jar 运行并测试。</p>
<ol>
<li>项目构建（spring官网 &amp; 阿里云 脚手架构架，IDE开发工具构建）。</li>
<li>项目打包（maven 打包，mvn install）。</li>
<li>项目发布（上传至服务器Linux 发行版Centos9-stream）。</li>
<li>制作本地镜像（podman(docker) 容器制作镜像）。</li>
</ol>
<p><strong>本文核心</strong>：主要介绍podman(docker)打包本地 jar 文件，制作镜像运行测试。</p>
<p><strong>准备</strong></p>
<ul>
<li>本地环境：MySQL、JDK、Maven、jar包文件，用于测试。</li>
<li>服务器环境：podman（docker）环境，openJDK。</li>
</ul>
<p>如果没有jar包环境，可以去spring官网和阿里云springboot脚手架官网在线构建demo。<br>spring initializr：<span class="exturl" data-url="aHR0cHM6Ly9zdGFydC5zcHJpbmcuaW8v">https://start.spring.io/<i class="fa fa-external-link-alt"></i></span><br>阿里云云原生应用脚手架：<span class="exturl" data-url="aHR0cHM6Ly9zdGFydC5hbGl5dW4uY29tLw==">https://start.aliyun.com/<i class="fa fa-external-link-alt"></i></span></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> demo</span><br><span class="line">mvn install</span><br><span class="line">scp -r target\demo-1.0.jar root@192.168.245.132:/opt/dkr/  </span><br></pre></td></tr></table></figure>



<h3 id="podman安装"><a href="#podman安装" class="headerlink" title="podman安装"></a>podman安装</h3><p>关于podman，支持Windows、MacOS与Linux发行版，可以前往github获取更多版本安装包（exe、zip、pkg、tar.gz、source），便于在网络隔离情况下部署。如果网络环境允许，可以使用操作系统支持的安装工具进行安装，比如RHEL系列使用yum或者dnf管理工具，Debian与Ubuntu使用apt工具。</p>
<p>podman开源仓库：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2NvbnRhaW5lcnMvcG9kbWFu">https://github.com/containers/podman<i class="fa fa-external-link-alt"></i></span></p>
<p><a href="https://imgse.com/i/ppma6t1"><img data-src="https://s1.ax1x.com/2023/03/08/ppma6t1.png" alt="ppma6t1.png"></a></p>
<p>如果获取资源缓慢，这是正常现象，你可能需要科学上网加速一下，或者使用BT工具。</p>
<p>如果使用Linux发行版在线安装，可以更换国内镜像源，比如阿里云、腾讯云、华为云。</p>
<p><strong>1、安装podman（docker）</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install -y podman</span><br></pre></td></tr></table></figure>
<p>在RHEL9中可以使用yum或者dnf命令安装服务。</p>
<p><strong>查看podman版本</strong>：podman -v</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@Centos9-Stream demo]<span class="comment"># podman -v</span></span><br><span class="line">podman version 4.2.0</span><br></pre></td></tr></table></figure>



<p><strong>2、启动podman</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl start podman</span><br></pre></td></tr></table></figure>
<p>RHEL7以及以上推荐使用systemctl命令去管理服务，使用service命令也是兼容的，用法有些区别。</p>
<p><strong>设置开机自启</strong>：systemctl enable podman</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@Centos9-Stream ~]<span class="comment"># systemctl enable podman</span></span><br><span class="line">Created symlink /etc/systemd/system/default.target.wants/podman.service → /usr/lib/systemd/system/podman.service.</span><br><span class="line">[root@Centos9-Stream ~]<span class="comment"># systemctl status podman</span></span><br><span class="line">○ podman.service - Podman API Service</span><br><span class="line">     Loaded: loaded (/usr/lib/systemd/system/podman.service; enabled; vendor preset: disabled)</span><br><span class="line">     Active: inactive (dead) since Sun 2023-02-26 16:56:43 CST; 2min 33s ago</span><br><span class="line">...</span><br><span class="line">2月 26 16:56:38 Centos9-Stream podman[3173]: time=<span class="string">&quot;2023-02-26T16:56:38+08:00&quot;</span> level=info msg=<span class="string">&quot;/usr/bin/podman filtering at log level info&quot;</span></span><br><span class="line">...</span><br><span class="line">2月 26 16:56:43 Centos9-Stream systemd[1]: podman.service: Deactivated successfully.</span><br></pre></td></tr></table></figure>

<p>使用命令 systemctl enable podman 设置podman服务开机自启，查看pdoman状态：systemctl status podman，发现由 disabled 转变成了enabled。如果不想开机自启，可以使用禁用命令：systemctl disable podman。</p>
<h3 id="podman制作本地镜像"><a href="#podman制作本地镜像" class="headerlink" title="podman制作本地镜像"></a>podman制作本地镜像</h3><p>Dockerfile文件作用：个人理解，相当于路标，通过相关命令去指引我们如何前进，构建镜像。</p>
<p><strong>1、打包本地jar：新建Dockerfile文件</strong></p>
<p>将上传的 jar 文件复制到与Dockerfile同一目录，比如我演示目录在 &#x2F;opt&#x2F;dkr：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> springboot-crud-0.0.1-SNAPSHOT.jar /opt/dkr/</span><br></pre></td></tr></table></figure>

<p>创建Dockerfile文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">touch</span> Dockerfile</span><br></pre></td></tr></table></figure>

<p>编辑Dockerfile文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim Dockerfile</span><br></pre></td></tr></table></figure>

<p>填充如下内容：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">FROM openjdk:17</span><br><span class="line">MAINTAINER Fisher <span class="string">&quot;dywangk@gmail.com&quot;</span></span><br><span class="line">ADD springboot-crud-0.0.1-SNAPSHOT.jar crud-app.jar</span><br></pre></td></tr></table></figure>
<p>FROM：从哪里获取到 JDK 作为运行 jar 包支撑环境，此处我获取的是 openjdk17 与 springboot 指定 jdk 版本对应上。<br>MAINTAINER：指定维护人。可选项，可加可不加。<br>ADD：添加 jar 文件。可以使用COPY替代。<br>RUN：顾名思义，运行。运行命令以及服务，本次测试没加上，在 podman build 时运行。</p>
<p><strong>2、打包本地jar作为镜像</strong></p>
<p>通过  podman build 命令构建本地镜像服务。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">podman build -f Dockerfile -t springboot:crud-app.jar</span><br></pre></td></tr></table></figure>

<p>查看images，<strong>注意对应上IMAGE ID</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@Centos9-Stream ~]<span class="comment"># podman images</span></span><br><span class="line">REPOSITORY                 TAG           IMAGE ID      CREATED       SIZE</span><br><span class="line">none				       none			 4f7431dafa0a  2 hours ago   519 MB</span><br><span class="line">docker.io/library/openjdk  17            5e28ba2b4cdb  9 months ago  475 MB</span><br></pre></td></tr></table></figure>
<p>通过podman images命令查看images发现REPOSITORY和TAG是none，接下来会继续介绍指定TAG。<br><strong>注意</strong>：podman images 是列出本地存储镜像列表，相当于 podman image list；podman image 是用于管理镜像。</p>
<p>例如删除镜像:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">podman image <span class="built_in">rm</span> 4f7431dafa0a</span><br><span class="line">podman image <span class="built_in">rm</span> -f 4f7431dafa0a</span><br></pre></td></tr></table></figure>



<p><strong>3、指定tag</strong></p>
<p>使用 podman tag 命令去添加标签名，tag 后面追加 IMAGE ID 以及本地打包好的镜像。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">podman tag 4f7431dafa0a srpingboot:crud-app.jar</span><br></pre></td></tr></table></figure>

<p>再次查看images，发现REPOSITORY和TAG有内容了。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@Centos9-Stream ~]<span class="comment"># podman images</span></span><br><span class="line">REPOSITORY                 TAG           IMAGE ID      CREATED       SIZE</span><br><span class="line">localhost/srpingboot       crud-app.jar  4f7431dafa0a  2 hours ago   519 MB</span><br><span class="line">docker.io/library/openjdk  17            5e28ba2b4cdb  9 months ago  475 MB</span><br></pre></td></tr></table></figure>



<p><strong>4、运行jar服务</strong></p>
<p>使用 podman run 命令启动容器中的本地镜像服务。-p 参数，指定端口8082和传输协议TCP；–name 参数，用于指定容器名称；-it -d 参数，用于将服务置于后台；java -jar 参数， 与平时本地环境直接启动 java -jar服务是同样地命令。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">podman run -p 8082:8081/tcp --name crud -it -d localhost/srpingboot:crud-app java -jar crud-app.jar </span><br></pre></td></tr></table></figure>

<p>你可以再启动一个服务，端口映射到8088，注意，–name 取名不能重复，示例如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">podman run -p 8088:8081/tcp --name crud7 -it -d localhost/srpingboot:crud-app java -jar crud-app.jar </span><br></pre></td></tr></table></figure>

<p>查看运行中的服务，使用命令：podman ps</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@Centos9-Stream dkr]<span class="comment"># podman ps</span></span><br><span class="line">CONTAINER ID  IMAGE                              COMMAND               CREATED      STATUS          PORTS                   NAMES</span><br><span class="line">920899cf9aad  localhost/srpingboot:crud-app.jar  java -jar crud-ap...  2 hours ago  Up 2 hours ago  0.0.0.0:8082-&gt;8081/tcp  crud</span><br></pre></td></tr></table></figure>

<p>将8081端口映射到8082上，访问时使用端口是8082。</p>
<p>列出容器端口映射：podman port crud</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@Centos9-Stream dkr]<span class="comment"># podman port crud</span></span><br><span class="line">8081/tcp -&gt; 0.0.0.0:8082</span><br></pre></td></tr></table></figure>

<p>例如：访问接口，如果你没有在controller层编写任何代码，访问显示的是404。当然这些并不重要，只需要印证podman（docker）打包本地jar包正常运行就足够了。<br><span class="exturl" data-url="aHR0cDovLzE5Mi4xNjguMjQ1LjEzMjo4MDgyL3RoeW1lbGVhZi9maW5kQ2l0eQ==">http://192.168.245.132:8082/thymeleaf/findCity<i class="fa fa-external-link-alt"></i></span></p>
<p><a href="https://imgse.com/i/ppmar79"><img data-src="https://s1.ax1x.com/2023/03/08/ppmar79.png" alt="ppmar79.png"></a></p>
<p><strong>5、查看日志</strong><br>查看日志命令 podman logs，后面追加IMAGE  ID：920899cf9aad，IMAGE ID理解为唯一值便于检索。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">podman logs 920899cf9aad</span><br></pre></td></tr></table></figure>

<p>反馈结果</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">2023-02-13T12:56:21.113Z  INFO 1 --- [           main] com.example.Application                  : Started Application <span class="keyword">in</span> 7.021 seconds (process running <span class="keyword">for</span> 8.49)</span><br><span class="line">...</span><br><span class="line">2023-02-13T12:56:59.312Z  INFO 1 --- [nio-8081-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization <span class="keyword">in</span> 3 ms</span><br><span class="line">Hibernate: <span class="keyword">select</span> c.Name, c.CountryCode from world.city c;</span><br></pre></td></tr></table></figure>
<p><a href="https://imgse.com/i/ppmaR1K"><img data-src="https://s1.ax1x.com/2023/03/08/ppmaR1K.png" alt="ppmaR1K.png"></a></p>
<p>可以看到使用 JPA show-sql 打印出了自己指定的SQL语句：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> c.Name, c.CountryCode <span class="keyword">from</span> world.city c;</span><br></pre></td></tr></table></figure>



<p><strong>6、停止容器</strong></p>
<p>采用 podman stop 命令手动停止一个或多个容器：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">podman stop crud</span><br></pre></td></tr></table></figure>



<p><strong>7、启动容器</strong></p>
<p>当容器意外宕掉或者手动停止了，此时可以使用 podman start 启动一个或多个容器：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">podman start crud</span><br></pre></td></tr></table></figure>



<p><strong>8、监控容器</strong></p>
<p>查看（监控）容器健康状态，主要分析CPU、内存负载：podman  stats，使用ctrl + c 退出。如下图所示：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">podman  stats</span><br></pre></td></tr></table></figure>

<p>当然，可以配合重定向输出到日志文件：podman stats &gt; podman-stats.log，初次已覆盖形式；再次使用重定向输出命令：podman stats &gt;&gt; podman-stats.log，采用追加形式。查看日志文件内容，可以使用tail、cat、vim命令。</p>
<p><a href="https://imgse.com/i/ppmaykR"><img data-src="https://s1.ax1x.com/2023/03/08/ppmaykR.png" alt="ppmaykR.png"></a></p>
<p>当然，你还可以使用 podman top 查看容器负载，示例查看最新容器状态：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">podman top -l</span><br></pre></td></tr></table></figure>





<p>善用podman自带帮助文档，有一定基础后这是最有效的方式，需要有一定阅读英文文档积累。</p>
<p>列出podman全部文档提示，示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">podman <span class="built_in">help</span></span><br><span class="line">man podman</span><br></pre></td></tr></table></figure>

<p>只查看 podman ps 帮助文档，示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">podman <span class="built_in">help</span> ps</span><br><span class="line">podman ps --<span class="built_in">help</span></span><br></pre></td></tr></table></figure>

<p><img data-src="https://img-blog.csdnimg.cn/img_convert/95070773b54244dd9b1cc7867c09ddb3.png" alt="ppmacfx.png"></p>
<h3 id="podman-docker-命令回顾"><a href="#podman-docker-命令回顾" class="headerlink" title="podman(docker)命令回顾"></a>podman(docker)命令回顾</h3><p><strong>闲扯</strong></p>
<p>开始使用，感觉命令太多，哎呀记不住，怎么办？没有捷径可走，多敲几遍，自然而然记住了。主要做札记，使用笔记本记录，记录过程也是思考的过程。分类整理，容器管理，容器内镜像管理。其次靠工作经验以及平时积累总结出常用以及实用命令，熟悉后，使用podman自带的帮助文档<strong>提高工作效率</strong>。</p>
<p>只停留在看和札记上，显得很抽象，需要配合搭建环境去感受。运用越多，实际工作中越有底气。</p>
<p>回顾一下，制作本地镜像使用到了哪些命令。你会发现，自己实践一遍，需要掌握哪些命令，用到的还不少。仅仅通过构建本地镜像到运行，涉及到知识面有限，我并没有介绍到容器初始化（init）、连接（attach）、内容自动更新（auto-update）、提交（commit）、比对（diff）等等命令。</p>
<p><strong>回顾命令</strong></p>
<p>查看容器列表，正在运行中的容器：podman ps</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">podman ps</span><br></pre></td></tr></table></figure>

<p>启动一个或者更多容器：podman start，示例启动crud7</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">podman start crud7</span><br></pre></td></tr></table></figure>

<p>停止一个或者更多容器：podman stop，示例停止crud7</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">podman stop crud7</span><br></pre></td></tr></table></figure>

<p>查看（监控）容器健康状态，示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">podman  stats</span><br></pre></td></tr></table></figure>

<p>从远程地址拉取镜像：podman pull</p>
<p>查看 podman 版本命令：podman -v</p>
<p>从容器定义配置文件Dockerfile， 构建自定义镜像命令：podman build</p>
<p>给镜像加上tag（标签名）：podman tag</p>
<p>新的容器中运行一条命令，比如我在文中运行到 jar 服务：podman run</p>
<p>管理镜像：podman image</p>
<p>查看本地（已拉取）镜像列表：podman images</p>
<p>移除一个或多个容器：podman rm ，根据容器ID移除。例如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">podman <span class="built_in">rm</span> 03dd5a923f51</span><br></pre></td></tr></table></figure>

<p>从本地存储移除一个或多个镜像：podman rmi</p>
<p>查看容器中运行服务后的日志：podman logs</p>
<p><strong>配合Linux中grep、tail命令进行检索</strong>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">podman logs cd57c4af7fb8 | grep 8081</span><br><span class="line">podman logs cd57c4af7fb8 | <span class="built_in">tail</span> -f</span><br></pre></td></tr></table></figure>

<p>此处，我已知使用到了端口8081，直接匹配比较精确，也可以模糊一点，只输入80。使用 tail -f 命令，查看最近的10条信息。</p>
<p>列出容器端口映射：podman port ，示例，查找名称为crud的容器：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">podman port crud</span><br></pre></td></tr></table></figure>

<p>搜索远程地址镜像：podman search ，例如搜索 openjdk17：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">podman search openjdk17</span><br></pre></td></tr></table></figure>

<p>使用 podman 帮助文档：podman help</p>
<p>使用帮助命令时候，同样可以配合 grep 命令匹配已知的命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">podman <span class="built_in">help</span>  | grep images</span><br><span class="line">podman <span class="built_in">help</span> images</span><br></pre></td></tr></table></figure>



<h3 id="podman快速入门"><a href="#podman快速入门" class="headerlink" title="podman快速入门"></a>podman快速入门</h3><p>podman提供了快速启动，以 httpd 服务为示例：镜像获取、容器创建、容器监控、容器移除。</p>
<p><strong>快速入门，参考podman文档</strong>：</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9wb2RtYW4uaW8vZ2V0dGluZy1zdGFydGVkLw==">https://podman.io/getting-started/<i class="fa fa-external-link-alt"></i></span></p>
<p>此处演示使用 podman 获取 httpd（web中间件Apache服务）。</p>
<p>搜索命令：podman search ，示例如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@Centos9-Stream kart]<span class="comment"># podman search httpd --filter=is-official</span></span><br><span class="line">NAME                     DESCRIPTION</span><br><span class="line">docker.io/library/httpd  The Apache HTTP Server Project</span><br></pre></td></tr></table></figure>

<p><strong>获取 httpd 服务</strong>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">podman pull docker.io/library/httpd</span><br></pre></td></tr></table></figure>

<p><strong>列出所有镜像列表</strong>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">podman images</span><br></pre></td></tr></table></figure>



<p><strong>运行容器</strong>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">podman run -dt -p 8080:80/tcp docker.io/library/httpd</span><br></pre></td></tr></table></figure>

<p>获取的是最新版，此处，你可能需要修改才能运行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">podman run -dt -p 8080:80/tcp docker.io/library/httpd:latest</span><br></pre></td></tr></table></figure>

<p>查询正在运行的容器：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">podman ps</span><br></pre></td></tr></table></figure>

<p><strong>测试容器，访问 httpd</strong> ：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://localhost:8080/</span><br></pre></td></tr></table></figure>

<p>或者使用 curl命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl http://localhost:8080</span><br><span class="line">&lt;html&gt;&lt;body&gt;&lt;h1&gt;It works!&lt;/h1&gt;&lt;/body&gt;&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p>看到页面显示：<strong>It works!</strong> ，代表测试运行httpd服务成功。</p>
<p><strong>监控容器</strong>，示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">podman top amazing_matsumoto</span><br></pre></td></tr></table></figure>

<p>查看日志，指定容器NAME，示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">podman logs amazing_matsumoto</span><br></pre></td></tr></table></figure>





<p><strong>停止容器</strong>，根据容器（CONTAINER）ID或者NAME都行。注意，如果没有指定NAME，会生成随机字符串。</p>
<p>示例根据NAME停止容器：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">podman stop amazing_matsumoto</span><br></pre></td></tr></table></figure>

<p>查出所有容器（包含退出的、创建的），示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">podman ps -a</span><br></pre></td></tr></table></figure>

<p>移除容器，示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">podman <span class="built_in">rm</span> amazing_matsumoto</span><br></pre></td></tr></table></figure>

<p>通过管道符配合 grep 命令搜索，发现确实移除掉了，示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">podman ps -a | grep amazing_matsumoto</span><br></pre></td></tr></table></figure>



<p>基本命令文档：可以下载文档，包含：PDF、HTML、Epub三种格式。</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9kb2NzLnBvZG1hbi5pby9lbi9sYXRlc3QvQ29tbWFuZHMuaHRtbA==">https://docs.podman.io/en/latest/Commands.html<i class="fa fa-external-link-alt"></i></span></p>
<ul>
<li>latest：最新版</li>
<li>stable：稳定版</li>
<li>v4.3：历史版本podman4.3</li>
</ul>
<p>podman开源仓库：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2NvbnRhaW5lcnMvcG9kbWFu">https://github.com/containers/podman<i class="fa fa-external-link-alt"></i></span></p>
<p>最后，希望对你的工作有所帮助，以上总结仅供参考！</p>
<p>静下心来，才发现原来不会的还有很多。</p>
<p>一分耕耘，一分收获。</p>
<p>多总结，你会发现，自己的知识宝库越来越丰富。</p>
<p>——END——</p>
]]></content>
      <categories>
        <category>开发运维</category>
      </categories>
      <tags>
        <tag>podman</tag>
      </tags>
  </entry>
  <entry>
    <title>rocketmq消息服务入门笔记</title>
    <url>/2022/05/11/rocketmq%E6%B6%88%E6%81%AF%E6%9C%8D%E5%8A%A1%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<p><strong>rocketmq日志问题</strong>：随着消息服务持续运行，日志量会越来越大，实际工作中可能会达到20G。当日志占用C盘的90%时，消息服务可能会出现警告，无法接收存储消息。此时应该想方法调整日志存储位置，或者给C盘扩容。</p>
<p>以前可视化运维管理界面应用程序在项目rocketmq-externals中rocketmq-console目录下：</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2FwYWNoZS9yb2NrZXRtcS1leHRlcm5hbHMvdHJlZS9tYXN0ZXIvcm9ja2V0bXEtY29uc29sZQ==">https://github.com/apache/rocketmq-externals/tree/master/rocketmq-console<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p>后面再次使用时才发现仓库改成rocketmq-dashboard了，已经找不到rocketmq-console。</p>
<p><strong>rocketmq-dashboard可视化运维管理界面源码</strong>：</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2FwYWNoZS9yb2NrZXRtcS1kYXNoYm9hcmQ=">https://github.com/apache/rocketmq-dashboard<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<h1 id="rocketmq入门实践"><a href="#rocketmq入门实践" class="headerlink" title="rocketmq入门实践"></a>rocketmq入门实践</h1><p><strong>必备环境</strong>：</p>
<ol>
<li>64bit OS，Linux&#x2F;Unix&#x2F;Mac is recommended；(Windows user see guide below)</li>
<li>64bit JDK 1.8+；</li>
<li>Maven 3.2.x；如果没有设置指定maven目录，默认下载jar包在C盘.m2目录</li>
<li>Git；</li>
<li>4g+ free disk for Broker server</li>
</ol>
<h2 id="一、快速入门"><a href="#一、快速入门" class="headerlink" title="一、快速入门"></a>一、快速入门</h2><h3 id="01配置环境"><a href="#01配置环境" class="headerlink" title="01	配置环境"></a>01	配置环境</h3><p>配置环境变量（settings environment）：Windows10环境可以配置到path环境变量中。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ROCKETMQ_HOME=<span class="string">&quot;D:\rocketmq-all-4.9.1-bin-release&quot;</span></span><br><span class="line">NAMESRV_ADDR=<span class="string">&quot;localhost:9876&quot;</span></span><br></pre></td></tr></table></figure>

<p><strong>注意</strong>：ROCKETMQ_HOME配置为你解压后的rocketmq路径，比如演示：D:\rocketmq-all-4.9.1-bin-release\bin。</p>
<p>如果没有配置JDK环境变量，使用记事本或者sublime text编辑mqnamesrv.cmd和mqbroker.cmd文件指定JDK路径即可，使用set设置JAVA_HOME（测试使用）。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">set</span> JAVA_HOME=D:\jdk8</span><br><span class="line"><span class="built_in">set</span> JAVA_HOME=D:\JavaEE\jdk8\jdk1.8.0_151</span><br></pre></td></tr></table></figure>



<p>Windows平台启动如下两个服务，先启动mqnamesrv服务，再启动mqbroker服务：</p>
<ol>
<li>mqnamesrv.cmd</li>
<li>mqbroker.cmd</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">D:\rocketmq-all-4.9.1-bin-release\bin&gt;mqnamesrv.cmd</span><br><span class="line"></span><br><span class="line">D:\rocketmq-all-4.9.1-bin-release\bin&gt;<span class="built_in">set</span> JAVA_HOME=D:\JavaEE\jdk8\jdk1.8.0_151</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM warning: Using the DefNew young collector with the CMS collector is deprecated and will likely be removed <span class="keyword">in</span> a future release</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM warning: UseCMSCompactAtFullCollection is deprecated and will likely be removed <span class="keyword">in</span> a future release.</span><br><span class="line">The Name Server boot success. serializeType=JSON</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">D:\rocketmq-all-4.9.1-bin-release\bin&gt;mqbroker.cmd</span><br><span class="line"></span><br><span class="line">D:\rocketmq-all-4.9.1-bin-release\bin&gt;<span class="built_in">set</span> JAVA_HOME=D:\JavaEE\jdk8\jdk1.8.0_151</span><br><span class="line">The broker[user, 192.168.245.1:10911] boot success. serializeType=JSON and name server is localhost:9876</span><br></pre></td></tr></table></figure>



<p>启动后日志管理（logs在C盘用户目录下）：</p>
<ol>
<li>consolelogs</li>
<li>rocketmqlogs</li>
</ol>
<p>启动rocketmq-dashboard-1.0.1-SNAPSHOT.jar服务</p>
<blockquote>
<p>D:\rocketmq-dashboard&gt;java -jar target\rocketmq-dashboard-1.0.1-SNAPSHOT.jar</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">D:\rocketmq-dashboard&gt;java -jar target\rocketmq-dashboard-1.0.1-SNAPSHOT.jar</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line">21:14:48,915 |-INFO <span class="keyword">in</span> ch.qos.logback.classic.LoggerContext[default] - Found resource [logback.xml] at [jar:file:/D:/rocketmq-dashboard/target/rocketmq-dashboard-1.0.1-SNAPSHOT.jar!/BOOT-INF/classes!/logback.xml]</span><br><span class="line">21:14:48,935 |-INFO <span class="keyword">in</span> ch.qos.logback.core.joran.spi.ConfigurationWatchList@1bce4f0a - URL [jar:file:/D:/rocketmq-dashboard/target/rocketmq-dashboard-1.0.1-SNAPSHOT.jar!/BOOT-INF/classes!/logback.xml] is not of <span class="built_in">type</span> file</span><br><span class="line">...</span><br><span class="line">21:14:49,206 |-INFO <span class="keyword">in</span> c.q.l.core.rolling.TimeBasedRollingPolicy@1580893732 - Will use the pattern C:/Users/user/logs/consolelogs/rocketmq-console-%d&#123;yyyy-MM-<span class="built_in">dd</span>&#125;.%i.log <span class="keyword">for</span> the active file</span><br><span class="line">21:14:49,210 |-INFO <span class="keyword">in</span> ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP@5c3bd550 - The <span class="built_in">date</span> pattern is <span class="string">&#x27;yyyy-MM-dd&#x27;</span> from file name pattern <span class="string">&#x27;C:/Users/user/logs/consolelogs/rocketmq-console-%d&#123;yyyy-MM-dd&#125;.%i.log&#x27;</span>.</span><br><span class="line">...</span><br><span class="line">21:14:49,229 |-INFO <span class="keyword">in</span> ch.qos.logback.core.rolling.RollingFileAppender[FILE] - Active <span class="built_in">log</span> file name: C:\Users\user/logs/consolelogs/rocketmq-console.log</span><br><span class="line">21:14:49,229 |-INFO <span class="keyword">in</span> ch.qos.logback.core.rolling.RollingFileAppender[FILE] - File property is <span class="built_in">set</span> to [C:\Users\user/logs/consolelogs/rocketmq-console.log]</span><br><span class="line">21:14:49,230 |-INFO <span class="keyword">in</span> ch.qos.logback.classic.joran.action.RootLoggerAction - Setting level of ROOT logger to INFO</span><br><span class="line">...</span><br><span class="line">21:14:49,232 |-INFO <span class="keyword">in</span> ch.qos.logback.classic.joran.JoranConfigurator@91161c7 - Registering current configuration as safe fallback point</span><br><span class="line">  .   ____          _            __ _ _</span><br><span class="line"> /\\ / ___<span class="string">&#x27;_ __ _ _(_)_ __  __ _ \ \ \ \</span></span><br><span class="line"><span class="string">( ( )\___ | &#x27;</span>_ | <span class="string">&#x27;_| | &#x27;</span>_ \/ _` | \ \ \ \</span><br><span class="line"> \\/  ___)| |_)| | | | | || (_| |  ) ) ) )</span><br><span class="line">  <span class="string">&#x27;  |____| .__|_| |_|_| |_\__, | / / / /</span></span><br><span class="line"><span class="string"> =========|_|==============|___/=/_/_/_/</span></span><br><span class="line"><span class="string"> :: Spring Boot ::                (v2.6.0)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[2022-05-04 21:14:50.147] INFO background-preinit - HV000001: Hibernate Validator 6.2.0.Final</span></span><br><span class="line"><span class="string">[2022-05-04 21:14:50.194] INFO main - Starting App v1.0.1-SNAPSHOT using Java 17.0.2 on user with PID 16344 (D:\rocketmq-dashboard\target\rocketmq-dashboard-1.0.1-SNAPSHOT.jar started by user in D:\rocketmq-dashboard)</span></span><br><span class="line"><span class="string">[2022-05-04 21:14:50.205] INFO main - No active profile set, falling back to default profiles: default</span></span><br><span class="line"><span class="string">[2022-05-04 21:14:52.633] INFO main - setNameSrvAddrByProperty nameSrvAddr=127.0.0.1:9876</span></span><br><span class="line"><span class="string">[2022-05-04 21:14:53.088] INFO main - Tomcat initialized with port(s): 8080 (http)</span></span><br><span class="line"><span class="string">[2022-05-04 21:14:53.106] INFO main - Initializing ProtocolHandler [&quot;http-nio-8080&quot;]</span></span><br><span class="line"><span class="string">[2022-05-04 21:14:53.107] INFO main - Starting service [Tomcat]</span></span><br><span class="line"><span class="string">[2022-05-04 21:14:53.109] INFO main - Starting Servlet engine: [Apache Tomcat/9.0.55]</span></span><br><span class="line"><span class="string">...</span></span><br><span class="line"><span class="string">[2022-05-04 21:15:00.255] INFO scheduling-1 - create MQuser instance ClientConfig [namesrvAddr=127.0.0.1:9876, clientIP=192.168.245.1, instanceName=1651670100054, clientCallbackExecutorThreads=4, pollNameServerInterval=30000, heartbeatBrokerInterval=30000, persistConsumerOffsetInterval=5000, pullTimeDelayMillsWhenException=1000, unitMode=false, unitName=null, vipChannelEnabled=true, useTLS=false, language=JAVA, namespace=null, mqClientApiTimeout=3000] success.</span></span><br></pre></td></tr></table></figure>



<p>访问如下地址进入web管理界面：</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cDovLzEyNy4wLjAuMTo4MDgwLw==">http://127.0.0.1:8080/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<h3 id="02官方文档"><a href="#02官方文档" class="headerlink" title="02	官方文档"></a>02	官方文档</h3><p>rocketmq官方中文文档：</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2FwYWNoZS9yb2NrZXRtcS1leHRlcm5hbHMvYmxvYi9tYXN0ZXIvZG9jcy9jb25uZWN0L2NuL1JFQURNRS5tZA==">https://github.com/apache/rocketmq-externals/blob/master/docs/connect/cn/README.md<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p>rocketmq快速启动：</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9yb2NrZXRtcS5hcGFjaGUub3JnL2RvY3MvcXVpY2stc3RhcnQv">https://rocketmq.apache.org/docs/quick-start/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p>rocketmq下载：</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9yb2NrZXRtcS5hcGFjaGUub3JnL2Rvd2xvYWRpbmcvcmVsZWFzZXMv">https://rocketmq.apache.org/dowloading/releases/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p>持续更新中…</p>
]]></content>
      <categories>
        <category>中间件</category>
      </categories>
      <tags>
        <tag>rocketmq</tag>
      </tags>
  </entry>
  <entry>
    <title>rockyLinux初体验PostgreSQL15详细安装教程</title>
    <url>/2023/04/26/rockyLinux%E5%88%9D%E4%BD%93%E9%AA%8CPostgreSQL15%E8%AF%A6%E7%BB%86%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<p><img data-src="https://s1.ax1x.com/2023/04/25/p9KFODs.png"></p>
<p>彼时，PostgreSQL 已经更新到了15.2。在rockyLinux上初体验PostgreSQL15，从部署到测试psql工具，体验基本用法，运用通用数据库管理工具。</p>
<span id="more"></span>

<p>距离我上一次写 PostgreSQL 教程 2022-03-20，已经过去一年多了。Linux篇 PostgreSQL 教程很久之前就想写了，一直停留在想法上面，没有付诸实际行动。那会我的主要环境还在centos-7上，因为 centos-7快要停止维护了，目前已经转移到 rockyLinux-9平台。</p>
<p>当时只是简单的在 Windows 平台介绍如何安装和简单使用，甚至没有过多参考官方文档。</p>
<p>也是对前段时间总结的 《SQL 基础知识扫盲》 的补充。</p>
<p>如今，我为什么又写起了 postgreSQL 相关文档呢？<br>答：目前市面postgreSQL文档相对较少，官方文档纯英文，上手有一定的难度。像MySQL（MariaDB）、Oracle之类的文档已经烂大街了，无非是新版本发布，闲暇时间部署尝尝鲜。</p>
<p>初体验，第一次嘛，姿势、动作难度不能太高，容易劝退，所以比较简单。</p>
<h3 id="数据库软件-PostgreSQL-安装"><a href="#数据库软件-PostgreSQL-安装" class="headerlink" title="数据库软件 PostgreSQL 安装"></a>数据库软件 PostgreSQL 安装</h3><p>如果获取软件比较缓慢，可以在公众号回复blog，进入站点搜索：rockyLinux镜像源下载地址。如下所示，列出部分 postgresql 国内镜像源地址：</p>
<ol>
<li>浙江大学开源软件镜像站：<span class="exturl" data-url="aHR0cHM6Ly9taXJyb3JzLnpqdS5lZHUuY24vcG9zdGdyZXNxbC8=">https://mirrors.zju.edu.cn/postgresql/<i class="fa fa-external-link-alt"></i></span></li>
<li>中国科学技术大学镜像站：<span class="exturl" data-url="aHR0cHM6Ly9taXJyb3JzLnVzdGMuZWR1LmNuL3Bvc3RncmVzcWwv">https://mirrors.ustc.edu.cn/postgresql/<i class="fa fa-external-link-alt"></i></span></li>
<li>清华大学开源软件镜像站：<span class="exturl" data-url="aHR0cHM6Ly9taXJyb3JzLnR1bmEudHNpbmdodWEuZWR1LmNuL3Bvc3RncmVzcWwv">https://mirrors.tuna.tsinghua.edu.cn/postgresql/<i class="fa fa-external-link-alt"></i></span></li>
</ol>
<p>最新版本（PDF）文档地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cucG9zdGdyZXNxbC5vcmcvZmlsZXMvZG9jdW1lbnRhdGlvbi9wZGYvMTUvcG9zdGdyZXNxbC0xNS1BNC5wZGY=">https://www.postgresql.org/files/documentation/pdf/15/postgresql-15-A4.pdf<i class="fa fa-external-link-alt"></i></span></p>
<p>如果还是下载缓慢，这是正常现象，建议使用迅雷（打钱）等BT工具下载，或者在Linux平台使用 wget 获取，然后使用 scp 命令传到Windows平台浏览。</p>
<p>目前所有版本，最新版本为15.2，9th February 2023: PostgreSQL 15.2, 14.7, 13.10, 12.14, and 11.19 Released!</p>
<p><strong>安装方式：Packages and Installers</strong></p>
<p>使用 Installers 安装包形式进行安装，RHEL系列使用rpm包居多。</p>
<p>选择适合你的操作系统，支持的操作系统比较丰富：</p>
<ol>
<li>Linux</li>
<li>macOS</li>
<li>Windows</li>
<li>BSD</li>
<li>Solaris</li>
</ol>
<p>postgreSQL 下载目前支持两种方式：</p>
<ol>
<li>Packages：发行安装包形式，难易度较低，不灵活。</li>
<li>Source：源码包形式，难易度相对较高，比较灵活。</li>
</ol>
<p>如下，将演示Linux发行版Rocky-9平台PostgreSQL的部署。</p>
<p>切换到普通用进行安装：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">su wzgy</span><br></pre></td></tr></table></figure>

<p>如果安装rockyLinux-9之后，默认提示安装的版本是 postgresql-13.10，使用TAB键进行补全会提示。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[wzgy@localhost ~]$ dnf -y install postgresql-server-13.10-1.el9_1.x86_64</span><br><span class="line">postgresql-contrib-13.10-1.el9_1.x86_64   </span><br><span class="line">...</span><br><span class="line">postgresql-server-13.10-1.el9_1.x86_64	postgresql-upgrade-13.10-1.el9_1.x86_64</span><br></pre></td></tr></table></figure>


<p>如果想安装比较新的版本，可以前往postgresql官网找到对应的Linux发行版选择对应版本进行安装。</p>
<p>postgreSQL 下载地址： <span class="exturl" data-url="aHR0cHM6Ly93d3cucG9zdGdyZXNxbC5vcmcvZG93bmxvYWQv">https://www.postgresql.org/download/<i class="fa fa-external-link-alt"></i></span></p>
<p>示例选择 Linux 发行版<strong>Red Hat&#x2F;Rocky&#x2F;CentOS version 9</strong>（版本），<strong>PostgreSQL Yum</strong>源仓库：<br><span class="exturl" data-url="aHR0cHM6Ly93d3cucG9zdGdyZXNxbC5vcmcvZG93bmxvYWQvbGludXgvcmVkaGF0Lw==">https://www.postgresql.org/download/linux/redhat/<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>PostgreSQL 快速安装</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo dnf install -y https://download.postgresql.org/pub/repos/yum/reporpms/EL-9-x86_64/pgdg-redhat-repo-latest.noarch.rpm</span><br><span class="line">sudo dnf -qy module <span class="built_in">disable</span> postgresql</span><br><span class="line">sudo dnf install -y postgresql15-server</span><br><span class="line">sudo /usr/pgsql-15/bin/postgresql-15-setup initdb</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> postgresql-15</span><br><span class="line">sudo systemctl start postgresql-15</span><br></pre></td></tr></table></figure>



<p><strong>PostgreSQL 详细安装步骤</strong></p>
<p><strong>PostgreSQL 下载所需要 rpm 依赖包，用于更新（版本库）到最新版本</strong>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo dnf install -y https://download.postgresql.org/pub/repos/yum/reporpms/EL-9-x86_64/pgdg-redhat-repo-latest.noarch.rpm</span><br></pre></td></tr></table></figure>

<p><strong>PostgreSQL 导入公钥，验证过程，由于网络等原因可能会失败</strong>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo dnf -qy module <span class="built_in">disable</span> postgresql</span><br><span class="line">导入 GPG 公钥 0x442DF0F8:</span><br><span class="line"> Userid: <span class="string">&quot;PostgreSQL RPM Building Project &lt;pgsql-pkg-yum@postgresql.org&gt;&quot;</span></span><br><span class="line"> 指纹: 68C9 E2B9 1A37 D136 FE74 D176 1F16 D2E1 442D F0F8</span><br><span class="line"> 来自: /etc/pki/rpm-gpg/RPM-GPG-KEY-PGDG</span><br></pre></td></tr></table></figure>

<p><strong>PostgreSQL 安装 postgresql-15 服务</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo dnf install -y postgresql15-server</span><br></pre></td></tr></table></figure>
<p>由于网络等原因，<strong>可能安装会比较缓慢</strong>，这里建议更换为国内yum &amp; dnf 源，比如阿里、网易等等都可以。</p>
<p><strong>比如更换阿里源</strong>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -e <span class="string">&#x27;s|^mirrorlist=|#mirrorlist=|g&#x27;</span> \</span><br><span class="line">    -e <span class="string">&#x27;s|^#baseurl=http://dl.rockylinux.org/$contentdir|baseurl=https://mirrors.aliyun.com/rockylinux|g&#x27;</span> \</span><br><span class="line">    -i.bak \</span><br><span class="line">    /etc/yum.repos.d/rocky-*.repo</span><br><span class="line">dnf makecache</span><br></pre></td></tr></table></figure>

<p><strong>注意</strong>：替换镜像源，建议先备份，然后验证路径是否正确。</p>
<p>示例，注意大小写，可能存在无法读取正确路径，<strong>Linux下对大小写敏感</strong>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ls</span> /etc/yum.repos.d/rocky-*.repo</span><br></pre></td></tr></table></figure>
<p>输出信息：&#x2F;etc&#x2F;yum.repos.d&#x2F;rocky-addons.repo   &#x2F;etc&#x2F;yum.repos.d&#x2F;rocky-devel.repo   &#x2F;etc&#x2F;yum.repos.d&#x2F;rocky-extras.repo，证明路径真实存在。</p>
<p>备份，sed命令接 -i 属性已经加入备份到当前目录：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -i .bak \</span><br><span class="line">/etc/yum.repos.d/rocky-*.repo</span><br></pre></td></tr></table></figure>
<p>最后使用 dnf makecache 更新缓存：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dnf makecache</span><br></pre></td></tr></table></figure>
<p>如果使用 RHEL8 之前，请使用 yum makecache 更新。</p>
<p><strong>PostgreSQL 初始化</strong>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/usr/pgsql-15/bin/postgresql-15-setup initdb</span><br></pre></td></tr></table></figure>
<p>看到：Initializing database … OK，证明初始化完成。</p>
<p>为什么这样执行？<br>答：postgresql-15-setup 脚本所在绝对路径位置 &#x2F;usr&#x2F;pgsql-15&#x2F;bin&#x2F;，通过 initdb 参数进行初始化。</p>
<p>如果你有过使用MySQL（MariaDB）或者Oracle以及其它关系型数据库经验，也存在初始化的过程，执行命令略有不同。在MySQL（MariaDB）中，可以使用如下命令初始化：bin\mysqld –initialize-insecure 或者 bin\mysqld –initialize-insecure –console。</p>
<p><strong>PostgreSQL 设置开机自启</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> postgresql-15</span><br></pre></td></tr></table></figure>
<p>看到输出信息：Created symlink &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;multi-user.target.wants&#x2F;postgresql-15.service → &#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;postgresql-15.service. 代表设置开机自启完成。</p>
<p><strong>PostgreSQL 服务启动</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl start postgresql-15</span><br></pre></td></tr></table></figure>



<p>查询当前用户身份：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash-5.1$ <span class="built_in">whoami</span></span><br><span class="line">postgres</span><br></pre></td></tr></table></figure>

<p>可以看到当前用户已经切换到了 postgres。</p>
<p><strong>管理 PostgreSQL 服务另一种方式，使用 pg_ctl 脚本</strong></p>
<p>pg_ctl  命令启动服务：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash-5.1$ /usr/pgsql-15/bin/pg_ctl -D /var/lib/pgsql/15/data/ start</span><br></pre></td></tr></table></figure>

<p><img data-src="https://s1.ax1x.com/2023/04/25/p9KFxU0.png"></p>
<p>输出信息：</p>
<blockquote>
<p>等待服务器进程启动 ….2023-04-25 18:47:50.476 CST [3505] 日志:  日志输出重定向到日志收集进程<br>2023-04-25 18:47:50.476 CST [3505] 提示:  后续的日志输出将出现在目录 “log”中.<br> 完成<br>服务器进程已经启动</p>
</blockquote>
<p>pg_ctl  命令重启服务：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash-5.1$ /usr/pgsql-15/bin/pg_ctl -D /var/lib/pgsql/15/data/ restart</span><br></pre></td></tr></table></figure>

<p>输出信息：</p>
<blockquote>
<p>等待服务器进程关闭 …. 完成<br>服务器进程已经关闭<br>等待服务器进程启动 ….2023-04-25 18:48:34.629 CST [3521] 日志:  日志输出重定向到日志收集进程<br>2023-04-25 18:48:34.629 CST [3521] 提示:  后续的日志输出将出现在目录 “log”中.<br> 完成<br>服务器进程已经启动</p>
</blockquote>
<p>pg_ctl  命令停止服务：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash-5.1$ /usr/pgsql-15/bin/pg_ctl -D /var/lib/pgsql/15/data/ stop</span><br></pre></td></tr></table></figure>

<p>输出信息：</p>
<blockquote>
<p>等待服务器进程关闭 …. 完成<br>服务器进程已经关闭</p>
</blockquote>
<p><strong>注意</strong>：需要以非 root 用户身份执行命令。</p>
<blockquote>
<p>pg_ctl: 无法以 root 用户运行<br>请以服务器进程所属用户 (非特权用户) 登录 (或使用 “su”)</p>
</blockquote>
<h3 id="数据库软件-PostgreSQL-配置"><a href="#数据库软件-PostgreSQL-配置" class="headerlink" title="数据库软件 PostgreSQL 配置"></a>数据库软件 PostgreSQL 配置</h3><p><strong>postgreSQL 查看状态以及验证是否自启</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> postgresql-15</span><br></pre></td></tr></table></figure>
<p>当你看到 active (running)，代表服务（活跃）正常启动状态，看到 &#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;postgresql-15.service; enabled;代表开机自启，如果想开机禁用，使用命令 systemctl disable postgresql-15 即可。</p>
<p>到此为止，postgresql-15 安装过程以及服务启动演示完成。</p>
<p><strong>postgresql-15 初步使用</strong></p>
<p><strong>rockyLinux创建普通用户</strong>，需要root（创建用户）权限：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">useradd wzgy</span><br><span class="line">passwd wzgy</span><br></pre></td></tr></table></figure>
<p>参数含义：</p>
<ol>
<li>useradd wzgy：useradd 命令用于新增用户，后面接用户名。</li>
<li>passwd wzgy：passwd 命令用于修改新增用户密码。</li>
</ol>
<p><strong>切换到普用户</strong>，如果没有普通用户，可以创建一个用户用于安装管理postgresql-15：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">su wzgy</span><br><span class="line">sudo systemctl status postgresql-15.service</span><br></pre></td></tr></table></figure>
<p>参数含义：</p>
<ol>
<li>su wzgy：su 命令用切换用户身份。</li>
<li>sudo：用于提取权限，是一个很有意思的命令。</li>
</ol>
<p><strong>netstat 监控 5432 端口</strong>，输出信息如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[wzgy@localhost ~]$ sudo netstat -tlunp | grep 5432</span><br><span class="line">tcp        0      0 127.0.0.1:5432          0.0.0.0:*               LISTEN      9117/postmaster</span><br><span class="line">tcp6       0      0 ::1:5432                :::*                    LISTEN      9117/postmaster</span><br></pre></td></tr></table></figure>

<p><img data-src="https://s1.ax1x.com/2023/04/25/p9KFHgg.png"></p>
<p><strong>ps 监控服务命令监控 postmaster服务</strong>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ps -aux | grep postmaster</span><br></pre></td></tr></table></figure>

<p><img data-src="https://s1.ax1x.com/2023/04/25/p9KkpCT.png"></p>
<p>通过监控服务命令可以看出，初始化的data目录在：&#x2F;var&#x2F;lib&#x2F;pgsql&#x2F;15&#x2F;data&#x2F;。</p>
<p>使用 yum &amp; dnf 命令安装，<strong>默认配置文件所在路径</strong>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/var/lib/pgsql/15/data/postgresql.conf</span><br></pre></td></tr></table></figure>

<p><strong>注意</strong>：如果 data 目录不存在，大概率初始化阶段出现问题，也就是初始化失败，需要检查日志文件：&#x2F;var&#x2F;lib&#x2F;pgsql&#x2F;15&#x2F;initdb.log。</p>
<p>服务器环境可以使用 vim 或者 nvim（需要安装 neovim ）进行编辑配置文件：postgresql.conf。</p>
<p>修改配置：sudo vim &#x2F;var&#x2F;lib&#x2F;pgsql&#x2F;15&#x2F;data&#x2F;postgresql.conf</p>
<p>开放配置，只演示最基础的：</p>
<ol>
<li>listen_addresses &#x3D; ‘localhost’ ：监听地址，重启数据库软件服务生效；</li>
<li>defaults to ‘localhost’; use ‘*’ for all：<strong>默认为localhost，*代表开放所以ip进行访问</strong>。</li>
<li>port &#x3D; 5432 ： 监听端口，重启数据库软件服务生效；</li>
<li>max_connections &#x3D; 100 ：最大连接数，重启数据库软件服务生效。</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># - 配置文件：连接设置 -</span></span><br><span class="line">listen_addresses = <span class="string">&#x27;localhost&#x27;</span>          <span class="comment"># 监听地址，重启数据库软件服务生效;</span></span><br><span class="line">port = 5432                             <span class="comment"># 监听端口，重启数据库软件服务生效;</span></span><br><span class="line">max_connections = 100                   <span class="comment"># 最大连接数，重启数据库软件服务生效;</span></span><br></pre></td></tr></table></figure>

<p><img data-src="https://s1.ax1x.com/2023/04/25/p9Kk98U.png"></p>
<p><strong>注意</strong>：如果需要使用通用数据库管理工具远程连接，还需要做如下修改，授予相应权限，由于测试，我直接设置 all（所有ip）：</p>
<p><img data-src="https://s1.ax1x.com/2023/04/25/p9KFz5V.png"></p>
<p>编辑pg_hba.conf配置文件，vim &#x2F;var&#x2F;lib&#x2F;pgsql&#x2F;15&#x2F;data&#x2F;pg_hba.conf，找到 IPv4 local connections，官方文档有详细配置说明。理论上，应该可以通过 GRANT 命令形式授权，在MySQL（MariaDB）是支持的。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># IPv4 local connections:</span></span><br><span class="line">host    all             all             127.0.0.1/32            scram-sha-256</span><br><span class="line">host    all             all             all                     scram-sha-256</span><br></pre></td></tr></table></figure>

<p>如果安装了 firewalld 防火墙管理工具，需要开放相应的端口：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=5432/tcp --permanent</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure>

<p><img data-src="https://s1.ax1x.com/2023/04/25/p9KFHgg.png"></p>
<p><strong>修改配置文件后，记得重启 postgresql 服务</strong>。</p>
<p>如果你使用其它普通用户创建用户、角色、登录等等操作，会出现如下错误：<br>createuser: 错误: 连接到套接字”&#x2F;var&#x2F;run&#x2F;postgresql&#x2F;.s.PGSQL.5432”上的服务器失败:致命错误:  角色 “root” 不存在。</p>
<p>如果你不确定有哪些用户，可以使用命令查看：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># cat /etc/passwd | grep postgres</span></span><br><span class="line">postgres:x:26:26:PostgreSQL Server:/var/lib/pgsql:/bin/bash</span><br></pre></td></tr></table></figure>
<p><strong>请注意</strong>：有时候为了方便，我直接使用root用户操作，比如我用 cat 和 grep 命令查看postgres用户。</p>
<p>解决方案，<strong>切换用户为postgres：su postgres</strong>，如果你仔细阅读了官方文档，其实会有启发的。</p>
<p>登录字符命令操作界面 psql：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">psql</span><br></pre></td></tr></table></figure>



<h3 id="数据库软件-PostgreSQL-交互"><a href="#数据库软件-PostgreSQL-交互" class="headerlink" title="数据库软件 PostgreSQL 交互"></a>数据库软件 PostgreSQL 交互</h3><p>参数 postgres&#x3D;#：登录 PostgreSQL 默认用户前缀名称。</p>
<p>输入 select version(); 查询版本：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">postgres=<span class="comment"># select version();</span></span><br></pre></td></tr></table></figure>
<p>输出信息：PostgreSQL 15.2 on x86_64-pc-linux-gnu, compiled by gcc (GCC) 11.3.1 20220421 (Red Hat 11.3.1-2), 64-bit。</p>
<p>参数含义：</p>
<ol>
<li>PostgreSQL 15.2：数据库软件版本 15.2。</li>
<li>x86_64-pc-linux-gnu：使用Linux平台x86_64架构。</li>
<li>compiled by gcc (GCC) 11.3.1 20220421 (Red Hat 11.3.1-2)：编译gcc版本。</li>
<li>64-bit：64位操作系统。</li>
</ol>
<p>输入测试验证：postgres&#x3D;# select 1\g<br>输出结果： ?column? 	1，这是正常状态。</p>
<p><strong>创建表 books</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">postgres<span class="operator">=</span># <span class="keyword">create</span> <span class="keyword">table</span> books(id <span class="type">varchar</span>(<span class="number">64</span>) <span class="keyword">primary</span> key,name <span class="type">varchar</span>(<span class="number">64</span>));</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span></span><br></pre></td></tr></table></figure>



<p><strong>新增操作</strong>，插入一条数据：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">postgres<span class="operator">=</span># <span class="keyword">insert</span> <span class="keyword">into</span> books <span class="keyword">values</span>(<span class="string">&#x27;1001&#x27;</span>,<span class="string">&#x27;绝世武功秘籍&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="number">0</span> <span class="number">1</span></span><br></pre></td></tr></table></figure>



<p><strong>查询操作</strong>，查询表 books ：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">postgres<span class="operator">=</span># <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> books\g</span><br><span class="line">  id  <span class="operator">|</span>     name</span><br><span class="line"><span class="comment">------+--------------</span></span><br><span class="line"> <span class="number">1001</span> <span class="operator">|</span> 绝世武功秘籍</span><br><span class="line">(<span class="number">1</span> 行记录)</span><br></pre></td></tr></table></figure>


<p><strong>修改操作</strong>，修改表  books ：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">postgres<span class="operator">-</span># <span class="keyword">update</span> books <span class="keyword">set</span> name<span class="operator">=</span><span class="string">&#x27;PostgreSQL-15.2&#x27;</span>  <span class="keyword">where</span> id<span class="operator">=</span><span class="string">&#x27;1001&#x27;</span></span><br><span class="line"><span class="keyword">UPDATE</span> <span class="number">1</span></span><br></pre></td></tr></table></figure>

<p>再次查询：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">postgres<span class="operator">=</span># <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> books;</span><br><span class="line">  id  <span class="operator">|</span>      name</span><br><span class="line"><span class="comment">------+-----------------</span></span><br><span class="line"> <span class="number">1001</span> <span class="operator">|</span> PostgreSQL<span class="number">-15.2</span></span><br><span class="line">(<span class="number">1</span> 行记录)</span><br></pre></td></tr></table></figure>

<p>输出信息：发现 name 值已经变成了 PostgreSQL-15.2，证明修改成功。</p>
<p><strong>删除 books 表行记录</strong>，这是个人操作重要数据时有备份的习惯，开启显示事务，验证完后手动commit（提交）：</p>
<ol>
<li>begin：手动开启显示事务。</li>
<li>delete：执行删除语句。</li>
<li>rollback：执行回滚操作。</li>
<li>commit：最后提交。</li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">postgres<span class="operator">=</span><span class="operator">*</span># <span class="keyword">delete</span> <span class="keyword">from</span> books <span class="keyword">where</span> id<span class="operator">=</span><span class="string">&#x27;1001&#x27;</span>;</span><br><span class="line"><span class="keyword">DELETE</span> <span class="number">1</span></span><br></pre></td></tr></table></figure>

<p>无论是 修改或者删除（统称更新操作），建议加上条件 where 语句。</p>
<p>无图无真相，如下所示为时间线操作步骤：</p>
<p><img data-src="https://s1.ax1x.com/2023/04/25/p9KkC2F.png"></p>
<p>试一试 postgreSQL 使用 explain 分析SQL执行效率，和MySQL（MariaDB）差不多，参数显示更少：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">postgres<span class="operator">=</span># explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> books <span class="keyword">where</span> id<span class="operator">=</span><span class="string">&#x27;1001&#x27;</span>\g</span><br><span class="line">                                QUERY PLAN</span><br><span class="line"><span class="comment">--------------------------------------------------------------------------</span></span><br><span class="line"> Index Scan <span class="keyword">using</span> books_pkey <span class="keyword">on</span> books  (cost<span class="operator">=</span><span class="number">0.14</span>.<span class="number">.8</span><span class="number">.16</span> <span class="keyword">rows</span><span class="operator">=</span><span class="number">1</span> width<span class="operator">=</span><span class="number">292</span>)</span><br><span class="line">   Index Cond: ((id)::text <span class="operator">=</span> <span class="string">&#x27;1001&#x27;</span>::text)</span><br><span class="line">(<span class="number">2</span> 行记录)</span><br></pre></td></tr></table></figure>

<p>因为创建表时，事先已经指定 id 属性为主键（primary key），所以执行计划扫描表使用到索引（using books_pkey）。 </p>
<p><strong>psql 帮助命令</strong>：</p>
<ol>
<li>? [commands] ：显示反斜线命令的帮助；</li>
<li>? options  ：显示 psql 命令行选项的帮助；</li>
<li>? variables  ： 显示特殊变量的帮助；</li>
<li>\h [NAME]  ：  SQL命令语法上的说明，用*显示全部命令的语法说明。</li>
</ol>
<p>最后，善用帮助文档，有助于你快速定位操作命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">postgres=<span class="comment"># \h</span></span><br><span class="line">postgres=<span class="comment"># \?</span></span><br></pre></td></tr></table></figure>
<p>示例，我要查询alter具体用法：postgres-# \h alter 。如果你和我一样安装选择语言是中文版的rockyLinux，那么将有友好的中文翻译。</p>
<p>输出信息比较多：比如alter、create、drop等等DDL（Data Definition Language）语句。</p>
<p><strong>简单科普</strong>：<br>DDL（Data Definition Language）语句，数据定义语句。主要用于对索引、数据表结构、字段等进行创建、删除以及修改。比如我们常用的关键字主要有：CREATE、DROP、ALTER等等。一般是DBA管理员使用的比较频繁。</p>
<p>DML（Data Manipulation Language）语句，数据操纵语句。主要用于对数据库表中记录进行增删改查。比如我们常用的关键字主要有：INSERT、DELTE、UPDATE以及SELECT等。一般是开发人员使用的比较频繁。</p>
<p>DCL（Data Control Language）语句，数据控制语句。主要用于对用户、表、字段的访问权限进行控制授权。比如我们常用的关键字有：grant（授权）、revoke（撤回授权）等。</p>
<p>退出 psql 终端管理命令： postgres&#x3D;# \q</p>
<p>再次进入 psql 终端管理，执行：psql </p>
<h3 id="通用数据库管理软件-DBeaver"><a href="#通用数据库管理软件-DBeaver" class="headerlink" title="通用数据库管理软件 DBeaver"></a>通用数据库管理软件 DBeaver</h3><p><strong>初始化连接参数</strong>：</p>
<ol>
<li>新增数据库连接，选择PostgreSQL。</li>
<li>主机（host）：ip地址，localhost或者远程ip。</li>
<li>数据库（database）：不填默认使用 postgres。</li>
<li>端口（port）：默认为5432，实际工作中，建议修改，尽量避免被恶意扫描软件攻击。</li>
<li>用户名（username）：初始化安装会存在一个超级用户 postgres。</li>
<li>密码：可以使用 alter 语句修改，默认可能是空。</li>
</ol>
<p>修改密码语句：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">postgres<span class="operator">=</span># <span class="keyword">ALTER</span> <span class="keyword">USER</span> postgres PASSWORD <span class="string">&#x27;123456&#x27;</span>;</span><br></pre></td></tr></table></figure>



<p><img data-src="https://s1.ax1x.com/2023/04/25/p9KFXbn.png"></p>
<p><strong>测试连接</strong>，连接成功（正常）显示输出信息：</p>
<ol>
<li>选择顶部菜单栏：数据库。</li>
<li>新建数据库连接。</li>
<li>选择PostgreSQL，设置连接参数。</li>
<li>测试连接。</li>
</ol>
<p><img data-src="https://s1.ax1x.com/2023/04/25/p9KFvEq.png"></p>
<p><strong>数据库目录导航，查询表 books</strong>：</p>
<ol>
<li>定位数据库导航，选择postgres，依次展开public、表；</li>
<li>右键（F4）查看表 books；</li>
<li>选项：属性（显示表结构等等）、数据（行记录），ER图。</li>
</ol>
<p><img data-src="https://s1.ax1x.com/2023/04/25/p9KFLuj.png"></p>
<p><strong>使用SQL编辑器查询</strong>：</p>
<ol>
<li>选择选择顶部菜单栏：SQL编辑器；</li>
<li>新建SQL编辑器；</li>
<li>输入SQL语句：select * from books b 。</li>
</ol>
<p><img data-src="https://s1.ax1x.com/2023/04/25/p9KFbvQ.png"></p>
<p>看完整篇教程后，有同学可能有疑问，你这张表的字段为什么这么少？没错，就是这么少。</p>
<p>初体验，第一次嘛，姿势动作难度不能太高，容易劝退，所以比较简单。创建用户、创建角色以及权限相关等等知识没有具体介绍，也许会在下一篇介绍哟。</p>
<p>至此，在 Linux 发行版 rockyLinux-9上初步体验 postgresql最新版本postgresql-15。</p>
<p>以上总结，仅供参考！</p>
<p>如需转载，请标明出处和原作者。</p>
<p>参考资料：</p>
<ul>
<li>PostgreSQL-15官方文档：<span class="exturl" data-url="aHR0cHM6Ly93d3cucG9zdGdyZXNxbC5vcmcvZG9jcy8xNS9pbmRleC5odG1s">https://www.postgresql.org/docs/15/index.html<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>—END—</p>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>PostgreSQL</tag>
      </tags>
  </entry>
  <entry>
    <title>springboot初体验</title>
    <url>/2020/10/30/springboot%E5%88%9D%E4%BD%93%E9%AA%8C/</url>
    <content><![CDATA[<p>还记得那个某课网的两小时入门springboot的课程吗？某师兄的springboot系列教学视频确实是有点东西的，就是骚了一点。结果可想而知，在N年后被某人给举报了，被强制下架了，原因是引起某女学员不适。这门视频教程还是有可取之处的，通俗易懂。</p>
<blockquote>
<p>链接: <span class="exturl" data-url="aHR0cHM6Ly9wYW4uYmFpZHUuY29tL3MvMVVKRnVxRWVRMWVBbEMzbjRTZUNtVFE/cHdkPXN5aTU=">https://pan.baidu.com/s/1UJFuqEeQ1eAlC3n4SeCmTQ?pwd=syi5<i class="fa fa-external-link-alt"></i></span>   提取码: syi5 </p>
</blockquote>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>我最初是2017年年初开始接触springboot的，那会还是看的某编程网站的视频教程入门的（彼时springmvc还是主流，springboot刚刚进入人们的视线）。如今也打算总结一篇，关于快速入门springboot的图文教程。</p>
<p>其实网上已经有很多类似的教程了。无外乎图文详解，视频教程。当你看此篇教程时肯定是最新的，距离spring-boot崛起已经有4年了。但是，我还是准备写一篇关于spring-boot的详细教程。记录参考官方文档遇到的坑，也是对自己的一次总结。由于是初体验，会描述的很详细，但是不会太过于深入。会包含开发工具篇，也是为了照顾想入坑的，综合性的全面讲解非常有必要。</p>
<h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="开发工具篇"><a href="#开发工具篇" class="headerlink" title="开发工具篇"></a>开发工具篇</h2><h3 id="一、SpringTools官网直通车"><a href="#一、SpringTools官网直通车" class="headerlink" title="一、SpringTools官网直通车"></a>一、SpringTools官网直通车</h3><blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9zcHJpbmcuaW8vdG9vbHMv">https://spring.io/tools/<i class="fa fa-external-link-alt"></i></span><br>这里就不放项目创建截图了，会在下面的<code>eclipse</code>和<code>IDEA</code>下面放出截图。</p>
</blockquote>
<h3 id="二、eclipse官网直通车。"><a href="#二、eclipse官网直通车。" class="headerlink" title="二、eclipse官网直通车。"></a>二、eclipse官网直通车。</h3><p>已经使用<code>eclipse</code>了，可以去下载离线插件包。下图有<code>JavaEE</code>等其它<code>ide</code>的版本，也有历史版本。</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cuZWNsaXBzZS5vcmcvZG93bmxvYWRzL3BhY2thZ2VzLw==">https://www.eclipse.org/downloads/packages/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p><img data-src="https://img-blog.csdnimg.cn/20200923214918825.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p>使用<code>sts-eclipse</code>创建项目，与下载插件的<code>eclipse</code>创建方式同理。<br>1.点击<code>File</code>，再点击<code>New</code>，然后点击<code>Spring Starter Project</code>创建项目<br>2.也可以使用快捷键：<code>Alt+Shift+N</code>，然后点击<code>Spring Starter Project</code>创建项目</p>
<p><strong>创建项目，并配置属性</strong><br><img data-src="https://img-blog.csdnimg.cn/2020092321500916.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p><strong>配置项目，选好需要的依赖，并且定好稳定版本</strong></p>
<p><img data-src="https://img-blog.csdnimg.cn/20200923215054226.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>你看了上面的截图，会发现和下面使用<span class="exturl" data-url="aHR0cHM6Ly9zdGFydC5zcHJpbmcuaW8v">https://start.spring.io/<i class="fa fa-external-link-alt"></i></span>官网去创建项目是不是很类似，只是利用的工具不一样而已。</p>
<h3 id="三、IDEA官网直通车。"><a href="#三、IDEA官网直通车。" class="headerlink" title="三、IDEA官网直通车。"></a>三、IDEA官网直通车。</h3><p>tips：采用学生邮箱注册账号，永久免费使用旗舰版。</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cuamV0YnJhaW5zLmNvbS9pZGVhL2Rvd25sb2FkLyNzZWN0aW9uPXdpbmRvd3M=">https://www.jetbrains.com/idea/download/#section=windows<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p>下载完后，配置<code>maven</code>，<strong>2020版本之前的设置</strong>，<strong>配置阿里云的maven镜像在下面有说明</strong>。</p>
<p><strong>单个项目生效（settings）</strong><br>01、选中项目test<br>02、右键选择settings，搜索maven</p>
<p><strong>多项目生效（default settings）</strong><br><img data-src="https://img-blog.csdnimg.cn/20200925141622321.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p>01、点击空白处，选择<code>FILE</code> ，找到<code>other settings</code><br>02、选择<code>default settings</code><br>03、找到<code>Build, Execution, Deployment</code>这一栏<br>04、选择<code>Bulid Tools</code>点击展开<br>05、然后配置<code>maven</code>，这样就解决了<code>IDEA</code>一次设置所有新建的<code>maven</code>项目都生效。</p>
<p><strong>2020版本以及后面的设置</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">#后面配置maven同上</span><br><span class="line">File -&gt; new project settings -&gt; settings for new projects</span><br></pre></td></tr></table></figure>

<p>idea的版本不用太新或者比较旧的版本，稳定就行。我个人一直沿用的2017.1的版本，用作测试完全没问题的。<strong>打开IDEA首先显示已经创建过的项目</strong>。<br><img data-src="https://img-blog.csdnimg.cn/20200924125626475.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p><strong>进入主界面创建项目方法</strong><br><img data-src="https://img-blog.csdnimg.cn/20200924125843777.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><strong>创建项目</strong></p>
<p>这里会选择你的启动IDEA默认配置的JDK版本，当然右上角的New可以配置安装其它的JDK版本。<br><img data-src="https://img-blog.csdnimg.cn/20200924130415309.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p><strong>进入项目配置文件列表</strong></p>
<p>我选择的是<code>JDK8</code>版本与我默认使用版本保持一致。你也可以视情况而定，这个并不冲突。第三种创建方式对项目配置列表有的详细的描述，这里就不做过多介绍。</p>
<p><img data-src="https://img-blog.csdnimg.cn/20200924130002565.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><strong>配置pom依赖</strong></p>
<p>为了演示需要，我选择了<code>Spring Web</code>选项。<br><img data-src="https://img-blog.csdnimg.cn/20200924130327477.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><strong>配置完后，点击finish创建项目</strong></p>
<p><strong>project</strong>：项目名</p>
<p><strong>project location</strong>：工作空间，可以自行选择修改的。</p>
<p><img data-src="https://img-blog.csdnimg.cn/20200924130751239.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<h4 id="1、配置maven镜像"><a href="#1、配置maven镜像" class="headerlink" title="1、配置maven镜像"></a>1、配置maven镜像</h4><p>官方默认的镜像地址是国外的，懂得都懂，龟速前进。配置阿里云的镜像地址，瞬间飞一般的感觉，纵享丝滑。</p>
<p>配置<code>settings.xml</code>文件，设置<code>repo</code>存储地址。<br><img data-src="https://img-blog.csdnimg.cn/20200924131850192.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p>将下面的<strong>阿里云maven镜像地址</strong>配置到<strong>mirrors</strong>中。当然也可以配置到<code>pom.xml</code>文件中，单个项目生效。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">id</span>&gt;</span>alimaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun maven<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  　　 <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span>        </span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br></pre></td></tr></table></figure>

<br/>

<p>做完上面的配置后，再配置置自己下载的<code>maven</code>到<code>IDEA</code>中。<code>eclipse</code>配置<code>maven</code>也是大同小异，我就没截图了。</p>
<p><strong>注意：这里选中项目进行设置，只对单个项目生效的，上面有说明的。</strong></p>
<p><img data-src="https://img-blog.csdnimg.cn/20200924131147771.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p>项目的启动就不做过多截图了，选中<code>DemoApplication.java</code>通过右键点击<code>run</code>运行，项目右上角也有<code>run</code>选项启动。</p>
<p>或者在控制台使用命令运行，清理后打包再运行。这个命令适用<code>windows</code>平台的<code>CMD</code>控制台以及<code>DIEA</code>自带的<code>Terminal</code>控制台，其它方式请参考官方文档。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mvn clean package spring-boot:run</span><br></pre></td></tr></table></figure>

<p><strong>项目启动成功的界面</strong></p>
<p><img data-src="https://img-blog.csdnimg.cn/20200924133928591.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><img data-src="https://img-blog.csdnimg.cn/20200924133928630.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p>IDEA这个工具太强大了，里面还有很多快捷键需要你自己摸索熟练的应用。我最喜欢这款软件的原因，是她的自动保存机制真的很nice。</p>
<p>也不排除有的人就喜欢用eclipse，直到现在我还是用eclipse比较多，可能是先入为主吧，很多快捷键都适应了。由于是初体验，所以花了很大篇幅讲解了利用开发工具创建项目。</p>
<p><strong>使用何种IDE，视你的实际工作环境而定，没必要纠结。</strong></p>
<h3 id="四、spring-boot官网直通车。"><a href="#四、spring-boot官网直通车。" class="headerlink" title="四、spring-boot官网直通车。"></a>四、spring-boot官网直通车。</h3><p>进入官网可以看到此时的最新稳定版是2.0版本的：2.3.4.release(release代表稳定版)<br><img data-src="https://img-blog.csdnimg.cn/20200923214121484.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p>可以参考官方文档，毕竟最好的自学方式，还是采用官方文档。此时最新稳定版为2.3.4。</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9zcHJpbmcuaW8vcHJvamVjdHMvc3ByaW5nLWJvb3Q=">https://spring.io/projects/spring-boot<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<h3 id="五、通过spring官网快捷创建项目"><a href="#五、通过spring官网快捷创建项目" class="headerlink" title="五、通过spring官网快捷创建项目"></a>五、通过spring官网快捷创建项目</h3><p><strong>点击开启创建项目之旅</strong>：</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9zdGFydC5zcHJpbmcuaW8v">https://start.spring.io/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<h4 id="1、详细的描述"><a href="#1、详细的描述" class="headerlink" title="1、详细的描述"></a>1、详细的描述</h4><p>以下是截的全图<br><img data-src="https://img-blog.csdnimg.cn/20200923213103852.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<h4 id="2、详情简述"><a href="#2、详情简述" class="headerlink" title="2、详情简述"></a>2、详情简述</h4><p><img data-src="https://img-blog.csdnimg.cn/20200923213217751.png#pic_center" alt="在这里插入图片描述"></p>
<ul>
<li>Project：采用maven或者其它方式构建</li>
<li>Language：采用java语言或者其它语言</li>
</ul>
<p><img data-src="https://img-blog.csdnimg.cn/20200923213252127.png#pic_center" alt="在这里插入图片描述"></p>
<ul>
<li>Dependencies：pom文件依赖，勾上spring-web</li>
</ul>
<p><img data-src="https://img-blog.csdnimg.cn/20200923213319537.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<ul>
<li>Spring Boot版本：2.3.4目前最新稳定版  </li>
<li>Project Metadata：值得注意的几个点  </li>
<li>Group：项目组名，例如com.kart </li>
<li>Artifact：项目名，例如demo </li>
<li>Description：项目描述  </li>
<li>Packaging：打包，Jar包或者War包  </li>
<li>Package name：项目包名，例如com.tcloud.demo. </li>
<li>Java版本：采用JDK8或者11，具体是实际情况而定</li>
</ul>
<p><img data-src="https://img-blog.csdnimg.cn/20200923213446623.png#pic_center" alt="在这里插入图片描述"></p>
<ul>
<li>GENERATE CTRL+：点击创建项目</li>
</ul>
<h4 id="3、打包运行springboot项目"><a href="#3、打包运行springboot项目" class="headerlink" title="3、打包运行springboot项目"></a>3、打包运行springboot项目</h4><p>windows下面的CMD命令操作我就不做过多描述。习惯了linux下的命令操作，反而不习惯win的命令操作了。使用CMD命令提示符或者win10自带的win_powershell都可以，<strong>以管理员身份运行</strong>。</p>
<p><strong>切换到D盘</strong>。与linux不同，<code>linux</code><strong>是一个文件系统</strong>。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">d: </span><br></pre></td></tr></table></figure>

<p><strong>切换到具体目录</strong>，这点和<code>linux</code>是一样的</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#例如 cd 接具体目录</span></span><br><span class="line"><span class="built_in">cd</span> /workspace/demo </span><br></pre></td></tr></table></figure>

<p><strong>mvn命令运行项目</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">mvn clean package spring<span class="literal">-boot</span>:run</span><br></pre></td></tr></table></figure>


<p>其实，使用开发工具创建项目和这种模式差不多，区别不大。无论是<code>sts-eclipse</code>，还是<code>IDEA</code>和<code>eclipse</code>创建项目都是大同小异的。创建完后，可以使用eclipse或者IDEA导入（import）项目，只是使用工具创建项目更加方便而已。</p>
<p><strong>工欲善其事，必先利其器。</strong>    假如创建项目折腾半天，你可能会半途而废。所以上面花了很大的篇幅介绍了各种工具的使用，如何快速创建<code>springboot</code>项目。<strong>开发工具篇</strong>到此就全部介绍完了。<strong>后面衔接解决问题篇</strong>，介绍了我遇到的一些问题，将来你可能也会遇到。</p>
<h2 id="六、解决问题篇"><a href="#六、解决问题篇" class="headerlink" title="六、解决问题篇"></a>六、解决问题篇</h2><h3 id="1、发现问题"><a href="#1、发现问题" class="headerlink" title="1、发现问题"></a>1、发现问题</h3><p>idea启动spring-boot项目问题</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">No active profile set, falling back to <span class="keyword">default</span> profiles: <span class="keyword">default</span></span><br></pre></td></tr></table></figure>
<p>可以选择忽略掉，程序运行起来是没问题的</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Process finished with exit code <span class="number">0</span> </span><br></pre></td></tr></table></figure>
<p>翻译：程序执行完毕并退出</p>
<h3 id="2、思考问题"><a href="#2、思考问题" class="headerlink" title="2、思考问题"></a>2、思考问题</h3><p>应该与spring-boot版本无关。在控制台，使用以下命令执行是没问题的。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mvn clean package spring-boot:run</span><br></pre></td></tr></table></figure>
<p>所以猜测是不是idea启动与pom文件的某个设置属性有关，由此发现tomcat设置有问题。</p>
<h3 id="3、解决方案"><a href="#3、解决方案" class="headerlink" title="3、解决方案"></a>3、解决方案</h3><p>万一遇到jar包冲突</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 注意scope的用法，使用mvn命令启动没问题，在idea里点run就出问题 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-tomcat<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- 在idea中启动正常执行退出，屏蔽解决问题，scope用法我是很疑惑的 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>使用eclipse for javaee：启动毫无问题。<strong>使用idea</strong>：<strong>屏蔽掉&lt;! –&lt; scope &gt;provided&lt;&#x2F; scope &gt; –&gt;这个属性</strong>，启动不会退出。</p>
<p>保留一点悬念。关于<code>scope</code>属性的用法，这里不做描述，请阅读官方文档。<strong>解决问题篇</strong>到此就全部描述完了，后面衔接<strong>具体讲解篇</strong>，会简单的涉及到mvc三层中的<code>controller</code>和<code>dao</code>（<strong>jpa里面就叫repository</strong>）的简单使用。</p>
<br/>

<h2 id="实战讲解篇"><a href="#实战讲解篇" class="headerlink" title="实战讲解篇"></a>实战讲解篇</h2><h3 id="1、controller的简单使用"><a href="#1、controller的简单使用" class="headerlink" title="1、controller的简单使用"></a>1、controller的简单使用</h3><h4 id="1-1、常用的一些注解"><a href="#1-1、常用的一些注解" class="headerlink" title="1.1、常用的一些注解"></a>1.1、常用的一些注解</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br></pre></td></tr></table></figure>
<p><strong>作用</strong>：处理http请求</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br></pre></td></tr></table></figure>
<p><strong>作用</strong>：spring4之后新加的注解，原来返回json数据需要ResponseBody+@Controller配合使用。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//（旧版，特殊需求需要用到）</span></span><br><span class="line"><span class="meta">@RequestMapping</span></span><br></pre></td></tr></table></figure>
<p><strong>作用</strong>：配置url映射</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@GetMapping</span></span><br></pre></td></tr></table></figure>
<p><strong>作用</strong>：以get形式提交，一般用作查询</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@PostMapping</span></span><br></pre></td></tr></table></figure>
<p><strong>作用</strong>：以post方式提交，用于修改或者更新</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@PathVariable</span> </span><br></pre></td></tr></table></figure>
<p><strong>作用</strong>：获取url中的数据</p>
<p><strong>例如</strong>：   </p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/hello/&#123;id&#125;&quot;)</span></span><br><span class="line">   <span class="keyword">public</span> String <span class="title function_">Hello</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Integer id)</span>&#123;</span><br><span class="line">   	<span class="keyword">return</span> <span class="string">&quot;id:&quot;</span> + id;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>


<p><strong>测试</strong>：默认启动端口为8080，你不改也行，我这里演示需要就改了。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">http:<span class="comment">//localhost:8081/hello/100  </span></span><br></pre></td></tr></table></figure>

<p><strong>返回结果</strong>：id&#x3D;100</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestParam</span></span><br></pre></td></tr></table></figure>

<p><strong>作用</strong>：获取请求参数的值</p>
<p><strong>例如</strong>：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 这样设置,url后必须传ID</span></span><br><span class="line">   <span class="meta">@GetMapping(&quot;/must&quot;)</span></span><br><span class="line">   <span class="keyword">public</span> String <span class="title function_">test</span><span class="params">(<span class="meta">@RequestParam(&quot;id&quot;)</span> Integer id)</span>&#123;</span><br><span class="line">   	<span class="keyword">return</span> <span class="string">&quot;id:&quot;</span> + id;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 这样设置,url后非必须传ID,可以设置默认值</span></span><br><span class="line">   <span class="meta">@GetMapping(&quot;/normal&quot;)</span></span><br><span class="line">   <span class="keyword">public</span> String <span class="title function_">testNotSetId</span><span class="params">(<span class="meta">@RequestParam(value = &quot;id&quot;,required = false,defaultValue = &quot;0&quot;)</span> </span></span><br><span class="line"><span class="params">   Integer id)</span>&#123;</span><br><span class="line">   	<span class="keyword">return</span> <span class="string">&quot;id:&quot;</span> + id;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p><strong>测试</strong>：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">http:<span class="comment">//localhost:8081/test?id=100</span></span><br></pre></td></tr></table></figure>

<p><strong>返回结果</strong>：id:100</p>
<h3 id="2、Repository"><a href="#2、Repository" class="headerlink" title="2、Repository"></a>2、Repository</h3><h4 id="2-1、简介"><a href="#2-1、简介" class="headerlink" title="2.1、简介"></a>2.1、简介</h4><p>首先看一看<strong>JPA、Hibernate、MyBatis以及JDBC</strong>的简介。</p>
<p><strong>JPA</strong></p>
<p>抽象存储库的实现是Java应用程序框架Spring的领域驱动设计的关键构建块。 透明地支持所有可用的JPA实现，并支持CRUD操作以及方便地执行数据库查询。</p>
<p><strong>Hibernate</strong></p>
<p>Hibernate为Java提供了一个开源的对象关系映射框架。版本3.2及更高版本提供了Java 持久化 API的实现。Gavin King创立了Hibernate项目。他代表JBoss参加JSR220，这是负责开发JPA的JCP专家组。这引发了围绕JPA和Hibernate之间关系的持续争议和猜测。Sun Microsystems表示，这些想法来自几个框架，包括Hibernate和Java 数据对象。</p>
<p><strong>MyBatis</strong><br>是一个Java持久化框架，它通过XML描述符或注解把对象与存储过程或SQL语句关联起来。MyBatis是在Apache许可证 2.0下分发的自由软件，是iBATIS 3.0的分支版本。其维护团队也包含iBATIS的初创成员。</p>
<p><strong>JDBC</strong><br>Java数据库连接，（Java Database Connectivity，简称JDBC）是Java语言中用来规范客户端程序如何来访问数据库的应用程序接口，提供了诸如查询和更新数据库中数据的方法。JDBC也是Sun Microsystems的商标。JDBC是面向关系型数据库的。</p>
<p><strong>Spring Data JPA</strong></p>
<p>参考官方文档，进行学习。</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9zcHJpbmcuaW8vcHJvamVjdHMvc3ByaW5nLWRhdGEtanBhI2xlYXJu">https://spring.io/projects/spring-data-jpa#learn<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p>版本控制</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3NwcmluZy1wcm9qZWN0cy9zcHJpbmctZGF0YS1qcGE="> https://github.com/spring-projects/spring-data-jpa<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p>简单示例</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3NwcmluZy1wcm9qZWN0cy9zcHJpbmctZGF0YS1leGFtcGxlcy90cmVlL21hc3Rlci9qcGE=">https://github.com/spring-projects/spring-data-examples/tree/master/jpa<i class="fa fa-external-link-alt"></i></span><br>通过以上给出的jpa的简单示例链接，你可以到github上研究研究。</p>
</blockquote>
<p><code>spring</code>官方将<code>jpa</code>集成到了<code>spring</code>容器里面，使用起来更加方便快捷。<br>以下引用了<code>spring</code>官方的描述，有的是自己翻译调整的，可能描述有瑕疵。</p>
<p>Spring Data JPA是这个庞大家族Spring Data系列的一部分，可轻松实现基于JPA的存储库。 此模块处理对基于JPA的数据访问层的增强支持。 它使构建使用数据访问技术的Spring支持的应用程序变得更加容易。</p>
<p>实现应用程序的数据访问层已经很长一段时间了。为了执行简单查询以及执行分页和审核，必须编写太多样板代码。Spring Data JPA旨在通过将工作量减少到实际需要的数量来改善数据访问层的实现。作为开发人员，您将编写包括自定义finder方法在内的存储库接口，Spring会自动提供实现。</p>
<p><strong>Spring Data JDBC</strong></p>
<p>是这个庞大家族spring-data系列的一部分，对JDBC数据访问进行增强支持，构建更容易。 现在没有提供JPA的缓存，延迟加载。旨在简洁，功能有限，不需要过于复杂的功能。 未来将会回写很多JPA里面支持的其它的功能。</p>
<h4 id="2-2、联系"><a href="#2-2、联系" class="headerlink" title="2.2、联系"></a>2.2、联系</h4><p><strong>Spring Data JPA、Hibernate、MyBatis</strong>这几个比较火的ORM持久层框架。</p>
<p><strong>Hibernate和MyBatis</strong>是对JDBC进行了封装，底层实现就是JDBC，阅读源码不难看出。</p>
<p><strong>Spring DataJPA</strong>是对<strong>Hibernate</strong>进行了封装，使用更加方便。</p>
<p>了解完上面的一些理论知识之后，可以加深你对orm框架的理解，便于后续的学习。</p>
<br/>

<h3 id="3、配置数据库jdbc-config-datasource"><a href="#3、配置数据库jdbc-config-datasource" class="headerlink" title="3、配置数据库jdbc_config_datasource"></a>3、配置数据库jdbc_config_datasource</h3><p><strong>采用application.properties文件形式</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">#jdbc_config   datasource</span><br><span class="line">spring.datasource.driver-class-name=com.mysql.jdbc.Driver</span><br><span class="line">#autoReconnect=true这个属性表示自动重连，具体以实际开发需求为准。</span><br><span class="line">spring.datasource.url=jdbc:mysql://127.0.0.1:3306/kart?useUnicode=true&amp;characterEncoding=UTF-8&amp;autoReconnect=true</span><br><span class="line">spring.datasource.username=root</span><br><span class="line">spring.datasource.password=root</span><br><span class="line">配置数据源</span><br><span class="line">#Hikari will use the above plus the following to setup connection pooling</span><br><span class="line">spring.datasource.type=com.zaxxer.hikari.HikariDataSource</span><br></pre></td></tr></table></figure>

<p><strong>采用application.yml文件形式，推荐这种方式配置</strong></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://127.0.0.1:3306/kart?characterEncoding=utf8</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span> </span><br><span class="line">    <span class="attr">password:</span> <span class="number">123456</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">com.zaxxer.hikari.HikariDataSource</span></span><br></pre></td></tr></table></figure>

<p><strong>pom.xml文件相应的也需要配置</strong><br>这里不用设置版本，spring-boot已经为你设置好了。这就是spring-boot的好处，减少配置。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-jpa<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>最后就是Java代码的书写，当然这里就不贴代码了。留个悬念，自行参考官网的示例。<br><strong>JPA使用起来很方便，推荐去官网学习学习</strong>。</p>
<h1 id="小声哔哔"><a href="#小声哔哔" class="headerlink" title="小声哔哔"></a>小声哔哔</h1><p>好了，到此为止就是此篇文章的全部内容了，<strong>能看到这里的都是帅哥靓妹啊</strong>！！！善于总结，其乐不穷。<strong>好记性不如烂笔头</strong>，多收集自己第一次尝试的成果，收获也颇丰。<strong>你会发现，自己的知识宝库越来越丰富</strong>。</p>
]]></content>
      <categories>
        <category>web开发</category>
      </categories>
      <tags>
        <tag>springboot</tag>
      </tags>
  </entry>
  <entry>
    <title>vercel跳反诈临时解决方案</title>
    <url>/2023/10/07/vercel%E8%B7%B3%E5%8F%8D%E8%AF%88%E4%B8%B4%E6%97%B6%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%E8%AE%BF%E9%97%AE%E4%B8%AA%E4%BA%BAblog/</url>
    <content><![CDATA[<p>使用 github pages 搭建个人静态博客站点，其中 vercel 体验最佳。利用购买的域名做 cname 映射，借助 vercel、netlify、cloudflare 提升访问体验。</p>
<p>目前 vercel 已经无法访问，需要科学上网。貌似 2023.10.1 凌晨 GFW 又更新了一波规则，查看自己托管在 vercel 的 blog 已经无法访问。vscode 也跳反诈了，2023.10.3 貌似已经恢复正常。</p>
<p><strong>2023.10.8 晚间发现 vercel 恢复正常，可以访问了</strong>。个人托管在 netlify、cloudflare 的静态 blog 暂时正常，不清楚后续会不会挂掉。</p>
<span id="more"></span>

<h3 id="Windows-平台修改hosts"><a href="#Windows-平台修改hosts" class="headerlink" title="Windows 平台修改hosts"></a>Windows 平台修改hosts</h3><p><strong>友情提醒：修改 hosts 文件之前，请先做备份。你可以复制一份 hosts，以备不时之需</strong>。 </p>
<p>vercel跳反诈，即时使用域名 cname 解析 <code>cname-china.vercel-dns.com</code> ，一样无法访问。</p>
<p><strong>临时解决方案，仅限个人本地访问。修改 Windows hosts 配置</strong>：<br><code>C:\Windows\System32\drivers\etc\hosts</code></p>
<p>例如 hosts 新增，访问个人blog：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">76.223.126.88				   blog.cnwangk.top</span><br><span class="line">76.76.21.241				   blog.cnwangk.top</span><br></pre></td></tr></table></figure>



<p>刷新本地 DNS 缓存。Windows10 或者 Windows11 平台可以使用快捷键 <code>win + x + A</code>，<strong>以管理员身份</strong> Windows terminal 打开 CMD 或者 powershell：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">ipconfig /flushdns</span><br></pre></td></tr></table></figure>

<p><strong>验证方式一</strong>，Windows terminal 打开 CMD 或者 powershell：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">curl</span>  https://blog.cnwangk.top</span><br></pre></td></tr></table></figure>



<p><strong>验证方式二</strong>，打开浏览器，直接访问：<br><a href="https://blog.cnwangk.top/">https://blog.cnwangk.top</a></p>
<p>以上内容，仅供参考。</p>
<p>—END—</p>
]]></content>
      <categories>
        <category>杂谈</category>
      </categories>
  </entry>
  <entry>
    <title>rockyLinux镜像源下载地址</title>
    <url>/2023/04/17/rockyLinux%E9%95%9C%E5%83%8F%E6%BA%90%E4%B8%8B%E8%BD%BD%E5%9C%B0%E5%9D%80/</url>
    <content><![CDATA[<h3 id="rockylinux-官网获取"><a href="#rockylinux-官网获取" class="headerlink" title="rockylinux 官网获取"></a>rockylinux 官网获取</h3><p>官网：<span class="exturl" data-url="aHR0cHM6Ly9yb2NreWxpbnV4Lm9yZy9kb3dubG9hZA==">https://rockylinux.org/download<i class="fa fa-external-link-alt"></i></span></p>
<p>如果速度比较慢，请前往第三方开源镜像站获取，比如：阿里云、网易、中国科技大学以及浙江大学。</p>
<p>如下是个人整理的一些开源镜像站地址，可供参考：</p>
<ul>
<li>阿里巴巴开源镜像站：<span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIuYWxpeXVuLmNvbS9taXJyb3Iv">https://developer.aliyun.com/mirror/<i class="fa fa-external-link-alt"></i></span></li>
<li>网易开源镜像站：<span class="exturl" data-url="aHR0cHM6Ly9taXJyb3JzLjE2My5jb20v">https://mirrors.163.com/<i class="fa fa-external-link-alt"></i></span></li>
<li>腾讯软件源：<span class="exturl" data-url="aHR0cHM6Ly9taXJyb3JzLmNsb3VkLnRlbmNlbnQuY29tLw==">https://mirrors.cloud.tencent.com/<i class="fa fa-external-link-alt"></i></span></li>
<li>华为开源镜像站：<span class="exturl" data-url="aHR0cHM6Ly9taXJyb3JzLmh1YXdlaWNsb3VkLmNvbS9ob21l">https://mirrors.huaweicloud.com/home<i class="fa fa-external-link-alt"></i></span></li>
<li>清华大学开源软件镜像站：<span class="exturl" data-url="aHR0cHM6Ly9taXJyb3JzLnR1bmEudHNpbmdodWEuZWR1LmNuLw==">https://mirrors.tuna.tsinghua.edu.cn/<i class="fa fa-external-link-alt"></i></span></li>
<li>中国科学技术大学：<span class="exturl" data-url="aHR0cHM6Ly9taXJyb3JzLnVzdGMuZWR1LmNuLw==">https://mirrors.ustc.edu.cn/<i class="fa fa-external-link-alt"></i></span></li>
<li>浙江大学开源软件镜像站：<span class="exturl" data-url="aHR0cHM6Ly9taXJyb3JzLnpqdS5lZHUuY24v">https://mirrors.zju.edu.cn/<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>公共资源，请适度使用！资源最丰富的还属阿里云开源镜像站。</p>
<span id="more"></span>


<h3 id="rockylinux-开源镜像站获取"><a href="#rockylinux-开源镜像站获取" class="headerlink" title="rockylinux 开源镜像站获取"></a>rockylinux 开源镜像站获取</h3><p><strong>tips</strong>：如何获取？进入目录结构 rocky 或者 rockylinux，选择数字版本（比如9.1），再次选择目录 isos，根据你的场景需求选择操作平台（支持的处理器，请看下面的简单介绍）。</p>
<p><strong>rockylinux阿里云镜像仓库</strong><br><span class="exturl" data-url="aHR0cHM6Ly9taXJyb3JzLmFsaXl1bi5jb20vcm9ja3lsaW51eC8=">https://mirrors.aliyun.com/rockylinux/<i class="fa fa-external-link-alt"></i></span></p>
<p>8.7 &amp; 9.1 直达：</p>
<ul>
<li>rockylinux 8.7：<span class="exturl" data-url="aHR0cHM6Ly9taXJyb3JzLmFsaXl1bi5jb20vcm9ja3lsaW51eC84LjcvaXNvcy8=">https://mirrors.aliyun.com/rockylinux/8.7/isos/<i class="fa fa-external-link-alt"></i></span></li>
<li>rockylinux 9.1：<span class="exturl" data-url="aHR0cHM6Ly9taXJyb3JzLmFsaXl1bi5jb20vcm9ja3lsaW51eC85LjEvaXNvcy8=">https://mirrors.aliyun.com/rockylinux/9.1/isos/<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p><strong>rockylinux网易镜像仓库</strong><br><span class="exturl" data-url="aHR0cHM6Ly9taXJyb3JzLjE2My5jb20vcm9ja3kv">https://mirrors.163.com/rocky/<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>rockylinux中国科技大学镜像仓库</strong><br><span class="exturl" data-url="aHR0cHM6Ly9taXJyb3JzLnVzdGMuZWR1LmNuL3JvY2t5Lw==">https://mirrors.ustc.edu.cn/rocky/<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>rockylinux浙江大学镜像仓库</strong><br><span class="exturl" data-url="aHR0cHM6Ly9taXJyb3JzLnpqdS5lZHUuY24vcm9ja3kv">https://mirrors.zju.edu.cn/rocky/<i class="fa fa-external-link-alt"></i></span></p>
<p>访问上面提供的链接，根据你的场景需求选择操作平台：</p>
<ul>
<li>aarch64</li>
<li>ppc64le</li>
<li>s390x</li>
<li>x86_64：适用于x86架构64位处理器，个人PC大多数使用x86_64。</li>
</ul>
<p><strong>aarch64 是什么</strong>？<br>AArch64（Advanced ARM64）是一种64位精简指令集（RISC）处理器（计算机体系）架构。旨在提供高性能和低功耗的处理器，设计用于嵌入式系统、物联网设备和高性能计算应用。它是由ARM公司开发的，ARM处理器家族的一部分，由ARM公司开发并于2014年推出。并且是64位ARM处理器的一种，具有四个ARMv8-A核心和四个ARMv8-M核心。</p>
<p>AArch64处理器具有以下特点：</p>
<ul>
<li>四个ARMv8-A核心：这些核心具有64个执行单元，可以同时执行多个任务。</li>
<li>四个ARMv8-M核心：这些核心具有32个执行单元，适用于需要较少执行单元的应用程序。</li>
<li>内存管理：AArch64处理器具有独立的三级页式内存管理，可以提高内存访问速度和内存带宽。</li>
<li>高性能：AArch64处理器具有高时钟频率和大缓存，可以执行高性能计算和浮点运算。</li>
<li>低功耗：AArch64处理器通过优化功耗管理实现了低功耗运行，适用于需要长时间运行但不需要高性能的应用程序。</li>
<li>安全性：AArch64处理器具有安全特性，包括硬件安全模块（HSM）和安全单元（SA），可以提高系统的安全性。</li>
<li>精简指令集：AArch64处理器采用了精简指令集（RISC）设计，具有较低的指令执行时间和较少的指令数量，从而提高了处理器的效率。</li>
</ul>
<p>AArch64处理器主要应用于物联网、汽车、医疗、工控、高性能计算、嵌入式系统和云计算等领域，如智能家居、智能穿戴、物联网传感器、嵌入式系统等。由于其高性能和低功耗的特点，AArch64处理器在许多领域中具有广泛的应用前景。</p>
<p><strong>ppc64le 是什么</strong>？<br>ppc64le是一个已经推出了纯小端模式，POWER8作为首要目标，OpenPower基金会基础的技术，试图使基于x86的Linux软件的移植工作以最小的工作量进行。它是一款64位的处理器，采用了AMD64（x86-64）指令集架构，具有64个64位寄存器、8个64位通用寄存器、32个32位寄存器和两个64位指令寄存器。它支持IEEE 754标准的双精度浮点运算，具有较低的时钟频率和功耗，适用于需要高性能和低功耗的应用领域。</p>
<p>ppc64le处理器采用了小端模式，这意味着它具有较低的总线速度，但是能够在较小的空间内实现较高的性能。这使得它适用于需要高性能计算和存储系统的应用领域，如高性能计算机、网络处理器和存储控制器等。此外，ppc64le处理器还支持动态调整指令缓存大小和数据缓存大小，进一步提高了其性能和效率。</p>
<p>总的来说，ppc64le是一款功能强大的处理器，适用于需要高性能计算和存储系统的应用领域</p>
<p><strong>s390x 是什么</strong>？<br>S390X（Series 300）是IBM公司推出的64位桌面和服务器处理器系列，旨在提供高性能和可靠性。该系列处理器基于IBM Power7处理器技术，采用Socket 7接口，具有多个处理器核心和高达128个线程。<br>S390X是一种64位精简指令集计算机体系结构，旨在提供高性能和低功耗的处理器。它是由IBM公司开发的，并且是64位Intel处理器的一种，具有四个Intel 64核心和四个Intel 32核心。</p>
<p>S390X处理器系列具有以下特点：</p>
<ul>
<li>多个处理器核心：该系列处理器包含多个处理器核心，可以同时执行多个任务。<ul>
<li>四个Intel 64核心：这些核心具有64个执行单元，可以同时执行多个任务。</li>
<li>四个Intel 32核心：这些核心具有32个执行单元，适用于需要较少执行单元的应用程序。</li>
</ul>
</li>
<li>高性能：S390X处理器采用Power7技术，具有高时钟频率和大缓存，可以执行高性能计算和浮点运算。</li>
<li>低功耗：S390X处理器通过优化功耗管理实现了低功耗运行，适用于需要长时间运行但不需要高性能的应用程序。</li>
<li>精简指令集：S390X处理器采用了精简指令集（RISC）设计，具有较低的指令执行时间和较少的指令数量，从而提高了处理器的效率。</li>
<li>可靠性：S390X处理器采用冗余设计，包括两个核心和两个时钟域，可以在一个核心出现故障时保持服务器运行。</li>
<li>安全性：S390X处理器采用安全加密技术，包括AES技术和SHA-256技术，可以保护数据安全。</li>
<li>多媒体性能：S390X处理器支持高清视频播放和图形处理，适用于多媒体应用。</li>
</ul>
<p>S390X处理器主要应用于企业服务器、高性能计算、虚拟化和高清视频播放等领域。由于其高性能和低功耗的特点，S390X处理器在许多领域中具有广泛的应用前景，包括数据中心、云计算和高性能计算服务器等。</p>
<p><strong>x86_64 是什么</strong>？</p>
<p><strong>AMD64与Intel64 颇有争议。毕竟AMD率先发布，普遍认为AMD率先推出x86_64，也称AMD64。所以，你在某开源仓库下载安装包时看到后缀名通常带有amd64字样</strong>。</p>
<p>在x86-64出现以前，英特尔与惠普联合设计出IA-64架构；惟IA-64并不与x86兼容，且市场反应较冷淡，同时受制于多个专利权，使其他厂商不能模仿，规模没有很大。</p>
<p>x86_64架构于1999年由AMD设计，并首次公开64位集以扩展给x86，称为“AMD64”。其后也为英特尔所采用，现时英特尔称之为“Intel 64”，在之前曾使用过“Clackamas Technology” (CT)、“IA-32e”及“EM64T”。苹果公司和RPM包管理员以“x86-64”或“x86_64”称呼此64位架构。甲骨文公司及Microsoft称之为“x64”。BSD家族及其他Linux发行版则使用“x64-64”，32位版本则称为“i386”（或 i486&#x2F;586&#x2F;686），Arch Linux用x86_64称呼此64位架构。</p>
<p>x86_64（64-bit extended）是x86架构的64位拓展，是向后兼容于16位和32位的x86架构的64位计算机体系结构。它于1999年由AMD公司设计，并于2000年8月作为AMD64首次发布。AMD64架构包括两个处理器插槽（Socket A和Socket F）和一个64位的数据总线。</p>
<p>在AMD64架构中，32位和64位的代码可以共存，这意味着在一个平台上可以同时运行32位和64位应用程序。这使得AMD64成为在服务器和高性能计算领域广泛使用的64位计算平台。</p>
<p>除了AMD64，还有其他的64位计算平台，如Intel64和Itanium。Intel64是32位的x86-64架构，而Itanium是64位的Itanium-64架构。这些平台都是向后兼容于32位和64位的x86架构，并且都包括两个处理器插槽和一个64位的数据总线。</p>
<p>x86_64架构具有以下特点：</p>
<ul>
<li>向后兼容：与32位和16位的x86架构相比，x86_64架构是向后兼容的，可以在不更改硬件的情况下运行32位和16位应用程序。</li>
<li>高性能：x86_64架构的处理器具有高时钟频率和大缓存，可以执行高性能计算和浮点运算。</li>
<li>安全性：x86_64架构采用了安全扩展（SSSE3）指令集，可以提供额外的安全性特性，如AES加密、SHA-256计算等。</li>
<li>多媒体支持：x86_64架构的处理器支持高效的音频、视频和图形处理，可以轻松处理高清视频、3D游戏等多媒体应用。</li>
</ul>
<p>在2008年，微软公司发布了.NET框架，其中包括了对x86_64的支持。这使得C#和.NET程序可以编译为64位的.NET程序，并在64位的Windows操作系统上运行。此外，Linux发行版也开始将x86_64架构作为其默认的64位架构，以提供对64位程序的完全支持。</p>
]]></content>
      <categories>
        <category>开发运维</category>
      </categories>
      <tags>
        <tag>rocky</tag>
      </tags>
  </entry>
  <entry>
    <title>vim入门实战</title>
    <url>/2023/02/26/vim%E5%85%A5%E9%97%A8%E5%AE%9E%E6%88%98/</url>
    <content><![CDATA[<p>一入编程深似海，从此节操是路人。</p>
<p><strong>前段时间由于业务场景需求</strong>，不得不近一步学习 vim 使用方法，<strong>提高工作效率</strong>，就总结了一些常用快捷键使用方法。满足一般需求，掌握基本增、删、改、查就可以了，近一步学习可以了解多屏操作和宏的使用以及自定义插件功能。</p>
<p>Linux发行版服务器基本上是已经配置好 vi 或者 vim，可以使用进行练习，也可以下载vim客户端（支持多个平台：Linux、macOS、Windows）软件进行练习，当然还使用git bash一样可以进行练习。目前主流IDE工具，基本上是支持安装vim插件，开启插件支持vim相关功能。例如：VSCode、IntelliJ IDEA（社区版与旗舰版均支持）。</p>
<span id="more"></span>


<p>展示一下Windows平台下的vim以及gvim：</p>
<p>vim：在字符界面进行使用，可以看到初次进入会显示版本信息、维护人以及一些帮助命令。</p>
<p><a href="https://imgse.com/i/pp9CGA1"><img data-src="https://s1.ax1x.com/2023/02/26/pp9CGA1.png" alt="pp9CGA1.png"></a></p>
<p>GVIM：其实是GUI VIM，带有图形操作界面，便于桌面客户端使用。</p>
<p><a href="https://imgse.com/i/pp9CKcF"><img data-src="https://s1.ax1x.com/2023/02/26/pp9CKcF.png" alt="pp9CKcF.png"></a></p>
<p><strong>VSCode使用vim插件，简单介绍一下</strong></p>
<p>ctrl + shift + p：快速掉出命令行工具，键入vim找到Toggle Vim Mode</p>
<p><a href="https://imgse.com/i/pp9kna9"><img data-src="https://s1.ax1x.com/2023/02/26/pp9kna9.png" alt="pp9kna9.png"></a></p>
<h1 id="shell或者其它terminal快速纠错"><a href="#shell或者其它terminal快速纠错" class="headerlink" title="shell或者其它terminal快速纠错"></a>shell或者其它terminal快速纠错</h1><p>掌握常用快捷键提高日常工作效率，某些快捷键并不适用Windows terminal。</p>
<ul>
<li>ctrl + h ：删除上一个字符，ctrl + w：删除上一个单词，ctrl + u： 删除一整行；</li>
<li>ctrl + a：跳到行首，在Windows terminal是全选；ctrl + e：跳到行末，不适用Windows terminal；</li>
<li>ctrl + b：前移，不适用Windows terminal；ctrl + f：后移，不适用Windows terminal。</li>
</ul>
<p><strong>tips</strong>：Windows terminal快速跳转，使用ctrl + 左右方向键进行跳转。</p>
<h1 id="vim入门实战"><a href="#vim入门实战" class="headerlink" title="vim入门实战"></a>vim入门实战</h1><p>vim官网：<span class="exturl" data-url="aHR0cHM6Ly93d3cudmltLm9yZy8=">https://www.vim.org/<i class="fa fa-external-link-alt"></i></span></p>
<p>开源仓库：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3ZpbS92aW0=">https://github.com/vim/vim<i class="fa fa-external-link-alt"></i></span></p>
<p>插件查找：<span class="exturl" data-url="aHR0cHM6Ly92aW1hd2Vzb21lLmNvbS8=">https://vimawesome.com/<i class="fa fa-external-link-alt"></i></span></p>
<p>使用VimAwesome检索自己需要的插件，基本上每个插件列出了源地址。通常个人习惯从github上克隆，比较方便。</p>
<p><a href="https://imgse.com/i/pp9CacD"><img data-src="https://s1.ax1x.com/2023/02/26/pp9CacD.png" alt="pp9CacD.png"></a></p>
<p>唯有多练才能熟练，善用自带帮助文档，如下列举最基本帮助文档以及分屏操作获取方式。<br><strong>注意</strong>：使用格式为英文输入法下的冒号加上help，使用命令亦是如此。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">:<span class="built_in">help</span></span><br><span class="line">:<span class="built_in">help</span> vs</span><br><span class="line">:<span class="built_in">help</span> sp</span><br></pre></td></tr></table></figure>

<p><strong>插入（编辑）模式</strong>：a 	i 	o。插入模式姿势也很多啊，标准姿势 i ，高难度姿势 a、o。</p>
<ul>
<li><p>a：节奏插，在当前字符光标前一个字符插入</p>
</li>
<li><p>i：慢插，当前光标位置插入。</p>
</li>
<li><p>o：快插，快速在前一行下方插入一行空白行</p>
</li>
</ul>
<p><strong>快速终止</strong>（进入插入模式），等价于ESC退出编辑模式进入normal模式</p>
<ul>
<li><p>ctrl + [</p>
</li>
<li><p>ctrl + c</p>
</li>
</ul>
<p>养成使用 hjkl 按键替代方向键进行上下左右移动，提高操作效率。</p>
<h1 id="vim快速移动"><a href="#vim快速移动" class="headerlink" title="vim快速移动"></a>vim快速移动</h1><p><strong>normal模式</strong></p>
<p><strong>快速移动</strong>：按住快捷键 h j k l</p>
<ul>
<li>h：左移</li>
<li>j：下移</li>
<li>k：上移</li>
<li>l：右移</li>
</ul>
<p><strong>单词切换</strong></p>
<ul>
<li>w\W</li>
<li>b\B</li>
<li>e</li>
</ul>
<p><strong>搜索移动</strong>（行间）</p>
<ul>
<li>f\F：按住f输入单词，使用逗号（,），分号（;）切换单词。</li>
<li>t：转到输入字符前一个字符上。</li>
</ul>
<p><strong>水平移动</strong></p>
<ul>
<li>0：移动到行首第一个字符</li>
<li>^：移动到第一个非空白字符</li>
<li>$：移动到行尾，g_ 移动到非空白行尾</li>
</ul>
<p><strong>页面快速移动</strong></p>
<ul>
<li>ctrl + u： 上翻页，等同于shift + 方向键上键</li>
<li>ctrl + f： 下翻页，等同于shift + 方向键下键</li>
<li>gg :快速回到页面顶部。</li>
</ul>
<p>更多用法，可以参考</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">:<span class="built_in">help</span> g</span><br></pre></td></tr></table></figure>



<h1 id="vim增删改查"><a href="#vim增删改查" class="headerlink" title="vim增删改查"></a>vim增删改查</h1><p>vi：选择多个字符，等同于shift + v：选择当前行，使用G选择余下行。 </p>
<p><strong>normal模式下使用</strong></p>
<p>删除</p>
<ul>
<li>x：快速删除一个字符</li>
<li>d（delete）：配合文本对象快速删除一个单词：dw；快速删除一行：dd</li>
<li>d和x：配合数字执行多次</li>
</ul>
<p>新增</p>
<ul>
<li>插入数据（a	i	o）</li>
</ul>
<p>修改</p>
<ul>
<li>r\R（replace）：以…替代，替代当前字符，R：替代后续字符</li>
<li>c（change）：改变，cc：删除当前行，cw（ciw、caw）：删除当前单词并修改</li>
<li>s\S（substitute）：替代，删除当前字符并进行插入，可以在normal模式替代插入模式；S：删除整行</li>
</ul>
<p>恢复</p>
<ul>
<li>u：恢复到之前的状态，删掉插入内容。</li>
</ul>
<p><strong>搜索替换</strong></p>
<ul>
<li>s\S（substitute），可以配合正则表达式替换</li>
<li>替换位标志：g（global），c（confirm），n（number）</li>
<li>:% s&#x2F;word&#x2F;w&#x2F;g：全局替换</li>
<li>:% s&#x2F;\&lt;word\&gt;&#x2F;w&#x2F;g：精确匹配单词后替换</li>
</ul>
<h1 id="vim多屏操作"><a href="#vim多屏操作" class="headerlink" title="vim多屏操作"></a>vim多屏操作</h1><p><a href="https://imgse.com/i/pp9CDHA"><img data-src="https://s1.ax1x.com/2023/02/26/pp9CDHA.png" alt="pp9CDHA.png"></a></p>
<p><strong>normal模式</strong></p>
<p><strong>多文件操作，准备多个文件用于测试</strong></p>
<p>预先准备多个测试文件，使用vim或者touch命令都行</p>
<p>vim test_a.txt</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">this is test_a file</span><br><span class="line"><span class="comment"># test a</span></span><br></pre></td></tr></table></figure>

<p>复制多个文件用于测试：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> test_a.txt test_b.txt;<span class="built_in">cp</span> test_a.txt test_c.txt</span><br></pre></td></tr></table></figure>

<p>开始测试，依次输入如下命令：</p>
<ul>
<li>:e test_a.txt，:e test_b.txt，:e test_c.txt</li>
<li>:ls</li>
<li>:bprevious</li>
</ul>
<p>使用 :e 进入编辑模式，不退出当前会话同时编辑多个文件，:ls 查看当前会话缓存文件，:bprevious 查看之前编辑过的文件。</p>
<p><a href="https://imgse.com/i/pp9CJtx"><img data-src="https://s1.ax1x.com/2023/02/26/pp9CJtx.png" alt="pp9CJtx.png"></a></p>
<p><strong>多屏操作</strong></p>
<ul>
<li>:vs：水平分割</li>
<li>:sp：垂直分割</li>
<li>ctrl + w ：移动窗口，配合大写L和hjkl操作</li>
</ul>
<p>水平分割效果展示</p>
<p><a href="https://imgse.com/i/pp9C0nH"><img data-src="https://s1.ax1x.com/2023/02/26/pp9C0nH.jpg" alt="pp9C0nH.jpg"></a></p>
<p>垂直分割效果展示</p>
<p><a href="https://imgse.com/i/pp9CN9K"><img data-src="https://s1.ax1x.com/2023/02/26/pp9CN9K.jpg" alt="pp9CN9K.jpg"></a></p>
<p>更多用法，参考帮助文档</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">:<span class="built_in">help</span> vs</span><br><span class="line">:<span class="built_in">help</span> sp</span><br></pre></td></tr></table></figure>



<p><strong>多个标签页</strong></p>
<ul>
<li>:tabnew ：打开新的标签页</li>
<li>:tabnext：切换标签页<br>还可以使用快捷键 gt 快速切换标签页，同样可以使用简化写法 :tabn 切换标签页。<br><a href="https://imgse.com/i/pp9CU1O"><img data-src="https://s1.ax1x.com/2023/02/26/pp9CU1O.jpg" alt="pp9CU1O.jpg"></a></li>
</ul>
<p>更多用法，参考帮助文档</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">:<span class="built_in">help</span> tabnew</span><br><span class="line">:<span class="built_in">help</span> tabnext</span><br></pre></td></tr></table></figure>

<p><strong>复制粘贴</strong></p>
<ul>
<li>normal下使用y（yank）复制，p（put）粘贴</li>
<li>yy：复制一行</li>
<li>yiw：复制一个单词</li>
<li>x删除，p粘贴。</li>
</ul>
<p>示例：如果复制一大段内容，可以结合快捷键shift + v 配合 y复制，使用 p 粘贴内容。<br><a href="https://imgse.com/i/pp9Cdje"><img data-src="https://s1.ax1x.com/2023/02/26/pp9Cdje.jpg" alt="pp9Cdje.jpg"></a></p>
<p>打开了多个分屏或者标签页，如何一次性关闭？使用 :qa 命令关闭全部，返回当前终端。</p>
<h1 id="vim进阶"><a href="#vim进阶" class="headerlink" title="vim进阶"></a>vim进阶</h1><p><strong>normal模式</strong></p>
<p><strong>vim宏</strong></p>
<ul>
<li>按住 q 键录制类容，配合使用命令qa</li>
<li>快速选择余下所有行：shift + v  G</li>
<li>进入普通模式输入：:normal @a</li>
</ul>
<p><strong>常用补全</strong></p>
<ul>
<li>ctrl + n 和 ctrl + p 补全单词</li>
<li>ctrl + x 和 ctrl + f 补全文件名</li>
<li>ctrl + x 和 ctrl + o 补全代码</li>
</ul>
<p>补全如果没生效，需要配置相应的插件。</p>
<p><strong>使用vim相关插件，修改配色方案</strong></p>
<p>以Java类为示例进行说明，编辑Java代码Hello world</p>
<p><code>vim Hello.java</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">class Hello&#123;</span><br><span class="line">        public static void main(String args[])&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;Hello cangls&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>克隆hybrid配色方案</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/w0ng/vim-hybrid.git</span><br></pre></td></tr></table></figure>

<p>创建文键目录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p .vim/colors</span><br></pre></td></tr></table></figure>

<p>复制hybrid.vim到.vim&#x2F;colors目录中</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> vim-hybrid/colors/hybrid.vim  .vim/colors</span><br></pre></td></tr></table></figure>

<p>编辑配色方案</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim Hello.java</span><br><span class="line">:colorscheme hybrid</span><br></pre></td></tr></table></figure>

<p><a href="https://imgse.com/i/pp9ktVH"><img data-src="https://s1.ax1x.com/2023/02/26/pp9ktVH.png" alt="pp9ktVH.png"></a></p>
<p>修改配色方案永久生效，设置<code>background=dark</code>为暗色系，默认为light浅色系，默认设置显示行号<code>set number</code></p>
<p>vim .vimrc</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">set</span> background=dark</span><br><span class="line">colorscheme hybrid</span><br><span class="line"><span class="built_in">set</span> number</span><br></pre></td></tr></table></figure>



<p>恢复默认配色</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">:colorscheme default</span><br></pre></td></tr></table></figure>

<h2 id="vim插件"><a href="#vim插件" class="headerlink" title="vim插件"></a>vim插件</h2><p>初次使用，插件不在多，在于对你的操作有所提升。可以一步步尝试安装插件，对比哪些对你的日常工作有帮助。</p>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2p1bmVndW5uL3ZpbS1wbHVn">vim-plug<i class="fa fa-external-link-alt"></i></span> ：用于管理插件。</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3ByZXNlcnZpbS9uZXJkdHJlZQ==">NERDTree<i class="fa fa-external-link-alt"></i></span> ：用于增强目录树插件。</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3ByZXNlcnZpbS90YWdiYXI=">TagBar<i class="fa fa-external-link-alt"></i></span> ：用于显示标签插件（需要ctags支撑，Windows平台将ctags.exe文件置于vim根目录同级即可使用）<br>例如：个人解压后vim路径：D:\gvim_9.0.1075_x64\vim90\，将ctags.exe放入vim90目录即可。</li>
</ul>
<p>如果当前用户根目录没有.vimrc 文件，则新增。</p>
<p>Windows平台需要在当前用户新增 .vimrc 文件。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">vim ~\.vimrc</span><br></pre></td></tr></table></figure>
<p>Linux平台一样需要新增 .vimrc</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim ~/.vimrc</span><br></pre></td></tr></table></figure>

<p>Rocky 9 Linux 平台如下操作</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim </span><br><span class="line">--directory-prefix=/usr/local/share/vim/vim90/autoload/</span><br></pre></td></tr></table></figure>
<p>下载文件，如何指定保存路径？通过帮助文档查询：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># wget --help | grep &quot;保存文件&quot;</span></span><br><span class="line">  -P,  --directory-prefix=前缀     保存文件到 &lt;前缀&gt;/..</span><br></pre></td></tr></table></figure>

<p>如果没有 wget 工具，请先安装：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dnf -y install wget</span><br></pre></td></tr></table></figure>


<p>Windows 平台，访问直接下载：<br><span class="exturl" data-url="aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2p1bmVndW5uL3ZpbS1wbHVnL21hc3Rlci9wbHVnLnZpbQ==">https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim<i class="fa fa-external-link-alt"></i></span></p>
<p>复制到你安装 vim 后，生成 autoload 所在目录，比如：D:&#x2F;vim90&#x2F;autoload&#x2F;</p>
<p>安装 vim-plug 插件后，加入如下内容即可安装 nerdtree 和 tagbar 插件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">set</span> number</span><br><span class="line">call plug<span class="comment">#begin()</span></span><br><span class="line">  Plug <span class="string">&#x27;preservim/nerdtree&#x27;</span></span><br><span class="line">  Plug <span class="string">&#x27;preservim/tagbar&#x27;</span></span><br><span class="line">call plug<span class="comment">#end()</span></span><br></pre></td></tr></table></figure>
<p>个人认为，这两个插件还是很实用的，尤其是浏览代码。</p>
<p>Rocky 9 Linux 平台，如果想 tagbar 正常运行，同样需安装 ctags 软件包：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dnf -y install ctags</span><br></pre></td></tr></table></figure>

<p>插件安装命令： </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">:PlugInstall</span><br></pre></td></tr></table></figure>
<p>插件安装后，重启vim即可生效。</p>
<p>安装插件效果展示，最左侧是nerdtree效果，最右侧是tagbar效果。</p>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim Test.java</span><br><span class="line">:NERDTree</span><br><span class="line">:Tagbar</span><br></pre></td></tr></table></figure>

<p><a href="https://imgse.com/i/pp9CYh6"><img data-src="https://s1.ax1x.com/2023/02/26/pp9CYh6.jpg" alt="pp9CYh6.jpg"></a></p>
<h2 id="vim无处不在"><a href="#vim无处不在" class="headerlink" title="vim无处不在"></a>vim无处不在</h2><p><strong>vim与Tmux</strong>可以在Linux服务器上安装tmux配合vim使用，效果更加。</p>
<p>Linux发行版（centos9-stream）安装tmux</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@Centos9-Stream ~]# yum list | grep tmuxtmux.x86_64                                          3.2a-4.el9                         baseos[root@Centos9-Stream ~]# yum -y install tmux[root@Centos9-Stream ~]# rpm -qa | grep tmuxtmux-3.2a-4.el9.x86_64</span><br></pre></td></tr></table></figure>

<p>安装后初步使用：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@Centos9-Stream ~]# tmux ls0: 1 windows (created Sun Feb 26 15:42:19 2023) (attached)</span><br></pre></td></tr></table></figure>

<p>默认进入tmux，使用tab键可以提示相关命令，使用exit退出tmux。</p>
<p><a href="https://imgse.com/i/pp9C1B9"><img data-src="https://s1.ax1x.com/2023/02/26/pp9C1B9.png" alt="pp9C1B9.png"></a></p>
<p><strong>IDE与vim</strong></p>
<ul>
<li>VSCode(Visual Studio Code)</li>
<li>STS4(Spring Tool Suite4)</li>
<li>IDEA(IntelliJ IDEA)</li>
</ul>
<p><strong>文初演示了VSCode使用vim插件，此处展示一下STS4使用vim插件：</strong></p>
<p>01、STS4启动界面</p>
<p><a href="https://imgse.com/i/pp9ClnJ"><img data-src="https://s1.ax1x.com/2023/02/26/pp9ClnJ.png" alt="pp9ClnJ.png"></a></p>
<p>02、顶部菜单栏找到help，打开<strong>Eclipse Marketplace</strong></p>
<p><a href="https://imgse.com/i/pp9Cu1U"><img data-src="https://s1.ax1x.com/2023/02/26/pp9Cu1U.png" alt="pp9Cu1U.png"></a></p>
<p><strong>03、搜索vim并安装</strong></p>
<p><a href="https://imgse.com/i/pp9CMX4"><img data-src="https://s1.ax1x.com/2023/02/26/pp9CMX4.png" alt="pp9CMX4.png"></a></p>
<p><strong>04、重启开发工具STS4，初始化界面效果</strong></p>
<p><a href="https://imgse.com/i/pp9C37R"><img data-src="https://s1.ax1x.com/2023/02/26/pp9C37R.png" alt="pp9C37R.png"></a></p>
<p><strong>vim与neovim</strong><br>与时俱进，竞争产出新特性。<br><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL25lb3ZpbS9uZW92aW0=">https://github.com/neovim/neovim<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>站在巨人的肩膀上，打造炫酷的vim</strong><br>SpaceVim：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1NwYWNlVmltL1NwYWNlVmlt">https://github.com/SpaceVim/SpaceVim<i class="fa fa-external-link-alt"></i></span></p>
<p>个人收藏一些vim相关插件仓库地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3N0YXJzL2Nud2FuZ2svbGlzdHMvdmlt">https://github.com/stars/cnwangk/lists/vim<i class="fa fa-external-link-alt"></i></span></p>
<p>你还可以通过 vimawesome 寻找vim插件：<span class="exturl" data-url="aHR0cHM6Ly92aW1hd2Vzb21lLmNvbS8=">https://vimawesome.com<i class="fa fa-external-link-alt"></i></span></p>
<p>以上总结，仅供参考哟，希望对你的工作有所帮助！</p>
<p>—END—</p>
]]></content>
      <categories>
        <category>开发工具</category>
      </categories>
      <tags>
        <tag>vim</tag>
      </tags>
  </entry>
  <entry>
    <title>vim 9.0 源码包编译安装</title>
    <url>/2023/05/10/vim-9-0-%E6%BA%90%E7%A0%81%E5%8C%85%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<p>当你看到本篇教程时，vim 可能已经更新到了 vim <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3ZpbS92aW0vdGFncw==">9.1.x<i class="fa fa-external-link-alt"></i></span> 或者更高版本。</p>
<p>在上一篇 《vim入门实战》 篇，我并没有介绍 Linux 平台源码包形式安装以及基础运用。 </p>
<p>本篇教程，以源码包形式部署vim 9.0，演示 Rocky Linux 9 平台安装 vim 9.0.1523，目前最新版为vim <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3ZpbS92aW0vdGFncw==">9.1.x<i class="fa fa-external-link-alt"></i></span>。</p>
<p>如下演示均以 root 身份进行。为了安全考虑，默认禁用 root 用户远程ssh登录权限，以普通用户作为跳板切换为 root 用户。</p>
<span id="more"></span>

<h3 id="vim-9-0-部署准备环境"><a href="#vim-9-0-部署准备环境" class="headerlink" title="vim 9.0 部署准备环境"></a>vim 9.0 部署准备环境</h3><p>打包好的 Windows 和 Linux 平台 vim、nvim 安装包、PDF教程以及相关插件。</p>
<p>链接: <span class="exturl" data-url="aHR0cHM6Ly9wYW4uYmFpZHUuY29tL3MvMVFXeVRuMUgyMEk3YzNLQkthWEtYUUE/cHdkPTg4ODg=">https://pan.baidu.com/s/1QWyTn1H20I7c3KBKaXKXQA?pwd=8888<i class="fa fa-external-link-alt"></i></span><br>提取码: 8888</p>
<hr>
<p>借助终端管理工具，通过 ssh 登录到终端管理界面（普通用户）：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">PS D:\work&gt; ssh wzgy@192.168.245.133           </span><br><span class="line">wzgy@192.168.245.133<span class="string">&#x27;s password:</span></span><br></pre></td></tr></table></figure>
<p>切换为 root 用户：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">su root</span><br></pre></td></tr></table></figure>


<p>获取 vim 9.0 源码包：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://github.com/vim/vim/archive/refs/tags/v9.0.1523.tar.gz</span><br></pre></td></tr></table></figure>
<p>如果没有安装 wget 工具，Rocky Linux 9 可以执行如下命令进行安装：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dnf -y install wget</span><br></pre></td></tr></table></figure>


<p>安装前，确认环境，是否安装 make gcc cmake：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost soft]<span class="comment"># dnf -y install make gcc cmake</span></span><br></pre></td></tr></table></figure>
<p>根据实际情况而定，可能有的源码包设定需要 cmake 编译。</p>
<p>减少干扰，卸载 Rocky Linux 9 自带的 vim8：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost soft]<span class="comment"># dnf remove vim</span></span><br></pre></td></tr></table></figure>
<p><strong>友情提示</strong>：实际工作中，你的硬件（CPU、内存、硬盘）不是无限大。以二进制包、源码包、rpm、deb包等等形式安装软件，保留其中一种即可。减少服务器资源争抢，便于管理维护。</p>
<h3 id="vim-9-0-源码包正式部署"><a href="#vim-9-0-源码包正式部署" class="headerlink" title="vim 9.0  源码包正式部署"></a>vim 9.0  源码包正式部署</h3><p>正式部署vim9，首先解压 vim：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost soft]<span class="comment"># tar -zxvf v9.0.1523.tar.gz</span></span><br></pre></td></tr></table></figure>

<p>进入 src 目录：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost soft]<span class="comment"># cd vim-9.0.1523/src/</span></span><br></pre></td></tr></table></figure>

<p>编译：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost src]<span class="comment"># make</span></span><br></pre></td></tr></table></figure>



<p><strong>注意事项</strong>：看到提示别慌，仔细发现提醒需要  ncurses 依赖。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">checking <span class="keyword">for</span> tgetent()... configure: error: NOT FOUND!</span><br><span class="line">      You need to install a terminal library; <span class="keyword">for</span> example ncurses.</span><br><span class="line">      On Linux that would be the libncurses-dev package.</span><br><span class="line">      Or specify the name of the library with --with-tlib.</span><br><span class="line">Makefile:291: auto/config.mk: 没有那个文件或目录</span><br><span class="line">make: *** [Makefile:1972：auto/config.mk] 错误 1</span><br></pre></td></tr></table></figure>



<p>在 Rocky Linux 9.1 （RHEL9 系列应该均适用）中可以执行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dnf -y install ncurses</span><br></pre></td></tr></table></figure>

<p>如果提示：<br>软件包 ncurses-6.2-8.20210508.el9.x86_64 已安装。<br>依赖关系解决。<br>无需任何处理。<br>完毕！</p>
<p><strong>再次执行</strong> dnf -y install ncurses-devel-6.2-8.20210508.el9：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dnf -y install ncurses-devel-6.2-8.20210508.el9</span><br></pre></td></tr></table></figure>

<p>会继续安装如下两个库文件：<br>ncurses-c++-libs-6.2-8.20210508.el9.x86_64.rpm<br>ncurses-devel-6.2-8.20210508.el9.x86_64.rpm</p>
<p>可能你会有疑问，实际过程中，如何判断安装包是哪一个 Linux 具体发行版本？其实可以根据安装包命名规则区分，可以看到以上安装包中都含有 el9 ，代表所处 Linux 发行版平台为 RHEL9 系列。</p>
<p>继续编译：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost src]<span class="comment"># make</span></span><br></pre></td></tr></table></figure>

<p>安装：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">make install</span><br></pre></td></tr></table></figure>

<p>如果直接执行 vim：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim</span><br></pre></td></tr></table></figure>
<p>输出结果：会进入一个含有 vim 当前版本以及维护人的信息。当然还含有公益广告，开源软件可以自行选择删除或者保留。</p>
<h3 id="vim-9-0-初体验"><a href="#vim-9-0-初体验" class="headerlink" title="vim 9.0 初体验"></a>vim 9.0 初体验</h3><p>执行 vim file.txt 进行编辑，输入一段内容 hello vim 9.0.1523: </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim test.txt</span><br></pre></td></tr></table></figure>
<p>按下快捷键：i ，插入如下内容：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">*</span><br><span class="line">**</span><br><span class="line">***</span><br><span class="line">*****</span><br><span class="line">*******</span><br><span class="line">*************************</span><br><span class="line">采用源码包形式编译安装！  </span><br><span class="line">hello vim 9.0.1523      </span><br><span class="line">*************************</span><br><span class="line">*******</span><br><span class="line">*****</span><br><span class="line">***</span><br><span class="line">**</span><br><span class="line">*</span><br></pre></td></tr></table></figure>

<p>test.txt 代表你需要编辑的文件。</p>
<p>使用快捷键： a i o 即可插入内容，使用 :wq 进行保存并退出当前文件。</p>
<p>终端展示输出文件 test.txt 内容：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> test.txt</span><br></pre></td></tr></table></figure>



<p>如果你有足够的英语词汇量，使用 vim 自带帮助命令效率会很高。</p>
<p>继续编辑 test.txt 文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim test.txt</span><br></pre></td></tr></table></figure>
<p>示例使用 vim 帮助命令，含义直接写入代码块注释中：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">:<span class="built_in">help</span>  		<span class="comment">#查看全局帮助命令文档</span></span><br><span class="line">:<span class="built_in">help</span> vs 	<span class="comment">#查看局部水平分屏命令文档</span></span><br><span class="line">:<span class="built_in">help</span> sp 	<span class="comment">#查看局部垂直分屏命令文档</span></span><br></pre></td></tr></table></figure>
<p>关闭所有窗口，强制（加上!符号）不保存退出，使用快捷键： :qa!，保存退出所有窗口： :wqa 。<br>更多 vim 快捷键使用方法，可以在公众号或者站内搜索：vim入门实战。</p>
<p>默认安装后相关配置文件路径：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost src]<span class="comment"># ls /usr/local/share/</span></span><br><span class="line">applications  info  man  vim</span><br></pre></td></tr></table></figure>

<p>默认 vim 脚本文件路径：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ls</span>  /usr/local/bin/vim</span><br></pre></td></tr></table></figure>
<p>vim 脚本会去寻找 <code>defaults.vim</code>，默认所在路径：<code>/usr/local/share/vim/vim90/defaults.vim</code>，也就是源码包经过编译、安装后生成的文件。</p>
<h3 id="plug-vim-安装插件"><a href="#plug-vim-安装插件" class="headerlink" title="plug-vim 安装插件"></a>plug-vim 安装插件</h3><p>初次使用，插件不在多，在于对你的操作有所提升。可以一步步尝试安装插件，对比哪些对你的日常工作有帮助。</p>
<p>查看 Windows 平台 git 环境自带 vim 版本： </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git --version &amp;&amp; vim --version | grep VIM</span><br><span class="line">git version 2.41.0.windows.1</span><br><span class="line">VIM - Vi IMproved 9.0 (2022 Jun 28, 编译于 Mar 13 2023 19:52:41)</span><br><span class="line">       defaults 文件: <span class="string">&quot;<span class="variable">$VIMRUNTIME</span>/defaults.vim&quot;</span></span><br><span class="line">         <span class="variable">$VIM</span> 预设值: <span class="string">&quot;/etc&quot;</span></span><br><span class="line">  <span class="variable">$VIMRUNTIME</span> 预设值: <span class="string">&quot;/usr/share/vim/vim90&quot;</span></span><br></pre></td></tr></table></figure>

<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2p1bmVndW5uL3ZpbS1wbHVn">vim-plug<i class="fa fa-external-link-alt"></i></span> ：用于管理插件。比如我在 Windows 平台使用的 git 环境自带 vim，复制下载的 <code>plug.vim</code> 到<code>D:\software\Git\usr\share\vim\vim90\autoload\</code> 路径下即可。 </li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3ByZXNlcnZpbS9uZXJkdHJlZQ==">NERDTree<i class="fa fa-external-link-alt"></i></span> ：用于增强目录树插件。</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3ByZXNlcnZpbS90YWdiYXI=">TagBar<i class="fa fa-external-link-alt"></i></span> ：用于显示标签插件（需要 ctags 支撑，Windows平台将 ctags.exe 文件置于vim根目录同级即可使用） 例如：个人解压后 gvim 路径：<code>D:\gvim_9.0.1075_x64\vim90\</code>，将 ctags.exe 放入 vim90 目录即可。如果你使用的是 nvim，可以将 ctags.exe  复制到 <code>\nvim-win64\bin\</code> 路径下。</li>
</ul>
<p><strong>友情提醒：</strong>如果你获取 ctags.exe 和 plug.vim 实在有困难，我已经上传了资源，可在文初和文末找到。</p>
<p><strong>Rocky 9 Linux 平台如下操作</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim </span><br><span class="line">--directory-prefix=/usr/local/share/vim/vim90/autoload/</span><br></pre></td></tr></table></figure>

<p>下载文件，如何指定保存路径？通过帮助文档查询：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># wget --help | grep &quot;保存文件&quot;</span></span><br><span class="line">  -P,  --directory-prefix=前缀     保存文件到 &lt;前缀&gt;/..</span><br></pre></td></tr></table></figure>

<p>如果没有 wget 工具，请先安装：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dnf -y install wget</span><br></pre></td></tr></table></figure>

<p>安装 vim-plug 插件后，加入如下内容即可安装 nerdtree 和 tagbar 插件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">set</span> number</span><br><span class="line">call plug<span class="comment">#begin()</span></span><br><span class="line">  Plug <span class="string">&#x27;preservim/nerdtree&#x27;</span></span><br><span class="line">  Plug <span class="string">&#x27;preservim/tagbar&#x27;</span></span><br><span class="line">call plug<span class="comment">#end()</span></span><br></pre></td></tr></table></figure>
<p>个人认为，这两个插件还是很实用的，尤其是浏览代码。</p>
<p>如果想 tagbar 正常运行，还需安装：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dnf -y install ctags</span><br></pre></td></tr></table></figure>

<p>执行插件安装命令： </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">:PlugInstall</span><br></pre></td></tr></table></figure>
<p>插件安装后，重启vim即可生效。</p>
<p>安装插件效果展示，最左侧是nerdtree效果，最右侧是tagbar效果。</p>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim Test.java</span><br><span class="line">:NERDTree</span><br><span class="line">:Tagbar</span><br></pre></td></tr></table></figure>
<p><a href="https://imgse.com/i/pp9CYh6"><img data-src="https://s1.ax1x.com/2023/02/26/pp9CYh6.jpg" alt="pp9CYh6.jpg"></a></p>
<p>打包好的 Windows 和 Linux 平台 vim、nvim 安装包、PDF教程以及相关插件。</p>
<p>链接: <span class="exturl" data-url="aHR0cHM6Ly9wYW4uYmFpZHUuY29tL3MvMVFXeVRuMUgyMEk3YzNLQkthWEtYUUE/cHdkPTg4ODg=">https://pan.baidu.com/s/1QWyTn1H20I7c3KBKaXKXQA?pwd=8888<i class="fa fa-external-link-alt"></i></span><br>提取码: 8888</p>
<p>以上总结，仅供参考哟，希望对你的工作有所帮助！</p>
<p>—END—</p>
]]></content>
      <categories>
        <category>开发工具</category>
      </categories>
      <tags>
        <tag>vim</tag>
      </tags>
  </entry>
  <entry>
    <title>【油猴和iGuge】加速访问学术网站</title>
    <url>/2021/05/28/%E3%80%90%E6%B2%B9%E7%8C%B4%E5%92%8CiGuge%E3%80%91%E5%8A%A0%E9%80%9F%E8%AE%BF%E9%97%AE%E5%AD%A6%E6%9C%AF%E7%BD%91%E7%AB%99/</url>
    <content><![CDATA[<p>【油猴和iGuge】加速访问学术网站，好好学习，天天向上。</p>
<p>如果在某csdn搜索到我的博客，请在搜索的参数后加上：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">检索内容加上后面的参数 -site:csdn.net</span><br></pre></td></tr></table></figure>

<p>iGuge作为一款免费访问Google的插件，挺好用（偶尔会抽风），当然也有付费的。</p>
<p>最开始用谷歌服务助手（已经暴毙），后来用过Ghelper谷歌上网助手（gg思密达，偶尔还能用）。</p>
<p>iGuge谷歌访问助手，是我目前为止用过最稳定的一款插件，作为免费版使用相当可以了，能访问维基百科。</p>
<p><img data-src="https://article.biliimg.com/bfs/article/5c670f0d61dd84ae76080122de3fb075ef289a9e.png"></p>
<p><strong>tips</strong>：图片资源可能被防盗链（寄）了，可以<strong>右键属性复制地址在地址栏查看</strong>哈。</p>
<span id="more"></span>

<p>[toc]</p>
<h1 id="【iGuge插件】：加速访问谷歌"><a href="#【iGuge插件】：加速访问谷歌" class="headerlink" title="【iGuge插件】：加速访问谷歌"></a>【iGuge插件】：加速访问谷歌</h1><h2 id="一、获取插件iGuge"><a href="#一、获取插件iGuge" class="headerlink" title="一、获取插件iGuge"></a>一、获取插件iGuge</h2><h3 id="01-官网下载"><a href="#01-官网下载" class="headerlink" title="01 官网下载"></a>01 官网下载</h3><ol>
<li>在iGuge网站去获取插件，直接下载。</li>
<li>不能访问Google的，使用离线方式（iGG离线安装器 for Chrome）</li>
</ol>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9pZ3VnZS54eXov">https://iguge.xyz/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p><img data-src="https://article.biliimg.com/bfs/article/1adaa73bccd66d87eec80257cf918fbd33e248b3.png"></p>
<h3 id="02-浏览器扩展中心下载"><a href="#02-浏览器扩展中心下载" class="headerlink" title="02 浏览器扩展中心下载"></a>02 浏览器扩展中心下载</h3><p>如果在浏览器扩展中心可以搜索到iGuge，直接下载。（谷歌是可以直接搜到的）</p>
<p><img data-src="https://article.biliimg.com/bfs/article/fde5e1c2b010dc07c31b173f43124d55c7083cd7.png"></p>
<h3 id="03-直接访问下载插件"><a href="#03-直接访问下载插件" class="headerlink" title="03 直接访问下载插件"></a>03 直接访问下载插件</h3><p>当然也可以下载crx插件,直接拖到浏览器扩展中心进行安装，或者点击打开选择浏览器安装。</p>
<p><strong>tips</strong>：crx这种比较方便，igg_2.0.2.0.crx</p>
<p><strong>下载地址</strong>：</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9jZG4uamp4aWFuZ3lhLnh5ei9nZ19hcGsvaWdnXzIuMC4yLjAuY3J4">https://cdn.jjxiangya.xyz/gg_apk&#x2F;igg_2.0.2.0.crx<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<h2 id="二、安装扩展iGuge"><a href="#二、安装扩展iGuge" class="headerlink" title="二、安装扩展iGuge"></a>二、安装扩展iGuge</h2><h3 id="01-Chrome安装方式一"><a href="#01-Chrome安装方式一" class="headerlink" title="01 Chrome安装方式一"></a>01 Chrome安装方式一</h3><p>直接在浏览器地址栏输入：chrome:&#x2F;&#x2F;extensions&#x2F;，进入扩展中心。</p>
<p><img data-src="https://article.biliimg.com/bfs/article/54e202933eb0ba2ff3acecb984c6b5ddc08c89ad.png"></p>
<p>主流的浏览器一般都支持：</p>
<ol>
<li>Google Chrome，谷歌浏览器</li>
<li>360 Chrome，360极速浏览器</li>
</ol>
<p><img data-src="https://article.biliimg.com/bfs/article/057d30519417cc9196d79435f89cd44b73678997.png"></p>
<h3 id="02-Chrome安装方式二"><a href="#02-Chrome安装方式二" class="headerlink" title="02 Chrome安装方式二"></a>02 Chrome安装方式二</h3><ol>
<li>找到更多工具</li>
<li>点击扩展程序</li>
<li>开启开发者模式</li>
<li>加载已解压的扩展程序</li>
</ol>
<p>通过安装解压形式的扩展程序（一般目录下包含js,css,images,pages,packages,icons等等）</p>
<p><strong>打开扩展程序</strong>：</p>
<ol>
<li>点击浏览器右上角的三个点按钮。</li>
<li>找到更多工具。</li>
<li>找到扩展程序，点击进入。</li>
</ol>
<p><img data-src="https://article.biliimg.com/bfs/article/4f9e5b31bc73a5d4bb3c901df06f12e92178d300.png"></p>
<ol start="4">
<li><p><strong>开启开发者模式</strong>。</p>
<p><img data-src="https://article.biliimg.com/bfs/article/674ad047462221ef3e6902c5591ea3f7b9e9ea14.png"></p>
</li>
<li><p><strong>安装成功标志</strong>。</p>
<p><img data-src="https://article.biliimg.com/bfs/article/366b0795ea2c3a46fca0ebc1bfdd93c968d98add.png"></p>
</li>
</ol>
<h1 id="【油猴插件】：管理脚本"><a href="#【油猴插件】：管理脚本" class="headerlink" title="【油猴插件】：管理脚本"></a>【油猴插件】：管理脚本</h1><p>加速访问github，使用油猴插件管理脚本。</p>
<p>油猴插件，估计大家都不陌生吧！没错，就是油猴插件。下载地址如下：</p>
<blockquote>
<p>油猴插件下载：<span class="exturl" data-url="aHR0cHM6Ly93d3cudGFtcGVybW9ua2V5Lm5ldC8=">https://www.tampermonkey.net/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<h2 id="01-在Google-Chrome管理油猴插件："><a href="#01-在Google-Chrome管理油猴插件：" class="headerlink" title="01 在Google Chrome管理油猴插件："></a>01 在Google Chrome管理油猴插件：</h2><ol>
<li>选择添加新脚本</li>
</ol>
<p><img data-src="https://article.biliimg.com/bfs/article/ba49003daf569831c04def2af686492dc8057276.png"></p>
<h2 id="02-新增js脚本："><a href="#02-新增js脚本：" class="headerlink" title="02 新增js脚本："></a>02 新增js脚本：</h2><ol>
<li>点击上图的添加新脚本</li>
<li>在新建用户脚本编辑栏中加入需要设置的脚本代码，保存脚本。</li>
<li>进入后台管理启用脚本，选择已安装脚本点击已启用下面的按钮。</li>
</ol>
<p><img data-src="https://article.biliimg.com/bfs/article/ca6661cc4da3bbb8994a6c7f6a65dd25057cad2a.png"></p>
<h2 id="03-在浏览器中启用新增的js脚本："><a href="#03-在浏览器中启用新增的js脚本：" class="headerlink" title="03 在浏览器中启用新增的js脚本："></a>03 在浏览器中启用新增的js脚本：</h2><ol>
<li>启用脚本，点击已启用下的绿色按钮。</li>
</ol>
<p><img data-src="https://article.biliimg.com/bfs/article/e4afadef7a3811c996b98f3edd2c2732c8921dcc.png"></p>
<h1 id="向阳而生"><a href="#向阳而生" class="headerlink" title="向阳而生"></a>向阳而生</h1><p>向阳而生，生而向阳。</p>
<p>本期分享的是加速访问插件与管理浏览器脚本的插件。定期分享好用、实用的工具。</p>
<p>—END—</p>
]]></content>
      <categories>
        <category>通用工具</category>
      </categories>
      <tags>
        <tag>油猴</tag>
      </tags>
  </entry>
  <entry>
    <title>windows下jdk手动安装jre教程</title>
    <url>/2021/05/25/windows%E4%B8%8Bjdk%E6%89%8B%E5%8A%A8%E5%AE%89%E8%A3%85jre%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<p>﻿自己之前一直在用<code>jdk</code>6&amp;&amp;7，公司之前也是用<code>jdk7</code>。后来发现更新了<code>jdk8</code>引入了函数式编程，<code>lambda</code>表达式和<code>stream</code>流的概念，再后来发现<code>JDK</code>更新的速度越来越快了。直到有一天逛技术博客的时候发现出到<code>jdk12</code>了，下载后安装了试了下新功能，奇怪的是没有<code>jre</code>，<strong>我这里下载的是解压版本</strong>。于是乎就搜索的一番，原来后续的版本需要手动来安装jre。顺带吐槽一下，去Oracle官网下载旧版本的jdk还得注册账号，以前可是不需要的。而且最近更新是真的快，<code>jdk14</code>也出来了。</p>
<h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><p>平时工作环境都是在win上的，只有测试、生产环境在linux下运行的。所以下面尝鲜的时候是在win下进行的。对于想了解jdk最新版本的新特性，还是很有帮助的。</p>
<h2 id="一、-首先进入你安装jdk的目录"><a href="#一、-首先进入你安装jdk的目录" class="headerlink" title="一、 首先进入你安装jdk的目录"></a>一、 首先进入你安装<code>jdk</code>的目录</h2><p>我这已经是手动执行过命令了，所以生成了<code>jre</code></p>
<p><img data-src="https://img-blog.csdnimg.cn/2019121710425780.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="二、cmd-管理员身份启动"><a href="#二、cmd-管理员身份启动" class="headerlink" title="二、cmd(管理员身份启动)"></a>二、cmd(管理员身份启动)</h2><p>cd 到安装<code>jdk</code>目录，是不是发现没有<code>jre</code>，很诡异，看下面如何操作。<br> <img data-src="https://img-blog.csdnimg.cn/20191217104954801.png" alt="在这里插入图片描述"><br><img data-src="https://img-blog.csdnimg.cn/2019121710442431.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="三、执行以下命令生成jre"><a href="#三、执行以下命令生成jre" class="headerlink" title="三、执行以下命令生成jre"></a>三、执行以下命令生成jre</h2><p>当然我自己也做了测试，对于<code>jdk14</code>的版本也同样适用。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bin\jlink.exe --module-path jmods --add-modules java.desktop --output jre</span><br></pre></td></tr></table></figure>


<p>​       <img data-src="https://img-blog.csdnimg.cn/20191217104458876.png" alt="在这里插入图片描述"><br>​        </p>
<h2 id="四、jdk目录生成jre文件夹"><a href="#四、jdk目录生成jre文件夹" class="headerlink" title="四、jdk目录生成jre文件夹"></a>四、jdk目录生成jre文件夹</h2><p>证明大功告成。可以测试一下了，体验新特性。<br><img data-src="https://img-blog.csdnimg.cn/20191217105815720.png?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="尾声"><a href="#尾声" class="headerlink" title="尾声"></a>尾声</h1><p>善于总结，其乐不穷。好记性不如烂笔头，多收集自己第一次尝试的成果，收获也颇丰。你会发现，自己的知识宝库越来越丰富。</p>
]]></content>
      <categories>
        <category>开发工具</category>
      </categories>
      <tags>
        <tag>JDK</tag>
      </tags>
  </entry>
  <entry>
    <title>【解决HCNetSDK.dll无法加载问题】海康SDK开发对接java项目demo运行</title>
    <url>/2022/02/21/%E3%80%90%E8%A7%A3%E5%86%B3HCNetSDK-dll%E6%97%A0%E6%B3%95%E5%8A%A0%E8%BD%BD%E9%97%AE%E9%A2%98%E3%80%91%E6%B5%B7%E5%BA%B7SDK%E5%BC%80%E5%8F%91%E5%AF%B9%E6%8E%A5java%E9%A1%B9%E7%9B%AEdemo%E8%BF%90%E8%A1%8C/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>最近公司有新需求，需要接入<strong>大华</strong>和<strong>海康</strong>的项目，优先解决接入海康的<code>SDK</code>。对于我这个之前完全没接触过对接SDK的新手来说，完全是<strong>焦头烂额</strong>。公司只提供了<code>SDK</code>文档，没有其它文档支持。但是需要使用<code>java</code>进行对接数据。俗话说的好，<strong>工欲善其事，必先利其器</strong>。海康官方的SDK文档提供了<code>java</code>的demo例子，但是文档说明并不全面（个人感觉，遇到了很多坑，故予以总结）。</p>
<p><strong>运行demo之前，最好浏览一遍SDK文档，比如操作系统与JDK以及DLL文件保持一致性。而且对你调试代码也颇有帮助，返回一些错误码在官方提供的文档有说明参照</strong>。例如：win64下运行64位JDK和64位DLL文件，也可以运行32位JDK和32位的DLL文件。</p>
<h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><p><strong>官方文档直通车</strong>：<span class="exturl" data-url="aHR0cHM6Ly93d3cuaGlrdmlzaW9uLmNvbS9jbi9kb3dubG9hZF82MS5odG1s">https://www.hikvision.com/cn/download_61.html<i class="fa fa-external-link-alt"></i></span><br><img data-src="https://img-blog.csdnimg.cn/20200809222148484.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>官方文档</strong>给出的【<strong>注意事项</strong>】</p>
<p><strong>—————————————————————————————————————————————-</strong><br>一、 更新设备网络<code>SDK</code>时，<code>SDK</code>开发包【<strong>库文件</strong>】里的</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">HCNetSDK.dll、</span><br><span class="line">HCCore.dll、</span><br><span class="line">PlayCtrl.dll、</span><br><span class="line">SuperRender.dll、</span><br><span class="line">AudioRender.dll、</span><br><span class="line">HCNetSDKCom文件夹、</span><br><span class="line">ssleay32.dll、</span><br><span class="line">libeay32.dll、</span><br><span class="line">hlog.dll、</span><br><span class="line">hpr.dll、</span><br><span class="line">zlib1.dll、</span><br><span class="line">log4cxx.properties</span><br></pre></td></tr></table></figure>

<p>等文件均要加载到程序里面，【<strong>HCNetSDKCom文件夹</strong>】（包含里面的功能组件<code>dll</code>库文件）需要和<strong>HCNetSDK.dll</strong>、<strong>HCCore.dll</strong>一起加载，放在同一个目录下，<strong>且HCNetSDKCom文件夹名不能修改</strong>。</p>
<p>二、 如果自行开发软件不能正常实现相应功能，而且程序没有指定加载的dll库路径，请在程序运行的情况下尝试删HCNetSDK.dll。如果可以删除，说明程序可能调用到系统盘Windows-&gt;System32目录下的dll文件，建议删除或者更新该目录下的相关dll文件；如果不能删除，dll文件右键选择属性确认SDK库版本。</p>
<p>三、如按上述步骤操作后还是不能实现相应功能，请根据<strong>NET_DVR_GetLastError返回的错误号判断原因</strong>。</p>
<p><strong>—————————————————————————————————————————————–</strong></p>
<br/>

<p><strong>基于海康</strong><code>SDK</code>开发提供的<code>demo</code>之<code>java</code>版运行，基于<code>HCNetSDKV6.1.4.42</code>版本写的，<strong>此时是官方提供的最新版本</strong>。<br><img data-src="https://img-blog.csdnimg.cn/20200809222437800.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="一、环境的确认"><a href="#一、环境的确认" class="headerlink" title="一、环境的确认"></a>一、环境的确认</h2><p><strong>注意</strong>：<strong>我下载的是64位的SDK，操作系统win10_x64，jdk_x64</strong>，<strong>熟读官方文档真的很重要，会少走很多弯路</strong>。<strong>JDK和SDK版本必须一致，同是32位或者64位</strong>。如果不统一，遇到问题我也没辙。<br><img data-src="https://img-blog.csdnimg.cn/20200809222501713.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="二、引入项目到编辑器"><a href="#二、引入项目到编辑器" class="headerlink" title="二、引入项目到编辑器"></a>二、引入项目到编辑器</h2><p>使用<code>eclipse for javaee</code>或者<code>IDEA</code>都行，看个人喜好嘛。注意必须要将<code>jar</code>包和库文件<code>build path</code>怎么引入我相信大家肯定知道，<code>example.jar</code>和<code>jna.jar</code>引入后代码就不会报红了。<strong>引入这里面指定的</strong>也能运行起来<code>demo</code>，没必要将整个库文件引入。</p>
<p><strong>eclipse引入项目的目录结构，我直接新建了sdk文件夹放入指定的库文件</strong><br><img data-src="https://img-blog.csdnimg.cn/20200810210111366.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>IDEA引入项目的目录结构，这是将整个库文件完全引入时做的测试</strong><br><img data-src="https://img-blog.csdnimg.cn/20200809232643937.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="三、遇到问题并解析问题"><a href="#三、遇到问题并解析问题" class="headerlink" title="三、遇到问题并解析问题"></a>三、遇到问题并解析问题</h2><p><strong>最开始你会看到这个不友好的警告，一个很严重的java异常</strong>：<br><img data-src="https://img-blog.csdnimg.cn/20200809225617225.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>运行java版demo遇到的问题一</strong>：<code>Unable to load library &#39;HCNetSDK&#39;: ÕҲ»µ½ָ¶¨</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Exception in thread <span class="string">&quot;main&quot;</span> java.lang.UnsatisfiedLinkError: Unable to load library <span class="string">&#x27;HCNetSDK&#x27;</span>: ÕҲ»µ½ָ¶¨</span><br></pre></td></tr></table></figure>
<p><img data-src="https://img-blog.csdnimg.cn/20200809222547563.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>解析问题一</strong>：不难看出来，无法去加载库文件<code>HCNetSDK.dll</code>。<strong>这时你分析一下这个报错的代码提示</strong>，可以看出来定位到<code>ClientDemo.java</code>这个类的第<strong>66</strong>行，那肯定是找不到<code>HCNetSDK</code>接口里提供的<code>HCNetSDK</code>的<strong>实例</strong>。再向上看定位分析，找不到<code>HCNetSDK.dll</code>的<strong>路径</strong>，定位到第<strong>36</strong>行。<strong>遇到报错不要怕，重要的是学会分析问题所在并去解决掉</strong>，领导也喜欢善于解决问题的。</p>
<br/>

<p><strong>运行java版demo遇到的问题二</strong>：<code>Unable to load library &#39;PlayCtrl&#39;: ÕҲ»µ½ָ¶¨</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Exception in thread <span class="string">&quot;main&quot;</span> java.lang.UnsatisfiedLinkError: Unable to load library <span class="string">&#x27;PlayCtrl&#x27;</span>: ÕҲ»µ½ָ¶¨</span><br></pre></td></tr></table></figure>
<p><img data-src="https://img-blog.csdnimg.cn/20200809222628320.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>解析问题二</strong>：不难看出来，无法去加载库文件<code>PlayCtrl.dll</code>。<strong>这时你分析一下这个报错的代码提示</strong>，可以看出来定位到<code>ClientDemo.java</code>这个类的第<strong>67</strong>行，那肯定是找不到<code>PlayCtrl</code>接口里提供的<code>PlayCtrl</code>的<strong>实例</strong>。再向上看定位分析，找不到<code>PlayCtrl.dll</code>的<strong>路径</strong>，定位到第<strong>3069</strong>行。<strong>遇到报错不要怕，重要的是学会分析问题所在并去解决掉</strong>，领导也喜欢善于解决问题的。</p>
<h2 id="四、工具类编写"><a href="#四、工具类编写" class="headerlink" title="四、工具类编写"></a>四、工具类编写</h2><p><strong>解析完问题后</strong>，我们了解到<strong>无法加载</strong><code>HCNetSDK.dll、PlayCtrl.dll</code>这个两个<strong>库文件</strong>，下面给出<strong>解决方案</strong>：我采用的是编写<strong>工具类</strong><code>GetDLLPath()</code>方法来解决找不到<strong>路径</strong>的问题。</p>
<p><strong>代码如下</strong>：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//获取DLL文件路径</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GetDLLPath</span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//路径</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> String DLL_PATH;</span><br><span class="line">	<span class="keyword">static</span>&#123;</span><br><span class="line">		<span class="comment">//通过getPath方法去拿路径</span></span><br><span class="line">		<span class="type">String</span> <span class="variable">path</span> <span class="operator">=</span> GetDLLPath.class.getResource(<span class="string">&quot;/&quot;</span>).getPath()</span><br><span class="line">				.replaceAll(<span class="string">&quot;20%&quot;</span>, <span class="string">&quot; &quot;</span>).substring(<span class="number">1</span>);</span><br><span class="line">				</span><br><span class="line"><span class="comment">//		这个是解决打包找不到路径的写法，但是目前引入demo运行用不上，我就注释掉了</span></span><br><span class="line"><span class="comment">//		String[] ph = path.split(&quot;/&quot;);		</span></span><br><span class="line"><span class="comment">//		StringBuilder sb = new StringBuilder();</span></span><br><span class="line"><span class="comment">//		for(int i= 0;i &lt; ph.length-2;i++)&#123;</span></span><br><span class="line"><span class="comment">//			sb.append(&quot;/&quot;).append(ph[i]);</span></span><br><span class="line"><span class="comment">//		&#125;	</span></span><br><span class="line"><span class="comment">//		//解决打包加载类找不到路径的问题,这里编写你自己存放的路径</span></span><br><span class="line"><span class="comment">//		sb.append(&quot;/src/main/resource/sdk&quot;);</span></span><br><span class="line"><span class="comment">//		path = sb.toString();</span></span><br><span class="line"></span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			<span class="comment">//设置编码为UTF-8，这样设置转码会出一个问题，一旦遇到+号这种就会转成空格</span></span><br><span class="line">			DLL_PATH = java.net.URLDecoder.decode(path,<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;	</span><br><span class="line">	&#125;</span><br><span class="line">			</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">		<span class="comment">//测试	</span></span><br><span class="line"> 	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<br/>

<p><strong>上面的工具类写好后</strong>，就可以<strong>修改</strong><code>HCNetSDK.java</code>类，我给出原始文档写法和改良后的写法。修改<code>HCNetSDK</code>对象，引入<code>GetDLLPath</code><strong>工具类</strong>，下面的代码给出<strong>解决方案</strong>：</p>
<br/>

<p><strong>建议多手动敲代码，不要一味的复制粘贴</strong>。不然你会生疏的，除非是达到了一定的技术后，可以偷偷懒也是可以的嘛，当然这是玩笑话，活跃下气氛。</p>
<br/>

<h2 id="五、引入工具类"><a href="#五、引入工具类" class="headerlink" title="五、引入工具类"></a>五、引入工具类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//原始写法</span></span><br><span class="line"><span class="comment">//    HCNetSDK INSTANCE = (HCNetSDK) Native.loadLibrary(&quot;HCNetSDK&quot;,</span></span><br><span class="line"><span class="comment">//            HCNetSDK.class);</span></span><br><span class="line">	</span><br><span class="line">	<span class="comment">//改完后的写法:通过GetDLLPath工具类去找dll绝对路径</span></span><br><span class="line">    <span class="type">HCNetSDK</span> <span class="variable">INSTANCE</span> <span class="operator">=</span> (HCNetSDK) Native.loadLibrary(GetDLLPath.DLL_PATH </span><br><span class="line">    + <span class="string">&quot;HCNetSDK.dll&quot;</span>,HCNetSDK.class);</span><br><span class="line">			</span><br><span class="line"><span class="comment">//原始写法</span></span><br><span class="line"><span class="comment">//	 PlayCtrl INSTANCE = (PlayCtrl) Native.loadLibrary(&quot;PlayCtrl&quot;,</span></span><br><span class="line"><span class="comment">//	            PlayCtrl.class);</span></span><br><span class="line">	<span class="comment">//改良后写法:通过GetDLLPath工具类去找dll绝对路径</span></span><br><span class="line">    <span class="type">PlayCtrl</span> <span class="variable">INSTANCE</span> <span class="operator">=</span> (PlayCtrl) Native.loadLibrary(GetDLLPath.DLL_PATH </span><br><span class="line">    					+<span class="string">&quot;PlayCtrl.dll&quot;</span>,PlayCtrl.class);</span><br></pre></td></tr></table></figure>

<p><br/><br/></p>
<h2 id="六、运行成功后的界面"><a href="#六、运行成功后的界面" class="headerlink" title="六、运行成功后的界面"></a>六、运行成功后的界面</h2><p><strong>做完以上步骤后，终于可以运行起来了</strong>。<code>demo</code>起飞，开启征程。<strong>工欲善其事，必先利其器</strong>。<br><img data-src="https://img-blog.csdnimg.cn/20200809225428266.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>当然这是<strong>官方文档基于</strong><code>java</code>的<code>swing</code>写出的<code>demo</code>。如果项目需要引入，基本是用<code>web</code>开发的模式，网上找一找海康<code>web3.0</code>也是可行的。当然你自己写个出来，也是可行的，最终你还是要在自己的项目中编写接口拿到数据。</p>
<br/>

<h2 id="七、分析接口"><a href="#七、分析接口" class="headerlink" title="七、分析接口"></a>七、分析接口</h2><p>其实不难发现，最重要的就是<code>HCNetSDK</code>这个<strong>接口</strong>里面提供的类容。比如定义了一些常量和全局错误代码可供快速查询，具体还是看你需要用到那一部分。下面<strong>截取部分代码</strong>：<br><img data-src="https://img-blog.csdnimg.cn/20200809230532598.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img data-src="https://img-blog.csdnimg.cn/20200809230625986.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>最后点击注册时<strong>遇到了报错提示</strong>，可以使用<code>hCNetSDK.NET_DVR_GetLastError()</code>方法，获取错误<code>code</code>码，在<code>HCNetSDK</code><strong>类中有提示</strong>。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">System.out.println(hCNetSDK.NET_DVR_GetLastError());</span><br></pre></td></tr></table></figure>
<p>注册失败，通过错误code码定位原因。</p>
<p><img data-src="https://img-blog.csdnimg.cn/20201219164229216.png#pic_center" alt="在这里插入图片描述"></p>
<br/>

<p><strong>定位错误可以参考官方给出的PDF帮助文档</strong></p>
<p><img data-src="https://img-blog.csdnimg.cn/20201219164414475.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
]]></content>
      <categories>
        <category>web开发</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>个人blog搭建指南hexo-theme-next</title>
    <url>/2024/02/08/%E4%B8%AA%E4%BA%BAblog%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97hexo-theme-next/</url>
    <content><![CDATA[<p>曾几何时，我也是一个小白，摸索前行。</p>
<p>我始终坚信，对别人有帮助（参考价值）的文章，在合适的时间被有需要的人看到，那就是一篇好文章。</p>
<p>俗话说，每一篇博文背后都有一个精彩的段子，这是我说的，哈哈。</p>
<p>这个故事有点长。在一个月黑风高阳光灿烂的夜晚，小汪问了一堆奇怪的问题，然后来了句我们去开房吧。我当时愣了一愣，也只是愣了一愣，接着说了一句我们一起起床吧。啊这，请不要想多了，她只是…想借鉴一下我搭建个人blog的经验而已，哈哈。</p>
<span id="more"></span>



<h1 id="个人blog源码仓库"><a href="#个人blog源码仓库" class="headerlink" title="个人blog源码仓库"></a>个人blog源码仓库</h1><p>源码仓库地址，不定期更新：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2Nud2FuZ2svYmxvZy1yZWNvcmRpbmc=">blog-recording<i class="fa fa-external-link-alt"></i></span></p>
<p>我尽可能详细说明，希望初次接触 hexo 搭建个人 blog 的人群看到也能轻松上手。个人每隔一段时间，会输出一堆垃圾博文。</p>
<p>采用 <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvLw==">hexo<i class="fa fa-external-link-alt"></i></span> 和 <span class="exturl" data-url="aHR0cHM6Ly90aGVtZS1uZXh0LmpzLm9yZy8=">next<i class="fa fa-external-link-alt"></i></span> 主题打造。如果你想和我一样打造一款属于自己的博客站点，需要做如下操作。</p>
<p>主站和主题配置说明，尽本人最大能力去解释说明。配置文件（站点根目录），个人使用如下版本：</p>
<table>
<thead>
<tr>
<th>版本</th>
<th>配置文件</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>7.0.0</td>
<td>_config.yml</td>
<td>hexo 主站点配置</td>
</tr>
<tr>
<td>8.19.1</td>
<td>_config.next.yml</td>
<td>next 主题配置</td>
</tr>
</tbody></table>
<h3 id="疑惑解答"><a href="#疑惑解答" class="headerlink" title="疑惑解答"></a>疑惑解答</h3><p>在一个月黑风高的夜晚，小汪问了一堆奇怪的问题，然后来了句我们去开房吧。啊这，请不要想多了，她只是…想借鉴一下我搭建个人blog 的经验而已，哈哈。</p>
<p><strong>小汪</strong>：为什么要部署  <span class="exturl" data-url="aHR0cHM6Ly9naXQtc2NtLmNvbS9kb3dubG9hZC93aW4=">Git<i class="fa fa-external-link-alt"></i></span>  环境？</p>
<p><strong>答</strong>：主要用于版本控制，将生成的静态资源文件推送到 github 、gitee 等支持代码托管以及 pages 服务的平台。</p>
<p><strong>小汪</strong>：为什么要部署  <span class="exturl" data-url="aHR0cHM6Ly9ub2RlanMub3JnL3poLWNu">nodejs<i class="fa fa-external-link-alt"></i></span>  环境？</p>
<p><strong>答</strong>：主要用于安装静态博客生成器需要的依赖包，包含需要使用到的 npm 工具。</p>
<p>推荐使用国内 npm 镜像源地址。如何配置，请参考个人这篇博文： <a href="https://blog.cnwangk.top/2023/03/26/npm%E5%88%87%E6%8D%A2%E9%95%9C%E5%83%8F%E6%BA%90/">npm切换镜像源</a></p>
<p><strong>小汪</strong>： 为什么要部署  <span class="exturl" data-url="aHR0cDovL2hleG8uaW8vemgtY24v">hexo<i class="fa fa-external-link-alt"></i></span> 环境？</p>
<blockquote>
<p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 <span class="exturl" data-url="aHR0cDovL2RhcmluZ2ZpcmViYWxsLm5ldC9wcm9qZWN0cy9tYXJrZG93bi8=">Markdown<i class="fa fa-external-link-alt"></i></span>（或其他标记语言）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>
</blockquote>
<p><strong>答</strong>：主要用于生成静态博客网站框架页面（ html + js + css + xml ）文件。</p>
<p><strong>小汪</strong>： 为什么要部署  <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL25leHQtdGhlbWUvaGV4by10aGVtZS1uZXh0">next<i class="fa fa-external-link-alt"></i></span> 主题环境？</p>
<p><strong>答</strong>：主要用于生成静态博客主题页面（ html + js + css + xml ）文件。不限于 next 主题，可以使用你喜欢的主题，人各有所好嘛。</p>
<h3 id="仓库目录"><a href="#仓库目录" class="headerlink" title="仓库目录"></a>仓库目录</h3><p>本仓库目录作用说明：</p>
<ol>
<li><code>.deploy_git</code> 目录：存放带有 git 版本控制的静态资源目录，需要部署 <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudA==">hexo-deployer-git<i class="fa fa-external-link-alt"></i></span> 插件。</li>
<li>node_modules 目录：存放 npm 工具安装的依赖文件。</li>
<li>public 目录：与 <code>.deploy_git</code> 类似，存放 <code>hexo g</code> 生成后的静态资源文件。</li>
<li>scaffolds 目录：存放模板文件。</li>
<li>source 目录：存放网站源码文件。</li>
<li>themes 目录：存放站点主题文件。</li>
<li><code>_config.yml</code> 文件：hexo 站点配置文件。</li>
<li><code>_config.next.yml</code> 文件：next 主题配置文件。</li>
<li><code>package.json</code>：保存 npm 安装插件版本的信息文件。</li>
<li><code>.gitignore</code>：git 版本控制忽略提交推送哪些文件。</li>
</ol>
<p><strong>scaffolds 目录作用说明</strong>：</p>
<table>
<thead>
<tr>
<th>目录</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>draft.md</td>
<td>草稿文件模板</td>
</tr>
<tr>
<td>page.md</td>
<td>目录页面文件模板</td>
</tr>
<tr>
<td>post.md</td>
<td>博文文件模板</td>
</tr>
</tbody></table>
<p><strong>source 目录作用说明</strong>：</p>
<table>
<thead>
<tr>
<th>目录</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>_data</td>
<td>数据（比如利用相关插件生成的 json 数据文件）目录</td>
</tr>
<tr>
<td>_posts</td>
<td>博文生成目录</td>
</tr>
<tr>
<td>about</td>
<td>关于（自我简介）目录</td>
</tr>
<tr>
<td>categories</td>
<td>类别目录</td>
</tr>
<tr>
<td>tags</td>
<td>标签目录</td>
</tr>
<tr>
<td>images</td>
<td>图片目录</td>
</tr>
<tr>
<td>links</td>
<td>个人自定义友情链接目录（你也可以定义为 friends）</td>
</tr>
<tr>
<td>happy</td>
<td>个人自定义娱乐项目目录</td>
</tr>
<tr>
<td>BingSiteAuth.xml</td>
<td>SEO：在必应搜索引擎进行提交站点信息</td>
</tr>
<tr>
<td>CNAME</td>
<td>解析域名形式，使用某些插件需要在 source 目录加上 CNAME 配置文件</td>
</tr>
</tbody></table>
<h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><p>必备（部署）环境：</p>
<ol>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXQtc2NtLmNvbS9kb3dubG9hZC93aW4=">git<i class="fa fa-external-link-alt"></i></span> &amp; <span class="exturl" data-url="aHR0cHM6Ly9ub2RlanMub3JnL3poLWNu">nodejs<i class="fa fa-external-link-alt"></i></span></li>
<li>部署 <span class="exturl" data-url="aHR0cDovL2hleG8uaW8vemgtY24v">hexo<i class="fa fa-external-link-alt"></i></span> 静态博客生成器：<code>npm install hexo-cli -g</code></li>
<li>安装 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL25leHQtdGhlbWUvaGV4by10aGVtZS1uZXh0">next<i class="fa fa-external-link-alt"></i></span> 主题：<code>npm install hexo-theme-next</code></li>
</ol>
<p>hexo 部署步骤：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-cli -g   	<span class="comment">#1.部署 hexo 客户端工具（-g ， 全局模式）</span></span><br><span class="line">hexo init blog        		<span class="comment">#2.初始化 blog 站点目录（存放站点配置文件以及资源文件）  </span></span><br><span class="line"><span class="built_in">cd</span> blog           			<span class="comment">#3.进入 blog 目录</span></span><br><span class="line">npm install               	<span class="comment">#4.安装依赖</span></span><br><span class="line">hexo server        			<span class="comment">#5.启动 hexo 服务</span></span><br></pre></td></tr></table></figure>



<p>next 主题部署方式（两种）</p>
<ul>
<li>方式一，利用 <strong>hexo 5.x</strong> 以及更高版本的特性，推荐使用 npm 工具直接部署 ：<code>npm install hexo-theme-next</code> ，主题部署目录保存在 blog 目录中  <code>node_modules\hexo-theme-next</code>  。</li>
<li>方式二，利用 Git 工具部署：<code>git clone https://github.com/next-theme/hexo-theme-next themes/next</code> ，正常部署 hexo 会生成  themes 目录，将 next 主题克隆到 themes  中，好处是可以直接利用 git 做版本控制。</li>
</ul>
<p>方式一部署步骤：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">mkdir</span> blog-hexo-site          <span class="comment">#1.建立博客站点工作空间</span></span><br><span class="line">$ <span class="built_in">cd</span> blog-hexo-site         	<span class="comment">#2.进入站点工作空间</span></span><br><span class="line">$ npm install hexo-theme-next   <span class="comment">#3.部署 next 主题</span></span><br><span class="line">$ <span class="built_in">cp</span> .\node_modules\hexo-theme-next\_config.yml  .\_config.next.yml  <span class="comment">#4.复制主题配置文件到当前站点目录</span></span><br></pre></td></tr></table></figure>

<p>方式二部署步骤：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">mkdir</span> blog-hexo-site</span><br><span class="line">$ <span class="built_in">cd</span> blog-hexo-site</span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/next-theme/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>



<p>hexo 主站加入配置：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">next</span></span><br></pre></td></tr></table></figure>



<p>更详细的部署方式以及目录说明请参考 <span class="exturl" data-url="aHR0cDovL2hleG8uaW8vemgtY24v">hexo<i class="fa fa-external-link-alt"></i></span> 文档站和  <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL25leHQtdGhlbWUvaGV4by10aGVtZS1uZXh0">next<i class="fa fa-external-link-alt"></i></span>  主题仓库。</p>
<p>正常部署，使用命令 <code>hexo -v</code> 可以查看到工具版本信息：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo-cli: 4.3.1</span><br><span class="line">os: win32 10.0.22631</span><br><span class="line">node: 20.10.0</span><br><span class="line">acorn: 8.10.0</span><br><span class="line">ada: 2.7.2</span><br><span class="line">ares: 1.20.1</span><br><span class="line"><span class="built_in">base64</span>: 0.5.0</span><br><span class="line">brotli: 1.0.9</span><br><span class="line">cjs_module_lexer: 1.2.2</span><br><span class="line">cldr: 43.1</span><br><span class="line">icu: 73.2</span><br><span class="line">llhttp: 8.1.1</span><br><span class="line">modules: 115</span><br><span class="line">napi: 9</span><br><span class="line">nghttp2: 1.57.0</span><br><span class="line">nghttp3: 0.7.0</span><br><span class="line">ngtcp2: 0.8.1</span><br><span class="line">openssl: 3.0.12+quic</span><br><span class="line">simdutf: 3.2.18</span><br><span class="line">tz: 2023c</span><br><span class="line">undici: 5.26.4</span><br><span class="line">unicode: 15.0</span><br><span class="line">uv: 1.46.0</span><br><span class="line">uvwasi: 0.0.19</span><br><span class="line">v8: 11.3.244.8-node.25</span><br><span class="line">zlib: 1.2.13.1-motley</span><br></pre></td></tr></table></figure>



<p>使用命令 <code>node -v</code> 查看 nodejs 版本</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">PS</span> D:\work&gt; node <span class="literal">-v</span></span><br><span class="line">v20.<span class="number">10.0</span></span><br></pre></td></tr></table></figure>



<p>使用命令 <code>npm -v</code> 查看 npm 版本</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">PS</span> D:\work&gt; npm <span class="literal">-v</span></span><br><span class="line"><span class="number">10.2</span>.<span class="number">3</span></span><br></pre></td></tr></table></figure>



<h3 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h3><p>个人目前使用比较多的域名是 <a href="https://blog.cnwangk.top/">https://blog.cnwangk.top/</a> ，我做了 SEO。</p>
<p>效果展示，在线地址：</p>
<ol>
<li><p><strong>备用地址</strong>：</p>
<ul>
<li><a href="https://blog.cnwangk.top/">https://blog.cnwangk.top/</a><ul>
<li>部署在 vercel：<span class="exturl" data-url="aHR0cHM6Ly92ZXJjZWwuY29tLw==">https://vercel.com/<i class="fa fa-external-link-alt"></i></span></li>
</ul>
</li>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cuY253YW5nay50b3Av">https://www.cnwangk.top/<i class="fa fa-external-link-alt"></i></span><ul>
<li>部署在 netlify：<span class="exturl" data-url="aHR0cHM6Ly9hcHAubmV0bGlmeS5jb20v">https://app.netlify.com/<i class="fa fa-external-link-alt"></i></span></li>
</ul>
</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9jZi5jbndhbmdrLnRvcC8=">https://cf.cnwangk.top/<i class="fa fa-external-link-alt"></i></span><ul>
<li>部署在 cloudflare：<span class="exturl" data-url="aHR0cHM6Ly9kYXNoLmNsb3VkZmxhcmUuY29tLw==">https://dash.cloudflare.com/<i class="fa fa-external-link-alt"></i></span></li>
</ul>
</li>
</ul>
</li>
<li><p>主站地址：</p>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9za3kuY253YW5nay50b3Av">https://sky.cnwangk.top/<i class="fa fa-external-link-alt"></i></span><ul>
<li>部署在github：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2Nud2FuZ2svY253YW5nay5naXRodWIuaW8=">https://github.com/cnwangk/cnwangk.github.io<i class="fa fa-external-link-alt"></i></span></li>
</ul>
</li>
</ul>
</li>
</ol>
<h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>next 主题仓库相关，一共有三个仓库：</p>
<table>
<thead>
<tr>
<th>版本</th>
<th>年份</th>
<th>仓库</th>
</tr>
</thead>
<tbody><tr>
<td>v5.1.4 或更低</td>
<td>2014 ~ 2017</td>
<td><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2lpc3NuYW4vaGV4by10aGVtZS1uZXh0">https://github.com/iissnan/hexo-theme-next<i class="fa fa-external-link-alt"></i></span></td>
</tr>
<tr>
<td>v6.0.0 ~ v7.8.0</td>
<td>2018 ~ 2019</td>
<td><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3RoZW1lLW5leHQvaGV4by10aGVtZS1uZXh0">https://github.com/theme-next/hexo-theme-next<i class="fa fa-external-link-alt"></i></span></td>
</tr>
<tr>
<td>v8.0.0 或更高</td>
<td>2020 ~ 至今</td>
<td><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL25leHQtdGhlbWUvaGV4by10aGVtZS1uZXh0">https://github.com/next-theme/hexo-theme-next<i class="fa fa-external-link-alt"></i></span></td>
</tr>
</tbody></table>
<ol>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2lpc3NuYW4vaGV4by10aGVtZS1uZXh0">next 5.x<i class="fa fa-external-link-alt"></i></span> ，仓库很长一段时间没更新，不推荐使用。</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3RoZW1lLW5leHQvaGV4by10aGVtZS1uZXh0">next 6.x ~ 7.x<i class="fa fa-external-link-alt"></i></span>  ，仓库很长一段时间没更新，不推荐使用。</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL25leHQtdGhlbWUvaGV4by10aGVtZS1uZXh0">next 8.x<i class="fa fa-external-link-alt"></i></span>（个人当前使用版本 v8.19.1），<strong>推荐使用</strong>。</li>
</ol>
<p>引用 next 8.x 主题仓库一篇 issues 的一段说明：</p>
<blockquote>
<p>遗憾的是，每个新仓库的创建者都没有 Archive 旧仓库的权限，导致了历史遗留问题。为了避免安装过时的 NexT 版本，请务必按照本仓库 README 中提供的几种安装方式进行操作。<br>跨版本的升级可能并不顺滑（例如由 v5.1.4 或 v7.8.0 升级至 v8.0.0），请备份配置文件及修改过的文件（例如自定义模板文件）后，重新安装新的主题。具体操作请阅读文档： <span class="exturl" data-url="aHR0cHM6Ly90aGVtZS1uZXh0LmpzLm9yZy9kb2NzL2dldHRpbmctc3RhcnRlZC91cGdyYWRlLmh0bWw=">https://theme-next.js.org/docs/getting-started/upgrade.html<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p>详情请戳这篇 issues ，<strong>必读更新说明及常见问题</strong>：</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL25leHQtdGhlbWUvaGV4by10aGVtZS1uZXh0L2lzc3Vlcy80">https://github.com/next-theme/hexo-theme-next/issues/4<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="hexo-本体-next-主题配置"><a href="#hexo-本体-next-主题配置" class="headerlink" title="hexo 本体 &amp; next 主题配置"></a>hexo 本体 &amp; next 主题配置</h2><p>通过浏览 <a href="%5BHexo%5D(https://hexo.io/zh-cn/)">hexo 文档站</a> 与 <span class="exturl" data-url="aHR0cHM6Ly90aGVtZS1uZXh0LmpzLm9yZy8=">next 主题文档站<i class="fa fa-external-link-alt"></i></span>) 做了大量实践操作比对，做出如下总结。</p>
<h3 id="config-yml-配置"><a href="#config-yml-配置" class="headerlink" title="_config.yml 配置"></a><code>_config.yml</code> 配置</h3><p><code>_config.yml</code> 配置文件路径：<code>blog\_config.yml</code></p>
<p><strong>友情提醒</strong>：个人所展示 Hexo 配置，主题已升级 v7.0.0，<code>_config.yml</code> 配置文件内容还在摸索尝试中，尚未做出改变，还停留在 v6.3.0。</p>
<hr>
<p><strong>主站配置与搜索</strong></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ===================================================================</span></span><br><span class="line"><span class="comment"># Version：7.0.0</span></span><br><span class="line"><span class="comment"># Hexo 主站配置</span></span><br><span class="line"><span class="comment"># Hexo Configuration</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/configuration.html</span></span><br><span class="line"><span class="comment">## Source: https://github.com/hexojs/hexo/</span></span><br><span class="line"><span class="comment"># ===================================================================</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># -------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># 友情提示：配置项分为网站（Hexo）主站配置和主题（默认为 landscape ）配置</span></span><br><span class="line"><span class="comment"># 主站配置文件：根目录下的 _config.yml</span></span><br><span class="line"><span class="comment"># 主题配置：例如使用 next 主题，根目录下配置 _config.next.yml</span></span><br><span class="line"><span class="comment"># -------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="comment"># 配置效果请戳：https://blog.cnwangk.top/</span></span><br><span class="line"><span class="comment"># 备用地址：https://cnwangk.github.io/</span></span><br><span class="line"><span class="comment"># 网站主站设置</span></span><br><span class="line"><span class="comment"># 参考 hexo 官方文档：https://hexo.io/zh-cn/docs/configuration.html</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">龙腾万里sky的博客</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">&#x27;子标题比如我个人比较喜欢的一句话：养得胸中一种恬静&#x27;</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">&#x27;可以是你的技术偏好：&#x27;</span></span><br><span class="line"><span class="attr">keywords:</span>                      <span class="comment"># 网站的关键词，支持多个关键词。</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">龙腾万里sky</span>             <span class="comment"># 作者（你的昵称） </span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span>                <span class="comment"># 设置网站显示语言，language:zh-CN，显示中文</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">&#x27;Asia/Shanghai&#x27;</span>      <span class="comment"># 时区，国内推荐设置 timezone: &#x27;Asia/Shanghai&#x27; ，亚洲/上海</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># search</span></span><br><span class="line"><span class="comment"># 配置本地搜索，主站配置 hexo config </span></span><br><span class="line"><span class="comment"># 需要安装插件：$ npm install hexo-generator-searchdb --save</span></span><br><span class="line"><span class="comment"># 详细配置请参考：https://theme-next.js.org/docs/third-party-services/search-services.html#Local-Search</span></span><br><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">  <span class="attr">content:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">format:</span> <span class="string">html</span></span><br></pre></td></tr></table></figure>



<p><strong>扩展</strong></p>
<hr>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># 扩展</span></span><br><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="comment"># -------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># 初次安装 hexo，默认配置主题为：theme: landscape</span></span><br><span class="line"><span class="comment"># 主站配置选择主题，个人通过 npm install hexo-theme-next --save 形式安装</span></span><br><span class="line"><span class="comment"># 配置方式是，theme: next</span></span><br><span class="line"><span class="comment">#theme: fluid</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">next</span></span><br><span class="line"><span class="comment">#theme: hexo-theme-next</span></span><br><span class="line"><span class="comment">#theme: landscape</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成 sitemap</span></span><br><span class="line"><span class="comment"># npm install hexo-generator-sitemap --save</span></span><br><span class="line"><span class="comment"># npm install hexo-generator-baidu-sitemap --save</span></span><br><span class="line"><span class="attr">sitemap:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">sitemap.xml</span></span><br><span class="line"><span class="comment"># baidusitemap:</span></span><br><span class="line"><span class="comment">#   path: baidusitemap.xml</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 文章 URL 设置规则</span></span><br><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;</span></span><br><span class="line"><span class="comment">#url: https://cnwangk.github.io/</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">https://blog.cnwangk.top/</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">:year/:month/:day/:title/</span></span><br><span class="line"><span class="attr">permalink_defaults:</span></span><br><span class="line"><span class="attr">pretty_urls:</span></span><br><span class="line">  <span class="attr">trailing_index:</span> <span class="literal">true</span> <span class="comment"># Set to false to remove trailing &#x27;index.html&#x27; from permalinks</span></span><br><span class="line">  <span class="attr">trailing_html:</span> <span class="literal">true</span> <span class="comment"># Set to false to remove trailing &#x27;.html&#x27; from permalinks</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 网站资源目录</span></span><br><span class="line"><span class="comment"># Directory</span></span><br><span class="line"><span class="attr">source_dir:</span> <span class="string">source</span></span><br><span class="line"><span class="attr">public_dir:</span> <span class="string">public</span></span><br><span class="line"><span class="attr">tag_dir:</span> <span class="string">tags</span></span><br><span class="line"><span class="attr">archive_dir:</span> <span class="string">archives</span></span><br><span class="line"><span class="attr">category_dir:</span> <span class="string">categories</span></span><br><span class="line"><span class="attr">schedule_dir:</span> <span class="string">schedule</span></span><br><span class="line"><span class="attr">code_dir:</span> <span class="string">downloads/code</span></span><br><span class="line"><span class="attr">i18n_dir:</span> <span class="string">:lang</span></span><br><span class="line"><span class="attr">skip_render:</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 文章相关配置</span></span><br><span class="line"><span class="comment"># Writing</span></span><br><span class="line"><span class="attr">new_post_name:</span> <span class="string">:title.md</span> <span class="comment"># 新文章的文件名称</span></span><br><span class="line"><span class="attr">default_layout:</span> <span class="string">post</span>     <span class="comment"># 预设布局</span></span><br><span class="line"><span class="attr">auto_spacing:</span> <span class="literal">false</span>      <span class="comment"># 在中文和英文之间加入空格</span></span><br><span class="line"><span class="attr">titlecase:</span> <span class="literal">false</span>         <span class="comment"># 把标题转换为 title case</span></span><br><span class="line"><span class="attr">external_link:</span>           <span class="comment"># 在新标签中打开链接</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span>           <span class="comment"># 在新标签中打开链接，默认 true</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">site</span>            <span class="comment"># 对整个网站（site）生效或仅对文章（post）生效</span></span><br><span class="line">  <span class="attr">exclude:</span> <span class="string">&#x27;&#x27;</span>            <span class="comment"># 需要排除的域名。主域名和子域名如 www 需分别配置</span></span><br><span class="line"><span class="attr">filename_case:</span> <span class="number">0</span>         <span class="comment"># 把文件名称转换为 (1) 小写或 (2) 大写 </span></span><br><span class="line"><span class="attr">render_drafts:</span> <span class="literal">false</span>     <span class="comment"># 显示草稿，默认 false</span></span><br><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">false</span>  <span class="comment"># post_asset_folder 文章资源文件夹 相对路径引用的标签插件</span></span><br><span class="line"><span class="comment"># 使用 Markdown 嵌入图片 </span></span><br><span class="line"><span class="comment"># marked:</span></span><br><span class="line"><span class="comment">#   prependRoot: true</span></span><br><span class="line"><span class="comment">#   postAsset: true</span></span><br><span class="line"><span class="attr">relative_link:</span> <span class="literal">false</span>    <span class="comment"># 把链接改为与根目录的相对位址</span></span><br><span class="line"><span class="attr">future:</span> <span class="literal">true</span>  <span class="comment"># future 显示未来的文章 default:true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 代码块的设置, 请参考 Highlight.js 进行设置</span></span><br><span class="line"><span class="comment"># 注意：某些主题可能做了改造，需要禁用主站 PrismJS 配置，代码块的设置, 请参考 PrismJS 进行设置</span></span><br><span class="line"><span class="comment"># https://hexo.io/zh-cn/docs/syntax-highlight#Highlight-js</span></span><br><span class="line"><span class="comment"># https://hexo.io/zh-cn/docs/syntax-highlight#PrismJS</span></span><br><span class="line"><span class="attr">highlight:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">line_number:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">auto_detect:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">tab_replace:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="attr">wrap:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">hljs:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">prismjs:</span>       <span class="comment"># 代码块的设置, 请参考 PrismJS 进行设置</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">preprocess:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">line_number:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">tab_replace:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 首页设置</span></span><br><span class="line"><span class="comment"># Home page setting</span></span><br><span class="line"><span class="comment"># path: Root path for your blogs index page. (default = &#x27;&#x27;)</span></span><br><span class="line"><span class="comment"># per_page: Posts displayed per page. (0 = disable pagination)</span></span><br><span class="line"><span class="comment"># order_by: Posts order. (Order by date descending by default)</span></span><br><span class="line"><span class="attr">index_generator:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="number">5</span>         <span class="comment"># 每页显示文章数量</span></span><br><span class="line">  <span class="attr">order_by:</span> <span class="string">-date</span>     <span class="comment"># 按时间先后顺序排序</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 类别和标签配置</span></span><br><span class="line"><span class="comment"># Category &amp; Tag</span></span><br><span class="line"><span class="comment"># default_category：默认分类，默认值 uncategorized</span></span><br><span class="line"><span class="comment"># category_map：分类别名</span></span><br><span class="line"><span class="comment"># tag_map： 标签别名 </span></span><br><span class="line"><span class="attr">default_category:</span> <span class="string">uncategorized</span></span><br><span class="line"><span class="attr">category_map:</span></span><br><span class="line"><span class="attr">tag_map:</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Metadata elements</span></span><br><span class="line"><span class="comment">## https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta</span></span><br><span class="line"><span class="attr">meta_generator:</span> <span class="literal">true</span>    <span class="comment"># Meta generator 标签。 值为 false 时 Hexo 不会在头部插入该标签</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 日期、时间设置（文章生成时间）</span></span><br><span class="line"><span class="comment"># Date / Time format</span></span><br><span class="line"><span class="comment">## Hexo uses Moment.js to parse and display date</span></span><br><span class="line"><span class="comment">## You can customize the date format as defined in</span></span><br><span class="line"><span class="comment">## http://momentjs.com/docs/#/displaying/format/</span></span><br><span class="line"><span class="attr">date_format:</span> <span class="string">YYYY-MM-DD</span>   <span class="comment"># 日期格式</span></span><br><span class="line"><span class="attr">time_format:</span> <span class="string">HH:mm:ss</span>     <span class="comment"># 时间格式</span></span><br><span class="line"><span class="comment">## updated_option supports &#x27;mtime&#x27;, &#x27;date&#x27;, &#x27;empty&#x27;</span></span><br><span class="line"><span class="attr">updated_option:</span> <span class="string">&#x27;mtime&#x27;</span>   <span class="comment"># 当 Front Matter 中没有指定 updated 时 updated 的取值</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 分页</span></span><br><span class="line"><span class="comment"># Pagination</span></span><br><span class="line"><span class="comment">## Set per_page to 0 to disable pagination</span></span><br><span class="line"><span class="attr">per_page:</span> <span class="number">10</span>             <span class="comment"># 每页显示的文章量 (0 = 关闭分页功能)，默认 10</span></span><br><span class="line"><span class="attr">pagination_dir:</span> <span class="string">page</span>     <span class="comment"># 分页目录</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置包含（include）、排除（exclude）、忽略（ignore）哪些文件</span></span><br><span class="line"><span class="comment"># Include / Exclude file(s)</span></span><br><span class="line"><span class="comment">## include:/exclude: options only apply to the &#x27;source/&#x27; folder</span></span><br><span class="line"><span class="comment"># include: Hexo 默认会不包括 source/ 下的文件和文件夹（包括名称以下划线和 . 开头的文件和文件夹，Hexo 的 _posts 和 _data 等目录除外）。</span></span><br><span class="line"><span class="comment"># include: 通过设置此字段将使 Hexo 处理他们并将它们复制到 source 目录下。</span></span><br><span class="line"><span class="comment"># exclude: Hexo 不包括 source/ 下的这些文件和目录</span></span><br><span class="line"><span class="comment"># ignore: Hexo 会忽略整个 Hexo 项目下的这些文件夹或文件</span></span><br><span class="line"><span class="attr">include:</span></span><br><span class="line"><span class="attr">exclude:</span></span><br><span class="line"><span class="attr">ignore:</span></span><br></pre></td></tr></table></figure>



<p><strong>尝试使用第三方插件 hexo-bilibili-bangumi</strong></p>
<hr>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># 安装：npm install hexo-bilibili-bangumi  --save</span></span><br><span class="line"><span class="comment"># 仓库地址：https://github.com/HCLonely/hexo-bilibili-bangumi</span></span><br><span class="line"><span class="comment"># 注意：我设置了二级菜单，同时需要 path 值。默认不填 path 即可。</span></span><br><span class="line"><span class="comment"># -------------------------------------------------------------------</span></span><br><span class="line"><span class="attr">bangumi:</span> <span class="comment"># 追番设置</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">source:</span> <span class="string">bili</span></span><br><span class="line">  <span class="attr">bgmInfoSource:</span> <span class="string">&#x27;bgmApi&#x27;</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">&#x27;/happy/bangumis/index.html&#x27;</span></span><br><span class="line">  <span class="attr">vmid:</span> <span class="string">&#x27;26787954&#x27;</span></span><br><span class="line">  <span class="attr">title:</span> <span class="string">&#x27;追番列表&#x27;</span></span><br><span class="line">  <span class="attr">quote:</span> <span class="string">&#x27;一入编程深似海，从此节操是路人！&#x27;</span></span><br><span class="line">  <span class="attr">show:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">lazyload:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">srcValue:</span> <span class="string">&#x27;__image__&#x27;</span></span><br><span class="line">  <span class="attr">lazyloadAttrName:</span> <span class="string">&#x27;data-src=__image__&#x27;</span></span><br><span class="line">  <span class="attr">loading:</span></span><br><span class="line">  <span class="attr">showMyComment:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">pagination:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">metaColor:</span></span><br><span class="line">  <span class="attr">color:</span></span><br><span class="line">  <span class="attr">webp:</span></span><br><span class="line">  <span class="attr">progress:</span></span><br><span class="line">  <span class="attr">extraOrder:</span></span><br><span class="line">  <span class="attr">proxy:</span></span><br><span class="line">    <span class="attr">host:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="attr">port:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="attr">extra_options:</span></span><br><span class="line">    <span class="attr">key:</span> <span class="string">value</span></span><br><span class="line"><span class="attr">cinema:</span> <span class="comment"># 追剧设置</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">&#x27;/happy/cinemas/index.html&#x27;</span></span><br><span class="line">  <span class="attr">vmid:</span> <span class="string">&#x27;26787954&#x27;</span></span><br><span class="line">  <span class="attr">title:</span> <span class="string">&#x27;追剧列表&#x27;</span></span><br><span class="line">  <span class="attr">quote:</span> <span class="string">&#x27;一入编程深似海，从此节操是路人！&#x27;</span></span><br><span class="line">  <span class="attr">show:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">lazyload:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">srcValue:</span> <span class="string">&#x27;__image__&#x27;</span></span><br><span class="line">  <span class="attr">lazyloadAttrName:</span> <span class="string">&#x27;data-src=__image__&#x27;</span></span><br><span class="line">  <span class="attr">loading:</span></span><br><span class="line">  <span class="attr">metaColor:</span></span><br><span class="line">  <span class="attr">color:</span></span><br><span class="line">  <span class="attr">webp:</span></span><br><span class="line">  <span class="attr">progress:</span></span><br><span class="line">  <span class="attr">extraOrder:</span></span><br><span class="line">  <span class="attr">extra_options:</span></span><br><span class="line">    <span class="attr">key:</span> <span class="string">value</span></span><br></pre></td></tr></table></figure>



<p><strong>一键发布至 github 仓库，需要安装插件：hexo-deployer-git</strong></p>
<p>建议配置成这种模式：<code>repo: git@github.com:username/username.github.io.git</code></p>
<hr>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># 一键发布至 github 仓库，需要安装插件：hexo-deployer-git</span></span><br><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment"># npm install hexo-deployer-git --save</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class="line"><span class="comment"># -------------------------------------------------------------------</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="comment">#repo: https://github.com/cnwangk/cnwangk.github.io</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">git@github.com:cnwangk/cnwangk.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">gh-pages</span></span><br><span class="line">  <span class="comment">#message: 升级 hexo 版本至 v7.0.0</span></span><br></pre></td></tr></table></figure>

<p>啊，你没看错，我一般是第一时间升级到 hexo 最新稳定版本。如果觉得最新版本不稳定，也可以使用上一个版本 hexo 6.3.0。</p>
<hr>
<p><code>_config.yml</code> 其它配置项，个人感觉可用可不用：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 中文链接转拼音</span></span><br><span class="line"><span class="comment"># 插件1： https://github.com/rozbo/hexo-abbrlink   仓库近期还在活跃</span></span><br><span class="line"><span class="comment"># 插件2： https://github.com/viko16/hexo-permalink-pinyin    仓库有一段时间没更新了</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 压缩静态资源：css | js | html</span></span><br><span class="line"><span class="comment"># gulp</span></span><br><span class="line"><span class="comment"># npm install hexo-minify --save  有插件冲突，可能需要禁用某些插件功能</span></span><br><span class="line"><span class="comment"># npm install hexo-clean-css --save</span></span><br><span class="line"><span class="comment"># npm install html-minifier-terser --save</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 二次元看板娘，根据个人喜好添加</span></span><br><span class="line"><span class="comment"># npm install --save hexo-helper-live2d</span></span><br><span class="line"><span class="comment"># 原始仓库地址：https://github.com/EYHN/hexo-helper-live2d</span></span><br><span class="line"><span class="comment"># 活跃仓库地址：https://github.com/stevenjoezhang/live2d-widget</span></span><br></pre></td></tr></table></figure>



<hr>
<h3 id="config-next-yml-配置"><a href="#config-next-yml-配置" class="headerlink" title="_config.next.yml 配置"></a><code>_config.next.yml</code> 配置</h3><p>本文记录了 hexo-theme-next 主题从 v8.16.0 到 v8.19.1 做了哪些更新（移除或新增某些功能），在代码注释中有做说明，方便查阅。</p>
<p><code>_config.next.yml</code> <strong>主题配置文件路径</strong>：<code>blog\_config.next.yml</code></p>
<p>如果你采用了 <code>npm install hexo-theme-next --save</code> 形式安装。那么，<code>_config.next.yml</code> <strong>主题配置文件原始路径</strong>为：<code>blog\node_modules\hexo-theme-next\_config.yml</code>。</p>
<hr>
<p><strong>主题核心配置</strong>：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ===============================================================</span></span><br><span class="line"><span class="comment"># 个人对使用过的 Next 主题相关功能一点点理解，多数情况参考 Next 文档站</span></span><br><span class="line"><span class="comment"># 存在描述不当（有误）的地方，还请包含</span></span><br><span class="line"><span class="comment"># It&#x27;s recommended to use Alternate Theme Config to configure NexT</span></span><br><span class="line"><span class="comment"># Modifying this file may result in merge conflict</span></span><br><span class="line"><span class="comment"># See: https://theme-next.js.org/docs/getting-started/configuration</span></span><br><span class="line"><span class="comment"># ===============================================================</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># 主题核心配置</span></span><br><span class="line"><span class="comment"># 详细演示请前往（目前文档没有同步中文翻译）：https://theme-next.js.org/docs/theme-settings/</span></span><br><span class="line"><span class="comment"># Theme Core Configuration Settings</span></span><br><span class="line"><span class="comment"># See: https://theme-next.js.org/docs/theme-settings/</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 允许内容（生成文件）可以存在缓存</span></span><br><span class="line"><span class="comment"># Allow to cache content generation.</span></span><br><span class="line"><span class="attr">cache:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在 hexo（hexo g） 生成静态资源文件后删除不需要的文件</span></span><br><span class="line"><span class="comment"># Remove unnecessary files after hexo generate.</span></span><br><span class="line"><span class="attr">minify:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置自定义文件路径</span></span><br><span class="line"><span class="comment"># 例如在你的网站目录配置：source/_data</span></span><br><span class="line"><span class="comment"># Define custom file paths.</span></span><br><span class="line"><span class="comment"># Create your custom files in site directory `source/_data` and uncomment needed files below.</span></span><br><span class="line"><span class="attr">custom_file_path:</span></span><br><span class="line">  <span class="comment">#head: source/_data/head.njk</span></span><br><span class="line">  <span class="comment">#header: source/_data/header.njk</span></span><br><span class="line">  <span class="comment">#sidebar: source/_data/sidebar.njk</span></span><br><span class="line">  <span class="comment">#postMeta: source/_data/post-meta.njk</span></span><br><span class="line">  <span class="comment">#postBodyStart: source/_data/post-body-start.njk</span></span><br><span class="line">  <span class="comment">#postBodyEnd: source/_data/post-body-end.njk</span></span><br><span class="line">  <span class="comment">#footer: source/_data/footer.njk</span></span><br><span class="line">  <span class="comment">#bodyEnd: source/_data/body-end.njk</span></span><br><span class="line">  <span class="comment">#variable: source/_data/variables.styl</span></span><br><span class="line">  <span class="comment">#mixin: source/_data/mixins.styl</span></span><br><span class="line">  <span class="comment">#style: source/_data/styles.styl</span></span><br></pre></td></tr></table></figure>



<p><strong>主题形态设置</strong></p>
<hr>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># 主题设置：安装默认设置 Muse ，可以自行切换喜欢的主题形态</span></span><br><span class="line"><span class="comment"># 比如 Next 主题文档站默认设置 Gemini ，个人比较喜欢这款</span></span><br><span class="line"><span class="comment"># Scheme Settings</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 主题四大形态：Muse | Mist | Pisces | Gemini</span></span><br><span class="line"><span class="comment"># 默认设置，scheme: Muse</span></span><br><span class="line"><span class="comment"># Schemes</span></span><br><span class="line"><span class="comment">#scheme: Muse</span></span><br><span class="line"><span class="comment">#scheme: Mist</span></span><br><span class="line"><span class="comment">#scheme: Pisces</span></span><br><span class="line"><span class="attr">scheme:</span> <span class="string">Gemini</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 暗黑模式设置，false：禁用，true：开放</span></span><br><span class="line"><span class="comment"># Dark Mode</span></span><br><span class="line"><span class="attr">darkmode:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>



<p><strong>网站信息配置</strong></p>
<hr>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># 网站信息配置</span></span><br><span class="line"><span class="comment"># Site Information Settings</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="attr">favicon:</span></span><br><span class="line">  <span class="attr">small:</span> <span class="string">/images/favicon-16x16-next.png</span></span><br><span class="line">  <span class="attr">medium:</span> <span class="string">/images/favicon-32x32-next.png</span></span><br><span class="line">  <span class="attr">apple_touch_icon:</span> <span class="string">/images/apple-touch-icon-next.png</span></span><br><span class="line">  <span class="attr">safari_pinned_tab:</span> <span class="string">/images/logo.svg</span></span><br><span class="line">  <span class="comment">#android_manifest: /manifest.json</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 自定义 logo（温馨提示：不支持 Mist 主题）</span></span><br><span class="line"><span class="comment"># Custom Logo (Warning: Do not support scheme Mist)</span></span><br><span class="line"><span class="attr">custom_logo:</span> <span class="comment">#/uploads/custom-logo.png</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建监听许可协议，显示效果位于文章底部</span></span><br><span class="line"><span class="comment"># Creative Commons 4.0 International License.</span></span><br><span class="line"><span class="comment"># See: https://creativecommons.org/about/cclicenses/</span></span><br><span class="line"><span class="attr">creative_commons:</span></span><br><span class="line">  <span class="comment"># Available values: by | by-nc | by-nc-nd | by-nc-sa | by-nd | by-sa | cc-zero</span></span><br><span class="line">  <span class="attr">license:</span> <span class="string">by-nc-sa</span></span><br><span class="line">  <span class="comment"># Available values: big | small</span></span><br><span class="line">  <span class="attr">size:</span> <span class="string">big</span></span><br><span class="line">  <span class="attr">sidebar:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">post:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># You can set a language value if you prefer a translated version of CC license, e.g. deed.zh</span></span><br><span class="line">  <span class="comment"># CC licenses are available in 39 languages, you can find the specific and correct abbreviation you need on https://creativecommons.org</span></span><br><span class="line">  <span class="attr">language:</span> <span class="string">deed.zh</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Open graph settings</span></span><br><span class="line"><span class="comment"># See: https://hexo.io/docs/helpers#open-graph</span></span><br><span class="line"><span class="attr">open_graph:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">options:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">blog</span></span><br><span class="line">    <span class="comment">#twitter_card: &lt;twitter:card&gt;</span></span><br><span class="line">    <span class="comment">#twitter_id: &lt;twitter:creator&gt;</span></span><br><span class="line">    <span class="comment">#twitter_site: &lt;twitter:site&gt;</span></span><br><span class="line">    <span class="comment">#twitter_image: &lt;twitter:image&gt;</span></span><br><span class="line">    <span class="comment">#google_plus: &lt;g+:profile_link&gt;</span></span><br><span class="line">    <span class="comment">#fb_admins: &lt;fb:admin_id&gt;</span></span><br><span class="line">    <span class="comment">#fb_app_id: &lt;fb:app_id&gt;</span></span><br></pre></td></tr></table></figure>



<p><strong>菜单栏设置</strong></p>
<hr>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># 菜单栏设置</span></span><br><span class="line"><span class="comment"># 设置网站主站显示语言，language:zh-CN，显示中文</span></span><br><span class="line"><span class="comment"># Menu Settings</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Usage: `Key: /link/ || icon`</span></span><br><span class="line"><span class="comment"># Key is the name of menu item. If the translation for this item is available, the translated text will be loaded, otherwise the Key name will be used. Key is case-sensitive.</span></span><br><span class="line"><span class="comment"># Value before `||` delimiter is the target link, value after `||` delimiter is the name of Font Awesome icon.</span></span><br><span class="line"><span class="comment"># External url should start with http:// or https://</span></span><br><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-home</span>                   <span class="comment"># 首页</span></span><br><span class="line">  <span class="attr">about:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-user</span>            <span class="comment"># 关于页面</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-tags</span>              <span class="comment"># 标签页面</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-th</span>    <span class="comment"># 类别页面</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-archive</span>   <span class="comment"># 归档页面（根据发表时间进行排序） </span></span><br><span class="line">  <span class="attr">links:</span> <span class="string">/links/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-globe</span> <span class="string">fa-fw</span>     <span class="comment"># 友情链接（可以自己扩展）</span></span><br><span class="line">  <span class="comment">#schedule: /schedule/ || fa fa-calendar</span></span><br><span class="line">  <span class="comment">#sitemap: /sitemap.xml || fa fa-sitemap</span></span><br><span class="line">  <span class="comment">#commonweal: /404/ || fa fa-heartbeat</span></span><br><span class="line">  <span class="comment">#node_modules\hexo-theme-next\languages\zh-CN.yml 配置文件menu模块新增汉化</span></span><br><span class="line">  <span class="comment">#例如个人配置  happy:文娱  bangumis:番剧  cinemas:电视剧</span></span><br><span class="line">  <span class="attr">happy:</span>                                  <span class="comment"># 多级（二级）菜单示例 </span></span><br><span class="line">      <span class="attr">default:</span> <span class="string">/happy/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-th</span></span><br><span class="line">      <span class="attr">bangumis:</span> <span class="string">/bangumis/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-th</span></span><br><span class="line">      <span class="attr">cinemas:</span> <span class="string">/cinemas/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-th</span></span><br><span class="line">  <span class="comment">#bangumis: /bangumis/ || fa fa-th</span></span><br><span class="line">  <span class="comment">#cinemas: /cinemas/ || fa fa-th</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable / Disable menu icons / item badges.</span></span><br><span class="line"><span class="attr">menu_settings:</span></span><br><span class="line">  <span class="attr">icons:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">badges:</span> <span class="literal">false</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p><strong>侧边栏配置</strong></p>
<hr>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># 侧边栏配置</span></span><br><span class="line"><span class="comment"># Sidebar Settings</span></span><br><span class="line"><span class="comment"># See: https://theme-next.js.org/docs/theme-settings/sidebar</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置侧边栏位置</span></span><br><span class="line"><span class="attr">sidebar:</span></span><br><span class="line">  <span class="comment"># Sidebar Position.</span></span><br><span class="line">  <span class="attr">position:</span> <span class="string">left</span></span><br><span class="line">  <span class="comment">#position: right</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Manual define the sidebar width. If commented, will be default for:</span></span><br><span class="line">  <span class="comment"># Muse | Mist: 320</span></span><br><span class="line">  <span class="comment"># Pisces | Gemini: 240</span></span><br><span class="line">  <span class="comment">#width: 300</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Sidebar Display (only for Muse | Mist), available values:</span></span><br><span class="line">  <span class="comment">#  - post    expand on posts automatically. Default.</span></span><br><span class="line">  <span class="comment">#  - always  expand for all pages automatically.</span></span><br><span class="line">  <span class="comment">#  - hide    expand only when click on the sidebar toggle icon.</span></span><br><span class="line">  <span class="comment">#  - remove  totally remove sidebar including sidebar toggle.</span></span><br><span class="line">  <span class="attr">display:</span> <span class="string">post</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Sidebar padding in pixels.</span></span><br><span class="line">  <span class="attr">padding:</span> <span class="number">18</span></span><br><span class="line">  <span class="comment"># Sidebar offset from top menubar in pixels (only for Pisces | Gemini).</span></span><br><span class="line">  <span class="attr">offset:</span> <span class="number">12</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Sidebar Avatar</span></span><br><span class="line"><span class="attr">avatar:</span></span><br><span class="line">  <span class="comment"># Replace the default image and set the url here.</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">/images/avatar.jpg</span></span><br><span class="line">  <span class="comment"># If true, the avatar will be displayed in circle.</span></span><br><span class="line">  <span class="attr">rounded:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># If true, the avatar will be rotated with the cursor.</span></span><br><span class="line">  <span class="attr">rotated:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Posts / Categories / Tags in sidebar.</span></span><br><span class="line"><span class="attr">site_state:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>



<p><strong>社交网站链接设置</strong></p>
<hr>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 社交网站链接设置（位于网站左侧中间部位）</span></span><br><span class="line"><span class="comment"># Social Links</span></span><br><span class="line"><span class="comment"># Usage: `Key: permalink || icon`</span></span><br><span class="line"><span class="comment"># Key is the link label showing to end users.</span></span><br><span class="line"><span class="comment"># Value before `||` delimiter is the target permalink, value after `||` delimiter is the name of Font Awesome icon.</span></span><br><span class="line"><span class="attr">social:</span></span><br><span class="line">  <span class="attr">GitHub:</span> <span class="string">https://github.com/cnwangk</span> <span class="string">||</span> <span class="string">fab</span> <span class="string">fa-github</span></span><br><span class="line">  <span class="attr">Zhihu:</span> <span class="string">https://www.zhihu.com/people/hbwk</span> <span class="string">||</span> <span class="string">fab</span> <span class="string">fa-zhihu</span></span><br><span class="line">  <span class="attr">E-Mail:</span> <span class="string">mailto:dywangk@gmail.com</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-envelope</span></span><br><span class="line">  <span class="comment">#Weibo: https://weibo.com/yourname || fab fa-weibo</span></span><br><span class="line">  <span class="comment">#Twitter: https://twitter.com/yourname || fab fa-twitter</span></span><br><span class="line">  <span class="comment">#FB Page: https://www.facebook.com/yourname || fab fa-facebook</span></span><br><span class="line">  <span class="comment">#StackOverflow: https://stackoverflow.com/yourname || fab fa-stack-overflow</span></span><br><span class="line">  <span class="comment">#YouTube: https://youtube.com/yourname || fab fa-youtube</span></span><br><span class="line">  <span class="comment">#Instagram: https://instagram.com/yourname || fab fa-instagram</span></span><br><span class="line">  <span class="comment">#Skype: skype:yourname?call|chat || fab fa-skype</span></span><br><span class="line"></span><br><span class="line"><span class="attr">social_icons:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">icons_only:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">transition:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Blog rolls</span></span><br><span class="line"><span class="attr">links_settings:</span></span><br><span class="line">  <span class="attr">icon:</span> <span class="string">fa</span> <span class="string">fa-globe</span></span><br><span class="line">  <span class="comment"># Available values: block | inline</span></span><br><span class="line">  <span class="attr">layout:</span> <span class="string">block</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 主题默认友情链接设置，原生支持（显示在侧边栏）</span></span><br><span class="line"><span class="comment"># links:</span></span><br><span class="line">  <span class="comment">#Title: https://example.com</span></span><br></pre></td></tr></table></figure>



<p><strong>文章多级目录显示设置</strong></p>
<hr>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 文章多级目录显示设置</span></span><br><span class="line"><span class="comment"># Table of Contents in the Sidebar</span></span><br><span class="line"><span class="comment"># Front-matter variable (nonsupport wrap expand_all).</span></span><br><span class="line"><span class="attr">toc:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Automatically add list number to toc.</span></span><br><span class="line">  <span class="attr">number:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># If true, all words will placed on next lines if header width longer then sidebar width.</span></span><br><span class="line">  <span class="attr">wrap:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># If true, all level of TOC in a post will be displayed, rather than the activated part of it.</span></span><br><span class="line">  <span class="attr">expand_all:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Maximum heading depth of generated toc.</span></span><br><span class="line">  <span class="attr">max_depth:</span> <span class="number">6</span></span><br></pre></td></tr></table></figure>



<p><strong>网站底部设置</strong></p>
<p>v8.17.1 版本开始支持设置禁用底部版权显示功能。</p>
<p>v8.19.0 更新备案 url 。</p>
<hr>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># 网站底部设置</span></span><br><span class="line"><span class="comment"># Footer Settings</span></span><br><span class="line"><span class="comment"># See: https://theme-next.js.org/docs/theme-settings/footer</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Show multilingual switcher in footer.</span></span><br><span class="line"><span class="attr">language_switcher:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment"># 网站底部显示从哪一年开始运营</span></span><br><span class="line"><span class="comment"># 8.17.1 版本开始支持设置禁用底部版权显示功能</span></span><br><span class="line"><span class="comment">#footer:</span></span><br><span class="line"><span class="comment">#  copyright: false</span></span><br><span class="line"><span class="attr">footer:</span></span><br><span class="line">  <span class="comment"># Specify the year when the site was setup. If not defined, current year will be used.</span></span><br><span class="line">  <span class="attr">since:</span> <span class="number">2017</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Icon between year and copyright info.</span></span><br><span class="line">  <span class="attr">icon:</span></span><br><span class="line">    <span class="comment"># Icon name in Font Awesome. See: https://fontawesome.com/icons</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">fa</span> <span class="string">fa-heart</span></span><br><span class="line">    <span class="comment"># If you want to animate the icon, set it to true.</span></span><br><span class="line">    <span class="attr">animated:</span> <span class="literal">false</span></span><br><span class="line">    <span class="comment"># Change the color of icon, using Hex Code.</span></span><br><span class="line">    <span class="attr">color:</span> <span class="string">&quot;#ff0000&quot;</span></span><br><span class="line">  <span class="comment"># 版权设置  </span></span><br><span class="line">  <span class="comment"># If not defined, `author` from Hexo `_config.yml` will be used.</span></span><br><span class="line">  <span class="attr">copyright:</span> <span class="string">Copyright</span> <span class="string">©</span> <span class="string">龙腾万里sky.</span> <span class="string">All</span> <span class="string">Rights</span> <span class="string">Reserved.</span></span><br><span class="line">  <span class="comment"># 由 Hexo &amp; NexT 驱动，显示设置（开启：true，禁用：false）</span></span><br><span class="line">  <span class="comment"># Powered by Hexo &amp; NexT</span></span><br><span class="line">  <span class="attr">powered:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 网站备案设置</span></span><br><span class="line">  <span class="comment"># 8.19.0 更新备案 url</span></span><br><span class="line">  <span class="comment"># Beian ICP and gongan information for Chinese users. See: https://beian.miit.gov.cn, https://beian.mps.gov.cn</span></span><br><span class="line">  <span class="attr">beian:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">icp:</span></span><br><span class="line">    <span class="comment"># The digit in the num of gongan beian.</span></span><br><span class="line">    <span class="attr">gongan_id:</span></span><br><span class="line">    <span class="comment"># The full num of gongan beian.</span></span><br><span class="line">    <span class="attr">gongan_num:</span></span><br><span class="line">    <span class="comment"># The icon for gongan beian. Login and See: https://beian.mps.gov.cn/web/business/businessHome/website</span></span><br><span class="line">    <span class="attr">gongan_icon_url:</span></span><br></pre></td></tr></table></figure>



<p><strong>Post 配置</strong></p>
<hr>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Post 配置，与生成文章相关设置、比如首页文章摘要、读取更多 button 按钮</span></span><br><span class="line"><span class="comment"># Post Settings</span></span><br><span class="line"><span class="comment"># See: https://theme-next.js.org/docs/theme-settings/posts</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Use `description` in front-matter to specify post excerpt.</span></span><br><span class="line"><span class="attr">excerpt_description:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 阅读博文，读取更多内容（按钮）</span></span><br><span class="line"><span class="comment"># 精确截取，在文章内需要截断的位置嵌入： &lt;!-- more --&gt;</span></span><br><span class="line"><span class="comment"># Read more button</span></span><br><span class="line"><span class="comment"># If true, the read more button will be displayed in excerpt section.</span></span><br><span class="line"><span class="attr">read_more_btn:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果文章数量大，不想每篇手动截取，可以通过安装其它插件：hexo-excerpt</span></span><br><span class="line"><span class="comment"># 配合主题内置的 read_more_btn 和 excerpt_description 功能混合使用，实现自动截取</span></span><br><span class="line"><span class="comment"># 插件仓库 地址：https://github.com/chekun/hexo-excerpt</span></span><br><span class="line"><span class="comment"># 安装插件：npm install hexo-excerpt --save</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Post meta display settings</span></span><br><span class="line"><span class="attr">post_meta:</span></span><br><span class="line">  <span class="attr">item_text:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">created_at:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">updated_at:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">another_day:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Post wordcount display settings</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/next-theme/hexo-word-counter</span></span><br><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line">  <span class="attr">separated_meta:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">item_text_total:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Use icon instead of the symbol # to indicate the tag at the bottom of the post</span></span><br><span class="line"><span class="attr">tag_icon:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 赞赏配置</span></span><br><span class="line"><span class="comment"># Donate (Sponsor) settings</span></span><br><span class="line"><span class="comment"># Front-matter variable (nonsupport animation).</span></span><br><span class="line"><span class="attr">reward_settings:</span></span><br><span class="line">  <span class="comment"># If true, a donate button will be displayed in every article by default.</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">animation:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="attr">reward:</span></span><br><span class="line">  <span class="comment">#wechatpay: /images/wechatpay.png</span></span><br><span class="line">  <span class="comment">#alipay: /images/alipay.png</span></span><br><span class="line">  <span class="comment">#paypal: /images/paypal.png</span></span><br><span class="line">  <span class="comment">#bitcoin: /images/bitcoin.png</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 社交网站设置（位于文章底部）</span></span><br><span class="line"><span class="comment"># Subscribe through Telegram Channel, Twitter, etc.</span></span><br><span class="line"><span class="comment"># Usage: `Key: permalink || icon` (Font Awesome)</span></span><br><span class="line"><span class="attr">follow_me:</span></span><br><span class="line">  <span class="comment">#Twitter: https://twitter.com/username || fab fa-twitter</span></span><br><span class="line">  <span class="comment">#Telegram: https://t.me/channel_name || fab fa-telegram</span></span><br><span class="line">  <span class="attr">WeChat:</span> <span class="string">/images/wechat_channel.jpg</span> <span class="string">||</span> <span class="string">fab</span> <span class="string">fa-weixin</span></span><br><span class="line">  <span class="attr">Zhihu:</span> <span class="string">https://www.zhihu.com/people/hbwk</span> <span class="string">||</span> <span class="string">fab</span> <span class="string">fa-zhihu</span></span><br><span class="line">  <span class="comment">#RSS: /atom.xml || fa fa-rss</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 文章显示关联设置</span></span><br><span class="line"><span class="comment"># Related popular posts</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/sergeyzwezdin/hexo-related-posts</span></span><br><span class="line"><span class="attr">related_posts:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">icon:</span> <span class="string">fa</span> <span class="string">fa-signs-post</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在线编辑文章设置（需要链接到文章原始仓库）</span></span><br><span class="line"><span class="comment"># Post edit</span></span><br><span class="line"><span class="comment"># Easily browse and edit blog source code online.</span></span><br><span class="line"><span class="attr">post_edit:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">https://github.com/user-name/repo-name/tree/branch-name/subdirectory-name/</span> <span class="comment"># Link for view source</span></span><br><span class="line">  <span class="comment">#url: https://github.com/user-name/repo-name/edit/branch-name/subdirectory-name/ # Link for fork &amp; edit</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Show previous post and next post in post footer if exists</span></span><br><span class="line"><span class="comment"># Available values: left | right | false</span></span><br><span class="line"><span class="attr">post_navigation:</span> <span class="string">left</span></span><br></pre></td></tr></table></figure>



<p><strong>定义页面配置</strong></p>
<hr>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># 自定义页面配置</span></span><br><span class="line"><span class="comment"># Custom Page Settings</span></span><br><span class="line"><span class="comment"># See: https://theme-next.js.org/docs/theme-settings/custom-pages</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># 标签云设置</span></span><br><span class="line"><span class="comment"># TagCloud settings for tags page.</span></span><br><span class="line"><span class="attr">tagcloud:</span></span><br><span class="line">  <span class="attr">min:</span> <span class="number">12</span> <span class="comment"># Minimum font size in px</span></span><br><span class="line">  <span class="attr">max:</span> <span class="number">30</span> <span class="comment"># Maximum font size in px</span></span><br><span class="line">  <span class="attr">amount:</span> <span class="number">200</span> <span class="comment"># Total amount of tags</span></span><br><span class="line">  <span class="attr">orderby:</span> <span class="string">name</span> <span class="comment"># Order of tags</span></span><br><span class="line">  <span class="attr">order:</span> <span class="number">1</span> <span class="comment"># Sort order</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 谷歌日历配置，需要申请账号（获取 api key）</span></span><br><span class="line"><span class="comment"># Google Calendar</span></span><br><span class="line"><span class="comment"># Share your recent schedule to others via calendar page.</span></span><br><span class="line"><span class="attr">calendar:</span></span><br><span class="line">  <span class="attr">calendar_id:</span> <span class="string">&lt;required&gt;</span> <span class="comment"># Your Google account E-Mail</span></span><br><span class="line">  <span class="attr">api_key:</span> <span class="string">&lt;required&gt;</span></span><br><span class="line">  <span class="attr">orderBy:</span> <span class="string">startTime</span></span><br><span class="line">  <span class="attr">showLocation:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">offsetMax:</span> <span class="number">72</span> <span class="comment"># Time Range</span></span><br><span class="line">  <span class="attr">offsetMin:</span> <span class="number">4</span> <span class="comment"># Time Range</span></span><br><span class="line">  <span class="attr">showDeleted:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">singleEvents:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">maxResults:</span> <span class="number">250</span></span><br></pre></td></tr></table></figure>



<p><strong>杂项（混合）主题配置</strong></p>
<p>NexT 8.18.0 Released 版本开始支持代码折叠功能。</p>
<hr>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># 杂项（混合）主题配置</span></span><br><span class="line"><span class="comment"># Misc Theme Settings</span></span><br><span class="line"><span class="comment"># See: https://theme-next.js.org/docs/theme-settings/miscellaneous</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Preload styles and preconnect CDN for fonts and plugins.</span></span><br><span class="line"><span class="comment"># For more information: https://www.w3.org/TR/resource-hints/#preconnect</span></span><br><span class="line"><span class="attr">preconnect:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 文本居中配置</span></span><br><span class="line"><span class="comment"># Set the text alignment in posts / pages.</span></span><br><span class="line"><span class="attr">text_align:</span></span><br><span class="line">  <span class="comment"># Available values: start | end | left | right | center | justify | justify-all | match-parent</span></span><br><span class="line">  <span class="attr">desktop:</span> <span class="string">justify</span></span><br><span class="line">  <span class="attr">mobile:</span> <span class="string">left</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Reduce padding / margin indents on devices with narrow width.</span></span><br><span class="line"><span class="attr">mobile_layout_economy:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Browser header panel color.</span></span><br><span class="line"><span class="attr">theme_color:</span></span><br><span class="line">  <span class="attr">light:</span> <span class="string">&quot;#222&quot;</span></span><br><span class="line">  <span class="attr">dark:</span> <span class="string">&quot;#222&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Override browsers&#x27; default behavior.</span></span><br><span class="line"><span class="attr">body_scrollbar:</span></span><br><span class="line">  <span class="comment"># Place the scrollbar over the content.</span></span><br><span class="line">  <span class="attr">overlay:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Present the scrollbar even if the content is not overflowing.</span></span><br><span class="line">  <span class="attr">stable:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 代码主题设置</span></span><br><span class="line"><span class="attr">codeblock:</span></span><br><span class="line">  <span class="comment"># Code Highlight theme</span></span><br><span class="line">  <span class="comment"># All available themes: https://theme-next.js.org/highlight/</span></span><br><span class="line">  <span class="attr">theme:</span></span><br><span class="line">    <span class="attr">light:</span> <span class="string">default</span></span><br><span class="line">    <span class="attr">dark:</span> <span class="string">stackoverflow-dark</span></span><br><span class="line">  <span class="attr">prism:</span></span><br><span class="line">    <span class="attr">light:</span> <span class="string">prism</span></span><br><span class="line">    <span class="attr">dark:</span> <span class="string">prism-dark</span></span><br><span class="line">  <span class="comment"># Add copy button on codeblock</span></span><br><span class="line">  <span class="comment"># 复制按钮功能</span></span><br><span class="line">  <span class="attr">copy_button:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># Available values: default | flat | mac</span></span><br><span class="line">    <span class="comment"># 可选属性：default | flat | mac（比如 mac 特效，复制按钮右上角有三颗彩色圆点）</span></span><br><span class="line">    <span class="attr">style:</span> <span class="string">mac</span></span><br><span class="line">  <span class="comment"># Fold code block </span></span><br><span class="line">  <span class="comment"># 代码折叠，true：开启，false：禁用；NexT 8.18.0 Released 版本开始支持该功能</span></span><br><span class="line">  <span class="comment"># https://github.com/next-theme/hexo-theme-next/pull/694</span></span><br><span class="line">  <span class="attr">fold:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">height:</span> <span class="number">500</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 返回顶部按钮，默认在网站右下角</span></span><br><span class="line"><span class="attr">back2top:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Back to top in sidebar.</span></span><br><span class="line">  <span class="attr">sidebar:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Scroll percent label in b2t button.</span></span><br><span class="line">  <span class="attr">scrollpercent:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取进度条配置</span></span><br><span class="line"><span class="comment"># Reading progress bar</span></span><br><span class="line"><span class="attr">reading_progress:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Available values: left | right</span></span><br><span class="line">  <span class="attr">start_at:</span> <span class="string">left</span></span><br><span class="line">  <span class="comment"># Available values: top | bottom</span></span><br><span class="line">  <span class="attr">position:</span> <span class="string">top</span></span><br><span class="line">  <span class="attr">reversed:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">color:</span> <span class="string">&quot;#37c6c0&quot;</span></span><br><span class="line">  <span class="attr">height:</span> <span class="string">3px</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Bookmark Support</span></span><br><span class="line"><span class="attr">bookmark:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Customize the color of the bookmark.</span></span><br><span class="line">  <span class="attr">color:</span> <span class="string">&quot;#222&quot;</span></span><br><span class="line">  <span class="comment"># If auto, save the reading progress when closing the page or clicking the bookmark-icon.</span></span><br><span class="line">  <span class="comment"># If manual, only save it by clicking the bookmark-icon.</span></span><br><span class="line">  <span class="attr">save:</span> <span class="string">auto</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在网站右上角显示关注我的 github 角标</span></span><br><span class="line"><span class="comment"># `Follow me on GitHub` banner in the top-right corner.</span></span><br><span class="line"><span class="attr">github_banner:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">permalink:</span> <span class="string">https://github.com/cnwangk</span></span><br></pre></td></tr></table></figure>



<p><strong>字体配置</strong></p>
<hr>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># 字体配置</span></span><br><span class="line"><span class="comment"># Font Settings</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Find fonts on Google Fonts (https://fonts.google.com)</span></span><br><span class="line"><span class="comment"># All fonts set here will have the following styles:</span></span><br><span class="line"><span class="comment">#   light | light italic | normal | normal italic | bold | bold italic</span></span><br><span class="line"><span class="comment"># Be aware that setting too much fonts will cause site running slowly</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Web Safe fonts are recommended for `global` (and `title`):</span></span><br><span class="line"><span class="comment"># Arial | Tahoma | Helvetica | Times New Roman | Courier New | Verdana | Georgia | Palatino | Garamond | Comic Sans MS | Trebuchet MS</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="attr">font:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Uri of fonts host, e.g. https://fonts.googleapis.com (Default).</span></span><br><span class="line">  <span class="attr">host:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Font options:</span></span><br><span class="line">  <span class="comment"># `external: true` will load this font family from `host` above.</span></span><br><span class="line">  <span class="comment"># `family: Times New Roman`. Without any quotes.</span></span><br><span class="line">  <span class="comment"># `size: x.x`. Use `em` as unit. Default: 1 (16px)</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Global font settings used for all elements inside &lt;body&gt;.</span></span><br><span class="line">  <span class="attr">global:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">family:</span> <span class="string">Lato</span></span><br><span class="line">    <span class="attr">size:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Font settings for site title (.site-title).</span></span><br><span class="line">  <span class="attr">title:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">family:</span></span><br><span class="line">    <span class="attr">size:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Font settings for headlines (&lt;h1&gt; to &lt;h6&gt;).</span></span><br><span class="line">  <span class="attr">headings:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">family:</span></span><br><span class="line">    <span class="attr">size:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Font settings for posts (.post-body).</span></span><br><span class="line">  <span class="attr">posts:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">family:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Font settings for &lt;code&gt; and code blocks.</span></span><br><span class="line">  <span class="attr">codes:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">family:</span></span><br></pre></td></tr></table></figure>



<p><strong>SEO（网站被搜索引擎索引）配置</strong></p>
<hr>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># SEO（网站被搜索引擎索引）配置</span></span><br><span class="line"><span class="comment"># SEO Settings</span></span><br><span class="line"><span class="comment"># See: https://theme-next.js.org/docs/theme-settings/seo</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># If true, site-subtitle will be added to the title of index page.</span></span><br><span class="line"><span class="comment"># Remember to set up your site-subtitle in Hexo `_config.yml` (e.g. subtitle: Subtitle)</span></span><br><span class="line"><span class="attr">index_with_subtitle:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Automatically add external URL with Base64 encrypt &amp; decrypt.</span></span><br><span class="line"><span class="attr">exturl:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment"># If true, an icon will be attached to each external URL</span></span><br><span class="line"><span class="attr">exturl_icon:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Google Webmaster tools verification.</span></span><br><span class="line"><span class="comment"># See: https://developers.google.com/search</span></span><br><span class="line"><span class="attr">google_site_verification:</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># Bing Webmaster tools verification.</span></span><br><span class="line"><span class="comment"># See: https://www.bing.com/webmasters</span></span><br><span class="line"><span class="attr">bing_site_verification:</span>  </span><br><span class="line"></span><br><span class="line"><span class="comment"># Yandex Webmaster tools verification.</span></span><br><span class="line"><span class="comment"># See: https://webmaster.yandex.ru</span></span><br><span class="line"><span class="attr">yandex_site_verification:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Baidu Webmaster tools verification.</span></span><br><span class="line"><span class="comment"># See: https://ziyuan.baidu.com/site</span></span><br><span class="line"><span class="attr">baidu_site_verification:</span> </span><br></pre></td></tr></table></figure>



<p><strong>标签配置</strong></p>
<p>v8.17.0 版本开始支持 <code>WaveDrom tag</code> 功能</p>
<hr>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># 标签配置</span></span><br><span class="line"><span class="comment"># Tags Settings</span></span><br><span class="line"><span class="comment"># See: https://theme-next.js.org/docs/tag-plugins/</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Note tag (bootstrap callout)</span></span><br><span class="line"><span class="attr">note:</span></span><br><span class="line">  <span class="comment"># Note tag style values:</span></span><br><span class="line">  <span class="comment">#  - simple    bootstrap callout old alert style. Default.</span></span><br><span class="line">  <span class="comment">#  - modern    bootstrap callout new (v2-v3) alert style.</span></span><br><span class="line">  <span class="comment">#  - flat      flat callout style with background, like on Mozilla or StackOverflow.</span></span><br><span class="line">  <span class="comment">#  - disabled  disable all CSS styles import of note tag.</span></span><br><span class="line">  <span class="attr">style:</span> <span class="string">simple</span></span><br><span class="line">  <span class="attr">icons:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Offset lighter of background in % for modern and flat styles (modern: -12 | 12; flat: -18 | 6).</span></span><br><span class="line">  <span class="comment"># Offset also applied to label tag variables. This option can work with disabled note tag.</span></span><br><span class="line">  <span class="attr">light_bg_offset:</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Tabs tag 配置</span></span><br><span class="line"><span class="comment"># 比如在文章顶部参数设置：sticky:100  或者  top:100</span></span><br><span class="line"><span class="comment"># 当然还有其它用法，通过 &#123;% tabs First unique name %&#125; &lt;!-- tab --&gt; tab1 &lt;!-- endtab --&gt; &#123;% endtabs %&#125; 包裹内容 tab1</span></span><br><span class="line"><span class="comment"># 详细配置请参考：https://theme-next.js.org/docs/tag-plugins/tabs.html#Settings</span></span><br><span class="line"><span class="comment"># Tabs tag</span></span><br><span class="line"><span class="attr">tabs:</span></span><br><span class="line">  <span class="comment"># Make the nav bar of tabs with long content stick to the top.</span></span><br><span class="line">  <span class="attr">sticky:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">transition:</span></span><br><span class="line">    <span class="attr">tabs:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">labels:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># PDF tag</span></span><br><span class="line"><span class="comment"># NexT will try to load pdf files natively, if failed, pdf.js will be used.</span></span><br><span class="line"><span class="comment"># So, you have to install the dependency of pdf.js if you want to use pdf tag and make it available to all browsers.</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/next-theme/theme-next-pdf</span></span><br><span class="line"><span class="attr">pdf:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Default height</span></span><br><span class="line">  <span class="attr">height:</span> <span class="string">500px</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Mermaid tag</span></span><br><span class="line"><span class="attr">mermaid:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Available themes: default | dark | forest | neutral</span></span><br><span class="line">  <span class="attr">theme:</span></span><br><span class="line">    <span class="attr">light:</span> <span class="string">default</span></span><br><span class="line">    <span class="attr">dark:</span> <span class="string">dark</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># WaveDrom tag</span></span><br><span class="line"><span class="comment"># 8.17.0 版本开始支持 WaveDrom tag 功能</span></span><br><span class="line"><span class="attr">wavedrom:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span>    </span><br></pre></td></tr></table></figure>



<p><strong>第三方插件服务配置</strong></p>
<hr>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># 第三方插件服务配置</span></span><br><span class="line"><span class="comment"># Third Party Plugins &amp; Services Settings</span></span><br><span class="line"><span class="comment"># See: https://theme-next.js.org/docs/third-party-services/</span></span><br><span class="line"><span class="comment"># More plugins: https://github.com/next-theme/awesome-next</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Math Formulas Render Support</span></span><br><span class="line"><span class="comment"># See: https://theme-next.js.org/docs/third-party-services/math-equations</span></span><br><span class="line"><span class="comment"># Warning: Please install / uninstall the relevant renderer according to the documentation.</span></span><br><span class="line"><span class="comment"># Server-side plugin: https://github.com/next-theme/hexo-filter-mathjax</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="attr">math:</span></span><br><span class="line">  <span class="comment"># Default (false) will load mathjax / katex script on demand.</span></span><br><span class="line">  <span class="comment"># That is it only render those page which has `mathjax: true` in front-matter.</span></span><br><span class="line">  <span class="comment"># If you set it to true, it will load mathjax / katex script EVERY PAGE.</span></span><br><span class="line">  <span class="attr">every_page:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">mathjax:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">    <span class="comment"># Available values: none | ams | all</span></span><br><span class="line">    <span class="attr">tags:</span> <span class="string">none</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">katex:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">    <span class="comment"># See: https://github.com/KaTeX/KaTeX/tree/master/contrib/copy-tex</span></span><br><span class="line">    <span class="attr">copy_tex:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>



<p><strong>扩展功能配置</strong></p>
<hr>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># 扩展功能配置</span></span><br><span class="line"><span class="comment"># External Libraries</span></span><br><span class="line"><span class="comment"># See: https://theme-next.js.org/docs/third-party-services/external-libraries</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Easily enable fast Ajax navigation on your website.</span></span><br><span class="line"><span class="comment"># For more information: https://github.com/next-theme/pjax</span></span><br><span class="line"><span class="comment"># 开启影响  番剧组件、giscus 评论组件加载（可能需要二次刷新才能显示）</span></span><br><span class="line"><span class="attr">pjax:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># FancyBox is a tool that offers a nice and elegant way to add zooming functionality for images.</span></span><br><span class="line"><span class="comment"># For more information: https://fancyapps.com/fancybox/</span></span><br><span class="line"><span class="attr">fancybox:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Medium Zoom is a JavaScript library for zooming images like Medium.</span></span><br><span class="line"><span class="comment"># Warning: Do not enable both `fancybox` and `mediumzoom`.</span></span><br><span class="line"><span class="comment"># For more information: https://medium-zoom.francoischalifour.com</span></span><br><span class="line"><span class="attr">mediumzoom:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Vanilla JavaScript plugin for lazyloading images.</span></span><br><span class="line"><span class="comment"># For more information: https://apoorv.pro/lozad.js/demo/</span></span><br><span class="line"><span class="attr">lazyload:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 中文与英文之间自动插入白色空格，实际效果以最终显示为准</span></span><br><span class="line"><span class="comment"># 不开启pangu插件示例效果：原始显示next当前最新稳定版本是v8.19.1</span></span><br><span class="line"><span class="comment"># 开启 pangu 插件示例效果：原始显示 next 当前最新稳定版本是 v8.19.1</span></span><br><span class="line"><span class="comment"># Automatically insert whitespace between CJK and half-width characters.</span></span><br><span class="line"><span class="comment"># For more information: https://github.com/vinta/pangu.js</span></span><br><span class="line"><span class="comment"># Server-side plugin: https://github.com/next-theme/hexo-pangu</span></span><br><span class="line"><span class="attr">pangu:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Prefetch links based on what is in the user&#x27;s viewport.</span></span><br><span class="line"><span class="comment"># For more information: https://getquick.link</span></span><br><span class="line"><span class="comment"># Front-matter variable (nonsupport home archive).</span></span><br><span class="line"><span class="attr">quicklink:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Home page and archive page can be controlled through home and archive options below.</span></span><br><span class="line">  <span class="comment"># This configuration item is independent of `enable`.</span></span><br><span class="line">  <span class="attr">home:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">archive:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Default (true) will initialize quicklink after the load event fires.</span></span><br><span class="line">  <span class="attr">delay:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Custom a time in milliseconds by which the browser must execute prefetching.</span></span><br><span class="line">  <span class="attr">timeout:</span> <span class="number">3000</span></span><br><span class="line">  <span class="comment"># Default (true) will attempt to use the fetch() API if supported (rather than link[rel=prefetch]).</span></span><br><span class="line">  <span class="attr">priority:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>



<p> <strong>动画效果配置</strong></p>
<hr>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># 动画效果配置</span></span><br><span class="line"><span class="comment"># Animation Settings</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Use Animate.css to animate everything.</span></span><br><span class="line"><span class="comment"># For more information: https://animate.style</span></span><br><span class="line"><span class="attr">motion:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">async:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">transition:</span></span><br><span class="line">    <span class="comment"># All available transition variants: https://theme-next.js.org/animate/</span></span><br><span class="line">    <span class="attr">menu_item:</span> <span class="string">fadeInDown</span></span><br><span class="line">    <span class="attr">post_block:</span> <span class="string">fadeIn</span></span><br><span class="line">    <span class="attr">post_header:</span> <span class="string">fadeInDown</span></span><br><span class="line">    <span class="attr">post_body:</span> <span class="string">fadeInDown</span></span><br><span class="line">    <span class="attr">coll_header:</span> <span class="string">fadeInLeft</span></span><br><span class="line">    <span class="comment"># Only for Pisces | Gemini.</span></span><br><span class="line">    <span class="attr">sidebar:</span> <span class="string">fadeInUp</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 首页加载进度条特效设置</span></span><br><span class="line"><span class="comment"># Progress bar in the top during page loading.</span></span><br><span class="line"><span class="comment"># For more information: https://github.com/CodeByZach/pace</span></span><br><span class="line"><span class="attr">pace:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># All available colors:</span></span><br><span class="line">  <span class="comment"># black | blue | green | orange | pink | purple | red | silver | white | yellow</span></span><br><span class="line">  <span class="attr">color:</span> <span class="string">blue</span></span><br><span class="line">  <span class="comment"># All available themes:</span></span><br><span class="line">  <span class="comment"># big-counter | bounce | barber-shop | center-atom | center-circle | center-radar | center-simple</span></span><br><span class="line">  <span class="comment"># corner-indicator | fill-left | flat-top | flash | loading-bar | mac-osx | material | minimal</span></span><br><span class="line">  <span class="attr">theme:</span> <span class="string">mac-osx</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Generate a ribbon in your website with HTML5 canvas.</span></span><br><span class="line"><span class="comment"># For more information: https://github.com/hustcc/ribbon.js</span></span><br><span class="line"><span class="attr">canvas_ribbon:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">size:</span> <span class="number">300</span> <span class="comment"># The width of the ribbon</span></span><br><span class="line">  <span class="attr">alpha:</span> <span class="number">0.6</span> <span class="comment"># The transparency of the ribbon</span></span><br><span class="line">  <span class="attr">zIndex:</span> <span class="number">-1</span> <span class="comment"># The display level of the ribbon</span></span><br></pre></td></tr></table></figure>



<p><strong>评论组件设置</strong></p>
<hr>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># 评论组件设置</span></span><br><span class="line"><span class="comment"># Comments Settings</span></span><br><span class="line"><span class="comment"># See: https://theme-next.js.org/docs/third-party-services/comments</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Multiple Comment System Support</span></span><br><span class="line"><span class="attr">comments:</span></span><br><span class="line">  <span class="comment"># Available values: tabs | buttons</span></span><br><span class="line">  <span class="attr">style:</span> <span class="string">tabs</span></span><br><span class="line">  <span class="comment"># Choose a comment system to be displayed by default.</span></span><br><span class="line">  <span class="comment"># Available values: disqus | disqusjs | changyan | livere | gitalk | utterances</span></span><br><span class="line">  <span class="attr">active:</span> <span class="string">giscus</span></span><br><span class="line">  <span class="comment"># Setting `true` means remembering the comment system selected by the visitor.</span></span><br><span class="line">  <span class="attr">storage:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Lazyload all comment systems.</span></span><br><span class="line">  <span class="attr">lazyload:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Modify texts or order for any naves, here are some examples.</span></span><br><span class="line">  <span class="attr">nav:</span></span><br><span class="line">    <span class="comment">#disqus:</span></span><br><span class="line">    <span class="comment">#  text: Load Disqus</span></span><br><span class="line">    <span class="comment">#  order: -1</span></span><br><span class="line">    <span class="comment">#gitalk:</span></span><br><span class="line">    <span class="comment">#  order: -2</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># giscus 评论组件</span></span><br><span class="line"><span class="comment"># github仓库地址： https://github.com/giscus/giscus</span></span><br><span class="line"><span class="comment"># giscus 配置生成地址：https://giscus.app/zh-CN </span></span><br><span class="line"><span class="comment"># giscus next 主题插件仓库地址：https://github.com/next-theme/hexo-next-giscus</span></span><br><span class="line"><span class="comment"># 如果你和我一样使用 next 主题版本为 v8.19.1，giscus 版本配置为：1.0.3</span></span><br><span class="line"><span class="comment"># 安装组件：npm install hexo-next-giscus@1.0.3 --save</span></span><br><span class="line"><span class="attr">giscus:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">repo:</span>  <span class="comment"># Github repository name</span></span><br><span class="line">  <span class="attr">repo_id:</span>  <span class="comment"># Github repository id</span></span><br><span class="line">  <span class="attr">category:</span>   <span class="comment"># Github discussion category</span></span><br><span class="line">  <span class="attr">category_id:</span>  <span class="comment"># Github discussion category id</span></span><br><span class="line">  <span class="comment"># Available values: pathname | url | title | og:title</span></span><br><span class="line">  <span class="attr">mapping:</span> <span class="string">pathname</span></span><br><span class="line">  <span class="comment"># Available values: 0 | 1</span></span><br><span class="line">  <span class="attr">reactions_enabled:</span> <span class="number">1</span></span><br><span class="line">   <span class="comment"># Available values: 0 | 1</span></span><br><span class="line">  <span class="attr">emit_metadata:</span> <span class="number">1</span></span><br><span class="line">  <span class="comment"># Available values: light | dark | dark_high_contrast | transparent_dark | preferred-color-scheme</span></span><br><span class="line">  <span class="attr">theme:</span> <span class="string">light</span></span><br><span class="line">  <span class="comment"># Available values: en | zh-CN</span></span><br><span class="line">  <span class="attr">lang:</span> <span class="string">zh-CN</span></span><br><span class="line">  <span class="comment"># Place the comment box above the comments</span></span><br><span class="line">  <span class="attr">input_position:</span> <span class="string">bottom</span></span><br><span class="line">  <span class="comment"># Load the comments lazily</span></span><br><span class="line">  <span class="attr">loading:</span> <span class="string">lazy</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Disqus 评论，需要科学上网配置反代</span></span><br><span class="line"><span class="comment"># Disqus</span></span><br><span class="line"><span class="comment"># For more information: https://disqus.com</span></span><br><span class="line"><span class="attr">disqus:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">shortname:</span></span><br><span class="line">  <span class="attr">count:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DisqusJS 评论，同样需要科学上网配置反代</span></span><br><span class="line"><span class="comment"># DisqusJS</span></span><br><span class="line"><span class="comment"># For more information: https://disqusjs.skk.moe</span></span><br><span class="line"><span class="attr">disqusjs:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># API Endpoint of Disqus API (https://disqus.com/api/docs/).</span></span><br><span class="line">  <span class="comment"># Leave api empty if you are able to connect to Disqus API. Otherwise you need a reverse proxy for it.</span></span><br><span class="line">  <span class="comment"># For example:</span></span><br><span class="line">  <span class="comment"># api: https://disqus.skk.moe/disqus/</span></span><br><span class="line">  <span class="attr">api:</span></span><br><span class="line">  <span class="attr">apikey:</span> <span class="comment"># Register new application from https://disqus.com/api/applications/</span></span><br><span class="line">  <span class="attr">shortname:</span> <span class="comment"># See: https://disqus.com/admin/settings/general/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 畅言云评（国内）：使用体验，评论审核很难通过，时好时坏（抽风），半死不活。</span></span><br><span class="line"><span class="comment"># 如果使用自定义域名，需要备案。</span></span><br><span class="line"><span class="comment"># Changyan</span></span><br><span class="line"><span class="comment"># For more information: https://changyan.kuaizhan.com</span></span><br><span class="line"><span class="attr">changyan:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">appid:</span></span><br><span class="line">  <span class="attr">appkey:</span></span><br><span class="line">  <span class="comment"># Show comments count</span></span><br><span class="line">  <span class="attr">count:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># LiveRe comments system</span></span><br><span class="line"><span class="comment"># You can get your uid from https://livere.com/insight/myCode (General web site)</span></span><br><span class="line"><span class="attr">livere_uid:</span> <span class="comment"># &lt;your_uid&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Gitalk 评论组件，需要科学上网配置反代，默认提供反代地址已经失效</span></span><br><span class="line"><span class="comment"># Gitalk</span></span><br><span class="line"><span class="comment"># For more information: https://gitalk.github.io</span></span><br><span class="line"><span class="attr">gitalk:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">github_id:</span> <span class="comment"># GitHub repo owner</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="comment"># Repository name to store issues</span></span><br><span class="line">  <span class="attr">client_id:</span> <span class="comment"># GitHub Application Client ID</span></span><br><span class="line">  <span class="attr">client_secret:</span> <span class="comment"># GitHub Application Client Secret</span></span><br><span class="line">  <span class="attr">admin_user:</span> <span class="comment"># GitHub repo owner and collaborators, only these guys can initialize gitHub issues</span></span><br><span class="line">  <span class="attr">distraction_free_mode:</span> <span class="literal">true</span> <span class="comment"># Facebook-like distraction free mode</span></span><br><span class="line">  <span class="comment"># When the official proxy is not available, you can change it to your own proxy address</span></span><br><span class="line">  <span class="attr">proxy:</span> <span class="string">https://cors-anywhere.azm.workers.dev/https://github.com/login/oauth/access_token</span> <span class="comment"># This is official proxy address</span></span><br><span class="line">  <span class="comment"># Gitalk&#x27;s display language depends on user&#x27;s browser or system environment</span></span><br><span class="line">  <span class="comment"># If you want everyone visiting your site to see a uniform language, you can set a force language value</span></span><br><span class="line">  <span class="comment"># Available values: en | es-ES | fr | ru | zh-CN | zh-TW</span></span><br><span class="line">  <span class="attr">language:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Utterances 评论组件，基于 github issues 功能，需要公开仓库开放 issues 功能</span></span><br><span class="line"><span class="comment"># Utterances</span></span><br><span class="line"><span class="comment"># For more information: https://utteranc.es</span></span><br><span class="line"><span class="attr">utterances:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">user-name/repo-name</span> <span class="comment"># Github repository owner and name</span></span><br><span class="line">  <span class="comment"># Available values: pathname | url | title | og:title</span></span><br><span class="line">  <span class="attr">issue_term:</span> <span class="string">pathname</span></span><br><span class="line">  <span class="comment"># Available values: github-light | github-dark | preferred-color-scheme | github-dark-orange | icy-dark | dark-blue | photon-dark | boxy-light</span></span><br><span class="line">  <span class="attr">theme:</span> <span class="string">github-light</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Isso</span></span><br><span class="line"><span class="comment"># For more information: https://isso-comments.de</span></span><br><span class="line"><span class="attr">isso:</span> <span class="comment"># &lt;data_isso&gt;</span></span><br></pre></td></tr></table></figure>



<p><strong>快速分享组件</strong></p>
<p>v8.16.0 版本开始支持使用 AddToAny 功能。</p>
<hr>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># 快速分享组件（位于文章底部）</span></span><br><span class="line"><span class="comment"># Post Widgets &amp; Content Sharing Services</span></span><br><span class="line"><span class="comment"># See: https://theme-next.js.org/docs/third-party-services/post-widgets</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># AddToAny Share. See: https://www.addtoany.com</span></span><br><span class="line"><span class="comment"># 8.16.0 版本开始支持使用 AddToAny 功能</span></span><br><span class="line"><span class="attr">addtoany:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">buttons:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">facebook</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">twitter</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># 设置网站分析（支持百度、谷歌、Cloudflare等等）</span></span><br><span class="line"><span class="comment"># Statistics and Analytics</span></span><br><span class="line"><span class="comment"># See: https://theme-next.js.org/docs/third-party-services/statistics-and-analytics</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Google Analytics</span></span><br><span class="line"><span class="comment"># See: https://analytics.google.com</span></span><br><span class="line"><span class="attr">google_analytics:</span></span><br><span class="line">  <span class="attr">tracking_id:</span> <span class="comment"># &lt;app_id&gt;</span></span><br><span class="line">  <span class="comment"># By default, NexT will load an external gtag.js script on your site.</span></span><br><span class="line">  <span class="comment"># If you only need the pageview feature, set the following option to true to get a better performance.</span></span><br><span class="line">  <span class="attr">only_pageview:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Baidu Analytics</span></span><br><span class="line"><span class="comment"># See: https://tongji.baidu.com</span></span><br><span class="line"><span class="comment">#baidu_analytics: 8cd73d3e373ec975b52226e6d54add67 # &lt;app_id&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Growingio Analytics</span></span><br><span class="line"><span class="comment"># See: https://www.growingio.com</span></span><br><span class="line"><span class="attr">growingio_analytics:</span> <span class="comment"># &lt;project_id&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Cloudflare Web Analytics</span></span><br><span class="line"><span class="comment"># See: https://www.cloudflare.com/web-analytics/</span></span><br><span class="line"><span class="comment">#cloudflare_analytics: 7be9d37fb35342a9b143b2d559783611</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Microsoft Clarity Analytics</span></span><br><span class="line"><span class="comment"># See: https://clarity.microsoft.com/</span></span><br><span class="line"><span class="attr">clarity_analytics:</span> <span class="comment"># &lt;project_id&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Matomo Analytics</span></span><br><span class="line"><span class="comment"># See: https://matomo.org/</span></span><br><span class="line"><span class="attr">matomo:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">server_url:</span> <span class="comment"># https://www.example.com/</span></span><br><span class="line">  <span class="attr">site_id:</span> <span class="comment"># &lt;your site id&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Umami Analytics</span></span><br><span class="line"><span class="comment"># See: https://umami.is/</span></span><br><span class="line"><span class="attr">umami:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">script_url:</span> <span class="comment"># https://umami.example.com/script.js</span></span><br><span class="line">  <span class="attr">website_id:</span> <span class="comment"># &lt;your website id&gt;</span></span><br><span class="line">  <span class="attr">host_url:</span> <span class="comment"># &lt;your umami site url&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Plausible Analytics</span></span><br><span class="line"><span class="comment"># See: https://plausible.io/</span></span><br><span class="line"><span class="attr">plausible:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">script_url:</span> <span class="comment"># https://plausible.io/js/script.js</span></span><br><span class="line">  <span class="attr">site_domain:</span> <span class="comment"># www.example.com</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Show number of visitors of each article.</span></span><br><span class="line"><span class="comment"># You can visit https://www.leancloud.cn to get AppID and AppKey.</span></span><br><span class="line"><span class="attr">leancloud_visitors:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">app_id:</span> <span class="comment"># &lt;your app id&gt;</span></span><br><span class="line">  <span class="attr">app_key:</span> <span class="comment"># &lt;your app key&gt;</span></span><br><span class="line">  <span class="comment"># Required for apps from CN region</span></span><br><span class="line">  <span class="attr">server_url:</span> <span class="comment"># &lt;your server url&gt;</span></span><br><span class="line">  <span class="comment"># Dependencies: https://github.com/theme-next/hexo-leancloud-counter-security</span></span><br><span class="line">  <span class="comment"># If you don&#x27;t care about security in leancloud counter and just want to use it directly</span></span><br><span class="line">  <span class="comment"># (without hexo-leancloud-counter-security plugin), set `security` to `false`.</span></span><br><span class="line">  <span class="attr">security:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Another tool to show number of visitors to each article.</span></span><br><span class="line"><span class="comment"># Visit https://console.firebase.google.com/u/0/ to get apiKey and projectId.</span></span><br><span class="line"><span class="comment"># Visit https://firebase.google.com/docs/firestore/ to get more information about firestore.</span></span><br><span class="line"><span class="attr">firestore:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">collection:</span> <span class="string">articles</span> <span class="comment"># Required, a string collection name to access firestore database</span></span><br><span class="line">  <span class="attr">apiKey:</span> <span class="comment"># Required</span></span><br><span class="line">  <span class="attr">projectId:</span> <span class="comment"># Required</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 网站访问量统计（不蒜子）</span></span><br><span class="line"><span class="comment"># Show Views / Visitors of the website / page with busuanzi.</span></span><br><span class="line"><span class="comment"># For more information: http://ibruce.info/2015/04/04/busuanzi/</span></span><br><span class="line"><span class="attr">busuanzi_count:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_visitors:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_visitors_icon:</span> <span class="string">fa</span> <span class="string">fa-user</span></span><br><span class="line">  <span class="attr">total_views:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_views_icon:</span> <span class="string">fa</span> <span class="string">fa-eye</span></span><br><span class="line">  <span class="attr">post_views:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">post_views_icon:</span> <span class="string">far</span> <span class="string">fa-eye</span></span><br></pre></td></tr></table></figure>



<p><strong>搜索服务设置</strong></p>
<hr>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># 搜索服务设置</span></span><br><span class="line"><span class="comment"># Search Services</span></span><br><span class="line"><span class="comment"># See: https://theme-next.js.org/docs/third-party-services/search-services</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Algolia Search</span></span><br><span class="line"><span class="comment"># For more information: https://www.algolia.com</span></span><br><span class="line"><span class="attr">algolia_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">hits:</span></span><br><span class="line">    <span class="attr">per_page:</span> <span class="number">10</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置本地搜索</span></span><br><span class="line"><span class="comment"># Local Search</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/next-theme/hexo-generator-searchdb</span></span><br><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># If auto, trigger search by changing input.</span></span><br><span class="line">  <span class="comment"># If manual, trigger search by pressing enter key or search button.</span></span><br><span class="line">  <span class="attr">trigger:</span> <span class="string">auto</span></span><br><span class="line">  <span class="comment"># Show top n results per article, show all results by setting to -1</span></span><br><span class="line">  <span class="attr">top_n_per_article:</span> <span class="number">1</span></span><br><span class="line">  <span class="comment"># Unescape html strings to the readable one.</span></span><br><span class="line">  <span class="attr">unescape:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Preload the search data when the page loads.</span></span><br><span class="line">  <span class="attr">preload:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>



<p><strong>聊天服务配置</strong></p>
<hr>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># 聊天服务配置</span></span><br><span class="line"><span class="comment"># Chat Services</span></span><br><span class="line"><span class="comment"># See: https://theme-next.js.org/docs/third-party-services/chat-services</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># A button to open designated chat widget in sidebar.</span></span><br><span class="line"><span class="comment"># Firstly, you need to enable and configure the chat service.</span></span><br><span class="line"><span class="attr">chat:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">icon:</span> <span class="string">fa</span> <span class="string">fa-comment</span> <span class="comment"># Icon name in Font Awesome, set false to disable icon.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Chatra is a functional, easy to use piece of chat software for websites.</span></span><br><span class="line"><span class="comment"># For more information: https://chatra.com</span></span><br><span class="line"><span class="comment"># Dashboard: https://app.chatra.io/settings/general</span></span><br><span class="line"><span class="attr">chatra:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">async:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">id:</span> <span class="comment"># Visit Dashboard to get your ChatraID</span></span><br><span class="line">  <span class="comment">#embed: # Unfinished experimental feature for developers. See: https://chatra.com/help/api/#injectto</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Tidio is a powerful, all-in-one customer service tool.</span></span><br><span class="line"><span class="comment"># For more information: https://www.tidio.com</span></span><br><span class="line"><span class="comment"># Dashboard: https://www.tidio.com/panel/dashboard</span></span><br><span class="line"><span class="attr">tidio:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">key:</span> <span class="comment"># Public Key, get it from dashboard. See: https://www.tidio.com/panel/settings/developer</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Next 主题 8.18.0 已经移除对 Gitter 的支持</span></span><br><span class="line"><span class="comment"># Gitter is a chat and networking platform.</span></span><br><span class="line"><span class="comment"># For more information: https://gitter.im</span></span><br><span class="line"><span class="comment">#gitter:</span></span><br><span class="line"><span class="comment">#  enable: false</span></span><br><span class="line"><span class="comment">#  room:</span></span><br></pre></td></tr></table></figure>



<p><strong>CDN 设置</strong></p>
<hr>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># CDN 设置</span></span><br><span class="line"><span class="comment"># CDN Settings</span></span><br><span class="line"><span class="comment"># See: https://theme-next.js.org/docs/advanced-settings/vendors</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="attr">vendors:</span></span><br><span class="line">  <span class="comment"># The CDN provider of NexT internal scripts.</span></span><br><span class="line">  <span class="comment"># Available values: local | jsdelivr | unpkg | cdnjs | custom</span></span><br><span class="line">  <span class="comment"># Warning: If you are using the latest master branch of NexT, please set `internal: local`</span></span><br><span class="line">  <span class="attr">internal:</span> <span class="string">local</span></span><br><span class="line">  <span class="comment"># The default CDN provider of third-party plugins.</span></span><br><span class="line">  <span class="comment"># Available values: local | jsdelivr | unpkg | cdnjs | custom</span></span><br><span class="line">  <span class="comment"># Dependencies for `plugins: local`: https://github.com/next-theme/plugins</span></span><br><span class="line">  <span class="attr">plugins:</span> <span class="string">cdnjs</span></span><br><span class="line">  <span class="comment"># Custom CDN URL</span></span><br><span class="line">  <span class="comment"># For example:</span></span><br><span class="line">  <span class="comment"># custom_cdn_url: https://cdn.jsdelivr.net/npm/$&#123;npm_name&#125;@$&#123;version&#125;/$&#123;minified&#125;</span></span><br><span class="line">  <span class="comment"># custom_cdn_url: https://cdnjs.cloudflare.com/ajax/libs/$&#123;cdnjs_name&#125;/$&#123;version&#125;/$&#123;cdnjs_file&#125;</span></span><br><span class="line">  <span class="attr">custom_cdn_url:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 静态资源文件配置，使用 CDN 加速</span></span><br><span class="line"><span class="comment"># Assets</span></span><br><span class="line"><span class="comment"># Accelerate delivery of static files using a CDN</span></span><br><span class="line"><span class="comment"># The js option is only valid when vendors.internal is local.</span></span><br><span class="line"><span class="attr">css:</span> <span class="string">css</span></span><br><span class="line"><span class="attr">js:</span> <span class="string">js</span></span><br><span class="line"><span class="attr">images:</span> <span class="string">images</span></span><br></pre></td></tr></table></figure>





<h3 id="我做了哪些DIY"><a href="#我做了哪些DIY" class="headerlink" title="我做了哪些DIY"></a>我做了哪些DIY</h3><p><strong>footer.njk</strong> 文件路径：<code>blog\node_modules\hexo-theme-next\layout\_partials\footer.njk</code></p>
<hr>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&#123;%- <span class="keyword">if</span> theme.<span class="property">busuanzi_count</span>.<span class="property">enable</span> %&#125;</span><br><span class="line">&lt;div <span class="keyword">class</span>=<span class="string">&quot;busuanzi-count&quot;</span>&gt;</span><br><span class="line">  &#123;%- <span class="keyword">if</span> theme.<span class="property">busuanzi_count</span>.<span class="property">total_visitors</span> %&#125;</span><br><span class="line">    &lt;span <span class="keyword">class</span>=<span class="string">&quot;post-meta-item&quot;</span> id=<span class="string">&quot;busuanzi_container_site_uv&quot;</span>&gt;</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;post-meta-item-icon&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;&#123;&#123; theme.busuanzi_count.total_visitors_icon &#125;&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;site-uv&quot;</span> <span class="attr">title</span>=<span class="string">&quot;&#123;&#123; __(&#x27;footer.total_visitors&#x27;) &#125;&#125;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">       本站访客数：  <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;busuanzi_value_site_uv&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span> 人次</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line">    &lt;/span&gt;</span><br><span class="line">  &#123;%- endif %&#125;</span><br><span class="line"></span><br><span class="line">  &#123;%- <span class="keyword">if</span> theme.<span class="property">busuanzi_count</span>.<span class="property">total_views</span> %&#125;</span><br><span class="line">    &lt;span <span class="keyword">class</span>=<span class="string">&quot;post-meta-item&quot;</span> id=<span class="string">&quot;busuanzi_container_site_pv&quot;</span>&gt;</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;post-meta-item-icon&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;&#123;&#123; theme.busuanzi_count.total_views_icon &#125;&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;site-pv&quot;</span> <span class="attr">title</span>=<span class="string">&quot;&#123;&#123; __(&#x27;footer.total_views&#x27;) &#125;&#125;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        本站总访问量： <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;busuanzi_value_site_pv&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span> 次</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line">    &lt;/span&gt;</span><br><span class="line">  &#123;%- endif %&#125;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&#123;%- endif %&#125;</span><br></pre></td></tr></table></figure>



<p><strong>zh-CN.yml</strong> 文件路径：<code>blog\node_modules\hexo-theme-next\languages\zh-CN.yml</code></p>
<hr>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="literal">---</span></span><br><span class="line">name: 简体中文</span><br><span class="line">title:</span><br><span class="line">  archive: 归档</span><br><span class="line">  category: 分类</span><br><span class="line">  tag: 标签</span><br><span class="line">  links: 友链</span><br><span class="line">  schedule: 日程表</span><br><span class="line">  bangumis: 番剧</span><br><span class="line">  cinemas: 电视剧</span><br><span class="line">menu:</span><br><span class="line">  home: 首页</span><br><span class="line">  archives: 归档</span><br><span class="line">  categories: 分类</span><br><span class="line">  tags: 标签</span><br><span class="line">  links: 友链</span><br><span class="line">  about: 关于</span><br><span class="line">  search: 搜索</span><br><span class="line">  schedule: 日程表</span><br><span class="line">  sitemap: 站点地图</span><br><span class="line">  commonweal: 公益 <span class="number">404</span></span><br><span class="line">  bangumis: 番剧</span><br><span class="line">  cinemas: 电视剧</span><br><span class="line">  happy: 文娱</span><br><span class="line">sidebar:</span><br><span class="line">  overview: 站点概览</span><br><span class="line">  toc: 文章目录</span><br><span class="line">  links: 友链</span><br></pre></td></tr></table></figure>



<p><strong>giscus</strong> 文件路径：<code>blog\_config.next.yml</code></p>
<p><strong>友情提醒</strong>：安装组件版本，<code>npm install hexo-next-giscus@1.0.3 --save</code></p>
<p>giscus 详细用法，请参考<span class="exturl" data-url="aHR0cHM6Ly9naXNjdXMuYXBwL3poLUNO">giscus官方中文文档<i class="fa fa-external-link-alt"></i></span></p>
<hr>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># giscus 评论组件</span></span><br><span class="line"><span class="comment"># github仓库地址： https://github.com/giscus/giscus</span></span><br><span class="line"><span class="comment"># giscus 配置生成地址：https://giscus.app/zh-CN </span></span><br><span class="line"><span class="comment"># giscus next 主题插件仓库地址：https://github.com/next-theme/hexo-next-giscus</span></span><br><span class="line"><span class="comment"># 如果你和我一样使用 next 主题版本为 v8.19.1，giscus 版本配置为：1.0.3</span></span><br><span class="line"><span class="comment"># 安装组件：npm install hexo-next-giscus@1.0.3 --save</span></span><br><span class="line">giscus:</span><br><span class="line">  enable: true</span><br><span class="line">  repo: cnwangk/blog<span class="literal">-talk</span> <span class="comment"># Github repository name | Github 仓库名称</span></span><br><span class="line">  repo_id: R_kgDOJg6bLQ <span class="comment"># Github repository id | Github 仓库 id</span></span><br><span class="line">  category: Announcements  <span class="comment"># Github discussion category | Github 讨论模块组件类别</span></span><br><span class="line">  category_id: DIC_kwDOJg6bLc4CWXpT <span class="comment"># Github discussion category id  | Github 讨论模块组件类别 id</span></span><br><span class="line">  <span class="comment"># Available values: pathname | url | title | og:title |支持映射方式 pathname | url | title | og:title</span></span><br><span class="line">  mapping: pathname  </span><br><span class="line">  <span class="comment"># Available values: 0 | 1</span></span><br><span class="line">  reactions_enabled: <span class="number">1</span></span><br><span class="line">   <span class="comment"># Available values: 0 | 1</span></span><br><span class="line">  emit_metadata: <span class="number">1</span></span><br><span class="line">  <span class="comment"># Available values: light | dark | dark_high_contrast | transparent_dark | preferred-color-scheme</span></span><br><span class="line">  theme: light</span><br><span class="line">  <span class="comment"># Available values: en | zh-CN  | 支持语言：en(英文)，zh-CN(中文)</span></span><br><span class="line">  lang: zh<span class="literal">-CN</span></span><br><span class="line">  <span class="comment"># Place the comment box above the comments</span></span><br><span class="line">  input_position: bottom</span><br><span class="line">  <span class="comment"># Load the comments lazily</span></span><br><span class="line">  loading: lazy</span><br></pre></td></tr></table></figure>

<p>到此为止，就是本篇博文的全部内容了，希望对你有所帮助哟！</p>
<h2 id="絮絮叨叨"><a href="#絮絮叨叨" class="headerlink" title="絮絮叨叨"></a>絮絮叨叨</h2><p>静下心来，才发现原来不会的还有很多。</p>
<p>一分耕耘，一分收获。莫问收获，但问耕耘。</p>
<p>多总结，你会发现，自己的知识宝库越来越丰富。</p>
<p>如果你有幸看到这篇博文，虽然很基础，但希望对你的学习和工作有所帮助哟！</p>
<p>我始终坚信，对别人有帮助（参考价值）的文章，在合适的时间被有需要的人看到，那就是一篇好文章。</p>
<h2 id="感谢"><a href="#感谢" class="headerlink" title="感谢"></a>感谢</h2><p>感谢这些平台提供友好的服务支持，我才可以愉快的打造个人博客站点。</p>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9wYWdlcy5naXRodWIuY29tLw==">github pages<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvLw==">hexo<i class="fa fa-external-link-alt"></i></span> &amp; <span class="exturl" data-url="aHR0cHM6Ly90aGVtZS1uZXh0LmpzLm9yZy8=">hexo-theme-next<i class="fa fa-external-link-alt"></i></span> &amp; <span class="exturl" data-url="aHR0cHM6Ly9naXNjdXMuYXBwL3poLUNO">giscus<i class="fa fa-external-link-alt"></i></span></li>
<li>vercel：<span class="exturl" data-url="aHR0cHM6Ly92ZXJjZWwuY29tLw==">https://vercel.com/<i class="fa fa-external-link-alt"></i></span></li>
<li>netlify：<span class="exturl" data-url="aHR0cHM6Ly9hcHAubmV0bGlmeS5jb20v">https://app.netlify.com/<i class="fa fa-external-link-alt"></i></span></li>
<li>cloudflare：<span class="exturl" data-url="aHR0cHM6Ly9kYXNoLmNsb3VkZmxhcmUuY29tLw==">https://dash.cloudflare.com/<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p><strong>—END—</strong>  </p>
]]></content>
      <categories>
        <category>静态博客</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>关于软件实施工程师的面试题有哪些</title>
    <url>/2021/04/10/%E5%85%B3%E4%BA%8E%E8%BD%AF%E4%BB%B6%E5%AE%9E%E6%96%BD%E5%B7%A5%E7%A8%8B%E5%B8%88%E7%9A%84%E9%9D%A2%E8%AF%95%E9%A2%98%E6%9C%89%E5%93%AA%E4%BA%9B/</url>
    <content><![CDATA[<p><img data-src="https://pic3.zhimg.com/80/v2-079db56e755389da684ce3bf3bc97639_720w.jpg" alt="img"></p>
<p><strong>题外话</strong>：如果你想向我咨询软件实施工程师相关问题，我会劝退。非万不得已不建议转岗，能做开发就继续做开发。</p>
<p>在公众号<strong>龙腾万里sky</strong>回复<strong>软件实施</strong>即可获取一份本人精心自制的 PDF 文档一份，不定期更新优化。</p>
<p><strong>tips</strong>：图片资源可能被防盗链（寄）了，可以<strong>右键属性复制地址在地址栏查看</strong>哈。</p>
<p>关于软件实施工程师的面试题，我个人也总结了一些，<strong>仅供参考</strong>。需要对<strong>主流 DBMS 厂商发行的数据库软件，例如Oracle、MySQL、SQLserver以及国产数据库DM（达梦）</strong>有所了解，并能够熟练部署运用。</p>
<p>如果具备一些服务器方面的知识，比如 Windows Server 和 Linux 服务器相关知识。<strong>熟悉 Linux 基本维护是加分项</strong>，这里所说熟悉指至少熟练运用 Linux 基本命令与常用命令，软件管理部署，基本权限，系统维护。</p>
<span id="more"></span>

<h1 id="絮絮叨叨"><a href="#絮絮叨叨" class="headerlink" title="絮絮叨叨"></a>絮絮叨叨</h1><p>说实话，目前软件实施这个行业资料稀缺，也很缺人才，体系还不够成熟。在小公司，你可能会身兼数职，比如配合开发工程师进行测试，也有可能承担部分运维方面的工作。以至于某招聘网站出现了开发运维测试实施工程师这种岗位。</p>
<p>本人之前从事 Java web 后端开发，后来转向了软件实施行业，深知这个行业很缺人。发展方向，可以朝着<strong>项目管理</strong>方向提升自我，比如利用空余时间考一个<strong>软考高项信息系统项目管理师</strong>、**项目管理专业人士认证(PMP)**。</p>
<p>个人目前有几个项目的现场实施经验，也与许多人打过交道。关于面试这方面，出题也差不多。<strong>如果是医疗行业，也许使用微软的那一套比较多</strong>。更注重的是临时应变能力和 SQL 的运用能力，以及对项目实施布控的周期预估和控制。</p>
<p>如果你有实际项目经验，基本上不会遇到笔试题。一般情况先与HR交谈，然后可能会与项目经理或者工程部主管进行沟通。<strong>下面给出一个面试复盘进行参考</strong>：</p>
<p><span class="exturl" data-url="aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC80OTQxMTYxODk=">面试复盘：软件实施工程师，顿悟试岗期美其名曰岗前培训<i class="fa fa-external-link-alt"></i></span></p>
<h1 id="第一部分《软件实施面试实际方案篇》"><a href="#第一部分《软件实施面试实际方案篇》" class="headerlink" title="第一部分《软件实施面试实际方案篇》"></a>第一部分《软件实施面试实际方案篇》</h1><h2 id="一、软件实施面试专业技能试题"><a href="#一、软件实施面试专业技能试题" class="headerlink" title="一、软件实施面试专业技能试题"></a>一、软件实施面试专业技能试题</h2><h3 id="01-理论思考题"><a href="#01-理论思考题" class="headerlink" title="01 理论思考题"></a>01 理论思考题</h3><p><strong>1、作为一名软件实施工程师，你的职责是什么？该岗位需要具备什么样的能力？</strong> </p>
<p><strong>解答</strong>：</p>
<ol>
<li>推广公司的产品，现场为客户实施安装。</li>
<li>熟悉公司的产品，现场对客户进行培训。</li>
</ol>
<p><strong>2、你熟悉的远程方式有哪些？各种方法应该怎么配置？</strong> </p>
<p><strong>解答</strong>：</p>
<ol>
<li>Windows：常见的QQ远程桌面，或者用QQ办公版TIM。</li>
<li>或者采取有远程桌面功能的软件，或者其它OA办公系统。最终达到预期目标，采用远程协助达成客户需求。</li>
</ol>
<p><strong>win10还有自带的远程桌面</strong> </p>
<p><img data-src="https://pic1.zhimg.com/80/v2-914cf3237466828ca86c1fc5c0e95859_720w.jpg" alt="img"></p>
<p><strong>开启远程桌面协助</strong> </p>
<p><img data-src="https://pic2.zhimg.com/80/v2-72efcd33bf0a5748030e7d59acad35b8_720w.jpg" alt="img"></p>
<p>快捷键<strong>win + r</strong>打开任务输入<strong>mstsc</strong>命令打开远程桌面。</p>
<p><img data-src="https://pic2.zhimg.com/80/v2-f5b3e393cf2d2c725c93019697565105_720w.jpg" alt="img"></p>
<p><strong>关于远程桌面补充一些个人工作中使用过的。</strong></p>
<p>有桌面也有服务器版，个人主要在Windows平台使用：</p>
<ol>
<li><strong>向日葵</strong></li>
<li><strong>ToDesk</strong></li>
<li><strong>TeamViewer</strong></li>
</ol>
<p>目前个人更趋向于ToDesk，更轻更快，体验友好一些。</p>
<p><strong>云端远程桌面，个人主要在Linux平台使用：</strong></p>
<ol>
<li><strong>UltraVNC</strong></li>
<li><strong>VNC-Viewer（realVNC）</strong></li>
</ol>
<p><strong>Linux发行版操作系统使用ssh远程连接</strong>：</p>
<ol>
<li><strong>Xshell</strong>（个人版免费使用）；</li>
<li>SecureCRT（收费）；</li>
<li><strong>Putty</strong>（免费）；</li>
<li><strong>tabby</strong>（开源的多终端集合）； </li>
<li><strong>FinalShell：这款优势带有监控cpu和内存使用情况图形化界面。</strong></li>
</ol>
<p>方式方法有很多，只要能实现ssh连接的终端工具。</p>
<p><strong>文件传输工具：WinSCP-5.11.2-Setup。</strong> </p>
<p><img data-src="https://pic4.zhimg.com/80/v2-cfc821bf8960b7f5c1c1afd0404c4311_720w.jpg" alt="img"></p>
<p><strong>3、在你进行实施的过程中，公司制作的一款软件系统缺少某一项功能，而且公司也明确表示不会再为系统做任何的修改或添加任何的功能，而客户也坚决要求需要这一项功能!对于实施人员来说，应该怎么去合理妥善处理这个问题?</strong></p>
<p><strong>解答</strong>：</p>
<ol>
<li>首先看用户要求合不合理，不合理就坚决退还需求，如果需求合理，可以申请二次开发，需要考虑公司的利益。</li>
<li>然后综合考虑客户的重量级，对客户强调合同成本，外加某一项功能需要耗费的人力物力是需要付出额外的成本的。</li>
<li>最后考虑第三方软件补助。</li>
</ol>
<p><strong>4、如销售签有一外地客户，要求实施人员在客户现场一周内完成所有项目实施，而标准实施一般为期一个月，针对以上情况实施人员应该如何应对?</strong> </p>
<p><strong>解答</strong>：</p>
<ol>
<li>标准实施为一个月，那就按签订的合同行事。</li>
<li>然后考虑这个项目一周完成，在当前的人力和时间成本下是否可行。</li>
<li>如果想加快进度可以与公司沟通，额外派人，与客户客户协商额外的劳动成本。</li>
</ol>
<p><strong>5、在项目实施过程中，使用者对产品提出了适合自己习惯的修改意见，但多个使用者相互矛盾，应该如何去处理?</strong></p>
<p><strong>解答</strong>：</p>
<p>采用求同存异法。</p>
<ol>
<li>对于客户的意见，我们实施人员应该有自己的实施方案。</li>
<li>当使用者意见出现不一致时候，引导客户内部意见达到统一和用户经过沟通确认后，找到切实可行的方案，双方认可并达成共识。</li>
</ol>
<p><strong>6、系统启动后，不能连接数据库，可能是哪些方面的原因?</strong> </p>
<p><strong>解答</strong>：</p>
<ol>
<li>检查网络原因；</li>
<li>检查数据库服务是否启动；</li>
<li>数据库文件是否被破坏；</li>
<li>数据库端口号问题（防火墙是否放通）</li>
</ol>
<p><strong>7、如果有一个不太懂电脑的客户，你应该采取什么样的方法去教他用公司的软件产品?</strong> </p>
<p><strong>解答</strong>：首先教客户熟悉基本的电脑操作，然后参考相关文档操作，实际根据软件的复杂程度去教会客户熟悉使用公司产品。遵循由易到难，简单的可以直接教会客户熟悉运用。复杂的一步一步是jio印。</p>
<p><strong>也可以做其它的补足</strong>：</p>
<ol>
<li>制作ppt；</li>
<li>图文操作文档；</li>
<li>录制视频。</li>
</ol>
<p><strong>8、针对于已有5年以上的客户，其产生的历史数据可以怎么处理?</strong></p>
<p><strong>解答</strong>：</p>
<ol>
<li>综合考虑客户的重量级；</li>
<li>重量级客户，提前计划，做好用户数据的备份。一切从公司的利益考虑。</li>
</ol>
<p><strong>9、一般数据库若出现日志满了，会出现什么情况，是否还能使用?</strong> </p>
<p><strong>解答</strong>：</p>
<ol>
<li>只能执行查询等读取操作。不能执行修改，备份等写操作，原因是任何写操作都要记录日志。</li>
<li>数据库本就是需要承载读写操作的，也就是说基本上处于不能使用的状态。</li>
</ol>
<h3 id="02-SQL实际操作题"><a href="#02-SQL实际操作题" class="headerlink" title="02 SQL实际操作题"></a>02 SQL实际操作题</h3><p><strong>10、已知A、B两表A.id&#x3D;B.AID请分别写出内外链接的sql语句，并说明区别?</strong> </p>
<p><strong>解答</strong>：</p>
<ol>
<li>内连接关键字 <code>inner join on</code>；内连接取A和B的交集公共部分。</li>
<li>外连接关键字：<code>left join on</code>，<code>right join on</code>。外连接分左外连接和右外连接，左外连接以左表为主，右外连接以右表为主。</li>
<li>参考下图，以数学集合的思想来思考更加清晰明了。</li>
</ol>
<p><strong>注意</strong>：外连接是可以省略 <code>outer</code> 关键字的，例如：左外连接 <code>left outer join</code> 简写为 <code>left join</code>，右外连接同理，后面配合 <code>on</code> 关键字。</p>
<h2 id="二、SQL中的联合查询图解"><a href="#二、SQL中的联合查询图解" class="headerlink" title="二、SQL中的联合查询图解"></a>二、SQL中的联合查询图解</h2><h3 id="1、内连接"><a href="#1、内连接" class="headerlink" title="1、内连接"></a>1、内连接</h3><p>内连接：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> <span class="keyword">on</span></span><br></pre></td></tr></table></figure>

<p><img data-src="https://pic3.zhimg.com/80/v2-7c0b347a3d3dc7497b5c0e8f32f0d072_720w.jpg" alt="img"></p>
<h3 id="2、左外连接"><a href="#2、左外连接" class="headerlink" title="2、左外连接"></a>2、左外连接</h3><p>左外连接：省略掉了 outer，下同。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> <span class="keyword">on</span></span><br></pre></td></tr></table></figure>

<p><img data-src="https://pic1.zhimg.com/80/v2-39bd7ad849a97beb59613307d40e39d6_720w.jpg" alt="img"></p>
<h3 id="3、右外连接"><a href="#3、右外连接" class="headerlink" title="3、右外连接"></a>3、右外连接</h3><p>右外连接：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">right</span> <span class="keyword">join</span> <span class="keyword">on</span></span><br></pre></td></tr></table></figure>

<p><img data-src="https://pic3.zhimg.com/80/v2-27a2aa471b15ae2f21cc7728e24f2234_720w.jpg" alt="img"></p>
<p>关联查询有 6 种，常用的两种，内连接和外连接。个人实际工作中内连接使用更多，具体视工作情况而定。这里不做详细说明，网上教程很多，可以自行参考。</p>
<h3 id="4、可参考资料"><a href="#4、可参考资料" class="headerlink" title="4、可参考资料"></a>4、可参考资料</h3><p>菜鸟教程直通车：<span class="exturl" data-url="aHR0cHM6Ly93d3cucnVub29iLmNvbS9teXNxbC9teXNxbC1qb2luLmh0bWw=">https://www.runoob.com/mysql/mysql-join.html<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>面试了几家招软件实施的，基本上前几道笔试题是考量你的现场应变能力，后几道笔试题是考量你对SQL的运用，关联查询这方面的试题居多</strong>。软件实施一般是需要去固定的场所驻场的，需要有自己的一套方案，做到心中有数，在现场不至于慌慌张张。也需要结合现场的实际情况，灵活变通运用。这个行业是需要靠时间累积行业经验，不是一蹴而就。</p>
<p><strong>————————–更新后的补充————————–</strong></p>
<h1 id="第二部分《面试进阶，实际工作篇》"><a href="#第二部分《面试进阶，实际工作篇》" class="headerlink" title="第二部分《面试进阶，实际工作篇》"></a>第二部分《面试进阶，实际工作篇》</h1><p>之前一些实际SQL操作，我直接引用了别人一些教程链接，发现在打广告就删掉了。引用菜鸟教程依旧保留，毕竟这货干净简洁。</p>
<p>思来想去，还是自己重新补充一些，毕竟Oracle方面的教程都比较久远了。以后可能不会像这样将具体内容更新进来了，会以链接形式发自己的面经和时间工作经验总结。当然，此次更新的内容也将以单篇发布出来。</p>
<p><strong>官方提供的sakila和world数据库</strong>，官网下载地址已经提供，可以下载进行参考学习。</p>
<p><strong>sakila-db数据库包含三个文件</strong>：</p>
<ul>
<li>sakila-schema.sql：数据库表结构</li>
<li>sakila-data.sql：数据库示例模拟数据</li>
<li>sakila.mwb：数据库物理模型，在MySQL workbench中可以打开查看。</li>
</ul>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZHMubXlzcWwuY29tL2RvY3Mvc2FraWxhLWRiLnppcA==">https://downloads.mysql.com/docs/sakila-db.zip<i class="fa fa-external-link-alt"></i></span> </p>
</blockquote>
<p><strong>world-db数据库</strong>，表结构与data数据包含在一起：</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZHMubXlzcWwuY29tL2RvY3Mvd29ybGQtZGIuemlw">https://downloads.mysql.com/docs/world-db.zip<i class="fa fa-external-link-alt"></i></span> </p>
</blockquote>
<p>Oracle11g安装后自带有scott用户，可以用来练习。主要用到的是EMP和DEPT表，想起了当年用Java的ssh框架写的第一个CURD的demo示例就是Oracle的这两张表，因为这两表有关联关系。</p>
<ul>
<li>EMP：员工表；</li>
<li>DEPT：部门表；</li>
</ul>
<p><strong>我的测试环境基于</strong>：</p>
<ul>
<li>操作系统：Windows10；</li>
<li>数据库：MySQL8.0.28和Oracle11g；</li>
<li>使用查询工具：MySQL8.0自带命令行以及Oracle自带的SQLplus；</li>
<li>第三方工具SQLyog和PLSQL Developer。</li>
</ul>
<h2 id="三、联合查询"><a href="#三、联合查询" class="headerlink" title="三、联合查询"></a>三、联合查询</h2><p><strong>图解联合查询</strong></p>
<p><strong>内连接</strong>：统计的内容是table1和table2的重合部分。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> <span class="keyword">on</span></span><br></pre></td></tr></table></figure>

<p><img data-src="https://pic3.zhimg.com/80/v2-7c0b347a3d3dc7497b5c0e8f32f0d072_720w.jpg" alt="img"></p>
<p><strong>左外连接</strong>：可以省略掉outer，统计的内容是以table1为主的部分。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">left</span> <span class="keyword">outer</span> <span class="keyword">join</span> <span class="keyword">on</span></span><br></pre></td></tr></table></figure>

<p><img data-src="https://pic1.zhimg.com/80/v2-39bd7ad849a97beb59613307d40e39d6_720w.jpg" alt="img"></p>
<p><strong>右外连接</strong>：同样可以省略掉outer，统计的内容是以table2为主的部分。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">right</span> <span class="keyword">outer</span> <span class="keyword">join</span> <span class="keyword">on</span></span><br></pre></td></tr></table></figure>

<p><img data-src="https://pic3.zhimg.com/80/v2-27a2aa471b15ae2f21cc7728e24f2234_720w.jpg" alt="img"></p>
<h3 id="1、联合查询"><a href="#1、联合查询" class="headerlink" title="1、联合查询"></a>1、联合查询</h3><h3 id="1-1、MySQL中的联合查询示例"><a href="#1-1、MySQL中的联合查询示例" class="headerlink" title="1.1、MySQL中的联合查询示例"></a>1.1、MySQL中的联合查询示例</h3><ul>
<li>inner join on：内连接</li>
<li>right join on：右外连接</li>
<li>left join on：左外连接</li>
</ul>
<p>MySQL中的内连接查询关键字：inner join on，只作为演示，就不执行explain执行计划去判断执行效率了。小小的建议，在测试这些个联合查询的时候，可以不用带太多的过滤条件看看三种联合查询的区别。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> c.`ID`,c.`CountryCode`,cl.`CountryCode`,cl.`<span class="keyword">Language</span>` </span><br><span class="line"><span class="keyword">FROM</span> world.`city` c <span class="keyword">INNER</span> <span class="keyword">JOIN</span> world.`countrylanguage` cl </span><br><span class="line"><span class="keyword">ON</span> c.`CountryCode`<span class="operator">=</span>cl.`CountryCode` <span class="keyword">WHERE</span> c.`ID`<span class="operator">&gt;</span><span class="number">120</span> <span class="keyword">AND</span> c.`ID` LIMIT <span class="number">0</span>,<span class="number">5</span>;</span><br></pre></td></tr></table></figure>

<p><img data-src="https://pic2.zhimg.com/80/v2-c15e66dfc14ff080fd8c18ea138a10b3_720w.jpg" alt="img"></p>
<p>MySQL中的左外连接查询查询关键字：LEFT OUTER JOIN</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> c.`ID`,c.`Name`,c.`CountryCode`,cl.`IsOfficial`,cl.`CountryCode`,cl.`<span class="keyword">Language</span>` </span><br><span class="line"><span class="keyword">FROM</span> world.`city` c <span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> world.`countrylanguage` cl </span><br><span class="line"><span class="keyword">ON</span> c.`CountryCode`<span class="operator">=</span>cl.`CountryCode` LIMIT <span class="number">0</span>,<span class="number">5</span>;</span><br></pre></td></tr></table></figure>

<p><img data-src="https://pic3.zhimg.com/80/v2-452ddad079e267cd8387125785a48d24_720w.jpg" alt="img"></p>
<p>MySQL中的右外连接查询关键字：RIGHT OUTER JOIN</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> c.`ID`,c.`Name`,c.`CountryCode`,cl.`IsOfficial`,cl.`CountryCode`,cl.`<span class="keyword">Language</span>` </span><br><span class="line"><span class="keyword">FROM</span> world.`city` c <span class="keyword">RIGHT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> world.`countrylanguage` cl </span><br><span class="line"><span class="keyword">ON</span> c.`CountryCode`<span class="operator">=</span>cl.`CountryCode` LIMIT <span class="number">0</span>,<span class="number">5</span>;</span><br></pre></td></tr></table></figure>

<p><img data-src="https://pic3.zhimg.com/80/v2-acbab784eeb89cc782f28fee3453e5ea_720w.jpg" alt="img"></p>
<h3 id="1-2、Oracle中的联合查询示例"><a href="#1-2、Oracle中的联合查询示例" class="headerlink" title="1.2、Oracle中的联合查询示例"></a>1.2、Oracle中的联合查询示例</h3><p>主要以SCOTT用户作为示例，查看SCOTT用户下有哪些表，这种方式需要以dba管理员身份运行SQL语句查询：</p>
<p>ower代表了用户名，所以直接查找SCOTT用户，TABLE_NAME：代表了表名。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> t.OWNER,t.TABLE_NAME,t.TABLESPACE_NAME <span class="keyword">from</span> dba_tables t <span class="keyword">where</span> t.OWNER<span class="operator">=</span><span class="string">&#x27;SCOTT&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p><img data-src="https://pic1.zhimg.com/80/v2-a6e42a6f238bbbe5b24138b26afd7da3_720w.jpg" alt="img"></p>
<p>Oracle中的联合查询，同样以员工表（emp）和部门表（dept）进行演示操作。</p>
<p><strong>Oracle中的内连接</strong>：inner join on</p>
<p>根据部门编号进行关联查询，进行分页查询，每页显示5条数据：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> e.ename,e.empno,d.deptno,d.dname <span class="keyword">from</span> scott.emp e </span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> scott.dept d <span class="keyword">on</span> e.deptno<span class="operator">=</span>d.deptno <span class="keyword">where</span> rownum<span class="operator">&lt;=</span><span class="number">5</span>;</span><br></pre></td></tr></table></figure>

<p><img data-src="https://pic2.zhimg.com/80/v2-5144c538b7e24fca3dda1b19220a8ac1_720w.jpg" alt="img"></p>
<p><strong>左外连接</strong>：left outer join on</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> e.ename,e.empno,d.deptno,d.dname <span class="keyword">from</span> scott.emp e </span><br><span class="line"><span class="keyword">left</span> <span class="keyword">outer</span> <span class="keyword">join</span> scott.dept d <span class="keyword">on</span> e.deptno<span class="operator">=</span>d.deptno <span class="keyword">where</span> rownum<span class="operator">&lt;=</span><span class="number">5</span>;</span><br></pre></td></tr></table></figure>

<p><img data-src="https://pic2.zhimg.com/80/v2-ba4d1c900d14575898a3c06e0892664c_720w.jpg" alt="img"></p>
<p><strong>右外连接</strong>：right outer join on</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> e.ename,e.empno,d.deptno,d.dname <span class="keyword">from</span> scott.emp e </span><br><span class="line"><span class="keyword">right</span> <span class="keyword">outer</span> <span class="keyword">join</span> scott.dept d <span class="keyword">on</span> e.deptno<span class="operator">=</span>d.deptno <span class="keyword">where</span> rownum<span class="operator">&lt;=</span><span class="number">5</span>;</span><br></pre></td></tr></table></figure>

<p><img data-src="https://pic4.zhimg.com/80/v2-72ae91cba338da80016185f2ef4e838d_720w.jpg" alt="img"></p>
<p><strong>全连接</strong>：full join on</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> e.ename,e.empno,d.deptno,d.dname <span class="keyword">from</span> scott.emp e </span><br><span class="line"><span class="keyword">full</span> <span class="keyword">join</span> scott.dept d <span class="keyword">on</span> e.deptno<span class="operator">=</span>d.deptno <span class="keyword">where</span> rownum<span class="operator">&lt;=</span><span class="number">5</span>;</span><br></pre></td></tr></table></figure>

<p><img data-src="https://pic4.zhimg.com/80/v2-966e5e1e6dd29137523b6e4d1e7fe96b_720w.jpg" alt="img"></p>
<p><strong>组合查询</strong>：union</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> e.ename,e.empno <span class="keyword">from</span> scott.emp e <span class="keyword">where</span> rownum<span class="operator">&lt;=</span><span class="number">5</span> <span class="keyword">union</span> <span class="keyword">select</span> e.ename,e.empno <span class="keyword">from</span> scott.emp e  </span><br><span class="line"><span class="keyword">where</span> e.ename <span class="keyword">like</span> <span class="string">&#x27;%ARC%&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p><img data-src="https://pic1.zhimg.com/80/v2-eb554715c58a97a991c5987d7c2979d9_720w.jpg" alt="img"></p>
<p><strong>组合查询</strong>：union all</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> e.ename,e.empno <span class="keyword">from</span> scott.emp e <span class="keyword">where</span> rownum<span class="operator">&lt;=</span><span class="number">5</span> <span class="keyword">union</span> <span class="keyword">all</span> <span class="keyword">select</span> e.ename,e.empno <span class="keyword">from</span> scott.emp e  </span><br><span class="line"><span class="keyword">where</span> e.ename <span class="keyword">like</span> <span class="string">&#x27;%ARC%&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p><img data-src="https://pic1.zhimg.com/80/v2-695aef955c3beb159f7375812d3e6955_720w.jpg" alt="img"></p>
<p><strong>union和union all</strong>是有区别的，我列举的例子进行了模糊匹配，没演示出来效果。使用union all后DBMS不会取消重复的行。</p>
<p><strong>去掉后面的like条件，使用union统计的数据为14行，使用union all统计的数据为19行</strong>，其实不难理解，all就是全部。</p>
<h3 id="2、分页查询"><a href="#2、分页查询" class="headerlink" title="2、分页查询"></a>2、分页查询</h3><h3 id="2-1、MySQL的分页查询使用limit关键字"><a href="#2-1、MySQL的分页查询使用limit关键字" class="headerlink" title="2.1、MySQL的分页查询使用limit关键字"></a>2.1、MySQL的分页查询使用limit关键字</h3><p><strong>tips</strong>：Windows中CMD命令窗口使用color a即可调用出黑色背景绿色字体，color f0则是快速调出白色背景黑色字体哟！</p>
<p>护眼色：R：181    G：230    B：181</p>
<p><strong>示例</strong>：使用world数据库中city表进行演示分页查询，<strong>通过desc展示数据结构</strong>，尤其是配合开发进行联调的时候很常用：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">desc</span> world.city;</span><br></pre></td></tr></table></figure>

<p><img data-src="https://pic2.zhimg.com/80/v2-954cb8821e12f1073ba56b4e30b6ca08_720w.jpg" alt="img"></p>
<p><strong>查询world数据库中的city表前5条数据</strong>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> city limit <span class="number">0</span>,<span class="number">5</span>;</span><br></pre></td></tr></table></figure>

<p><img data-src="https://pic1.zhimg.com/80/v2-df9292e0397c6c43f077f27006188f65_720w.jpg" alt="img"></p>
<h3 id="2-2、Oracle的分页查询使用rownum伪列"><a href="#2-2、Oracle的分页查询使用rownum伪列" class="headerlink" title="2.2、Oracle的分页查询使用rownum伪列"></a>2.2、Oracle的分页查询使用rownum伪列</h3><p>同样使用desc关键字查询emp表结构：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SQL</span><span class="operator">&gt;</span> <span class="keyword">desc</span> scott.emp;</span><br></pre></td></tr></table></figure>

<p><img data-src="https://pic1.zhimg.com/80/v2-c6c3c9de591b2b68788800c4df5a0570_720w.jpg" alt="img"></p>
<p><strong>分页查询示例</strong>：使用rownum关键字进行演示Oracle中的分页查询。</p>
<p>查询scott用户中emp（员工表）的员工empno：编号、ename：员工姓名以及伪列rowid，只查询前5条数据：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SQL</span><span class="operator">&gt;</span> <span class="keyword">select</span> t.rowid,t.empno,t.ename <span class="keyword">from</span> scott.emp t <span class="keyword">where</span> rownum <span class="operator">&lt;=</span><span class="number">5</span>;</span><br></pre></td></tr></table></figure>

<p><img data-src="https://pic3.zhimg.com/80/v2-1b510464f4d8cfdbe06dad782536e437_720w.jpg" alt="img"></p>
<p><strong>Oracle进行分页查询常用方式一</strong>，查询第6~11数据通过嵌套子查询，使用到关键字rownum和where：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 统计emp数据总条目数</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> scott.emp;  </span><br><span class="line"><span class="comment">-- 查询第6~11数据通过嵌套子查询，使用到关键字rownum和where</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> (<span class="keyword">select</span> scott.emp.empno,rownum r <span class="keyword">from</span> scott.emp <span class="keyword">Where</span> rownum<span class="operator">&lt;=</span><span class="number">11</span>)<span class="keyword">where</span> r<span class="operator">&gt;=</span><span class="number">6</span>;</span><br></pre></td></tr></table></figure>

<p><strong>Oracle进行分页查询常用方式二，先进行order by排序，再分页查询</strong>，查询第6~11数据：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 先进行排序</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span>  emp e <span class="keyword">order</span> <span class="keyword">by</span> e.empno <span class="keyword">Desc</span>;</span><br><span class="line"><span class="comment">-- 再进行分页</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> (<span class="keyword">select</span> e.<span class="operator">*</span>,rownum r_num <span class="keyword">from</span>(<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> scott.emp e <span class="keyword">order</span> <span class="keyword">by</span> e.empno <span class="keyword">desc</span> )e)b <span class="keyword">where</span> b.r_num <span class="keyword">between</span> <span class="number">6</span> <span class="keyword">and</span> <span class="number">11</span>;</span><br></pre></td></tr></table></figure>



<h2 id="四、聚合函数（Aggregate）"><a href="#四、聚合函数（Aggregate）" class="headerlink" title="四、聚合函数（Aggregate）"></a>四、聚合函数（Aggregate）</h2><p>下面所讲的函数大多数标准SQL数据库是支持的，但也要依据实际情况做测试验证，个人主要验证的是MySQL和Oracle。</p>
<p><strong>重点</strong>：count、sum函数在我们如果要迁移数据的时候，避免不了需要手动去统计求和对比迁移前后数据的一致性。</p>
<h3 id="1、常见的聚合函数"><a href="#1、常见的聚合函数" class="headerlink" title="1、常见的聚合函数"></a>1、常见的聚合函数</h3><p><strong>介绍几个聚合函数</strong>：</p>
<ul>
<li>count函数用于统计条目数；</li>
<li>sum函数用于求和；</li>
<li>substr函数用于截取；</li>
<li>avg函数用于取平均值；</li>
<li>max函数用于取最大值；</li>
<li>min函数用于取最小值。</li>
</ul>
<p>如下则演示同时使用多个函数，查询Oracle数据库scott用户的emp表：</p>
<p><strong>查询出来的结果</strong>：count统计员工总数，sum求和所有员工的薪水总额，avg统计所有员工平均薪水，substr则是截取到小数点后两位数。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- count:统计条目数,sum:求和,substr:截取,avg:取平均值</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>), <span class="built_in">sum</span>(t.sal), substr(<span class="built_in">avg</span>(t.sal), <span class="number">0</span>, <span class="number">7</span>) <span class="keyword">from</span> scott.emp t;</span><br></pre></td></tr></table></figure>

<p><img data-src="https://pic3.zhimg.com/80/v2-e6f8edf0ee7313afea2faec60b145482_720w.jpg" alt="img"></p>
<p><strong>返回平均值avg</strong>，一般配合substr关键字去截取，通过计算保留小数点后两位。</p>
<p>统计某公司员工的平均薪资：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- avg:取平均值</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">avg</span>(t.sal) <span class="keyword">from</span> scott.emp t;</span><br><span class="line"><span class="keyword">select</span> substr(<span class="built_in">avg</span>(t.sal), <span class="number">0</span>, <span class="number">7</span>) <span class="keyword">from</span> scott.emp t;</span><br></pre></td></tr></table></figure>

<p><img data-src="https://pic3.zhimg.com/80/v2-1205bf0c5c16feb398d66ee32d0e73a8_720w.jpg" alt="img"></p>
<p><strong>返回统计行数count</strong></p>
<p>统计某公司员工总数：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 统计函数count:统计emp表条目数量14</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> scott.emp;</span><br></pre></td></tr></table></figure>

<p><img data-src="https://pic3.zhimg.com/80/v2-44b57b0fceb0fa7331e98e530ce75273_720w.jpg" alt="img"></p>
<p><strong>返回总数（求和）sum</strong>，sum函数一般会配合decode函数使用。上面的黑色背景看久了眼睛累，特意换了一种护眼色。字体颜色就没有特意更换，字体稍微点大了一丢丢，看的更舒服。</p>
<p>统计某公司所有员工薪资总和：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 求和函数sum的使用</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">sum</span>(t.sal) <span class="keyword">from</span> scott.emp t;</span><br><span class="line"><span class="comment">-- 配合decode函数使用</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">sum</span>(decode(ename, <span class="string">&#x27;SMITH&#x27;</span>, sal, <span class="number">0</span>)) SMITH,<span class="built_in">sum</span>(decode(ename, <span class="string">&#x27;ALLEN&#x27;</span>, sal, <span class="number">0</span>)) ALLEN,</span><br><span class="line">       <span class="built_in">sum</span>(decode(ename, <span class="string">&#x27;WARD&#x27;</span>, sal, <span class="number">0</span>)) WARD,<span class="built_in">sum</span>(decode(ename, <span class="string">&#x27;JONES&#x27;</span>, sal, <span class="number">0</span>)) JONES,</span><br><span class="line">       <span class="built_in">sum</span>(decode(ename, <span class="string">&#x27;MARTIN&#x27;</span>, sal, <span class="number">0</span>)) MARTIN,<span class="built_in">sum</span>(decode(ename, <span class="string">&#x27;BLAKE&#x27;</span>, sal, <span class="number">0</span>)) BLAKE,</span><br><span class="line">       <span class="built_in">sum</span>(decode(ename, <span class="string">&#x27;CLARK&#x27;</span>, sal, <span class="number">0</span>)) CLARK,<span class="built_in">sum</span>(decode(ename, <span class="string">&#x27;SCOTT&#x27;</span>, sal, <span class="number">0</span>)) SCOTT,</span><br><span class="line">       <span class="built_in">sum</span>(decode(ename, <span class="string">&#x27;KING&#x27;</span>, sal, <span class="number">0</span>)) KING,<span class="built_in">sum</span>(decode(ename, <span class="string">&#x27;TURNER&#x27;</span>, sal, <span class="number">0</span>)) TURNER</span><br><span class="line"><span class="keyword">from</span> scott.emp;</span><br></pre></td></tr></table></figure>

<p><img data-src="https://pic1.zhimg.com/80/v2-783fb79aa18da526e65a557ff13eabca_720w.jpg" alt="img"></p>
<p><strong>tips</strong>：count函数在工作中使用的很频繁，你不清楚某张表中有多少条记录，需要统计一下再处理。</p>
<p><strong>返回最大值max</strong></p>
<p>查看员工中薪水最高的那一位：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- max函数的使用</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">max</span>(t.sal) <span class="keyword">from</span> scott.emp t;</span><br></pre></td></tr></table></figure>

<p><img data-src="https://pic1.zhimg.com/80/v2-364830e3c022d55a1deeee36511f7b3d_720w.jpg" alt="img"></p>
<p><strong>返回最小值min</strong></p>
<p>查看员工中薪水最低的那一位：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">min</span>(t.sal) <span class="keyword">from</span> scott.emp t;</span><br></pre></td></tr></table></figure>

<p><img data-src="https://pic3.zhimg.com/80/v2-d5414b4a5c9ada1feb11b2437fcfa9bc_720w.jpg" alt="img"></p>
<p><strong>Oracle中的rownum伪列</strong></p>
<p>统计公司员工中的最后一条记录，通过rownum实现：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> t.sal <span class="keyword">from</span> scott.emp t <span class="keyword">where</span> rownum <span class="operator">&lt;=</span><span class="number">1</span>;</span><br><span class="line"><span class="keyword">select</span> t.sal <span class="keyword">from</span> scott.emp t <span class="keyword">where</span> rownum <span class="operator">&lt;=</span><span class="number">1</span> <span class="keyword">order</span> <span class="keyword">by</span> t.sal <span class="keyword">desc</span>;</span><br></pre></td></tr></table></figure>

<p><img data-src="https://pic3.zhimg.com/80/v2-661dc6a81845ee60c7ffff4f6c94e567_720w.jpg" alt="img"></p>
<p><strong>MySQL中的分页limit关键字</strong></p>
<p>通过limit关键字实现，根据sakila数据库中的actor（演员表）为例子返回最后三条记录，使用actor_id进行排序。</p>
<p><strong>注意</strong>：<strong>limit属于MySQL扩展SQL92后的语法，在其它数据库中不能通用</strong>。Oracle的分页可以通过rownum来实现，上面也介绍了。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> t.`first_name`,t.`actor_id` <span class="keyword">FROM</span> sakila.`actor` t <span class="keyword">ORDER</span> <span class="keyword">BY</span> t.`actor_id` <span class="keyword">DESC</span> LIMIT <span class="number">0</span>,<span class="number">3</span>;</span><br></pre></td></tr></table></figure>

<p><img data-src="https://pic3.zhimg.com/80/v2-ffb4e83709041555270aed2f89c25929_720w.jpg" alt="img"></p>
<h3 id="2、着重掌握的函数"><a href="#2、着重掌握的函数" class="headerlink" title="2、着重掌握的函数"></a>2、着重掌握的函数</h3><ul>
<li>group by 函数用于分组；</li>
<li>having 函数用于过滤，对分组后内容进行过滤。</li>
</ul>
<p><strong>group by函数</strong></p>
<p>配合聚合函数sum使用，查询Oracle中scott用户下的emp表。使用group by进行分组，然后<strong>统计公司各部门员工的薪资</strong>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> t.deptno, <span class="built_in">SUM</span>(t.sal) <span class="keyword">AS</span> sals <span class="keyword">FROM</span> scott.emp t <span class="keyword">GROUP</span> <span class="keyword">BY</span> t.deptno;</span><br></pre></td></tr></table></figure>

<p><img data-src="https://pic3.zhimg.com/80/v2-85124edfb8c24e6abea7fe753e2eb186_720w.jpg" alt="img"></p>
<p><strong>having函数</strong></p>
<p><strong>区别</strong>：<code>having</code> 和 <code>where</code> 的区别在于，having 是对聚合后的结果进行条件的过滤，而 where 是在聚合前就对记录进行过滤。如果逻辑允许，应尽可能用 where 先过滤记录，由于结果集的减小，对聚合的效率明显提升。最后再依据逻辑判断是否用 having 再次过滤。</p>
<p>配合聚合函数使用，Oracle中 的 scott 用户下 emp 与 dept 表。</p>
<p>先对部门名称进行分组，然后使用having过滤出薪水总和大于10000的部门：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> d.dname, <span class="built_in">SUM</span>(e.sal) <span class="keyword">AS</span> sals <span class="keyword">FROM</span> scott.emp e</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> scott.dept d <span class="keyword">ON</span> e.deptno<span class="operator">=</span>d.deptno</span><br><span class="line"><span class="keyword">WHERE</span> e.deptno <span class="operator">&lt;</span> <span class="number">30</span> <span class="keyword">GROUP</span> <span class="keyword">BY</span> d.dname  <span class="keyword">HAVING</span> <span class="built_in">SUM</span>(e.sal) <span class="operator">&gt;</span> <span class="number">10000</span>;</span><br></pre></td></tr></table></figure>

<p><img data-src="https://pic2.zhimg.com/80/v2-0e9ecfb4ebc8242e07f2596d93000fd0_720w.jpg" alt="img"></p>
<h2 id="五、SQL核心知识"><a href="#五、SQL核心知识" class="headerlink" title="五、SQL核心知识"></a>五、SQL核心知识</h2><p>凡事应以实际工作场景而定。个人的以一些理解仅仅是建议，最终的应用还需结合实际应用场景。软件实施对SQL的函数、触发器和存储过程没有太高的要求，但也需要会基本的运用。在某些特殊的场景下，使用这些SQL的核心知识将有助于提高我们的工作效率。</p>
<h3 id="1、函数"><a href="#1、函数" class="headerlink" title="1、函数"></a>1、函数</h3><p><strong>函数关键字</strong>：FUNCTION</p>
<p>使用第三方客户端工具新建函数，会自动生成一些模板：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">DELIMITER $$  <span class="comment">-- 声明关键字DELIMITER</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="comment">-- 创建函数的关键字create</span></span><br><span class="line">    <span class="comment">/*[DEFINER = &#123; user | CURRENT_USER &#125;]*/</span></span><br><span class="line">    <span class="keyword">FUNCTION</span> `study`.`stu_num`() <span class="comment">-- 设置函数名称</span></span><br><span class="line">    <span class="keyword">RETURNS</span> TYPE <span class="comment">-- 返回值的类型</span></span><br><span class="line">    <span class="comment">/*LANGUAGE SQL</span></span><br><span class="line"><span class="comment">    | [NOT] DETERMINISTIC</span></span><br><span class="line"><span class="comment">    | &#123; CONTAINS SQL | NO SQL | READS SQL DATA | MODIFIES SQL DATA &#125;</span></span><br><span class="line"><span class="comment">    | SQL SECURITY &#123; DEFINER | INVOKER &#125;</span></span><br><span class="line"><span class="comment">    | COMMENT &#x27;string&#x27;*/</span></span><br><span class="line">    <span class="keyword">BEGIN</span> <span class="comment">-- 开始业务逻辑</span></span><br><span class="line">    <span class="comment">-- &#123;业务逻辑区...&#125;</span></span><br><span class="line">    <span class="keyword">END</span>$$ <span class="comment">-- 结束标志</span></span><br><span class="line">DELIMITER ;</span><br></pre></td></tr></table></figure>



<h3 id="2、触发器"><a href="#2、触发器" class="headerlink" title="2、触发器"></a>2、触发器</h3><p><strong>触发器关键字</strong>：TRIGGER</p>
<p>使用第三方客户端工具新建触发器，会自动生成一些模板：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">DELIMITER $$</span><br><span class="line"><span class="keyword">CREATE</span>  <span class="comment">-- 创建触发器的关键字create</span></span><br><span class="line">    <span class="comment">/*[DEFINER = &#123; user | CURRENT_USER &#125;]*/</span></span><br><span class="line">    <span class="keyword">TRIGGER</span> `study`.`stu_insert` BEFORE<span class="operator">/</span>AFTER <span class="keyword">INSERT</span><span class="operator">/</span><span class="keyword">UPDATE</span><span class="operator">/</span><span class="keyword">DELETE</span></span><br><span class="line">    <span class="keyword">ON</span> `study`.`<span class="operator">&lt;</span><span class="keyword">Table</span> Name<span class="operator">&gt;</span>`</span><br><span class="line">    <span class="keyword">FOR</span> <span class="keyword">EACH</span> <span class="type">ROW</span> <span class="keyword">BEGIN</span> <span class="comment">-- 使用到for each循环</span></span><br><span class="line">    <span class="comment">-- &#123;业务逻辑区...&#125;</span></span><br><span class="line">    <span class="keyword">END</span>$$</span><br><span class="line">DELIMITER ;</span><br></pre></td></tr></table></figure>



<h3 id="3、存储过程"><a href="#3、存储过程" class="headerlink" title="3、存储过程"></a>3、存储过程</h3><p><strong>存储过程关键字</strong>：PROCEDURE</p>
<p>支持完整事务的存储引擎，在保证数据的完整一致性情况下，尽可能多的使用commit事务提交。利用函数和存储过程一个好的示例，在MySQL中快速生成千万级别的数据大表进行测试就可以应用到，同时还能联想到测试性能。这是勾起我们学习的动力，一个比较好的方法。</p>
<p><strong>使用第三方客户端工具新建存储过程</strong>，会自动生成一些模板：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">DELIMITER $$</span><br><span class="line"><span class="keyword">CREATE</span></span><br><span class="line">    <span class="comment">/*[DEFINER = &#123; user | CURRENT_USER &#125;]*/</span></span><br><span class="line">    <span class="keyword">PROCEDURE</span> `study`.`insert_study`()</span><br><span class="line">    <span class="comment">/*LANGUAGE SQL</span></span><br><span class="line"><span class="comment">    | [NOT] DETERMINISTIC</span></span><br><span class="line"><span class="comment">    | &#123; CONTAINS SQL | NO SQL | READS SQL DATA | MODIFIES SQL DATA &#125;</span></span><br><span class="line"><span class="comment">    | SQL SECURITY &#123; DEFINER | INVOKER &#125;</span></span><br><span class="line"><span class="comment">    | COMMENT &#x27;string&#x27;*/</span></span><br><span class="line">    <span class="keyword">BEGIN</span></span><br><span class="line">    <span class="comment">-- &#123;业务逻辑区...&#125;</span></span><br><span class="line">    <span class="keyword">COMMIT</span>; <span class="comment">-- 支持完整事务的存储引擎,在保证数据的完整一致性情况下,尽可能多的使用commit事务提交</span></span><br><span class="line">    <span class="keyword">END</span>$$</span><br><span class="line">DELIMITER ;</span><br></pre></td></tr></table></figure>

<h3 id="4、典型的示例sakila数据库"><a href="#4、典型的示例sakila数据库" class="headerlink" title="4、典型的示例sakila数据库"></a>4、典型的示例sakila数据库</h3><p>这是一个MySQL官方提供的拥有存储过程、触发器和函数示例的电影出租信息管理系统数据库。并且官方提供了EER模型，便于理解每张表之间的关联关系，可以使用MySQL workbench打开sakila.mwb进行参考学习。如果你能完整的看完这篇文档，你会发现在一开始我就提供了sakila数据库的官网下载地址。</p>
<p><strong>sakila数据库视图</strong>：actor_info，演员信息视图</p>
<p><strong>使用DESC关键字进行查看视图结构</strong>，这个关键字很实用哟。视图和表结构很像，以sakila中actor_info视图进行展示：</p>
<p><img data-src="https://pic2.zhimg.com/80/v2-5015266f6d342af5448e72acb2d82a3b_720w.jpg" alt="img"></p>
<p><strong>sakila数据库存储过程</strong>：film_in_stock，电影库存</p>
<p>官方的一个示例：创建一个存储过程，声明了三个常量字段，然后分别赋值给演示字段，最后将找到的记录复制存到了p_film_count中。这里我为何说是复制呢？是因为使用到了SELECT … INTO关键字。</p>
<p>函数、触发器和存储过程最主要的一块在BEGIN {业务逻辑区…} END这一块区域。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">DELIMITER $$</span><br><span class="line">USE `sakila`$$</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">PROCEDURE</span> IF <span class="keyword">EXISTS</span> `film_in_stock`$$</span><br><span class="line"><span class="keyword">CREATE</span> DEFINER<span class="operator">=</span>`root`@`<span class="operator">%</span>` <span class="keyword">PROCEDURE</span> `film_in_stock`(<span class="keyword">IN</span> p_film_id <span class="type">INT</span>, <span class="keyword">IN</span> p_store_id <span class="type">INT</span>, <span class="keyword">OUT</span> p_film_count <span class="type">INT</span>)</span><br><span class="line">    <span class="keyword">READS</span> <span class="keyword">SQL</span> DATA</span><br><span class="line">    <span class="keyword">SQL</span> SECURITY INVOKER</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">     <span class="keyword">SELECT</span> inventory_id</span><br><span class="line">     <span class="keyword">FROM</span> inventory</span><br><span class="line">     <span class="keyword">WHERE</span> film_id <span class="operator">=</span> p_film_id</span><br><span class="line">     <span class="keyword">AND</span> store_id <span class="operator">=</span> p_store_id</span><br><span class="line">     <span class="keyword">AND</span> inventory_in_stock(inventory_id);</span><br><span class="line">     <span class="keyword">SELECT</span> FOUND_ROWS() <span class="keyword">INTO</span> p_film_count;</span><br><span class="line"><span class="keyword">END</span>$$</span><br><span class="line">DELIMITER ;</span><br></pre></td></tr></table></figure>

<p>关于函数我就不列举MySQL官方提供的示例了。</p>
<p><strong>给出一点小小的建议，感觉对你没啥作用可以忽略掉</strong>：首先快速熟悉语法使用，对官方的示例进行解读，然后运行验证。最后，书写一些简单的示例达到熟练运用目的。不要只停留在想要执行，而是立即执行并带着思考去看待问题。多问一个为什么，思考本质。</p>
<p><strong>——————更新于2022-3-14——————</strong></p>
<h2 id="六、SQL查漏补缺"><a href="#六、SQL查漏补缺" class="headerlink" title="六、SQL查漏补缺"></a>六、SQL查漏补缺</h2><ol>
<li>SQL模糊匹配（like）</li>
<li>SQL通配符</li>
<li>SQL高级过滤</li>
<li>show操作符（主要介绍MySQL中的用法）</li>
</ol>
<p><strong>更新文章</strong>：最近回顾以前工作，发现这些操作符也挺常用的。</p>
<p><span class="exturl" data-url="aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC80ODA3ODA5MzE=">SQL模糊匹配——通配符——高级过滤<i class="fa fa-external-link-alt"></i></span></p>
<h1 id="END-莫问收获，但问耕耘"><a href="#END-莫问收获，但问耕耘" class="headerlink" title="END 莫问收获，但问耕耘"></a>END 莫问收获，但问耕耘</h1><p>终身学习，源于某一次面试的总结，结果停不下来了。以上也是对 SQL 常用联合查询以及聚合函数的一个总结，希望能对你的工作与学习有所帮助。善于总结，其乐不穷。<strong>好记性不如烂笔头</strong>，多收集自己第一次尝试的成果，收获也颇丰。<strong>你会发现，自己的知识宝库越来越丰富</strong>。</p>
<p>静下心来，才发现原来不会的还有很多。</p>
<p>一分耕耘，一分收获。</p>
<p>多总结，你会发现，自己的知识宝库越来越丰富。</p>
<p>以上总结，仅供参考！</p>
<p>最后，希望这篇总结对你的学习和工作有些许帮助！</p>
<p>—END—</p>
]]></content>
      <categories>
        <category>面经</category>
      </categories>
      <tags>
        <tag>SQL</tag>
      </tags>
  </entry>
  <entry>
    <title>常用护眼色</title>
    <url>/2022/02/17/%E5%B8%B8%E7%94%A8%E6%8A%A4%E7%9C%BC%E8%89%B2/</url>
    <content><![CDATA[<h1 id="常用护眼色"><a href="#常用护眼色" class="headerlink" title="常用护眼色"></a>常用护眼色</h1><p>就算看文档，也要要养成护眼的好习惯哟，毕竟往后余生还长着了。</p>
<table>
<thead>
<tr>
<th>颜色</th>
<th>RGB</th>
<th>16进制</th>
</tr>
</thead>
<tbody><tr>
<td><strong>常用护眼色</strong></td>
<td>R：181   G：230   B：181</td>
<td>#B5E6B5</td>
</tr>
<tr>
<td><strong>黄</strong></td>
<td>R：250   G：249   B：222</td>
<td>#FAF9DE</td>
</tr>
<tr>
<td><strong>褐</strong></td>
<td>R：250   G：242   B：226</td>
<td>#FFF2E2</td>
</tr>
<tr>
<td>红</td>
<td>R：253   G：230   B：224</td>
<td>#FDE6E0</td>
</tr>
<tr>
<td>绿</td>
<td>R：227   G：237   B：205</td>
<td>#E3EDCD</td>
</tr>
<tr>
<td><strong>海天蓝</strong></td>
<td>R：220   G：226   B：241</td>
<td>#DCE2F1</td>
</tr>
<tr>
<td>紫</td>
<td>R：233   G：235   B：154</td>
<td>#E9EBFE</td>
</tr>
<tr>
<td>灰</td>
<td>R：234   G：234   B：239</td>
<td>#EAEAEF</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>杂谈</category>
      </categories>
      <tags>
        <tag>护眼色</tag>
      </tags>
  </entry>
  <entry>
    <title>开源镜像站地址</title>
    <url>/2022/06/30/%E5%BC%80%E6%BA%90%E9%95%9C%E5%83%8F%E7%AB%99%E5%9C%B0%E5%9D%80/</url>
    <content><![CDATA[<h3 id="开源软件镜像站"><a href="#开源软件镜像站" class="headerlink" title="开源软件镜像站"></a>开源软件镜像站</h3><p><strong>腾讯软件源</strong><br><span class="exturl" data-url="aHR0cHM6Ly9taXJyb3JzLmNsb3VkLnRlbmNlbnQuY29tLw==">https://mirrors.cloud.tencent.com/<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>华为开源镜像站</strong><br><span class="exturl" data-url="aHR0cHM6Ly9taXJyb3JzLmh1YXdlaWNsb3VkLmNvbS9ob21l">https://mirrors.huaweicloud.com/home<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>阿里巴巴开源镜像站</strong><br><span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIuYWxpeXVuLmNvbS9taXJyb3Iv">https://developer.aliyun.com/mirror/<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>网易开源镜像站</strong><br><span class="exturl" data-url="aHR0cHM6Ly9taXJyb3JzLjE2My5jb20v">https://mirrors.163.com/<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>清华大学开源软件镜像站</strong><br><span class="exturl" data-url="aHR0cHM6Ly9taXJyb3JzLnR1bmEudHNpbmdodWEuZWR1LmNuLw==">https://mirrors.tuna.tsinghua.edu.cn/<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>中国科学技术大学</strong><br><span class="exturl" data-url="aHR0cHM6Ly9taXJyb3JzLnVzdGMuZWR1LmNuLw==">https://mirrors.ustc.edu.cn/<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>浙江大学开源软件镜像站</strong><br><span class="exturl" data-url="aHR0cHM6Ly9taXJyb3JzLnpqdS5lZHUuY24v">https://mirrors.zju.edu.cn/<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="学术镜像网站"><a href="#学术镜像网站" class="headerlink" title="学术镜像网站"></a>学术镜像网站</h3><p><strong>谷歌学术镜像</strong></p>
<p><span class="exturl" data-url="aHR0cHM6Ly9hYy5zY21vci5jb20v">https://ac.scmor.com/<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>开发运维</category>
      </categories>
  </entry>
  <entry>
    <title>快速上手git和gitee以及github</title>
    <url>/2022/01/02/%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8Bgit%E5%92%8Cgitee%E4%BB%A5%E5%8F%8Agithub/</url>
    <content><![CDATA[<p>你真的了解git、gitee、github吗？本文已经收录github仓库，已做更新。CSDN上的部分内容未更新，请访问github进行查看最新内容。</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2Nud2FuZ2svU1FMLXN0dWR5">https://github.com/cnwangk/SQL-study<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p><strong>初学者如何提高学习git的动力</strong>。看完这个搭建的示例，相信你一定有前行的动力。</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9jbndhbmdrLmdpdGh1Yi5pby8=">https://cnwangk.github.io/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p>你真的了解git、gitee、github吗？本文主要围绕git、gitee、github的使用展开介绍，如何一步步通过实践去打造自己的git工作环境。当然你可以作为写作环境，熟悉一门技术的有效方式就是应用实践。顺带会讲一些gitee和github的pages服务，搭建自己的个人网站。</p>
<p>本文主要环境是在Windows下进行的，所以看到桌面或者在某一目录右键可以直接打开Git Bash。<br><img data-src="https://img-blog.csdnimg.cn/img_convert/d9221e03c8bf7fa3eac6131b62be9854.png"></p>
<h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><p>至于我为什么将git工具放在最前面，是因为通过这个工具可以将gitee与github串联起来。可能有人会说，我可以在虚拟机上或者云服务器上搭建git环境测试。但我想说的是，白嫖她不香吗？直呼真香，小伙子有点东西啊！</p>
<h2 id="一、git"><a href="#一、git" class="headerlink" title="一、git"></a>一、git</h2><p><strong>背景</strong></p>
<p> 现如今，难以想象有创意的人会在没有备份策略的情况启动一个项目。数据是短暂的，且容易丢失，例如通过一次错误的代码变更或者一次灾难性的磁盘崩溃。所以，在整个工作中持续性地备份和存档是非常明智的。</p>
<p>对于文本和代码项目，备份策略通常包括版本控制，或者叫“对变更进行追踪管理”。每个开发人员都会进行若干变更。这些持续增长的变更，加在一起可以构成一个版本库，用于项目描述，团队沟通和产品管理。版本控制有着举足轻重的作用。</p>
<p> 一个可以管理和追踪软件代码或其他类似类容的不同版本工具。通常称为：版本控制系统（VCS），或者源代码管理器（SCM），或者修订控制系统（RCS）。或者其他各种“修订、代码、内容、版本、控制、管理以及系统”等相关叫法。</p>
<p>但其实每二个工具都是出于同样的目的，开发以及维护开发出来的代码，方便管理控制历史记录和修改。</p>
<p><strong>诞生</strong></p>
<blockquote>
<p>一句话简单概括</p>
<p>BitKeeper的所有方对免费版做了限制，Linus本人开始寻找替代品，在工作中开发出了有助于分布式开发的git版本控制管理工具。</p>
</blockquote>
<h3 id="1、git客户端工具下载地址"><a href="#1、git客户端工具下载地址" class="headerlink" title="1、git客户端工具下载地址"></a>1、git客户端工具下载地址</h3><p><span class="exturl" data-url="aHR0cHM6Ly9naXQtc2NtLmNvbS9kb3dubG9hZHM=">https://git-scm.com/downloads<i class="fa fa-external-link-alt"></i></span></p>
<p>git下载地址：支持Linux&#x2F;Unix、macOS、Windows</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/0ce71d37d230aed473c2217de0b36109.png"></p>
<h3 id="2、生成ssh公钥"><a href="#2、生成ssh公钥" class="headerlink" title="2、生成ssh公钥"></a>2、生成ssh公钥</h3><p>使用<code>git status</code>时遇到如下问题：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">You don’t exist Go away！</span><br><span class="line">you parents must have hated you!</span><br><span class="line">you sysadmin must hate you! </span><br></pre></td></tr></table></figure>

<p>不要慌，此时git在告诉你，我无法确定您的真实姓名，咱交个好朋友吧，请告诉我你的芳名。通过设置name和email地址可以修复此问题。</p>
<p>2.1、配置提交作者</p>
<p>安装好了git工具，此时可以在桌面右键（Git Bash），输入以下命令进行设置用户以及email。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git config --global user.name <span class="string">&quot;dywangk&quot;</span></span><br><span class="line">$ git config --global user.email <span class="string">&quot;dywangk@example.com&quot;</span></span><br></pre></td></tr></table></figure>

<p>2.2、生成ssh公钥，Windows下默认在<strong>系统盘的当前用的.ssh目录</strong>下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ssh-keygen -t ed25519 -C <span class="string">&quot;test@example.com&quot;</span> -f ~/.ssh/my_id_ed25519</span><br></pre></td></tr></table></figure>

<p>2.3、<strong>gitee提供的方案配置多个key</strong></p>
<p>生成rsa文件时，以指定不同的文件命令作为区分gitee以及github生成的key文件。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C <span class="string">&#x27;dywangk@company.com&#x27;</span> -f ~/.ssh/gitee_id_rsa</span><br><span class="line">$ ssh-keygen -t rsa -C <span class="string">&#x27;dywangk@163.com&#x27;</span> -f ~/.ssh/github_id_rsa</span><br></pre></td></tr></table></figure>

<p>生成key后，然后在 ~&#x2F;.ssh 目录下新建一个config文件，添加如下内容（其中Host和HostName填写git服务器的域名，IdentityFile指定私钥的路径）。看完后我大致明白了，是将gitee和github区分开来，分别读取不同的id_rsa文件的参数值。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># gitee</span></span><br><span class="line">Host gitee.com</span><br><span class="line">HostName gitee.com</span><br><span class="line">PreferredAuthentications publickey</span><br><span class="line">IdentityFile ~/.ssh/gitee_id_rsa</span><br><span class="line"><span class="comment"># github</span></span><br><span class="line">Host github.com</span><br><span class="line">HostName github.com</span><br><span class="line">PreferredAuthentications publickey</span><br><span class="line">IdentityFile ~/.ssh/github_id_rsa</span><br></pre></td></tr></table></figure>

<p>配置好进行验证</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#验证gitee</span></span><br><span class="line">$ ssh -T git@gitee.com</span><br><span class="line"><span class="comment">#验证github</span></span><br><span class="line">$ ssh -T git@github.com</span><br></pre></td></tr></table></figure>



<p>配置好git之后，利用<code>ssh -keygen</code>命令生成ssh公钥，生成公钥所在的存储目录（以Windows环境为例）。生成完key后，可以通过<code>VSCode、sublime text</code>或者其她的辅助工具打开这个文件，复制到github的ssh公钥并保存。在下面的github介绍过程中，我有提到如何将生成的key保存到github并验证。同理gitee也是一样的操作过程，只是操作界面不一样而已。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/807ecf533175645d105548dbaadfbb00.png"></p>
<h2 id="二、gitee"><a href="#二、gitee" class="headerlink" title="二、gitee"></a>二、gitee</h2><blockquote>
<p>引用官方的一个介绍</p>
<p><em>Gitee</em>.com(码云) 是 OSCHINA.NET 推出的代码托管平台,支持 Git 和 SVN,提供免费的私有仓库托管。目前已有超过 600 万的开发者选择 <em>Gitee</em>。</p>
</blockquote>
<p>中文模式，使用起来比较方便。没有github那么难上手，毕竟看到纯英文，读起来着实头疼。在gitee的教程上，我没有过多介绍。</p>
<p>提一点，如果不想使用命令提交，gitee也支持拖拉拽形式上传文件，但是每天上传的文件有限制。</p>
<h3 id="1、gitee配置ssh公钥教程"><a href="#1、gitee配置ssh公钥教程" class="headerlink" title="1、gitee配置ssh公钥教程"></a>1、gitee配置ssh公钥教程</h3><p>gitee官网有很详细的中文说明文档，至于如何配置，我这里给出链接参考。</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRlZS5jb20vaGVscC9hcnRpY2xlcy80MTgxI2FydGljbGUtaGVhZGVyMA==">https://gitee.com/help/articles/4181#article-header0<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="2、配置GPG-keys工具"><a href="#2、配置GPG-keys工具" class="headerlink" title="2、配置GPG keys工具"></a>2、配置GPG keys工具</h3><p>当你访问gitee配置的GPG keys的时候，截至目前为止依旧是测试中（beta）。</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9ncGc0d2luLm9yZy90aGFua3MtZm9yLWRvd25sb2FkLmh0bWw=">https://gpg4win.org/thanks-for-download.html<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="三、github"><a href="#三、github" class="headerlink" title="三、github"></a>三、github</h2><h3 id="1、github官网"><a href="#1、github官网" class="headerlink" title="1、github官网"></a>1、github官网</h3><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tLw==">https://github.com<i class="fa fa-external-link-alt"></i></span></p>
<p>一句话精简概括，一款活跃在互联网中有着庞大的开发团队或者个人并维护者众多的开源项目的开源项目托管平台。</p>
<p><strong>下面是来自于维基百科最新的介绍</strong></p>
<blockquote>
<p><strong>GitHub</strong>是通过<span class="exturl" data-url="aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvR2l0">Git<i class="fa fa-external-link-alt"></i></span>进行<span class="exturl" data-url="aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvJUU3JTg5JTg4JUU2JTlDJUFDJUU2JThFJUE3JUU1JTg4JUI2">版本控制<i class="fa fa-external-link-alt"></i></span>的软件<span class="exturl" data-url="aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvJUU2JUJBJTkwJUU0JUJCJUEzJUU3JUEwJTgx">源代码<i class="fa fa-external-link-alt"></i></span>托管服务平台，由GitHub公司（曾称Logical Awesome）的开发者<span class="exturl" data-url="aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3cvaW5kZXgucGhwP3RpdGxlPUNocmlzX1dhbnN0cmF0aCZhY3Rpb249ZWRpdCZyZWRsaW5rPTE=">Chris Wanstrath<i class="fa fa-external-link-alt"></i></span>、<span class="exturl" data-url="aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3cvaW5kZXgucGhwP3RpdGxlPVAuX0ouX0h5ZXR0JmFjdGlvbj1lZGl0JnJlZGxpbms9MQ==">P. J. Hyett<i class="fa fa-external-link-alt"></i></span>和<span class="exturl" data-url="aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvJUU2JUIxJUE0JUU1JUE3JTg2JUMyJUI3JUU2JTk5JUFFJUU5JTlCJUI3JUU2JTk2JUFGJUU5JUExJUJGJUMyJUI3JUU2JUIyJTgzJUU3JUJBJUIz">汤姆·普雷斯顿·沃纳<i class="fa fa-external-link-alt"></i></span>使用<span class="exturl" data-url="aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvUnVieV9vbl9SYWlscw==">Ruby on Rails<i class="fa fa-external-link-alt"></i></span>编写而成。</p>
</blockquote>
<blockquote>
<p>GitHub同时提供付费账户和免费账户。这两种账户都可以创建公开或私有的<span class="exturl" data-url="aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvJUU0JUJCJUEzJUU3JUEwJTgxJUU1JUJBJTkz">代码仓库<i class="fa fa-external-link-alt"></i></span>，但付费用户拥有更多功能。根据在2009年的Git用户调查，GitHub是最流行的<span class="exturl" data-url="aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvR2l0">Git<i class="fa fa-external-link-alt"></i></span>访问站点。除了允许个人和组织创建和访问保管中的代码以外，它也提供了一些方便社会化共同软件开发的功能，即一般人口中的社群功能，包括允许用户追踪其他用户、组织、软件库的动态，对软件代码的改动和<span class="exturl" data-url="aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvJUU3JUE4JThCJUU1JUJBJThGJUU5JTk0JTk5JUU4JUFGJUFG">bug<i class="fa fa-external-link-alt"></i></span>提出评论等。GitHub也提供了图表功能，用于概观显示开发者们怎样在代码库上工作以及软件的开发活跃程度。</p>
</blockquote>
<blockquote>
<p>截止到2020年1月，GitHub已经有超过4000万注册用户和1.9亿代码库（包括至少2800万开源代码库），事实上已经成为了世界上最大的代码存放网站和<span class="exturl" data-url="aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvJUU1JUJDJTgwJUU2JTk0JUJFJUU2JUJBJTkwJUU0JUJCJUEzJUU3JUEwJTgx">开源<i class="fa fa-external-link-alt"></i></span>社区。</p>
<p>2018年6月4日晚，<span class="exturl" data-url="aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvJUU3JUJFJThFJUU1JTlCJUJE">美国<i class="fa fa-external-link-alt"></i></span>科技公司<span class="exturl" data-url="aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvJUU1JUJFJUFFJUU4JUJCJTlG">微软<i class="fa fa-external-link-alt"></i></span>宣布以75亿美元的股票收购GitHub。</p>
</blockquote>
<p>就算被微软收购后，依旧没改变github那极不稳定的访问速度。</p>
<h3 id="2、github使用配置简介"><a href="#2、github使用配置简介" class="headerlink" title="2、github使用配置简介"></a>2、github使用配置简介</h3><p>由于github是纯英文的，所以我会多配置一些截图并辅以说明，望理解。</p>
<p>2.1、<strong>github配置ssh公钥</strong></p>
<p>这里不仅仅是支持配置SSH keys，并且还支持配置GPG keys，需要下载支持的工具进行生成GPG公钥然后添加到github。当然，如果你要移除某一个key，点击Delete删除即可。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/dcf15a2c5b677308a25992efa989b0a9.png"></p>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3NldHRpbmdzL3NzaC9uZXc=">https://github.com/settings/ssh/new<i class="fa fa-external-link-alt"></i></span></p>
<p>2.2、账号设置</p>
<p>账号设置，可以修改用户名、以及删除你的账号（谨慎操作）。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/9ddf7cf7f8ca9fce2d4daf7323a9cb07.png"></p>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3NldHRpbmdzL2FkbWlu">https://github.com/settings/admin<i class="fa fa-external-link-alt"></i></span></p>
<p>2.3、个人简介设置</p>
<p>此处是个人简介设置，比如公共邮箱设置、对自己的介绍、URL地址、Twitter用户名以及公司等等介绍。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/af552feeabc99dcffffc151f90168df4.png"></p>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3NldHRpbmdzL3Byb2ZpbGU=">https://github.com/settings/profile<i class="fa fa-external-link-alt"></i></span></p>
<p>2.4、辅助邮箱设置</p>
<p>设置邮箱后，可以使用设置好的邮箱进行登录操作，接收一些比如修改密码时可能需要邮箱验证。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/cbe066c9717c15cb8bdce636b47aefef.png"></p>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3NldHRpbmdzL2VtYWlscw==">https://github.com/settings/emails<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="3、配置验证"><a href="#3、配置验证" class="headerlink" title="3、配置验证"></a>3、配置验证</h3><p>Windows下右键打开<code>Git Bash</code>，使用<code>ssh -T</code>命令测试验证。当前配置了gitee的ssh公钥，验证返回结果成功。未配置github的ssh公钥，测试验证返回的结果是权限（permission denied）拒绝。</p>
<p>使用命令测试验证</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#验证gitee</span></span><br><span class="line">ssh -T git@gitee.com</span><br><span class="line"><span class="comment">#验证github</span></span><br><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure>



<p><img data-src="https://img-blog.csdnimg.cn/img_convert/ecf9d365fc1c5726f3429eb0ae305304.png"></p>
<p>下面是配置好了github的ssh公钥或者是GPG keys，进行测试验证，返回结果是成功。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/703198ca0e4e38d1c4d0adac0852be19.png"></p>
<h3 id="4、导入远程仓库到github"><a href="#4、导入远程仓库到github" class="headerlink" title="4、导入远程仓库到github"></a>4、导入远程仓库到github</h3><p>导入远程仓库选择<strong>import repositories</strong>，比如导入gitee的远程仓库。好吧，我一般是将github仓库同步至gitee作为镜像仓库使用。大家都懂得，长城网络的墙太殷实了，就算github被微软收购后这个访问速度依旧感人。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/050d63d0c97f2ee51f34a258219ed8ab.png"></p>
<p>例如，我<strong>同步自己的写作工作空间</strong>：</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/748df1b210e3203338f6fadbb086b884.png"></p>
<p>github一些使用介绍，你的个人仓库（your repositories）、个人收藏的仓库（your stars）、个人设置（settings）</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/35bcaa587c2e087826052e352bcb61ef.png"></p>
<h2 id="四、git基本命令介绍（实用型）"><a href="#四、git基本命令介绍（实用型）" class="headerlink" title="四、git基本命令介绍（实用型）"></a>四、git基本命令介绍（实用型）</h2><h3 id="1、基本命令"><a href="#1、基本命令" class="headerlink" title="1、基本命令"></a>1、基本命令</h3><h4 id="1-1、git-init初始化一个仓库"><a href="#1-1、git-init初始化一个仓库" class="headerlink" title="1.1、git init初始化一个仓库"></a>1.1、git init初始化一个仓库</h4><p>git初始化一个仓库时，会生成.git目录，是一个隐藏文件。linux下可以使用<code>ls -a</code>查看所有文件，Windows下打开资源管理器的显示隐藏项目才能看到该文件。下面给出Windows下的初始化后的git仓库示例：</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/24b5fb8d426c96a90cba50dada1705dd.png"></p>
<p>隐藏目录文件列表如下，具体作用不做讲解。有兴趣的可以去逛逛官方文档，或者参考git相关的实体书。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/ed00dab4c9412796860b20495aaaafa3.png"></p>
<p>Windows下直接切换到test目录，并<strong>初始化test这个目录</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#Windows下直接切换到test目录，并初始化这个目录</span></span><br><span class="line">$ git init</span><br></pre></td></tr></table></figure>

<p><img data-src="https://img-blog.csdnimg.cn/img_convert/d3d7e261dbae66ac486b3db32459522d.png"></p>
<h4 id="1-2、git-add将数据暂存"><a href="#1-2、git-add将数据暂存" class="headerlink" title="1.2、git add将数据暂存"></a>1.2、git add将数据暂存</h4><p>这里提醒一下，TAB快捷键可以自动补全，使用时输入开头直接按TAB快捷键自动补全。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#添加README.md文件，此时加入到暂存区域</span></span><br><span class="line">$ git add README.md</span><br></pre></td></tr></table></figure>

<h4 id="1-3、git-commit提交数据"><a href="#1-3、git-commit提交数据" class="headerlink" title="1.3、git commit提交数据"></a>1.3、git commit提交数据</h4><p>提交创建好的README.md文件，显示如下图所示。这里只是示例，不代表最终推送到仓库。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/17ece8624b2807011852ae6387c4c9c6.png"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#提交数据到仓库,提交全部</span></span><br><span class="line">$ git commit -m <span class="string">&quot;新增README.md文件&quot;</span></span><br><span class="line"><span class="comment">#提交单个指定文件README.md</span></span><br><span class="line">$ git commit README.md -m <span class="string">&quot;新增README.md文件&quot;</span></span><br></pre></td></tr></table></figure>

<p><strong>查看提交</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git <span class="built_in">log</span></span><br></pre></td></tr></table></figure>

<p><img data-src="https://img-blog.csdnimg.cn/img_convert/6dc505d54192ff865b3ef5178e117ced.png"></p>
<h4 id="1-4、git-push推送提交的数据到远程仓库"><a href="#1-4、git-push推送提交的数据到远程仓库" class="headerlink" title="1.4、git push推送提交的数据到远程仓库"></a>1.4、git push推送提交的数据到远程仓库</h4><p>推送之前需要连上自己的远程仓库SQL-study</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git remote add origin git@gitee.com:dywangk/SQL-study.git</span><br></pre></td></tr></table></figure>

<p><strong>推送提交的数据到远程仓库master</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#推送提交的数据到远程仓库master</span></span><br><span class="line">$ git push git@gitee.com:dywangk/SQL-study.git</span><br></pre></td></tr></table></figure>

<p>之前看到某呼上有提问，如何记住那么多的linux命令。我当时就在思考，经常使用，自然而然的就记住了。一遍记不住，我操作五遍该有印象了吧。很多命令不用刻意记住，善用系统提供的帮助命令<code>--help</code>或者linux下的<code>man</code>辅助你快速上手。<strong>使用时尽量手敲，不要去复制粘贴</strong>，否则效果不大。熟悉后可以使用上下键快速调出历史命令，使用<code>history</code>命令查看使用的记录。</p>
<p>以上就是我日常书写文章后，进行提交经常使用到的git命令。当你需要优化删除一些不需要的文件，此时可以通过 <code>git rm</code>命令实现操作。当你需要移动某个文件时，可以使用git rm或者<code>git mv</code>命令进行移动文件操作。熟悉linux基本命令的同学，更容易上手，很多命令都类似。</p>
<h4 id="1-5、克隆仓库到本地"><a href="#1-5、克隆仓库到本地" class="headerlink" title="1.5、克隆仓库到本地"></a>1.5、克隆仓库到本地</h4><p>比如，将阿里的开源消息中间件rocketmq-spring克隆到本地，<strong>前提是配置好了ssh公钥</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#将阿里的开源消息中间件rocketmq-spring克隆到本地，前提是配置好了ssh公钥</span></span><br><span class="line">$ git <span class="built_in">clone</span> git@github.com:apache/rocketmq-spring.git</span><br></pre></td></tr></table></figure>



<h3 id="2、进阶"><a href="#2、进阶" class="headerlink" title="2、进阶"></a>2、进阶</h3><h4 id="2-1、以分支为例简单介绍"><a href="#2-1、以分支为例简单介绍" class="headerlink" title="2.1、以分支为例简单介绍"></a>2.1、以分支为例简单介绍</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#查看分支</span></span><br><span class="line">$ git branch</span><br><span class="line"><span class="comment">#新增分支</span></span><br><span class="line">$ git branch bchtest</span><br><span class="line"><span class="comment">#删除分支</span></span><br><span class="line">$ git branch -d bchtest</span><br><span class="line"><span class="comment">#检出分支</span></span><br><span class="line">$ git checkout master</span><br><span class="line"><span class="comment">#合并分支命令</span></span><br><span class="line">$ git merge other_branch</span><br></pre></td></tr></table></figure>



<p>关于进阶知识，需要了解更多的git命令使用，比如分支、合并、删除、修改或者移动以及冲突处理。</p>
<p><strong>在你做删除操作时，切记事先做好备份</strong>。</p>
<p>如果想再进一步，那就推荐系统的看实体书《Git版本控制管理》，我最近也在阅读这本书籍。很多以前一知半解的，现在突然<strong>念头通达</strong>了。深入了解Git的工作原理，辅助你更好地学习与理解。</p>
<h2 id="五、Gitee-Pages与Github-Pages"><a href="#五、Gitee-Pages与Github-Pages" class="headerlink" title="五、Gitee Pages与Github Pages"></a>五、Gitee Pages与Github Pages</h2><p>关于gitee pages与github pages只做简单的介绍。至于新建仓库这些比较简单了，就不一一截图介绍了。要不然显得篇幅很长，有点在灌水的感觉。</p>
<h3 id="1、gitee-pages服务"><a href="#1、gitee-pages服务" class="headerlink" title="1、gitee pages服务"></a>1、gitee pages服务</h3><p><span class="exturl" data-url="aHR0cHM6Ly9naXRlZS5jb20vZHl3YW5nay9za3kvcGFnZXM=">https://gitee.com/dywangk/sky/pages<i class="fa fa-external-link-alt"></i></span></p>
<p>gitee的gitee pages，新建仓库，在服务这一栏会有显示。强调的是，开启gitee pages服务需要实名认证。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/8daeeaf05b52d228928e937aa8790f99.png"></p>
<p>gitee pages配置页面，这已经是配置好的界面，可以强制使用https安全协议。当你提交数据到仓库时，没有及时生效，就进入此页面进行更新操作，然后测试访问你的git pages仓库即可。</p>
<p>比如访问我之前上传比较的感受一下。曾经的虾米音乐，我只是保留了自己的歌单部分：</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9keXdhbmdrLmdpdGVlLmlvL3NreS8lRTUlQkQlQjElRTglQTclODYlRTclQTUlOUUlRTYlOUIlQjIuaHRtbA==">https://dywangk.gitee.io/sky/%E5%BD%B1%E8%A7%86%E7%A5%9E%E6%9B%B2.html<i class="fa fa-external-link-alt"></i></span></p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/13276ecdc9139282e4e6b5a9beae595f.png"></p>
<p>gitee官网有很详细的入门介绍，我这里只提一下，感兴趣的可以测试使用。</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRlZS5jb20vaGVscC9hcnRpY2xlcy80MTM2I2FydGljbGUtaGVhZGVyMA==">https://gitee.com/help/articles/4136#article-header0<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="2、github-pages服务"><a href="#2、github-pages服务" class="headerlink" title="2、github pages服务"></a>2、github pages服务</h3><p>github pages的配置页面</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2Nud2FuZ2svdGVzdC9zZXR0aW5ncy9wYWdlcw==">https://github.com/cnwangk/test/settings/pages<i class="fa fa-external-link-alt"></i></span></p>
<p>配置教程，纯英文的，可以用Google翻译一下哈</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9wYWdlcy5naXRodWIuY29tLw==">https://pages.github.com/<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>我测试配置了一个仓库</strong></p>
<p><strong>注意</strong>：仓库必须是公开的（public）、然后仓库命令可以命令为用户名加github.io</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/8daaad663ea41a6af4264dfeee26104f.png"><br>简单的github pages 服务搭建示例，可以测试访问。</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9jbndhbmdrLmdpdGh1Yi5pby8=">https://cnwangk.github.io/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>开发工具</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>浏览器搜索过滤参数-site:xxx.xxx</title>
    <url>/2022/02/24/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%90%9C%E7%B4%A2%E8%BF%87%E6%BB%A4%E5%8F%82%E6%95%B0-site/</url>
    <content><![CDATA[<p>在浏览器搜索栏输入条件后面加上：-site:xxx.xxx</p>
<p>示例：比如搜索java，过滤某某某N</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">java -site:csdn.net</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>杂谈</category>
      </categories>
  </entry>
  <entry>
    <title>初学者如何入门linux，原来linux还可以这样学</title>
    <url>/2018/12/31/%E5%88%9D%E5%AD%A6%E8%80%85%E5%A6%82%E4%BD%95%E5%85%A5%E9%97%A8linux%EF%BC%8C%E5%8E%9F%E6%9D%A5linux%E8%BF%98%E5%8F%AF%E4%BB%A5%E8%BF%99%E6%A0%B7%E5%AD%A6/</url>
    <content><![CDATA[<p>Linux基本命令大全，Linux初学者如何快速入门，Linux命令学习方法？</p>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在这个只有 cangls 和小白两人的小房间中，展开了一次关于学习方法的讨论。</p>
<p><strong>小白</strong>：cangls啊，我想请教一个问题，您是如何记住那么多linux命令的。</p>
<p><strong>cangls</strong>：我啊，别人都看我的小电影，我也不知道啊！可能是举的例子多了，就记住了一些呗。</p>
<p>此次写作灵感源于一本心理学方面的书籍，对话体的方式运用得当，确实很吸引人。</p>
<span id="more"></span>

<p>灵魂拷问？新手如何学linux？如何从新手到熟手？如何玩转linux？linux大神如何掌握那么多命令？趣味学习linux，了解一下。基于实战演练，同时突出重点。2万5千字的长文，是否真材实料，不妨先收藏再评论。</p>
<p>换个角度看待这个问题，<strong>linux大神都是从小白开始的，没有人一开始就是大神</strong>。</p>
<p>只是别人<strong>运用的比较多</strong>，自然而然记住了更多的命令，<strong>从而更擅长总结学习方法</strong>。</p>
<p>如果你是Linux运维人员，或者是刚入门的编程人员。根据自己的工作经历以及自学总结的内容，篇幅很长，加入了不少示例代码。但很详细哟！相信你一定有所收获的。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/6c4110d100180891c8c0dccd7bc24449.png"></p>
<h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><p>7年前，我还是一个连linux是个啥都不知道的笨小孩，然而现在靠着自学积累的知识也能在日常工作中满足刚需，还教会了新来的同事不少小技巧。先上点趣味性的知识，俗称扫盲，拥有一颗爱学习（闷骚）的心。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/7ddc9bc7b2ae9d55302fc27e926ebe9b.png"></p>
<h2 id="01-第一夜"><a href="#01-第一夜" class="headerlink" title="01 第一夜"></a>01 第一夜</h2><p>以linux为基础将知识串联起来，加入了一些个人经验总结，仅供参考哟！当然，你可以将此篇文章推送你的亲朋好友，当做是学习linux的入门课程。</p>
<p><strong>个人建议，如果感觉建议不到位，可以忽略掉。请直接看正文，相信会有收获的</strong></p>
<p>在给别人建议的时候，希望能从他人的角度去思考。不要上来直接甩一个教程或者视频过去，这样对新人是很不友好的。</p>
<p>首先，我们应该养成自学的良好习惯。<strong>最优的方法往往是去官网查阅文档</strong>，其次通过各大论坛，再就是搜索引擎。但官方文档大体都是英文版的，小白往往也是心有余而力不足，<strong>记得多用词典查阅并积累</strong>。但是，现在linux有简体中文版支持，我们在搭建学习环境的时候可以选择简体中文。当你学到深处的时候，发现还是官方文档最靠谱。</p>
<p><strong>搭建环境</strong>，<strong>建议是真机配合虚拟机工具部署linux服务器</strong>(Redhat系列、Ubuntu、Fedora、Debian等等)使用，放心大胆的测试，再也不用担心服务器被自己弄崩溃了。终端管理工具推荐tabby（github上有），虽然目前终端不支持中文字符输入，但它是开源免费的。关于以何种linux的发行版进行学习，希望不要去跟风，听风就是雨，要根据自身实际情况而定。如果非要我推荐，那就是推荐Redhat系列的Centos或者Ubuntu系列，教程和资源多呗。给出我之前写的稀烂的教程<strong>linux养成达人之入门实践图文超详细</strong>（工欲善其事，必先利其器篇），希望对你有所帮助（<strong>基于centos6.5的</strong>）：在站内搜索 linux养成达人之入门实践图文超详细 即可</p>
<p>关于centos7的可以参考这篇文章：同样在站内搜索  Linux（Redhat7 or Centos7）使用VMware12搭建测试环境</p>
<p><strong>接着说linux简体中文版</strong>，优势在于我看帮助命令的时候有一部分是中文的，这就对我们的学习有大大大的好处。当你提这个问题的时候，应该是对linux这个极具魅力的操作系统有很大的兴趣。有兴趣那就好办了，你会思考如何学习对自己更为有利。此时就会去翻阅文档，<strong>最后发现还是官方文档最为有用，学会积累经验</strong>。慢慢的从小白到老手，这之间有一段艰难的路需要独自走完，享受这一过程的美妙之处。</p>
<p>曾经你是不是在各大论坛或者博客网站都能看到这样一些内容，从删库到跑路。全球绝大部分的服务器啊，基本上都是采用linux服务器的，没有权限你还想删库到跑路？<strong>当然只是开个玩笑，咱都是遵纪守法的五好青年</strong>。</p>
<p>前面的删库到跑路，只是为了引出linux另一大魅力所在权限足够透明。如果在权限这方面玩的相当熟练，<strong>那你可以存不少cang老师的作品哟</strong>。我能自己欣赏，别人却看不到，想想就刺激。谈到cang老师，大家满眼放光聚精会神直呼内行。咱就皮一下，这不是为了引起你学习的兴趣吗。</p>
<p>做了很多铺垫，这里就详细的聊聊我自己的学习过程。将以对话形式展示，小白与cangls日日夜夜的对话。cangls是啥？别问我，问就是不知道，只可意会不可言传。</p>
<h3 id="一、学习方法的探讨"><a href="#一、学习方法的探讨" class="headerlink" title="一、学习方法的探讨"></a>一、学习方法的探讨</h3><p>在这个只有cangls和小白两人的小房间中，展开了一次关于学习方法的讨论。</p>
<p><strong>小白</strong>：cangls啊，我想请教一个问题，您是如何记住那么多linux命令的。</p>
<p><strong>cangls</strong>：我啊，别人都看我的小电影，我也不知道啊！可能是举的例子多了，就记住了一些呗。</p>
<p><strong>小白</strong>：是这样啊！那能具体说说吗，我很感兴趣。</p>
<p><strong>cangls</strong>：好啊，那咱就互相探讨探讨。</p>
<p>这这这，啥情况？我怀疑你两不仅在开车，而且还搞颜色，还超速了。好了，玩归玩闹归闹，言归正传。</p>
<p><strong>小白</strong>：我想查看一下以前放的学习资料(小电影)</p>
<p><strong>cangls</strong>：使用ls命令即可查看目录和文件<strong>。</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 不带参数</span></span><br><span class="line">$ <span class="built_in">ls</span></span><br><span class="line"><span class="comment"># -a参数，查询所有，包含带.隐藏的</span></span><br><span class="line">$ <span class="built_in">ls</span> -a</span><br><span class="line"><span class="comment"># -l参数，长格式显示：显示所属组、所有者，修改时间以及文件名</span></span><br><span class="line">$ <span class="built_in">ls</span> -l</span><br></pre></td></tr></table></figure>

<p><strong>小白</strong>：我想给文件夹改个名字，羞羞。</p>
<p><strong>cangls</strong>：好办，使用mv命令就能处理。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">mv</span> cangls  bols</span><br></pre></td></tr></table></figure>

<p><strong>小白</strong>：那我想移动到另一个文件夹呢？</p>
<p><strong>cangls</strong>：同样可以使用mv命令，但要接路径哟！</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">mv</span> /opt/cangls  /home/cangls/av</span><br></pre></td></tr></table></figure>

<p><strong>小白</strong>：cangls呀，我目前存的文件过多，想集中分类处理。</p>
<p><strong>cangls</strong>：你是想，将多个文件存放到同一个目录吧。mkdir命令新建文件夹可以满足你，记得用上面的mv命令转移学习资料。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">mkdir</span>  /home/cangls/av</span><br></pre></td></tr></table></figure>

<p>此时的小白看了看时间，已经记不起这是多少次来请教cangls了。cangls教了小白一个很鸡肋的但很实用的命令。</p>
<p><strong>cangls</strong>：小白啊，知道今天是今年的第多少天吗？</p>
<p><strong>小白</strong>：我不记得了，看看手机就知道了。</p>
<p><strong>cangls</strong>：不用那么麻烦，用linux自带的命令cal即可查看。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ cal -jy</span><br></pre></td></tr></table></figure>

<p><strong>cangls此时看小白兴趣不减反增，于是介绍了帮助命令help和man来方便小白自学。</strong></p>
<p>上面的对话形式，是不是很有趣。当你心烦意乱的时候，不妨静下心来试试。找一个自己感兴趣的方向，去验证这些命令。如果你感兴趣的话，我之前写的部分文章也许会对你有一定的帮助。</p>
<p>cangls和小白的对话并没有结束，在这个只有两人的小房间中，到底发生了啥，请接着看。</p>
<h2 id="02-第二夜"><a href="#02-第二夜" class="headerlink" title="02 第二夜"></a>02 第二夜</h2><p>第一夜对学习方法进行了探讨，如何一步步提升自己学习的兴趣。第二夜cangls与小白继续展开关于linux基本命令的讨论。</p>
<p><strong>cangls</strong>：小白啊，你来了，看来还是有不少疑问吧！</p>
<p><strong>小白</strong>：是的，虽然上次你说了一些关于linux的帮助命令，我还是有些摸不着头脑。</p>
<p><strong>cangls</strong>：没关系，下面我给你带来了详细的帮助命令的讲解，学习方法很重要哟！</p>
<p>小白此时拿出了自己的小本本，开始记录了起来…</p>
<h3 id="二、基本命令的探讨"><a href="#二、基本命令的探讨" class="headerlink" title="二、基本命令的探讨"></a>二、基本命令的探讨</h3><p><strong>注意</strong>：#符号表示root用户登录，$符号表示普通用户登录。</p>
<h4 id="1、帮助命令（重点）"><a href="#1、帮助命令（重点）" class="headerlink" title="1、帮助命令（重点）"></a>1、帮助命令（重点）</h4><p>这种方法是其中一种手段，将其输出到某个文件，然后总结起来。再<strong>通过scp命令传到本地记录到小本本上</strong>。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@cnwangk ~]<span class="comment"># ls --help &gt; helpcmd.txt</span></span><br><span class="line">[root@cnwangk ~]<span class="comment"># man ls &gt;&gt; helpcmd.txt</span></span><br><span class="line"><span class="comment">#借助本地的终端管理工具，使用scp命令取到Windows本地桌面，即从远程传回本地</span></span><br><span class="line">$ scp root@192.168.245.131:/root/helpcmd.txt ~/Desktop/</span><br><span class="line">root@192.168.245.131<span class="string">&#x27;s password:</span></span><br><span class="line"><span class="string">helpcmd.txt                                                                                              100%   21KB   3.8MB/s   00:00</span></span><br></pre></td></tr></table></figure>

<p><strong>注意</strong>：&gt;符号是重定向输入会覆盖原始文件的内容，&gt;&gt;符号也是重定向输入到指定文件，但是是追加进去。</p>
<h5 id="1-1、help命令"><a href="#1-1、help命令" class="headerlink" title="1.1、help命令"></a>1.1、help命令</h5><p>如下所示，直接输入help命令就会输出很多提示，或者在使用的命令后面加上参数<code>--help</code>进行操作。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">help</span></span><br><span class="line">$ <span class="built_in">ls</span> --<span class="built_in">help</span></span><br></pre></td></tr></table></figure>

<p>上面的第一条命令代表着直接输入help命令，也会反馈一些帮助文档出来。第二种方式，则是以具体的命令<code>ls</code>使用<code>--help</code>帮助命令获取指定命令的帮助文档。</p>
<h5 id="1-2、man命令"><a href="#1-2、man命令" class="headerlink" title="1.2、man命令"></a>1.2、man命令</h5><h6 id="1-2-1、man的级别作用"><a href="#1-2-1、man的级别作用" class="headerlink" title="1.2.1、man的级别作用"></a>1.2.1、man的级别作用</h6><table>
<thead>
<tr>
<th>参数</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>查看命令的帮助</td>
</tr>
<tr>
<td>2</td>
<td>查看可被内核调用的函数的帮助</td>
</tr>
<tr>
<td>3</td>
<td>查看函数和函数库的帮助</td>
</tr>
<tr>
<td>4</td>
<td>查看特殊件的帮助（主要是&#x2F;dev目录下的文件）</td>
</tr>
<tr>
<td>5</td>
<td>查看配置文件的帮助</td>
</tr>
<tr>
<td>6</td>
<td>查看游戏的帮助</td>
</tr>
<tr>
<td>7</td>
<td>查看其它杂项的帮助</td>
</tr>
<tr>
<td>8</td>
<td>查看系统管理员可用命令的帮助</td>
</tr>
<tr>
<td>9</td>
<td>查看和内核相关文件的帮助</td>
</tr>
</tbody></table>
<p>例如：<strong>查看passwd的配置文件帮助、查看null的特殊件的帮助、查看ifconfig系统管理员可用命令的帮助</strong>。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ man 5 passwd</span><br><span class="line">$ man 4 null</span><br><span class="line">$ man 8 ifconfig </span><br></pre></td></tr></table></figure>

<p><code>man</code> 命令，<strong>获取指定命令的帮助</strong>，展示ls命令全部内容帮助手册。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ man <span class="built_in">ls</span></span><br></pre></td></tr></table></figure>

<p>查看命令拥有哪个级别的帮助,<code>man -f</code> 命令相当于<code>whatis</code>命令。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ man -f</span><br><span class="line">[root@cnwangk ~]<span class="comment"># man -f</span></span><br><span class="line">whatis 什么？</span><br><span class="line">$ whatis</span><br></pre></td></tr></table></figure>

<p>查看命令相关的所有帮助。<code>man -k</code> 命令，相当于<code>apropos</code> 命令。例如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ man -k</span><br><span class="line">$ apropos</span><br><span class="line"><span class="comment">#查看passwd的帮助命令</span></span><br><span class="line">$ apropos passwd</span><br></pre></td></tr></table></figure>

<h6 id="1-2-2、man命令的详细展示"><a href="#1-2-2、man命令的详细展示" class="headerlink" title="1.2.2、man命令的详细展示"></a>1.2.2、man命令的详细展示</h6><p>直接在终端输入man命令，会提示您需要什么手册页？这里以查看ls命令的帮助手册为例子进行讲解示例说明，列举了部分示例。</p>
<p><strong>tips</strong>：输入q直接退出帮助手册。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@cnwangk ~]<span class="comment"># man</span></span><br><span class="line">您需要什么手册页？ </span><br><span class="line"><span class="comment">#进入ls命令的帮助文档</span></span><br><span class="line">$ man <span class="built_in">ls</span> </span><br><span class="line">LS(1)                              General Commands Manual                                                   LS(1)</span><br><span class="line">NAME</span><br><span class="line">       <span class="built_in">ls</span>, <span class="built_in">dir</span>, <span class="built_in">vdir</span> - 列目录内容</span><br><span class="line">提要</span><br><span class="line">       <span class="built_in">ls</span> [选项] [文件名...]</span><br><span class="line">       POSIX 标准选项: [-CFRacdilqrtu1]</span><br><span class="line">GNU 选项 (短格式):</span><br><span class="line">       [-1abcdfgiklmnopqrstuxABCDFGLNQRSUX] [-w cols] [-T cols] [-I pattern] [--full-time] [--format=&#123;long,verbose,commas,across,verti‐</span><br><span class="line">       cal,single-column&#125;] [--<span class="built_in">sort</span>=&#123;none,time,size,extension&#125;] [--time=&#123;atime,access,use,ctime,status&#125;]  [--color[=&#123;none,auto,always&#125;]]</span><br><span class="line">       [--<span class="built_in">help</span>] [--version] [--]</span><br><span class="line">描述（ DESCRIPTION ）</span><br><span class="line">       程序<span class="built_in">ls</span>先列出非目录的文件项，然后是每一个目录中的“可显示”文件。如果  没有选项之外的参数【译注：即文件名部分为空】出现，缺省为 <span class="string">&quot;.&quot;</span>（当前目录）。 选项“ -d ”使得目录与非目录项同样对待。除非“ -a ” 选项出现，文 件名以“.”开始的文件不属“可显示”文件。</span><br><span class="line">       以当前目录为准，每一组文件（包括非目录文件项，以及每一内含文件的目录）分别按文件名比较顺序排序。如果“-l”选项存在，每组文件前显示一摘要行: 给出该组文件长度之和（以 512 字节为单位）。</span><br><span class="line">       输出是到标准输出（stdout）。除非以“-C”选项要求按多列输出，输出将是一行一个。然而，输出到终端时，单列输出或多列输出是不确定的。可以分别 用选项“ -1 ” 或“ -C ”来强制按单列或多列输出。</span><br><span class="line">       -C     多列输出，纵向排序。</span><br><span class="line">       -F     每个目录名加“ / ”后缀，每个 FIFO 名加“ | ”后缀， 每个可运行名加“ * ”后缀。</span><br><span class="line">       -R     递归列出遇到的子目录。</span><br><span class="line">       -a     列出所有文件，包括以 <span class="string">&quot;.&quot;</span> 开头的隐含文件。</span><br></pre></td></tr></table></figure>

<p>以上就是<code>man</code>帮助命令的讲解，相信你会爱上linux中的帮助命令的。这回该明白了，linux大神是如何记住那么多命令的吧！</p>
<h4 id="2、常见目录作用的探讨"><a href="#2、常见目录作用的探讨" class="headerlink" title="2、常见目录作用的探讨"></a>2、常见目录作用的探讨</h4><table>
<thead>
<tr>
<th>选项</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td><strong>&#x2F;</strong></td>
<td><strong>根目录</strong></td>
</tr>
<tr>
<td>&#x2F;<code>bin</code></td>
<td>命令保存目录（普通用户就可以读取的命令）</td>
</tr>
<tr>
<td>&#x2F;boot</td>
<td>启动目录，启动相关文件</td>
</tr>
<tr>
<td>&#x2F;<code>dev</code></td>
<td>设备文件保存目录</td>
</tr>
<tr>
<td><strong>&#x2F;etc</strong></td>
<td><strong>配置文件保存目录</strong></td>
</tr>
<tr>
<td><strong>&#x2F;home</strong></td>
<td><strong>普通用户的家目录</strong></td>
</tr>
<tr>
<td>&#x2F;lib</td>
<td>系统库保存目录</td>
</tr>
<tr>
<td>&#x2F;mnt</td>
<td>系统挂载目录</td>
</tr>
<tr>
<td>&#x2F;media</td>
<td>挂载目录</td>
</tr>
<tr>
<td><strong>&#x2F;<code>root</code></strong></td>
<td><strong>超级用户的家目录</strong></td>
</tr>
<tr>
<td>&#x2F;tmp</td>
<td>临时目录</td>
</tr>
<tr>
<td>&#x2F;<code>sbin</code></td>
<td>命令保存目录（超级用户才能使用的目录）</td>
</tr>
<tr>
<td>&#x2F;proc</td>
<td>直接写入内存</td>
</tr>
<tr>
<td>&#x2F;sys</td>
<td></td>
</tr>
<tr>
<td><strong>&#x2F;usr</strong></td>
<td><strong>系统软件资源目录</strong></td>
</tr>
<tr>
<td>&#x2F;usr&#x2F;bin</td>
<td>系统命令（普通用户）</td>
</tr>
<tr>
<td>&#x2F;usr&#x2F;sbin</td>
<td>系统命令（超级用户）</td>
</tr>
<tr>
<td>&#x2F;<code>var</code></td>
<td>系统相关文档内容</td>
</tr>
</tbody></table>
<h4 id="3、最常用的命令总结"><a href="#3、最常用的命令总结" class="headerlink" title="3、最常用的命令总结"></a>3、最常用的命令总结</h4><h5 id="3-1、学习方法小结"><a href="#3-1、学习方法小结" class="headerlink" title="3.1、学习方法小结"></a>3.1、学习方法小结</h5><p>最常用的命令往往也是最基本的命令，这里也同样以增删改查（CURD）进行讲解。如果要人为的细分，这里给出一种学习的思路，可以按照如思维导图所示：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">graph LR</span><br><span class="line">Linux命令分类 --&gt; linux服务管理</span><br><span class="line">Linux命令分类 --&gt; linux软件安装管理</span><br><span class="line">Linux命令分类 --&gt; linux网络管理</span><br><span class="line">Linux命令分类 --&gt; linux系统管理</span><br><span class="line">Linux命令分类 --&gt; linux系统权限</span><br></pre></td></tr></table></figure>

<p>当然也可以按照如下方式去总结：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">graph TD</span><br><span class="line">Linux命令分类 --&gt; 文件管理</span><br><span class="line">Linux命令分类 --&gt; 文档编辑</span><br><span class="line">Linux命令分类 --&gt; 文件传输</span><br><span class="line">Linux命令分类 --&gt; 磁盘管理</span><br><span class="line">Linux命令分类 --&gt; 磁盘维护</span><br><span class="line">Linux命令分类 --&gt; 网络通讯</span><br><span class="line">Linux命令分类 --&gt; 系统管理</span><br><span class="line">Linux命令分类 --&gt; 系统设置</span><br><span class="line">Linux命令分类 --&gt; 备份压缩</span><br><span class="line">Linux命令分类 --&gt; 备份管理</span><br></pre></td></tr></table></figure>

<p>列举一些常用的命令，先做简单的介绍，在脑海中有个印象。下面继续做详细介绍。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">ls</span> <span class="comment">#查看文件和目录</span></span><br><span class="line">$ ll <span class="comment">#等价于ls -l</span></span><br><span class="line">$ <span class="built_in">cat</span> <span class="comment">#查看具体内容</span></span><br><span class="line">$ <span class="built_in">cd</span> <span class="comment">#切换目录</span></span><br><span class="line">$ <span class="built_in">mkdir</span> <span class="comment"># 新建文件夹</span></span><br><span class="line">$ <span class="built_in">touch</span> <span class="comment"># 新建文件</span></span><br><span class="line">$ <span class="built_in">cp</span> <span class="comment">#复制文件</span></span><br><span class="line">$ <span class="built_in">mv</span> <span class="comment">#移动或者重命名文件</span></span><br><span class="line">$ vim <span class="comment">#linux下的一种编辑文件的手段，文中会详细介绍。</span></span><br><span class="line">$ <span class="built_in">rm</span> <span class="comment">#删除文件</span></span><br><span class="line">$ <span class="built_in">chmod</span> <span class="comment">#赋予权限</span></span><br><span class="line">$ <span class="built_in">chown</span> <span class="comment">#改变文件所有者</span></span><br></pre></td></tr></table></figure>

<h5 id="3-2、命令详细介绍"><a href="#3-2、命令详细介绍" class="headerlink" title="3.2、命令详细介绍"></a>3.2、命令详细介绍</h5><p><strong>ls命令</strong>，查看目录以及文件命令，下面不会全部展示出来，只<strong>展示一部分内容</strong>。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#不带任何参数</span></span><br><span class="line">[root@cnwangk ~]<span class="comment"># ls</span></span><br><span class="line">anaconda-ks.cfg  av  cangls.av  history.txt  scp_test</span><br><span class="line"><span class="comment">#加上参数-l，使用较长格式列出信息</span></span><br><span class="line">[root@cnwangk ~]<span class="comment"># ls -l</span></span><br><span class="line">drwxr-xr-x  2 root root    23 1月   4 20:21 av</span><br><span class="line">-rw-r--r--  1 root root    10 1月   4 20:16 cangls.av</span><br><span class="line"><span class="comment"># -a参数，不隐藏任何以. 开始的项目</span></span><br><span class="line">[root@cnwangk ~]<span class="comment"># ls -a</span></span><br><span class="line">.  .bash_history  .bash_profile  .cache  .config ..  av  .bash_logout   .bashrc   cangls.av  .ssh  .viminfo</span><br></pre></td></tr></table></figure>

<p><strong>ll命令</strong>，是ls -l的缩略形式，相当于起了别名。以长格式列出信息，包含权限、文件所有者、日期、文件名。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ll</span><br><span class="line">drwxr-xr-x  2 root root    23 1月   4 20:21 av</span><br><span class="line">-rw-r--r--  1 root root    10 1月   4 20:16 cangls.av</span><br><span class="line">-rwxr-xr-x  1 root root    78 1月  19 21:23 hello.sh</span><br></pre></td></tr></table></figure>

<p><strong>cat命令</strong>，查看文件的内容，新建了一个hello.sh脚本作为演示，展示脚本的内容。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@cnwangk ~]<span class="comment"># cat hello.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;hello cangls&quot;</span></span><br><span class="line"><span class="built_in">echo</span> hello linux</span><br><span class="line"><span class="built_in">echo</span> create btrfs filesystem</span><br></pre></td></tr></table></figure>

<p><strong>cd命令</strong>，这个就不用做过多介绍，大家都很熟悉这个命令了。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#切换到opt目录下</span></span><br><span class="line">$ <span class="built_in">cd</span> /opt</span><br><span class="line"><span class="comment">#返回上一层</span></span><br><span class="line">$ <span class="built_in">cd</span> ..</span><br><span class="line"><span class="comment">#进入当前用户家目录</span></span><br><span class="line">$ <span class="built_in">cd</span> ~</span><br></pre></td></tr></table></figure>

<p><strong>mkdir命令</strong>，新建目录，新建一个cangls的合集目录。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@cnwangk ~]<span class="comment"># mkdir canglsList</span></span><br><span class="line">[root@cnwangk ~]<span class="comment"># ls</span></span><br><span class="line">anaconda-ks.cfg  cangls.av  canglsList  hello.sh </span><br></pre></td></tr></table></figure>

<p><strong>touch命令</strong>，新建一个cangls.avi文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">touch</span> cangls.avi</span><br></pre></td></tr></table></figure>

<p><strong>cp命令</strong>，复制命令，可以是单个文件也可以是目录。将cangls.avi文件复制到新建的canglsList目录中。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@cnwangk ~]<span class="comment"># cp cangls.avi /root/canglsList/</span></span><br><span class="line">[root@cnwangk ~]<span class="comment"># ls /root/canglsList/ #查看复制后cangls文件集合目录</span></span><br><span class="line">cangls.avi</span><br></pre></td></tr></table></figure>

<p><strong>mv命令</strong>，移动或者重命名。当文件路径相同时，我们就会修改重命名；不同路径时，则为剪切。我将cangls.avi文件重命名为acngls.mp4。然后将cangls.mp4文件移动到canglsList目录下。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@cnwangk ~]<span class="comment"># mv cangls.avi cangls.mp4</span></span><br><span class="line">[root@cnwangk ~]<span class="comment"># ls</span></span><br><span class="line">anaconda-ks.cfg  av  cangls.av  canglsList  cangls.mp4  hello.sh</span><br><span class="line">[root@cnwangk ~]<span class="comment"># mv cangls.mp4 /root/canglsList/</span></span><br><span class="line">[root@cnwangk ~]<span class="comment"># ls</span></span><br><span class="line">anaconda-ks.cfg  av  cangls.av  canglsList  hello.sh  history.txt  scp_test</span><br><span class="line">[root@cnwangk ~]<span class="comment"># ls /root/canglsList/</span></span><br><span class="line">cangls.avi  cangls.mp4</span><br></pre></td></tr></table></figure>

<p>最终查看在&#x2F;root&#x2F;目录下cangls.mp4部件了，此时已经被我移动到canglsList集合目录中了。</p>
<p><strong>vim命令</strong>，这里做简单演示，下面会做详细的说明。输入hello cangls，使用cat展示内容。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@cnwangk ~]<span class="comment"># vim /root/canglsList/cangls.avi</span></span><br><span class="line">[root@cnwangk ~]<span class="comment"># cat /root/canglsList/cangls.avi</span></span><br><span class="line">hello cangls</span><br></pre></td></tr></table></figure>

<p><strong>rm命令</strong>，删除命令。演示，删除cangls.av文件。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@cnwangk ~]<span class="comment"># ls #查看我有cangls.av这个文件</span></span><br><span class="line">anaconda-ks.cfg  av  cangls.av  canglsList  hello.sh</span><br><span class="line">[root@cnwangk ~]<span class="comment"># rm cangls.av #删除，需要输入确认</span></span><br><span class="line"><span class="built_in">rm</span>：是否删除普通文件 <span class="string">&quot;cangls.av&quot;</span>？y</span><br><span class="line">[root@cnwangk ~]<span class="comment"># rm -rf cangls.av  #强制删除，并递归删除，不需要确认</span></span><br><span class="line">[root@cnwangk ~]<span class="comment"># ls</span></span><br><span class="line">anaconda-ks.cfg  av  canglsList  hello.sh</span><br></pre></td></tr></table></figure>

<p><strong>chmod命令</strong>，简单的介绍赋予权限命令，一般755和644比较常用的。给cangls.sh输入点内容，然后赋予权限。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@cnwangk ~]<span class="comment"># echo echo &quot;hello cangls&quot; &gt; cangls.sh </span></span><br><span class="line">[root@cnwangk ~]<span class="comment"># cat cangls.av </span></span><br><span class="line">hello cangls</span><br><span class="line">[root@cnwangk ~]<span class="comment"># ll #查看cangls.sh脚本权限</span></span><br><span class="line">-rw-r--r--  1 root root    13 1月  19 22:50 cangls.sh</span><br><span class="line">[root@cnwangk ~]<span class="comment"># chmod 755 cangls.sh </span></span><br><span class="line">[root@cnwangk ~]<span class="comment"># ll #对比权限变为了rwx-rx-rx，对应数字就是755</span></span><br><span class="line">-rwxr-xr-x  1 root root    13 1月  19 22:50 cangls.sh</span><br><span class="line"><span class="comment">#执行脚本cangls.sh</span></span><br><span class="line">[root@cnwangk ~]<span class="comment"># ./cangls.sh </span></span><br><span class="line">hello cangls</span><br></pre></td></tr></table></figure>

<p><strong>chown命令</strong>，改变文件所有者，将cangls.sh文件所以者从root改为test用户。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@cnwangk ~]<span class="comment"># chown test cangls.sh </span></span><br><span class="line">[root@cnwangk ~]<span class="comment"># ll</span></span><br><span class="line">-rwxr-xr-x  1 <span class="built_in">test</span> root    18 1月  19 22:55 cangls.sh</span><br></pre></td></tr></table></figure>

<p>个人根据多年经验总结，认为工作中最最最常用的一些命令，以上就列举这么多了。还有其它常用命令，请接着往下阅读。</p>
<h4 id="4、其它常用命令"><a href="#4、其它常用命令" class="headerlink" title="4、其它常用命令"></a>4、其它常用命令</h4><h5 id="4-1、-挂载命令格式"><a href="#4-1、-挂载命令格式" class="headerlink" title="4.1、 挂载命令格式"></a>4.1、 挂载命令格式</h5><p><code>mount</code> [-t 文件系统] [-o 特殊选项] 设备文件名 挂载点</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>-t</td>
<td>文件系统，加入系统文件类型来指定挂载的类型，可以是ext3、ext4、iso9660、<strong>xfs</strong>、<strong>btrfs</strong>等文件系统</td>
</tr>
<tr>
<td>-o</td>
<td>特殊选项，可以指定挂载的额外选项</td>
</tr>
</tbody></table>
<h5 id="4-2、查询与挂载"><a href="#4-2、查询与挂载" class="headerlink" title="4.2、查询与挂载"></a>4.2、查询与挂载</h5><p>查询系统中已经挂载的设备，<code>mount</code>命令。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#查询系统中已经挂载的设备</span></span><br><span class="line">$ mount</span><br><span class="line"><span class="comment">#列举我自己测试环境下已经挂载的部分设备，Redhat7系列</span></span><br><span class="line"><span class="comment">#我测试使用是btrfs文件系统</span></span><br><span class="line">/dev/sdb2 on /data <span class="built_in">type</span> btrfs (rw,relatime,space_cache,subvolid=5,subvol=/)</span><br><span class="line"><span class="comment">#系统默认挂载所使用文件系统格式xfs</span></span><br><span class="line">/dev/sda2 on /home <span class="built_in">type</span> xfs (rw,relatime,attr2,inode64,noquota)</span><br><span class="line">/dev/sda1 on /boot <span class="built_in">type</span> xfs (rw,relatime,attr2,inode64,noquota)</span><br></pre></td></tr></table></figure>

<p>上面列举我自己测试环境下已经挂载的部分设备，Redhat7系列。顺带一提，Redhat7开始推荐使用xfs文件系统，我所演示的也包含了<code>xfs</code>文件系统挂载的，同样也有上面介绍过的<code>btrfs</code>文件系统。</p>
<p>部分参数说明，如下表格所示：</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>mount  -a</td>
<td>依据配置文件<code>/etc/fstb</code>的内容，自动挂载</td>
</tr>
<tr>
<td>atime&#x2F;noatime</td>
<td>更新访问时间&#x2F;不更新访问时间。访问分区文件时，是否更新文件的访问时间，默认为更新。</td>
</tr>
<tr>
<td>async&#x2F;sync</td>
<td>异步&#x2F;同步，默认为异步</td>
</tr>
<tr>
<td>auto&#x2F;noauto</td>
<td>自动&#x2F;手动，执行mount -a命令时，是否会自动安装&#x2F;etc&#x2F;fstb文件内容挂载，默认自动。</td>
</tr>
<tr>
<td>defaults</td>
<td>定义默认值，相当于<code>rw</code>，<code>suid</code>，<code>dev</code>，<code>exec</code>，<code>auto</code>，<code>nouser</code>，<code>async</code>这七个选项。</td>
</tr>
<tr>
<td>exec&#x2F;noexec</td>
<td>执行&#x2F;不执行，设定是否允许在文件系统中执行可执行文件，默认exec允许。</td>
</tr>
<tr>
<td>remount</td>
<td>重新挂载已挂载的文件系统，一般用于指定修改特殊权限。</td>
</tr>
<tr>
<td>rw&#x2F;ro</td>
<td>读写&#x2F;只读，文件系统挂载时，是否具有读写权限，<strong>默认</strong>rw。</td>
</tr>
<tr>
<td>suid&#x2F;nosuid</td>
<td>具有&#x2F;不具有suid权限，设定文件系统是否具有suid和sgid的权限，<strong>默认具有</strong>。</td>
</tr>
<tr>
<td>user&#x2F;nouser</td>
<td>允许&#x2F;不允许普通用户挂载，设定文件系统是否允许普通用户挂载，默认不允许，只有<code>root</code>可以挂载分区。</td>
</tr>
<tr>
<td>usrquota</td>
<td>写入代表文件系统支持用户磁盘配额，默认不支持。</td>
</tr>
<tr>
<td>grpquota</td>
<td>写入代表文件系统支持组磁盘配额，默认不支持。</td>
</tr>
</tbody></table>
<p><strong>关于磁盘挂载，如果感兴趣的话</strong>，可以在站内搜索：<a href="https://blog.cnwangk.top/2021/09/09/Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%8C%82%E8%BD%BD%E7%A1%AC%E7%9B%98%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B">https://blog.cnwangk.top/2021/09/09/Linux服务器挂载硬盘详细教程</a></p>
<p><strong>4.2.1、挂载光盘</strong></p>
<p>首先建立挂载点，命令如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">mkdir</span> /mnt/cdrom/</span><br></pre></td></tr></table></figure>

<p>挂载光盘，这里说明下：只是习惯在mnt下建立，media下建立也行。</p>
<p>简单介绍：&#x2F;dev&#x2F;sr0是要挂载的文件，&#x2F;mnt&#x2F;cdrom是挂载存储的磁盘路径</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ mount -t iso9660 /dev/cdrom /mnt/cdrom/</span><br><span class="line">$ mount /dev/sr0  /mnt/cdrom/</span><br></pre></td></tr></table></figure>

<p>卸载命令，设备文件名或者挂载点，比如卸载新增磁盘挂载的sdb</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ umount /dev/sdb </span><br></pre></td></tr></table></figure>

<p><strong>4.2.2、挂载U盘</strong></p>
<p>查看U盘设备文件名，<code>fdisk -l</code>查看磁盘列表</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ fdisk -l </span><br><span class="line">$ mount -t vfat /dev/sdb1 /mnt/usb/</span><br></pre></td></tr></table></figure>


<h5 id="4-3、用户登录查看命令"><a href="#4-3、用户登录查看命令" class="headerlink" title="4.3、用户登录查看命令"></a>4.3、用户登录查看命令</h5><p>查看用户登录信息</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ w</span><br><span class="line">[root@cnwangk ~]<span class="comment"># w</span></span><br><span class="line"> 21:31:12 up  1:39,  1 user,  load average: 0.00, 0.04, 0.05</span><br><span class="line">USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT</span><br><span class="line">root     pts/0    192.168.245.1    19:52    0.00s  0.28s  0.02s w</span><br></pre></td></tr></table></figure>

<p>如上所示，输入w命令查看到我的登录信息。只有1个用户，我用ssh登录的，本机虚拟机中并没有登录。命令输出如下所示：</p>
<p><strong>4.3.1、命令输出</strong></p>
<p>参数说明，作用如下表格所示：</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>USER</td>
<td>登录的用户名</td>
</tr>
<tr>
<td>TTY</td>
<td>登录终端</td>
</tr>
<tr>
<td>FROM</td>
<td>从哪个IP地址登录</td>
</tr>
<tr>
<td>LOGIN@</td>
<td>登录时间</td>
</tr>
<tr>
<td>DILE</td>
<td>用户闲置时间</td>
</tr>
<tr>
<td>JCPU</td>
<td>与该终端连接的所有进程占用的时间。这个时间里并不包括过去的后台作业时间，但包括当前正在运行的后台作业占用时间</td>
</tr>
<tr>
<td>PCPU</td>
<td>当前进程所占用时间</td>
</tr>
<tr>
<td>WHAT</td>
<td>当前正在运行的命令</td>
</tr>
<tr>
<td>w</td>
<td>查询登录用户，显示系统时间和运行时间，用户个数以及平均负载。</td>
</tr>
</tbody></table>
<p><strong>4.3.2、查看登录用户信息</strong></p>
<p>命令输出：用户名，登录终端，登录时间（登录来源IP地址）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#查看用户信息</span></span><br><span class="line">$ <span class="built_in">who</span></span><br><span class="line">[root@cnwangk ~]<span class="comment"># who  #查看当前用户信息</span></span><br><span class="line">root     pts/0        2022-01-19 19:52 (192.168.245.1)</span><br><span class="line"><span class="comment">#查看当前用户</span></span><br><span class="line">$ <span class="built_in">whoami</span> <span class="comment">#查看当前用户身份是root</span></span><br><span class="line">[root@cnwangk ~]<span class="comment"># whoami </span></span><br><span class="line">root</span><br></pre></td></tr></table></figure>

<p>查看到当前用户为root，登录终端pts&#x2F;0，登录时键与IP：2022-01-19 19:52 (192.168.245.1)，<strong>虚拟机搭建的环境</strong>。</p>
<p><strong>查询当前登录和过去登录的用户信息</strong></p>
<p>last命令默认读取<code>/var/log/wtmp</code>文件数据 。命令输出：用户名，登录终端，登录IP，登录时间，退出时间（在线时间）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ last</span><br><span class="line">root     tty1                          Sun Jan  5 21:47 - 21:50  (00:02)    </span><br><span class="line">reboot   system boot  3.10.0-514.el7.x Sun Jan  5 21:44 - 21:59 (7+00:15)  </span><br></pre></td></tr></table></figure>

<p>可以看到记录的我最久远的一次登录信息，时间确实有点久了，基本上很晚才使用的。</p>
<p><strong>查看所有用户最后一次登录时间</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#lastlog命令默认读取/var/log/lastlog文件内容</span></span><br><span class="line"><span class="comment">#命令输出：用户名，登录终端，登录IP，最后一次登录时间</span></span><br><span class="line">$ lastlog</span><br><span class="line">[root@cnwangk ~]<span class="comment"># lastlog </span></span><br><span class="line">用户名           端口     来自               最后登陆时间</span><br><span class="line">root            pts/0   192.168.245.1      三 1月 19 22:52:46 +0800 2022</span><br><span class="line">bin                                        **从未登录过**</span><br></pre></td></tr></table></figure>

<p>上面的中文显示，我在安装的时候选择了简体中文版，<strong>对于初学者来说简直太友好了</strong>。</p>
<p><strong>查看网络状态</strong> ，一般比较关注的是<code>ESTABLISHED</code>状态</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ netstat -an | grep ESTABLISHED</span><br><span class="line">[root@cnwangk ~]<span class="comment"># netstat -an | grep ESTABLISHED</span></span><br><span class="line">tcp        0      0 192.168.245.131:22      192.168.245.1:3579      ESTABLISHED</span><br></pre></td></tr></table></figure>



<h5 id="4-4、解压缩命令"><a href="#4-4、解压缩命令" class="headerlink" title="4.4、解压缩命令"></a>4.4、解压缩命令</h5><p>只介绍一些常用的，比如压缩命令zip、gzip；解打包命令tar。</p>
<h6 id="4-4-1、压缩命令"><a href="#4-4-1、压缩命令" class="headerlink" title="4.4.1、压缩命令"></a>4.4.1、压缩命令</h6><p>例如：zip、gzip。将canglsAVList压缩成canglsAVList.zip格式，将bolsAVList压缩成bolsAVList.gz格式。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">zip -r canglsAVList &gt; cangls.zip</span><br><span class="line">gzip -c bolsAVList &gt; bolsAVList.gz</span><br></pre></td></tr></table></figure>

<p>或者使用下面这种方式压缩test文件：<br>示例： zip -r 压缩文件名 原始文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">zip -r test.zip <span class="built_in">test</span> </span><br></pre></td></tr></table></figure>


<h6 id="4-4-2、解打包命令tar"><a href="#4-4-2、解打包命令tar" class="headerlink" title="4.4.2、解打包命令tar"></a>4.4.2、解打包命令tar</h6><p>解压一个<code>redis</code>的源码包</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ tar -zxvf redis-6.0.8.tar.gz </span><br></pre></td></tr></table></figure>

<p>打包命令tar -cvf，将redis-6.0.8-bak打包成tar包</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ tar -cvf redis-6.0.8-bak &gt; redis-6.0.8-bak.tar</span><br></pre></td></tr></table></figure>

<p>然后再将redis-6.0.8-bak.tar压缩成.gz格式</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ gzip -c redis-6.0.8-bak.tar &gt; redis-6.0.8-bak.tar.gz</span><br></pre></td></tr></table></figure>

<p>或者使用下面这种方式压缩test文件：<br>示例： tar -cvf 压缩文件名 原始文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar -cvf test.tar <span class="built_in">test</span></span><br><span class="line">gzip -c test.tar.gz test.tar</span><br></pre></td></tr></table></figure>


<h5 id="4-5、搜索命令"><a href="#4-5、搜索命令" class="headerlink" title="4.5、搜索命令"></a>4.5、搜索命令</h5><h6 id="4-5-1、locate命令"><a href="#4-5-1、locate命令" class="headerlink" title="4.5.1、locate命令"></a>4.5.1、locate命令</h6><p><strong>locate命令</strong>后面只能接文件名，例如，咱搜索一下cangls的文件。嚯，还不少啊：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">locate cangls</span><br><span class="line">[root@cnwangk opt]<span class="comment"># locate cangls</span></span><br><span class="line">/root/cangls.av</span><br><span class="line">/root/cangls.sh</span><br><span class="line">/root/canglsList</span><br><span class="line">/root/canglsList/cangls.avi</span><br><span class="line">/root/canglsList/cangls.mp4</span><br></pre></td></tr></table></figure>

<p>locate命令所搜索的后台命令，不是及时更新，这时可以使用<strong>updatedb命令</strong>更新：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ updatedb</span><br></pre></td></tr></table></figure>

<p>locate命令配置文件<code>/etc/updatedb.conf</code>配置文件</p>
<ul>
<li>PRUNE_BIND_MOUNTS：开启搜索限制</li>
<li>PRUNEFS&#x3D;””：不搜索的系统文件</li>
<li>PRUNENAMES&#x3D;””：不搜索的文件类型</li>
<li>PRUNEPAEHS&#x3D;””：不搜索的路径</li>
</ul>
<h6 id="4-5-2、命令搜索命令"><a href="#4-5-2、命令搜索命令" class="headerlink" title="4.5.2、命令搜索命令"></a>4.5.2、命令搜索命令</h6><p>命令搜索命令，比如<strong>wheris、which以及find</strong>命令。</p>
<p><strong>此处，着重讲一下find命令的使用</strong>：</p>
<p><strong>不区分大小写</strong>，搜索cangls.sh脚本</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ find /root -iname cangls.sh </span><br></pre></td></tr></table></figure>

<p>按照所有者搜索</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ find /root -user root</span><br></pre></td></tr></table></figure>

<p>查找10天前修改的文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">find /var/log  -mtime +10</span><br></pre></td></tr></table></figure>

<p>查找<code>/etc</code>目录下大于1M的文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">find /etc -size +1M</span><br></pre></td></tr></table></figure>

<p><strong>查找i节点为26267295的文件</strong>，直呼内行，啥时候新增了个bols的小电影。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@cnwangk ~]<span class="comment"># find . -inum 26267295</span></span><br><span class="line">./bolsList</span><br></pre></td></tr></table></figure>

<p>查找&#x2F;etc&#x2F;目录下大于100KB且小于200KB的文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">find /etc -size +100k -a -size -200k</span><br></pre></td></tr></table></figure>
<ul>
<li>-a相当于and，逻辑与，两个条件都满足</li>
<li>-o相当于or，逻辑或，两个条件满足一个即可</li>
</ul>
<p><strong>查找&#x2F;etc&#x2F;目录下大于100KB且小于200KB的文件，并且显示详细信息</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#-exec/-ok 命令 </span></span><br><span class="line"><span class="comment">#&#123;&#125;\;对搜索结果执行操作</span></span><br><span class="line">find /etc -size +100k -a -size -200k -<span class="built_in">exec</span> <span class="built_in">ls</span> -lh &#123;&#125; \;</span><br></pre></td></tr></table></figure>

<p><strong>grep</strong>字符串搜素命令</p>
<ul>
<li>grep [选项] 字符串 文件名，在文件当中匹配符合的字符串</li>
<li>-i，忽略大小写</li>
<li>-v，排除指定字符串</li>
</ul>
<p><strong>根据文件大小匹配</strong>，anaconda-ks.cfg文件时Redhat系列安装就自带的文件。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ grep <span class="string">&quot;size&quot;</span> anaconda-ks.cfg</span><br><span class="line">part swap --fstype=<span class="string">&quot;swap&quot;</span> --ondisk=sda --size=2000</span><br><span class="line">part /boot --fstype=<span class="string">&quot;xfs&quot;</span> --ondisk=sda --size=200</span><br><span class="line">part / --fstype=<span class="string">&quot;xfs&quot;</span> --ondisk=sda --size=16278</span><br><span class="line">part /home --fstype=<span class="string">&quot;xfs&quot;</span> --ondisk=sda --size=2000</span><br></pre></td></tr></table></figure>

<p><strong>find与grep的区别</strong></p>
<ul>
<li>find命令：在系统当中搜索符合条件的文件名，如需匹配，<strong>使用通配符，通配符是完全匹配</strong>。</li>
<li>grep命令：在文件当中搜索符合条件的字符串，如需匹配，<strong>使用正则表达式进行匹配，正则表达式是包含匹配</strong>。</li>
</ul>
<h4 id="5、关机与重启命令"><a href="#5、关机与重启命令" class="headerlink" title="5、关机与重启命令"></a>5、关机与重启命令</h4><h5 id="5-1、关机命令"><a href="#5-1、关机命令" class="headerlink" title="5.1、关机命令"></a>5.1、关机命令</h5><p>一般而言关机和重启命令都不会赋予权限给普通用户，只有root用户才有权限执行。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ shutdown</span><br><span class="line"><span class="comment"># shutdown -h now #立即关机</span></span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>参数</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>-c</td>
<td>取消前一个关机命令</td>
</tr>
<tr>
<td>-h</td>
<td>关机</td>
</tr>
<tr>
<td>-r</td>
<td>重启</td>
</tr>
</tbody></table>
<p>其它关机命令：halt，poweroff，init 0</p>
<p><strong>注意</strong>：使用服务器时，不要随便去使用关机命令。一旦使用了，会造成不必要的麻烦。</p>
<h5 id="5-2、重启命令"><a href="#5-2、重启命令" class="headerlink" title="5.2、重启命令"></a>5.2、重启命令</h5><p>一般而言关机和重启命令都不会赋予权限给普通用户，只有root用户才有权限执行。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#重启命令1,立即重启，同样可以接指定世界以及间隔多久重启</span></span><br><span class="line">$ shutdown -r now</span><br><span class="line"><span class="comment">#重启命令2,立即重启</span></span><br><span class="line">$ reboot</span><br></pre></td></tr></table></figure>

<p><strong>注意</strong>：使用<code>logout</code>命令登出shell，<strong>养成良好的习惯退出登录</strong></p>
<p>其它重启命令：reboot，init 6</p>
<h2 id="03-第三夜"><a href="#03-第三夜" class="headerlink" title="03 第三夜"></a>03 第三夜</h2><p>第二夜的知识有点多，小白还有点没消化过来。</p>
<p><strong>cangls</strong>：小白，你来啦。我白吗？我大吗？我好看吗？别走了，我这里…</p>
<p><strong>小白</strong>：啥？一脸懵逼…</p>
<p>此时小白的内心真实想法：不要以为我不懂，咱为学习忍了。真的又大又白，天天诱惑我。</p>
<p><strong>cangls</strong>：不逗你玩了，咱回到正题，昨天的知识点有点多，希望下去好好消化。今天会带来linux进阶方面的小技巧。</p>
<p><strong>小白</strong>：点了点头，认真的聆听着。</p>
<h3 id="三、进阶常用"><a href="#三、进阶常用" class="headerlink" title="三、进阶常用"></a>三、进阶常用</h3><h4 id="1、scp命令"><a href="#1、scp命令" class="headerlink" title="1、scp命令"></a>1、scp命令</h4><h5 id="1-1、语法"><a href="#1-1、语法" class="headerlink" title="1.1、语法"></a>1.1、语法</h5><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">usage: scp [-<span class="number">12346</span><span class="type">BCpqrv</span>] [-<span class="type">c</span> <span class="type">cipher</span>] [-<span class="type">F</span> <span class="type">ssh_config</span>] [-<span class="type">i</span> <span class="type">identity_file</span>]</span><br><span class="line">           [-<span class="type">l</span> <span class="type">limit</span>] [-<span class="type">o</span> <span class="type">ssh_option</span>] [-<span class="type">P</span> <span class="type">port</span>] [-<span class="type">S</span> <span class="type">program</span>]</span><br><span class="line">           [[<span class="type">user</span><span class="selector-tag">@</span>]<span class="type">host1</span>:]file1 ... [[<span class="type">user</span><span class="selector-tag">@</span>]<span class="type">host2</span>:]file2</span><br></pre></td></tr></table></figure>
<h5 id="1-2、使用方法"><a href="#1-2、使用方法" class="headerlink" title="1.2、使用方法"></a>1.2、使用方法</h5><p><strong>简单来看</strong>：scp [可选参数] 本地文件 目标目录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">scp /root/av/local_file.av  remote_username@ip:/root/av</span><br></pre></td></tr></table></figure>

<p>scp [可选参数] 本地目录 目标目录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">scp -r /root/av/  remote_username@ip:/root/</span><br></pre></td></tr></table></figure>
<p><strong>命令格式介绍</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#复制文件格式,本地到远程服务器</span></span><br><span class="line">scp local_file remote_username@remote_ip:remote_directory </span><br><span class="line"><span class="comment">#或者 </span></span><br><span class="line">scp local_file remote_username@remote_ip:remote_file </span><br><span class="line"><span class="comment">#或者 </span></span><br><span class="line">scp local_file  remote_ip:remote_directory </span><br><span class="line"><span class="comment">#或者 </span></span><br><span class="line">scp local_file remote_ip:remote_file </span><br></pre></td></tr></table></figure>

<p><strong>复制目录命令格式</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#复制命令格式,本地到远程服务器</span></span><br><span class="line">scp -r local_directory remote_username@remote_ip:remote_directory </span><br><span class="line"><span class="comment">#或者 </span></span><br><span class="line">scp -r local_directory remote_ip:remote_directory </span><br></pre></td></tr></table></figure>

<p>详细操作，请参考的博文：<strong>【SCP命令】安全又快捷的linux小技巧scp命令</strong></p>
<h4 id="2、路由命令"><a href="#2、路由命令" class="headerlink" title="2、路由命令"></a>2、路由命令</h4><p>以下是对一些常用的路由命令（网络配置工具）进行简单的介绍。</p>
<p>2.1、<strong>ifconfig命令</strong>，展示内容如下：</p>
<p><strong>tips</strong>：我们判断网络环境的时候，<strong>dropped</strong>参数值是很重要的，<strong>一般正常状态是0，如果掉包数字则会上升</strong>。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@cnwangk ~]<span class="comment"># ifconfig </span></span><br><span class="line">docker0: flags=4099&lt;UP,BROADCAST,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 172.17.0.1  netmask 255.255.0.0  broadcast 172.17.255.255</span><br><span class="line">        ether 02:42:38:38:ab:fe  txqueuelen 0  (Ethernet)</span><br><span class="line">        RX packets 0  bytes 0 (0.0 B)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 0  bytes 0 (0.0 B)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">ens33: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 192.168.245.131  netmask 255.255.255.0  broadcast 192.168.245.255</span><br><span class="line">        inet6 fe80::b314:8248:917a:d808  prefixlen 64  scopeid 0x20&lt;<span class="built_in">link</span>&gt;</span><br><span class="line">        ether 00:0c:29:47:be:5f  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 14160  bytes 1053042 (1.0 MiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 7652  bytes 713027 (696.3 KiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536</span><br><span class="line">        inet 127.0.0.1  netmask 255.0.0.0</span><br><span class="line">        inet6 ::1  prefixlen 128  scopeid 0x10&lt;host&gt;</span><br><span class="line">        loop  txqueuelen 1  (Local Loopback)</span><br><span class="line">        RX packets 1474  bytes 91198 (89.0 KiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 1474  bytes 91198 (89.0 KiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br></pre></td></tr></table></figure>

<p><strong>ifconfig最常见的作用就是看设置的ip地址以及dns和网关</strong>，其实就是看网卡设置的参数。当你看到docker的时候，没错，我安装了docker环境。</p>
<p>2.2、<strong>ip命令使用</strong>，如下所示：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@cnwangk ~]<span class="comment"># ip addr list</span></span><br><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1</span><br><span class="line">    <span class="built_in">link</span>/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line">    inet 127.0.0.1/8 scope host lo</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 ::1/128 scope host </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">2: ens33: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP group default qlen 1000</span><br><span class="line">    <span class="built_in">link</span>/ether 00:0c:29:47:be:5f brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 192.168.245.131/24 brd 192.168.245.255 scope global noprefixroute ens33</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 fe80::b314:8248:917a:d808/64 scope <span class="built_in">link</span> noprefixroute </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">3: docker0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc noqueue state DOWN group default </span><br><span class="line">    <span class="built_in">link</span>/ether 02:42:38:38:ab:fe brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 172.17.0.1/16 brd 172.17.255.255 scope global docker0</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line"><span class="comment">#ip命令同样可以配合route命令使用       </span></span><br><span class="line">[root@cnwangk ~]<span class="comment"># ip route list </span></span><br><span class="line">default via 192.168.245.2 dev ens33 proto static metric 100 </span><br><span class="line">172.17.0.0/16 dev docker0 proto kernel scope <span class="built_in">link</span> src 172.17.0.1 </span><br><span class="line">192.168.245.0/24 dev ens33 proto kernel scope <span class="built_in">link</span> src 192.168.245.131 metric 100        </span><br></pre></td></tr></table></figure>

<p>ip命令同样可以配合route命令使用，单独使用route命令同样可以起到配置作用。</p>
<p>下图是我之前制作的一个简单的思维导图，本来是要放在防火墙知识里面的，现在同样适用。没有放原图，原图太大了，缩小了一点也同样能看清楚哟！</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/b4cea48c5848e3d28f57958927820323.png"></p>
<h4 id="3、防火墙命令"><a href="#3、防火墙命令" class="headerlink" title="3、防火墙命令"></a>3、防火墙命令</h4><p>这里，我只介绍firewalld命令行模式，关于详细操作说明请参考博文：<strong>【Redhat系列linux防火墙工具】firewalld与iptables防火墙工具的激烈碰撞</strong></p>
<h5 id="1-1、区域选择"><a href="#1-1、区域选择" class="headerlink" title="1.1、区域选择"></a>1.1、区域选择</h5><p>当前操作系统安装完成后，防火墙会设置一个默认区域，将接口加入到默认区域中。用户配置防火墙的第一步是获取默认区域并修改，关于操作如下：</p>
<p>查看当前系统中所有区域</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">firewall<span class="literal">-cmd</span> <span class="literal">--get-zones</span></span><br></pre></td></tr></table></figure>
<p>查看当前默认的区域</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">firewall<span class="literal">-cmd</span> <span class="literal">--get-default-zone</span></span><br></pre></td></tr></table></figure>
<p>查看当前已激活的区域</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">firewall<span class="literal">-cmd</span> <span class="literal">--get-active-zones</span></span><br></pre></td></tr></table></figure>
<p>获取接口ens33所属区域</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">firewall<span class="literal">-cmd</span> <span class="literal">--get-zone-of-interface</span>=ens33</span><br></pre></td></tr></table></figure>
<p>修改接口所属区域</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">firewall<span class="literal">-cmd</span> <span class="literal">--permanent</span> <span class="literal">--zone</span>=internal <span class="literal">--change-interface</span>=ens33</span><br></pre></td></tr></table></figure>

<h5 id="1-2、firewalld服务管理"><a href="#1-2、firewalld服务管理" class="headerlink" title="1.2、firewalld服务管理"></a>1.2、firewalld服务管理</h5><p>重新加载防火墙配置</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">firewall<span class="literal">-cmd</span> <span class="literal">--reload</span></span><br></pre></td></tr></table></figure>

<p>重启防火墙(redhat系列)</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">systemctl restart firewalld.service</span><br></pre></td></tr></table></figure>

<p>临时关闭防火墙</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">systemctl stop firewalld.service</span><br></pre></td></tr></table></figure>
<p>开机启用防火墙</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">systemctl enable firewalld.service</span><br></pre></td></tr></table></figure>
<p>开机禁止防火墙</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">systemctl disable firewalld.service</span><br></pre></td></tr></table></figure>

<p>查看firewalld的运行状态</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">firewall<span class="literal">-cmd</span> <span class="literal">--state</span></span><br></pre></td></tr></table></figure>


<h5 id="1-3、firewalld开放端口"><a href="#1-3、firewalld开放端口" class="headerlink" title="1.3、firewalld开放端口"></a>1.3、firewalld开放端口</h5><p>公共区域（public）设置开放21端口永久生效并写入配置文件（参数：–permanent）</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#参数：--permanent，设置即立刻生效并且写入配置文件</span></span><br><span class="line">firewall<span class="literal">-cmd</span> <span class="literal">--zone</span>=public <span class="literal">--add-port</span>=<span class="number">21</span>/tcp <span class="literal">--permanent</span></span><br></pre></td></tr></table></figure>

<p>查询防火墙端口21是否开放</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">firewall<span class="literal">-cmd</span> <span class="literal">--zone</span>=public <span class="literal">--query-port</span>=<span class="number">21</span>/tcp</span><br></pre></td></tr></table></figure>

<p>移除开放的端口21</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">firewall<span class="literal">-cmd</span> <span class="literal">--zone</span>=public <span class="literal">--remove-port</span>=<span class="number">21</span>/tcp <span class="literal">--permanent</span></span><br></pre></td></tr></table></figure>



<h5 id="1-4、区域规则修改"><a href="#1-4、区域规则修改" class="headerlink" title="1.4、区域规则修改"></a>1.4、区域规则修改</h5><p>查询防火墙规则列表</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">firewall<span class="literal">-cmd</span> <span class="literal">--zone</span>=public <span class="literal">--list-all</span></span><br></pre></td></tr></table></figure>
<p>新增一条区域规则httpd服务</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">firewall<span class="literal">-cmd</span> <span class="literal">--permanent</span> <span class="literal">--zone</span>=internal <span class="literal">--add-service</span>=http</span><br></pre></td></tr></table></figure>
<p>验证规则</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">firewall<span class="literal">-cmd</span>  <span class="literal">--zone</span>=internal <span class="literal">--list-all</span></span><br></pre></td></tr></table></figure>

<h4 id="4、进程相关命令"><a href="#4、进程相关命令" class="headerlink" title="4、进程相关命令"></a>4、进程相关命令</h4><p>进程相关命令主要介绍四个</p>
<ul>
<li>ps -aux | grep [服务名]</li>
<li>ps -ef | grep [服务名]</li>
<li>ps -le | grep [服务名]</li>
<li>top</li>
</ul>
<p>如果没有安装httpd服务，Redhat系列可以使用yum命令进行安装，在Ubuntu系列可以通过<code>apt install</code>。apt 是 Debian 和 Ubuntu 中的 Shell 前端软件包管理器。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ yum -y install httpd</span><br></pre></td></tr></table></figure>

<p>查看进程常用的ps命令，以httpd进程进行演示。这里只介绍工作中比较实用的。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#使用-ef参数查看httpd进程</span></span><br><span class="line">$ ps -ef | grep httpd</span><br><span class="line">[root@cnwangk ~]<span class="comment"># ps -ef | grep httpd</span></span><br><span class="line">root      1329     1  0 13:37 ?        00:00:00 /usr/sbin/httpd -DFOREGROUND</span><br><span class="line">apache    2216  1329  0 13:37 ?        00:00:00 /usr/sbin/httpd -DFOREGROUND</span><br><span class="line">apache    2218  1329  0 13:37 ?        00:00:00 /usr/sbin/httpd -DFOREGROUND</span><br><span class="line">apache    2219  1329  0 13:37 ?        00:00:00 /usr/sbin/httpd -DFOREGROUND</span><br><span class="line">apache    2220  1329  0 13:37 ?        00:00:00 /usr/sbin/httpd -DFOREGROUND</span><br><span class="line">apache    2221  1329  0 13:37 ?        00:00:00 /usr/sbin/httpd -DFOREGROUND</span><br><span class="line">apache    2222  1329  0 13:37 ?        00:00:00 /usr/sbin/httpd -DFOREGROUND</span><br><span class="line">root      2276  2226  0 13:38 pts/0    00:00:00 grep --color=auto httpd</span><br><span class="line"><span class="comment">#使用-aux参数查看httpd进程</span></span><br><span class="line">$ ps -aux | grep httpd</span><br><span class="line">[root@cnwangk ~]<span class="comment"># ps -ef | grep httpd</span></span><br><span class="line">root      1329     1  0 13:37 ?        00:00:00 /usr/sbin/httpd -DFOREGROUND</span><br><span class="line">apache    2216  1329  0 13:37 ?        00:00:00 /usr/sbin/httpd -DFOREGROUND</span><br><span class="line">apache    2218  1329  0 13:37 ?        00:00:00 /usr/sbin/httpd -DFOREGROUND</span><br><span class="line">apache    2219  1329  0 13:37 ?        00:00:00 /usr/sbin/httpd -DFOREGROUND</span><br><span class="line">apache    2220  1329  0 13:37 ?        00:00:00 /usr/sbin/httpd -DFOREGROUND</span><br><span class="line">apache    2221  1329  0 13:37 ?        00:00:00 /usr/sbin/httpd -DFOREGROUND</span><br><span class="line">apache    2222  1329  0 13:37 ?        00:00:00 /usr/sbin/httpd -DFOREGROUND</span><br><span class="line">root      2276  2226  0 13:38 pts/0    00:00:00 grep --color=auto httpd</span><br><span class="line"><span class="comment">#以长格式查询httpd进程</span></span><br><span class="line">$ ps -le | grep httpd</span><br><span class="line">[root@cnwangk ~]<span class="comment"># ps -le | grep httpd</span></span><br><span class="line">4 S     0  1329     1  0  80   0 - 104198 poll_s ?       00:00:00 httpd</span><br><span class="line">5 S    48  2216  1329  0  80   0 - 70677 poll_s ?        00:00:00 httpd</span><br><span class="line">5 S    48  2218  1329  0  80   0 - 105278 SYSC_s ?       00:00:00 httpd</span><br><span class="line">5 S    48  2219  1329  0  80   0 - 105278 ep_pol ?       00:00:00 httpd</span><br><span class="line">5 S    48  2220  1329  0  80   0 - 105278 SYSC_s ?       00:00:00 httpd</span><br><span class="line">5 S    48  2221  1329  0  80   0 - 105278 SYSC_s ?       00:00:00 httpd</span><br><span class="line">5 S    48  2222  1329  0  80   0 - 105278 SYSC_s ?       00:00:00 httpd</span><br></pre></td></tr></table></figure>

<p>查看进程，当然<strong>top命令</strong>也应该了解，不带任何参数就能看到一些进程相关的。比如服务器当前时间、运行天数、用户数量、负载均衡、任务总数、多少进程在运行和休眠、停止以及僵尸进程<strong>zombie</strong>、cpu的利用率、内存占用情况以及缓存、缓冲的情况。查看直接使用top即可，退出按q键。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ top</span><br><span class="line">top - 13:41:24 up 5 min,  1 user,  load average: 0.06, 0.28, 0.16</span><br><span class="line">Tasks: 193 total,   1 running, 192 sleeping,   0 stopped,   0 zombie</span><br><span class="line">%Cpu(s):  0.3 us,  0.7 sy,  0.0 ni, 98.7 <span class="built_in">id</span>,  0.3 wa,  0.0 hi,  0.0 si,  0.0 st</span><br><span class="line">KiB Mem :  1877588 total,   940396 free,   481804 used,   455388 buff/cache</span><br><span class="line">KiB Swap:  2047996 total,  2047996 free,        0 used.  1235960 avail Mem </span><br></pre></td></tr></table></figure>

<p>查看进程，<strong>pstree命令</strong>也必不可少，以树状结构展示出了我部署的<strong>vsftpd</strong>以及监控系统服务<strong>zabbix</strong>。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ pstree</span><br><span class="line">        ├─vsftpd</span><br><span class="line">        ├─zabbix_agentd───5*[zabbix_agentd]</span><br><span class="line">        ├─zabbix_proxy</span><br><span class="line">        └─zabbix_server───33*[zabbix_server]</span><br></pre></td></tr></table></figure>

<p>进程实在无法正常结束，那就采取暴力手段<strong>kill命令</strong>，强行关闭。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">kill</span> -1 3033 <span class="comment">#重启进程</span></span><br><span class="line">$ <span class="built_in">kill</span> -9 3034   <span class="comment">#强制杀死进程</span></span><br></pre></td></tr></table></figure>

<p>关于进程的就讲这么多，讲太多了不好消化，更多详细描述可以参考本人的历史博文。</p>
<h4 id="5、系统权限"><a href="#5、系统权限" class="headerlink" title="5、系统权限"></a>5、系统权限</h4><p>系统权限，如果非要分类，大致可分为：<strong>基本权限、特殊权限</strong>。</p>
<p>权限分配原则：<strong>对文件来讲：最高权限为<code>x</code>（执行）</strong>；<strong>对目录来讲：最高权限为<code>w</code>（写）</strong>。接着以cangls这个文件进行演示，分别带你看权限用数字的代表含义，rwx加起来就是7：</p>
<ul>
<li>r 对应的数字权限为：4，读权限</li>
<li>w 对应的数字权限为：2， 写权限</li>
<li>x 对应的数字权限为：1，执行权限</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@cnwangk ~]<span class="comment"># chmod 711 cangls.av</span></span><br><span class="line">[root@cnwangk ~]<span class="comment"># ll cangls.av</span></span><br><span class="line">-rwx--x--x 1 root root 13 1月  19 22:49 cangls.av</span><br><span class="line">[root@cnwangk ~]<span class="comment"># chmod 722 cangls.av</span></span><br><span class="line">[root@cnwangk ~]<span class="comment"># ll cangls.av</span></span><br><span class="line">-rwx-w--w- 1 root root 13 1月  19 22:49 cangls.av</span><br><span class="line">[root@cnwangk ~]<span class="comment"># chmod 744 cangls.av</span></span><br><span class="line">[root@cnwangk ~]<span class="comment"># ll cangls.av</span></span><br><span class="line">-rwxr--r-- 1 root root 13 1月  19 22:49 cangls.av</span><br></pre></td></tr></table></figure>

<p>通过上面的演示对cangls.av这个文件赋予权限711、722、744进行测试。711对应的权限<code>-rwx--x--x</code>、722对应的权限<code>-rwx-w--w-</code>、744对应的权限：<code>-rwxr--r--</code>，当然这样设置是没有意义的，为了演示进行测试演示数字代表的含义。</p>
<p><strong>tips</strong>：还有一种方式是ugo模式，作为了解就行。</p>
<h2 id="04-第四夜"><a href="#04-第四夜" class="headerlink" title="04 第四夜"></a>04 第四夜</h2><p><strong>cangls</strong>：还记得前三天我们探讨了哪些linux方面的知识吗？</p>
<p><strong>小白</strong>：当然记得，我都记在笔记本上了，下面进行了复述：</p>
<ul>
<li>学习方法；</li>
<li>linux基本命令，最重要的是帮助命令的运用；</li>
<li>linux进阶的小技巧，比如：scp安全文件传输命令、路由命令、firewalld防火墙命令等等；</li>
<li>linux进程相关命令：ps -ef、ps -aux、top；</li>
<li>linux系统权限命令：chmod。</li>
</ul>
<p><strong>cangls</strong>：接下来会有一点小插曲，对服务器部署项目的一些知识进行讲解，比如Javaweb项目。</p>
<p><strong>小白</strong>：好耶，我很感兴趣！</p>
<h3 id="四、Java相关"><a href="#四、Java相关" class="headerlink" title="四、Java相关"></a>四、Java相关</h3><p><strong>基于实际工作中的运用，介绍一些web项目和服务器相关的知识</strong>。当你看到我的文章或多或少会出现Java相关的知识的时候，请不要惊讶。我其实是一个蹩脚Java码农，就是这么神奇。好吧，我承认自己连半吊子都算不上，只是有一段时间的CURD经验。而在Linux上操作的经验反而比我主学的Java经验还要丰富，得益于多年的自学以及与服务器和虚拟机打交道。</p>
<h4 id="1、jar包服务"><a href="#1、jar包服务" class="headerlink" title="1、jar包服务"></a>1、jar包服务</h4><p>将Java程序通过中间件在后台运行，&amp;符号就是将程序放入后台执行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ java -jar demo-1.0.jar &amp;</span><br></pre></td></tr></table></figure>

<p>jar包或者war包在中间件后台运行，优化版本，将日志输出到指定文件demo-1.0.log。<strong>jvm在client模式下运行，默认Xmx大小为64M，而在server模式下默认Xmx大小为1024M</strong>，<strong>默认Xms大小为1M，而在server模式下默认Xms大小为128M</strong>。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">nohup</span> java -server -Xms256M -Xmx2048M -jar demo-1.0.jar &amp;&gt; demo-1.0.log &amp;</span><br></pre></td></tr></table></figure>

<p>当你遇到控制台<strong>日志输出乱码</strong>的时候，此时不要慌，请冷静思考。当然有<strong>解决方案</strong>，那就是在控制台执行<code>Java -jar</code>命令时指定固定的编码，比如utf-8编码。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ java -jar -Dfile.encoding=utf-8 demo-1.0.jar &amp;</span><br><span class="line">$ <span class="built_in">nohup</span> java -server -Xms256M -Xmx2048M -jar -Dfile.encoding=utf-8 demo-1.0.jar &amp;&gt; demo-1.0.log &amp;</span><br></pre></td></tr></table></figure>

<p><strong>个人建议</strong>：基于实际工作处理。再怎么去优化，机器始终是机器，内存始终要消耗。如果不能释放，需要采取人为的干预手段，比如定期重启服务器。很多问题找了很多原因依旧解决不掉，但是重启服务器就迎刃而解了，就是这么神奇。</p>
<h4 id="2、tomcat中间件优化"><a href="#2、tomcat中间件优化" class="headerlink" title="2、tomcat中间件优化"></a>2、tomcat中间件优化</h4><p><strong>限制堆内存</strong>，具体根据服务器和真机的内存计算优化，下面知识给出示例值。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">set</span> JAVA_OPS = -Xms800m -Xmx1024m -XX:PermSize=800m -XX:MaxPermSize=1024m  </span><br></pre></td></tr></table></figure>

<p><strong>https自签证书配置</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;!--自签证书配置，证书密码keystorePass,key包含文件keystoreFile=<span class="string">&quot;&quot;</span>--&gt; </span><br><span class="line">  &lt;!-- &lt;Connector port=<span class="string">&quot;8443&quot;</span> protocol=<span class="string">&quot;org.apache.coyote.http11.Http11Protocol&quot;</span></span><br><span class="line">               maxThreads=<span class="string">&quot;150&quot;</span> SSLEnabled=<span class="string">&quot;true&quot;</span> scheme=<span class="string">&quot;https&quot;</span> secure=<span class="string">&quot;true&quot;</span></span><br><span class="line">               clientAuth=<span class="string">&quot;false&quot;</span> sslProtocol=<span class="string">&quot;TLS&quot;</span> </span><br><span class="line">              keystoreFile=<span class="string">&quot;D:\\company-workspace\\mykeys\\tomcat.keystore&quot;</span></span><br><span class="line">              keystorePass=<span class="string">&quot;123456&quot;</span></span><br><span class="line">              truststoreFile=<span class="string">&quot;D:\\company-workspace\\mykeys\\tomcat.keystore&quot;</span></span><br><span class="line">              truststorePass=<span class="string">&quot;123456&quot;</span></span><br><span class="line">               /&gt;--&gt;  </span><br></pre></td></tr></table></figure>

<p>谈到tomcat中间件，一般自然而然的就联想到nginx中间件。一般不建议直接在tomcat中直接配置，反而使用nginx做一层反向代理，然后在nginx中设置ssl。</p>
<p><strong>nginx中间件配置简单介绍</strong></p>
<p>负载均衡，可以通过加权重实现轮询。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">upstream tomcat &#123;</span><br><span class="line">             server 192.168.0.233:8080;</span><br><span class="line">                         server 192.168.0.233:8888;</span><br><span class="line">                         server 192.168.0.233:9999;</span><br><span class="line">     &#125;</span><br></pre></td></tr></table></figure>

<p><strong>配置ssl参考</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">server</span><br><span class="line">    &#123;</span><br><span class="line">        listen 80;</span><br><span class="line">              listen 443 ssl;</span><br><span class="line">              server_name 192.168.245.130;       </span><br><span class="line">       <span class="comment">#ssl set begin</span></span><br><span class="line">              <span class="comment">#优雅的编写rewrite规则</span></span><br><span class="line">        <span class="comment">#rewrite ^ https://www.nginx.org$request_uri?;</span></span><br><span class="line">        <span class="comment">#重定向转发到https</span></span><br><span class="line">        <span class="comment">#proxy_redirect http:// $scheme://;</span></span><br><span class="line">        <span class="comment">#301重定向</span></span><br><span class="line">        <span class="comment">#return  301 https://$server_name$request_uri;</span></span><br><span class="line">        <span class="comment">#http请求重定向到https请求,非标准433端口采用  </span></span><br><span class="line">        <span class="comment">#error_page 497  https://$host$uri?$args; </span></span><br><span class="line">        <span class="comment">#ssl 设置off或者屏蔽</span></span><br><span class="line">        ssl off;</span><br><span class="line">        ssl_certificate ssl/server.crt;<span class="comment">#服务端证书</span></span><br><span class="line">              ssl_certificate_key ssl/server.key;<span class="comment">#服务端私钥</span></span><br><span class="line">        ssl_session_cache shared:SSL:1m;<span class="comment">#设置共享会话缓存大小</span></span><br><span class="line">        ssl_session_timeout 5m;<span class="comment">#配置session有效时间5分钟</span></span><br><span class="line">        ssl_prefer_server_ciphers on;<span class="comment">#优先采取服务器算法</span></span><br><span class="line">        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;<span class="comment">#启用指定协议</span></span><br><span class="line">        <span class="comment">#加密算法</span></span><br><span class="line">        ssl_ciphers  EECDH+CHACHA20:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;</span><br><span class="line">        <span class="comment">#ssl_verify_client on;# 开启客户端证书校验</span></span><br><span class="line">        <span class="comment">#ssl_client_certificate ssl/ca.crt;#设置验证客户端证书</span></span><br><span class="line">        <span class="comment">#ssl_verify_depth 6; #校验深度</span></span><br><span class="line">        <span class="comment">#ssl_trusted_certificate ssl/ca.crt;#设置CA为受信任证书</span></span><br><span class="line">       <span class="comment">#ssl set end</span></span><br><span class="line">       location / &#123;</span><br><span class="line">              <span class="comment">#配置proxy_set_header请求头</span></span><br><span class="line">        proxy_pass_header User-Agent;</span><br><span class="line">              proxy_set_header Host <span class="variable">$http_host</span>;</span><br><span class="line">              proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">              proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">        proxy_set_header X-Forwarded-Proto https;</span><br><span class="line">              proxy_pass http://tomcat;</span><br><span class="line">              proxy_redirect http:// https://;   </span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure>



<h4 id="3、国产中创中间件优化"><a href="#3、国产中创中间件优化" class="headerlink" title="3、国产中创中间件优化"></a>3、国产中创中间件优化</h4><p><strong>解决JDK不完整的两种方案</strong>：</p>
<ul>
<li>第一种：下载完整版的JDK；</li>
<li>第二种：使用as内部自带的编译器，如下所示进行调整。</li>
</ul>
<p>找到<code>java-config</code>配置那一栏，在&lt;jvm-options&gt;加入如下参数。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;jvm-options&gt;-Dorg.apache.jasper.compiler.disablejsr199=<span class="literal">true</span>&lt;/jvm-options&gt;</span><br></pre></td></tr></table></figure>

<p>或者修改<code>as/domains/domain1/config/</code>目录下的domain.xml，将false修改为<strong>true</strong>。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;jvm-options&gt;-Dorg.apache.jasper.compiler.disablejsr199=<span class="literal">false</span>&lt;/jvm-options&gt;</span><br></pre></td></tr></table></figure>



<h2 id="05-第五夜"><a href="#05-第五夜" class="headerlink" title="05 第五夜"></a>05 第五夜</h2><p>经过前四夜的深入探讨，此时的小白已经具备了一些linux基本知识的运用，对于项目上线和维护也有了一定的了解。</p>
<p><strong>cangls</strong>：相信小白同学现在已经对linux基本知识有了一定的了解，并能够运用到工作中。</p>
<p><strong>小白</strong>：cangls，这还是得感谢您的细心教导，是有那么一丢丢的成就感。</p>
<p><strong>cangls</strong>：学习就是要有这种劲头，好样的！今天再给你传授我多年珍藏的独家秘笈：vim工具的使用。</p>
<p> <strong>小白</strong>：好耶，独家秘笈？莫非是九阳神功，还是玉女心经？表现出满怀期待的样子。</p>
<p><strong>cangls</strong>：想啥呢？是linux中的编辑神器，用好了vim对你的工作有大大大的好处哟！</p>
<p><strong>小白</strong>：原来如此，开始拿出了自己的小本本记录…</p>
<h3 id="五、vim的使用"><a href="#五、vim的使用" class="headerlink" title="五、vim的使用"></a>五、vim的使用</h3><h4 id="1、vim简单使用"><a href="#1、vim简单使用" class="headerlink" title="1、vim简单使用"></a>1、vim简单使用</h4><p>接着上面的例子hello.sh脚本继续讲。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ vim hello.sh  <span class="comment">#开始编辑脚本</span></span><br></pre></td></tr></table></figure>

<p>在hello.sh脚本中写入一段内容：</p>
<p><strong>tips</strong>：进入后按 i 键进行插入内容。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;hello cangls&quot;</span></span><br><span class="line"><span class="built_in">echo</span> hello linux</span><br><span class="line"><span class="built_in">echo</span> create btrfs filesystem</span><br></pre></td></tr></table></figure>

<p>按ESC，输入:wq保存退出，然后执行脚本：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@cnwangk ~]<span class="comment"># ./hello.sh </span></span><br><span class="line">hello cangls</span><br><span class="line">hello linux</span><br><span class="line">create btrfs filesystem</span><br></pre></td></tr></table></figure>

<p>执行脚本，会发现刚刚通过<code>vim</code>输入的<code>hello cangls</code>已经生效了。</p>
<p><strong>如果没有权限，通过root用户赋予权限</strong>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#赋予读和执行权限 </span></span><br><span class="line"><span class="built_in">chmod</span> 755 /hello.sh</span><br></pre></td></tr></table></figure>



<h4 id="2、初识vim"><a href="#2、初识vim" class="headerlink" title="2、初识vim"></a>2、初识vim</h4><p>vim 入门基础，可在站内搜索：vim入门实战。</p>
<p>常用的快捷键命令</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>a i o</td>
<td>进行编辑，插入内容</td>
</tr>
<tr>
<td>:wq</td>
<td>保存并退出</td>
</tr>
<tr>
<td>:q!</td>
<td>不保存并退出</td>
</tr>
<tr>
<td>shirt + pgup</td>
<td>上翻页</td>
</tr>
<tr>
<td>shift + pgdown</td>
<td>下翻页</td>
</tr>
<tr>
<td>&#x2F;</td>
<td>搜索内容</td>
</tr>
<tr>
<td>:set number</td>
<td>显示行数</td>
</tr>
<tr>
<td>ESC</td>
<td>退出编辑</td>
</tr>
</tbody></table>
<p>更多命令参数可以参考，<strong>man vim</strong>，强大的帮助命令man。</p>
<h2 id="06-第六夜"><a href="#06-第六夜" class="headerlink" title="06 第六夜"></a>06 第六夜</h2><p>经过前五夜的连续战斗，小白依旧斗志昂扬。</p>
<p><strong>cangls</strong>：小白同学啊，看你今天似乎遇到什么难题了吧！</p>
<p><strong>小白</strong>：是的，我最近阅读了linux shell相关的文章，但是有很多疑惑。</p>
<p><strong>cangls</strong>：能具体描述一下吗？</p>
<p><strong>小白</strong>：是这样的，对基本知识和用法有些困惑。</p>
<p><strong>cangls</strong>：没关系，今天正是要给你传授shell方面的基本知识，希望对你有所帮助。</p>
<p><strong>小白</strong>：此时拿出了小本本开始记录着…</p>
<h3 id="六、shell脚本"><a href="#六、shell脚本" class="headerlink" title="六、shell脚本"></a>六、shell脚本</h3><h3 id="1、shell概述"><a href="#1、shell概述" class="headerlink" title="1、shell概述"></a>1、shell概述</h3><ul>
<li>shell的两种主要语法类型有<code>Bourne</code>和<code>C</code>，这两种语法彼此不兼容。Bourne家族主要包括：sh、ksh、Bash、psh、zsh；</li>
<li>C家族主要包括：csh、tcsh。</li>
</ul>
<p><strong>Bash中其它特殊符号</strong>，如下表格所示：</p>
<table>
<thead>
<tr>
<th>选项</th>
<th>符号含义</th>
</tr>
</thead>
<tbody><tr>
<td>‘ ‘</td>
<td>在单引号中所有特殊符号，如”$”和”&#96;”(反引号)都没有特殊含义</td>
</tr>
<tr>
<td>“ “</td>
<td>双引号。在双引号中所有特殊符号除”<code>$</code>“、”、”、”\“外都无特殊含义。”$“、”、”、”&quot;拥有”调用变量的值”、”引用命令”和”转义符”的含义</td>
</tr>
<tr>
<td>&#96;&#96;</td>
<td>反引号括起来的是系统命令，在Bash中会优先执行它。和$()作用一样，推荐使用$()，反引号容易误导。</td>
</tr>
<tr>
<td>$()</td>
<td>与反引号作用相同，用来引用系统命令。</td>
</tr>
<tr>
<td>#</td>
<td>在shell脚本中，#代表注释。</td>
</tr>
<tr>
<td>$</td>
<td>用于调用变量的值，如果需要调用name的值时，需要使用$name获取变量的值。</td>
</tr>
<tr>
<td>\</td>
<td>转义符，跟在\之后的特殊符号将失去特殊含义，变为普通字符。例如：$将输出”$”符号，则不会作为变量引用。</td>
</tr>
</tbody></table>
<h3 id="2、shell脚本基本编写"><a href="#2、shell脚本基本编写" class="headerlink" title="2、shell脚本基本编写"></a>2、shell脚本基本编写</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#编写一个简单的linux脚本，使用vim命令</span></span><br><span class="line">vim /home/hello.sh </span><br><span class="line"><span class="comment">#注意一个标准的shell脚本必须加上：#!/bin/bash</span></span><br><span class="line"><span class="comment">#!/bin/bash  </span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;hello world&quot;</span>  &gt;&gt; /root/hello.log <span class="comment">#将hello world追加到hello.log这个文件中</span></span><br><span class="line"><span class="comment">#赋予读和执行权限 </span></span><br><span class="line"><span class="built_in">chmod</span> 755 /hello.sh</span><br><span class="line"><span class="comment">#使用 sh hello.sh 命令执行</span></span><br><span class="line">sh hello.sh &amp;&amp; ./hello.sh</span><br></pre></td></tr></table></figure>

<h3 id="3、别名与快捷键"><a href="#3、别名与快捷键" class="headerlink" title="3、别名与快捷键"></a>3、别名与快捷键</h3><p>3.1、查看与设定别名</p>
<p><code>alias</code>  别名 &#x3D; ‘原命令’，设定命令别名，当然这样设置只会<strong>临时生效</strong>。</p>
<p><code>alias</code> 命令，查看系统命令中所有的命令别名，例如我个人安装的系统别名查看如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">alias</span> <span class="built_in">cp</span>=<span class="string">&#x27;cp -i&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> egrep=<span class="string">&#x27;egrep --color=auto&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> fgrep=<span class="string">&#x27;fgrep --color=auto&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> grep=<span class="string">&#x27;grep --color=auto&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> l.=<span class="string">&#x27;ls -d .* --color=auto&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> ll=<span class="string">&#x27;ls -l --color=auto&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> <span class="built_in">ls</span>=<span class="string">&#x27;ls --color=auto&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> <span class="built_in">mv</span>=<span class="string">&#x27;mv -i&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> <span class="built_in">rm</span>=<span class="string">&#x27;rm -i&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> <span class="built_in">which</span>=<span class="string">&#x27;alias | /usr/bin/which --tty-only --read-alias --show-dot --show-tilde&#x27;</span></span><br></pre></td></tr></table></figure>

<p><strong>别名永久生效与删除别名</strong></p>
<p>写入环境变量配置文件，<strong>永久生效</strong>。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#写入当前用户的环境变量，Ubuntu下可以这样设置</span></span><br><span class="line">$ vi ~/.bashrc</span><br><span class="line"><span class="comment">#Redhat7系列</span></span><br><span class="line">[root@cnwangk ~]<span class="comment"># vi ~/.bash_profile </span></span><br></pre></td></tr></table></figure>

<p>上面分别介绍了Ubuntu下的环境变量和Redhat7系列的当前用户环境变量修改。我之前也有写过博文，在这篇文章中：<strong>【linux环境变量】秒懂linux配置全局与当前用户环境变量</strong>，同样也上传到了我的github和gitee仓库，微信公众号也有发布哟。</p>
<p><strong>删除别名</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">unalias</span> 接别名</span><br></pre></td></tr></table></figure>

<p><strong>命令生效顺序</strong></p>
<ul>
<li>第一顺位执行用绝对路径或相对路径执行的命令</li>
<li>第二顺位执行别名</li>
<li>第三顺位执行Bash的内部命令</li>
<li>第四顺位执行按照$PATH环境变量定义的目录查找顺序找到的第一个命令</li>
</ul>
<h3 id="4、-历史命令"><a href="#4、-历史命令" class="headerlink" title="4、 历史命令"></a>4、 历史命令</h3><p>直接在终端输入history命令，就可以看到自己输入的历史命令。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">history</span></span><br></pre></td></tr></table></figure>

<p><code>history</code> [选项][历史命令保存文件]</p>
<ul>
<li>-c：清空历史命令</li>
<li>-w：把缓存中的历史命令写入历史命令保存文件~&#x2F;.bash_history</li>
</ul>
<p><strong>历史命令的调用</strong></p>
<ul>
<li>使用上、下箭头调用以前的历史命令</li>
<li>使用”!n”重复执行第n条命令</li>
<li>使用”!!”重复执行上一条命令</li>
<li>使用”!字符串”重复执行最后一条以该字符串开头的命令</li>
</ul>
<h3 id="5、输出重定向"><a href="#5、输出重定向" class="headerlink" title="5、输出重定向"></a>5、输出重定向</h3><p>最基本的<code>echo</code>用法演示，将hello world输出到hello.sh脚本中，如果对echo命令不熟悉，可以使用我上面介绍过的<code>man</code>帮助命令进行查找。例如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ man <span class="built_in">echo</span></span><br></pre></td></tr></table></figure>

<p><strong>-e参数介绍</strong>：支持反斜线控制的字符转换</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> <span class="string">&quot;hello world&quot;</span> &gt; hello.sh</span><br><span class="line">[root@cnwangk ~]<span class="comment"># cat hello.sh </span></span><br><span class="line">hello world</span><br><span class="line"><span class="comment">#输入一段字符串到hello.sh脚本</span></span><br><span class="line">[root@cnwangk ~]<span class="comment"># echo -e &quot;echo &quot;hello linux&quot;\necho &quot;create btrfs filesystem&quot;&quot; &gt; hello.sh </span></span><br><span class="line">[root@cnwangk ~]<span class="comment"># chmod 755 hello.sh  #赋予755权限</span></span><br><span class="line">[root@cnwangk ~]<span class="comment"># sh hello.sh  #执行脚本</span></span><br><span class="line">hello linux</span><br><span class="line">create btrfs filesystem</span><br></pre></td></tr></table></figure>

<p><strong>控制字符作用</strong>，如下表格所示：</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>\a</td>
<td>输出警告音</td>
</tr>
<tr>
<td>\b</td>
<td>退格键，向左删除</td>
</tr>
<tr>
<td>\n</td>
<td>换行符</td>
</tr>
<tr>
<td>\r</td>
<td>回车键</td>
</tr>
<tr>
<td>\t</td>
<td>制表符，TAB键</td>
</tr>
<tr>
<td>\v</td>
<td>垂直制表符</td>
</tr>
<tr>
<td>\0nnn</td>
<td>按照八进制ASCII码输出字符。其中0为数字零，nnn为三位八进制数。</td>
</tr>
<tr>
<td>\xhh</td>
<td>按照十六进制ASCII码输出字符。hh是两位十六进制数。</td>
</tr>
</tbody></table>
<p>例如，表示以追加形式将苍老师输出到<code>av</code>文件中。嘿嘿，咱就骚一下。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;cangls&quot;</span> &gt;&gt; av.avi</span><br></pre></td></tr></table></figure>

<p><strong>标准输出重定向</strong>，作用如下表格所示：</p>
<table>
<thead>
<tr>
<th>命令格式</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>命令 &gt; 文件</td>
<td>以覆盖的方式，把命令的正确输出到指定的文件或设备当中</td>
</tr>
<tr>
<td>命令 &gt;&gt; 文件</td>
<td>以追加的方式，把命令的正确输出到指定的文件或设备当中</td>
</tr>
<tr>
<td>错误命令 2&gt; 文件</td>
<td>以覆盖的方式，把命令的错误输出到指定的文件或设备当中</td>
</tr>
<tr>
<td>错误命令 2&gt;&gt; 文件</td>
<td>以追加的方式，把命令的错误输出到指定的文件或设备当中</td>
</tr>
</tbody></table>
<p><strong>正确输出和错误输出同时保存</strong>，作用如下表格所示：</p>
<table>
<thead>
<tr>
<th>命令格式</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>命令 &gt; 文件 2&gt;&amp;1</td>
<td>以覆盖的方式，把命令的正确和错误输出保存在同一个文件中</td>
</tr>
<tr>
<td>命令 &gt;&gt; 文件 2&gt;&amp;1</td>
<td>以追加的方式，把命令的正确和错误输出保存在同一个文件中</td>
</tr>
<tr>
<td>命令 &amp;&gt; 文件</td>
<td>以覆盖的方式，把命令的正确和错误输出保存在同一个文件中</td>
</tr>
<tr>
<td>命令 &amp;&gt;&gt;文件</td>
<td>以追加的方式，把命令的正确和错误输出保存在同一个文件中</td>
</tr>
<tr>
<td>命令 &gt;&gt; 文件1 2&gt;&gt; 文件2</td>
<td>把正确的输出到文件1中，错误的输出到文件2中</td>
</tr>
</tbody></table>
<p><strong>wc命令</strong></p>
<p><code>wc</code> [选项][文件名]，输出文件中的行数、单词数、行数</p>
<p>示例，<strong>统计hello.sh的行数</strong>，统计有两行，与上面的演示对应起来了。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">wc</span> -l</span><br><span class="line">[root@cnwangk ~]<span class="comment"># wc -l hello.sh  #统计hello.sh的行数，统计有两行，与上面的演示对应起来了。</span></span><br><span class="line">2 hello.sh</span><br></pre></td></tr></table></figure>

<p><strong>最后总结出实用的几种</strong>，以追加的形式把错误和正确的结果输出到文件中：</p>
<ul>
<li>命令 &gt;&gt; file 2&gt;&amp;1</li>
<li>命令 &amp;&gt;&gt; file</li>
<li>命令 &gt;&gt; file1 2&gt;&gt; file2</li>
</ul>
<h3 id="6、管道符"><a href="#6、管道符" class="headerlink" title="6、管道符"></a>6、管道符</h3><p>6.1、命令格式，如下表格所示：</p>
<table>
<thead>
<tr>
<th>命令格式</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>命令1 | 命令2</td>
<td>命令1的正确输出作为命令2的操作对象</td>
</tr>
<tr>
<td>;，格式1：命令2</td>
<td>多个命令顺序执行，命令之间没有任何逻辑关系</td>
</tr>
<tr>
<td>&amp;&amp;，命令1&amp;&amp;命令2</td>
<td>逻辑与，当命令1正确执行，命令2才会执行；命令1无法正确执行，命令2不会执行</td>
</tr>
<tr>
<td>||，命令1||命令2</td>
<td>逻辑或，当命令1非正确执行，命令2才会执行；命令1正确执行，命令2不会执行</td>
</tr>
</tbody></table>
<p>6.2、linux中的通配符，部分整理如下表格所示：</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>*</td>
<td>匹配任意内容</td>
</tr>
<tr>
<td>?</td>
<td>匹配任意一个字符</td>
</tr>
<tr>
<td>[]</td>
<td>匹配任意一个中括号内的字符，例如[abc]代表匹配一个字符，可能是a，也可能是b或c。</td>
</tr>
<tr>
<td>[-]</td>
<td>匹配中括号里的任意一个字符，-代表一个范围，例如：[a-z]代表匹配一个小写字母。</td>
</tr>
<tr>
<td>[ ^ ]</td>
<td>逻辑非，匹配不是中括号里的一个字符，例如：[^0-9]代表匹配一个非数字的字符。</td>
</tr>
</tbody></table>
<p>续更新优化中…</p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><strong>能看到这里的，都是帅哥靓妹</strong>。以上就是此次文章的所有内容的，希望能对你的工作有所帮助。感觉写的好，就拿出你的一键三连。如果感觉总结的不到位，也希望能留下您宝贵的意见，我会在文章中进行调整优化。</p>
<p><strong>linux系列文章：linux小技巧scp命令、linux磁盘管理</strong>已经上传至github。</p>
<p>个人github仓库地址：</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2Nud2FuZ2svd2FuZ2stc3RpY2s=">https://github.com/cnwangk/wangk-stick<i class="fa fa-external-link-alt"></i></span></p>
<p>以上总结，仅供参考哟！</p>
<p>—END—</p>
]]></content>
      <categories>
        <category>开发运维</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>聊一期 mariadb 笔记整理</title>
    <url>/2023/12/31/%E8%81%8A%E4%B8%80%E6%9C%9Fmariadb%E7%AC%94%E8%AE%B0%E6%95%B4%E7%90%86/</url>
    <content><![CDATA[<p><strong>关于版本的选择，仅供参考</strong>：</p>
<p>从版本稳定性和维护生命周期两个角度考虑。</p>
<ol>
<li>从长远考虑：建议选择稳定长期支持版（Stable long term support versions），稳定且有更长的维护生命周期。</li>
<li>想尝试新特性，但又想有一定的稳定性：建议选择稳定短期支持版（Stable short term support versions），生命周期较短。</li>
<li>想尝试新特性：可以选择预览版（Preview release）和候选版（RC versions），不稳定。</li>
</ol>
<p><strong>企业或者个人生产环境，建议使用稳定版</strong>（GA）。不推荐使用预览版（Preview release）和候选版（RC versions）。</p>
<p>mariadb 下载地址：<span class="exturl" data-url="aHR0cHM6Ly9tYXJpYWRiLm9yZy9kb3dubG9hZA==">https://mariadb.org/download<i class="fa fa-external-link-alt"></i></span></p>
<p>mariadb 官方文档：<span class="exturl" data-url="aHR0cHM6Ly9tYXJpYWRiLm9yZy9kb2N1bWVudGF0aW9uLw==">https://mariadb.org/documentation/<i class="fa fa-external-link-alt"></i></span></p>
<p>在线文档：<span class="exturl" data-url="aHR0cHM6Ly9tYXJpYWRiLmNvbS9rYi9lbi9kb2N1bWVudGF0aW9uLw==">https://mariadb.com/kb/en/documentation/<i class="fa fa-external-link-alt"></i></span></p>
<p>mariadb 官方文档 PDF 下载地址：<span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZHMubWFyaWFkYi5vcmcvcmVzdC1hcGkvZG93bmxvYWQtZG9jdW1lbnRhdGlvbg==">MariaDBServerKnowledgeBase.pdf<i class="fa fa-external-link-alt"></i></span></p>
<p>mariadb 资源整合：<span class="exturl" data-url="aHR0cHM6Ly9wYW4uYmFpZHUuY29tL3MvMVlYaEV1bmY0bThHUkVuMkd3YXJZbHc/cHdkPXFlN2Y=">https://pan.baidu.com/s/1YXhEunf4m8GREn2GwarYlw?pwd=qe7f<i class="fa fa-external-link-alt"></i></span></p>
<span id="more"></span>

<p>MariaDB 资料整理，包含 Windows 平台与 Linux 平台 mariadb 安装包，mariadb 离线 PDF 文档，JD-GUI 用于反编译查看 <span class="exturl" data-url="aHR0cHM6Ly9tYXJpYWRiLmNvbS9rYi9lbi9hYm91dC1tYXJpYWRiLWNvbm5lY3Rvci1qLw==">MariaDB Connector&#x2F;J<i class="fa fa-external-link-alt"></i></span> jar 包代码，以及个人整理的 mariadb  私人笔记：<span class="exturl" data-url="aHR0cHM6Ly9wYW4uYmFpZHUuY29tL3MvMVlYaEV1bmY0bThHUkVuMkd3YXJZbHc/cHdkPXFlN2Y=">mariadb 笔记整理，不定期更新哟<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="基础知识准备阶段"><a href="#基础知识准备阶段" class="headerlink" title="基础知识准备阶段"></a>基础知识准备阶段</h2><h3 id="MariaDB-版本说明"><a href="#MariaDB-版本说明" class="headerlink" title="MariaDB 版本说明"></a>MariaDB 版本说明</h3><blockquote>
<p>原文：<span class="exturl" data-url="aHR0cHM6Ly9tYXJpYWRiLm9yZy9kb3dubG9hZC8/dD1tYXJpYWRiJnA9bWFyaWFkYiZyPTExLjQuMCZvcz13aW5kb3dzJmNwdT14ODZfNjQmcGtnPW1zaSZtPXh0b21faGsjcmVsZWFzZS1zY2hlZHVsZQ==">Release schedule About MariaDB Server - MariaDB.org<i class="fa fa-external-link-alt"></i></span></p>
<p>MariaDB Foundation ensures that MariaDB Server has a steady cadence of releases. Until MariaDB Server 10.6, MariaDB Server had about one stable major release every year. <span class="exturl" data-url="aHR0cHM6Ly9tYXJpYWRiLm9yZy9wcmV2aWV3LXJlbGVhc2VzLw==">Now there are multiple short term releases each year<i class="fa fa-external-link-alt"></i></span>, in addition to less frequent long-term releases. The current maintained versions are: <span class="exturl" data-url="aHR0cHM6Ly9tYXJpYWRiLmNvbS9rYi9lbi9jaGFuZ2VzLWFuZC1pbXByb3ZlbWVudHMtaW4tbWFyaWFkYi0xMC00">10.4<i class="fa fa-external-link-alt"></i></span>, <span class="exturl" data-url="aHR0cHM6Ly9tYXJpYWRiLmNvbS9rYi9lbi9jaGFuZ2VzLWFuZC1pbXByb3ZlbWVudHMtaW4tbWFyaWFkYi0xMC01">10.5<i class="fa fa-external-link-alt"></i></span>, <span class="exturl" data-url="aHR0cHM6Ly9tYXJpYWRiLmNvbS9rYi9lbi9jaGFuZ2VzLWFuZC1pbXByb3ZlbWVudHMtaW4tbWFyaWFkYi0xMC02">10.6<i class="fa fa-external-link-alt"></i></span>, <span class="exturl" data-url="aHR0cHM6Ly9tYXJpYWRiLmNvbS9rYi9lbi9jaGFuZ2VzLWFuZC1pbXByb3ZlbWVudHMtaW4tbWFyaWFkYi0xMC0xMQ==">10.11<i class="fa fa-external-link-alt"></i></span> (maintained for 5 years), <span class="exturl" data-url="aHR0cHM6Ly9tYXJpYWRiLmNvbS9rYi9lbi9jaGFuZ2VzLWFuZC1pbXByb3ZlbWVudHMtaW4tbWFyaWFkYi0xMC0xMA==">10.10<i class="fa fa-external-link-alt"></i></span>, <span class="exturl" data-url="aHR0cHM6Ly9tYXJpYWRiLmNvbS9rYi9lbi9jaGFuZ2VzLWFuZC1pbXByb3ZlbWVudHMtaW4tbWFyaWFkYi0xMS0w">11.0<i class="fa fa-external-link-alt"></i></span>, <span class="exturl" data-url="aHR0cHM6Ly9tYXJpYWRiLmNvbS9rYi9lbi9jaGFuZ2VzLWFuZC1pbXByb3ZlbWVudHMtaW4tbWFyaWFkYi0xMS0x">11.1<i class="fa fa-external-link-alt"></i></span>, <span class="exturl" data-url="aHR0cHM6Ly9tYXJpYWRiLmNvbS9rYi9lbi9jaGFuZ2VzLWFuZC1pbXByb3ZlbWVudHMtaW4tbWFyaWFkYi0xMS0y">11.2<i class="fa fa-external-link-alt"></i></span>, <span class="exturl" data-url="aHR0cHM6Ly9tYXJpYWRiLmNvbS9rYi9lbi9jaGFuZ2VzLWFuZC1pbXByb3ZlbWVudHMtaW4tbWFyaWFkYi0xMS0z">11.3<i class="fa fa-external-link-alt"></i></span> (maintained for one year). and the development version will be 11.4. Each stable version receives bug-fixes and security fixes periodically.</p>
<p>The roadmap is visible on <span class="exturl" data-url="aHR0cHM6Ly9qaXJhLm1hcmlhZGIub3JnL3NlY3VyZS9EYXNoYm9hcmQuanNwYQ==">jira.mariadb.org<i class="fa fa-external-link-alt"></i></span> (login is required), along with estimated release dates.</p>
</blockquote>
<p>翻译：MariaDB基金会确保MariaDB服务器具有稳定的发布节奏。在MariaDB Server 10.6之前，MariaDB Server每年大约有一个稳定的主要版本。现在，除了不太频繁的长期版本外，<span class="exturl" data-url="aHR0cHM6Ly9tYXJpYWRiLm9yZy9wcmV2aWV3LXJlbGVhc2VzLw==">每年都有多个短期版本<i class="fa fa-external-link-alt"></i></span> 释放。当前维护的版本有：10.4、10.5、10.6、10.11（维护 5 年）、10.10、11.0、11.1、11.2、 <span class="exturl" data-url="aHR0cHM6Ly9tYXJpYWRiLmNvbS9rYi9lbi9jaGFuZ2VzLWFuZC1pbXByb3ZlbWVudHMtaW4tbWFyaWFkYi0xMC02">11.3<i class="fa fa-external-link-alt"></i></span>（维护 1 年）。 开发版本将为 11.4。 每个稳定版本都会定期收到错误修复和安全修复。</p>
<p>发布时间路线报表在 <span class="exturl" data-url="aHR0cHM6Ly9qaXJhLm1hcmlhZGIub3JnL3NlY3VyZS9EYXNoYm9hcmQuanNwYQ==">jira.mariadb.org<i class="fa fa-external-link-alt"></i></span> 上可预览（需要登录），以及预计的发布日期。</p>
<p><strong>小结</strong>：MariaDB 长期稳定支持版本通常维护周期是 5 年，短期稳定支持版本通常维护周期是 1 年。</p>
<p>MariaDB 发行注记：<span class="exturl" data-url="aHR0cHM6Ly9tYXJpYWRiLmNvbS9rYi9lbi9yZWxlYXNlLW5vdGVzLw==">Release Notes - MariaDB Knowledge Base<i class="fa fa-external-link-alt"></i></span></p>
<p>MariaDB 版本说明、发行注记以及维护周期整理表格如下：</p>
<table>
<thead>
<tr>
<th>版本(预览版&#x2F;候选版&#x2F;稳定长期&#x2F;短期支持版)</th>
<th>版本号</th>
<th>发行日期</th>
<th>发行注记</th>
<th>维护周期</th>
</tr>
</thead>
<tbody><tr>
<td>预览版（Preview release）</td>
<td><span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZHMubWFyaWFkYi5vcmcvbWFyaWFkYi8xMS40LjAv">11.4.0<i class="fa fa-external-link-alt"></i></span></td>
<td>2023.12.24</td>
<td><span class="exturl" data-url="aHR0cHM6Ly9tYXJpYWRiLmNvbS9rYi9lbi9tYXJpYWRiLTExLTQtMC1yZWxlYXNlLW5vdGVzLw==">Release notes<i class="fa fa-external-link-alt"></i></span></td>
<td>开发中（GA 维护一年）</td>
</tr>
<tr>
<td>候选版（RC versions）</td>
<td><span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZHMubWFyaWFkYi5vcmcvbWFyaWFkYi8xMS4zLjEv">11.3.1<i class="fa fa-external-link-alt"></i></span></td>
<td>2023.8.21</td>
<td><span class="exturl" data-url="aHR0cHM6Ly9tYXJpYWRiLmNvbS9rYi9lbi9tYXJpYWRiLTExLTMtMS1yZWxlYXNlLW5vdGVzLw==">Release notes<i class="fa fa-external-link-alt"></i></span></td>
<td>开发中（GA 维护一年）</td>
</tr>
<tr>
<td>稳定长期支持版（Stable long term support versions）</td>
<td><span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZHMubWFyaWFkYi5vcmcvbWFyaWFkYi8xMC4xMS42Lw==">10.11.6<i class="fa fa-external-link-alt"></i></span></td>
<td>2023.11.13</td>
<td><span class="exturl" data-url="aHR0cHM6Ly9tYXJpYWRiLmNvbS9rYi9lbi9tYXJpYWRiLTEwLTExLTYtcmVsZWFzZS1ub3Rlcy8=">Release notes<i class="fa fa-external-link-alt"></i></span></td>
<td><span class="exturl" data-url="aHR0cHM6Ly9tYXJpYWRiLm9yZy9hYm91dC8jbWFpbnRlbmFuY2UtcG9saWN5">维护到<i class="fa fa-external-link-alt"></i></span> 2028 年 2 月</td>
</tr>
<tr>
<td>稳定长期支持版（Stable long term support versions）</td>
<td><span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZHMubWFyaWFkYi5vcmcvbWFyaWFkYi8xMC42LjE2Lw==">10.6.16<i class="fa fa-external-link-alt"></i></span></td>
<td>2023.11.13</td>
<td><span class="exturl" data-url="aHR0cHM6Ly9tYXJpYWRiLmNvbS9rYi9lbi9tYXJpYWRiLTEwLTYtMTYtcmVsZWFzZS1ub3Rlcy8=">Release notes<i class="fa fa-external-link-alt"></i></span></td>
<td><span class="exturl" data-url="aHR0cHM6Ly9tYXJpYWRiLm9yZy9hYm91dC8jbWFpbnRlbmFuY2UtcG9saWN5">维护到<i class="fa fa-external-link-alt"></i></span> 2026 年 7 月</td>
</tr>
<tr>
<td>稳定长期支持版（Stable long term support versions）</td>
<td><span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZHMubWFyaWFkYi5vcmcvbWFyaWFkYi8xMC41LjIzLw==">10.5.23<i class="fa fa-external-link-alt"></i></span></td>
<td>2023.11.13</td>
<td><span class="exturl" data-url="aHR0cHM6Ly9tYXJpYWRiLmNvbS9rYi9lbi9tYXJpYWRiLTEwLTUtMjMtcmVsZWFzZS1ub3Rlcy8=">Release notes<i class="fa fa-external-link-alt"></i></span></td>
<td><span class="exturl" data-url="aHR0cHM6Ly9tYXJpYWRiLm9yZy9hYm91dC8jbWFpbnRlbmFuY2UtcG9saWN5">维护到<i class="fa fa-external-link-alt"></i></span> 2025 年 6 月</td>
</tr>
<tr>
<td>稳定长期支持版（Stable long term support versions）</td>
<td><span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZHMubWFyaWFkYi5vcmcvbWFyaWFkYi8xMC40LjMyLw==">10.4.32<i class="fa fa-external-link-alt"></i></span></td>
<td>2023.11.13</td>
<td><span class="exturl" data-url="aHR0cHM6Ly9tYXJpYWRiLmNvbS9rYi9lbi9tYXJpYWRiLTEwLTQtMzItcmVsZWFzZS1ub3Rlcy8=">Release notes<i class="fa fa-external-link-alt"></i></span></td>
<td><span class="exturl" data-url="aHR0cHM6Ly9tYXJpYWRiLm9yZy9hYm91dC8jbWFpbnRlbmFuY2UtcG9saWN5">维护到<i class="fa fa-external-link-alt"></i></span> 2024 年 6 月</td>
</tr>
<tr>
<td>稳定短期支持版（Stable short term support versions）</td>
<td><span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZHMubWFyaWFkYi5vcmcvbWFyaWFkYi8xMS4yLjIv">11.2.2<i class="fa fa-external-link-alt"></i></span></td>
<td>2023.11.21</td>
<td><span class="exturl" data-url="aHR0cHM6Ly9tYXJpYWRiLmNvbS9rYi9lbi9tYXJpYWRiLTExLTItMi1yZWxlYXNlLW5vdGVzLw=="> Release notes<i class="fa fa-external-link-alt"></i></span></td>
<td><span class="exturl" data-url="aHR0cHM6Ly9tYXJpYWRiLm9yZy9hYm91dC8jbWFpbnRlbmFuY2UtcG9saWN5">维护到<i class="fa fa-external-link-alt"></i></span> 2024 年 11 月</td>
</tr>
<tr>
<td>稳定短期支持版（Stable short term support versions）</td>
<td><span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZHMubWFyaWFkYi5vcmcvbWFyaWFkYi8xMS4xLjMv">11.1.3<i class="fa fa-external-link-alt"></i></span></td>
<td>2023.11.13</td>
<td><span class="exturl" data-url="aHR0cHM6Ly9tYXJpYWRiLmNvbS9rYi9lbi9tYXJpYWRiLTExLTEtMy1yZWxlYXNlLW5vdGVzLw==">Release notes<i class="fa fa-external-link-alt"></i></span></td>
<td><span class="exturl" data-url="aHR0cHM6Ly9tYXJpYWRiLm9yZy9hYm91dC8jbWFpbnRlbmFuY2UtcG9saWN5">维护到<i class="fa fa-external-link-alt"></i></span> 2024 年 7 月</td>
</tr>
<tr>
<td>稳定短期支持版（Stable short term support versions）</td>
<td><span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZHMubWFyaWFkYi5vcmcvbWFyaWFkYi8xMS4wLjQv">11.0.4<i class="fa fa-external-link-alt"></i></span></td>
<td>2023.11.13</td>
<td><span class="exturl" data-url="aHR0cHM6Ly9tYXJpYWRiLmNvbS9rYi9lbi9tYXJpYWRiLTExLTAtNC1yZWxlYXNlLW5vdGVzLw==">Release notes<i class="fa fa-external-link-alt"></i></span></td>
<td><span class="exturl" data-url="aHR0cHM6Ly9tYXJpYWRiLm9yZy9hYm91dC8jbWFpbnRlbmFuY2UtcG9saWN5">维护到<i class="fa fa-external-link-alt"></i></span> 2024 年 10 月</td>
</tr>
<tr>
<td>稳定短期支持版（Stable short term support versions）</td>
<td><span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZHMubWFyaWFkYi5vcmcvbWFyaWFkYi8xMC4xMC43Lw==">10.10.7<i class="fa fa-external-link-alt"></i></span></td>
<td>2023.11.13</td>
<td><span class="exturl" data-url="aHR0cHM6Ly9tYXJpYWRiLmNvbS9rYi9lbi9tYXJpYWRiLTEwLTEwLTctcmVsZWFzZS1ub3Rlcy8=">Release notes<i class="fa fa-external-link-alt"></i></span></td>
<td><span class="exturl" data-url="aHR0cHM6Ly9tYXJpYWRiLm9yZy9hYm91dC8jbWFpbnRlbmFuY2UtcG9saWN5">维护到<i class="fa fa-external-link-alt"></i></span> 2023 年 11 月</td>
</tr>
<tr>
<td>稳定短期支持版（Stable short term support versions）</td>
<td><span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZHMubWFyaWFkYi5vcmcvbWFyaWFkYi8xMC45Ljgv">10.9.8<i class="fa fa-external-link-alt"></i></span></td>
<td>2023.8.14</td>
<td><span class="exturl" data-url="aHR0cHM6Ly9tYXJpYWRiLmNvbS9rYi9lbi9tYXJpYWRiLTEwLTktOC1yZWxlYXNlLW5vdGVzLw==">Release notes<i class="fa fa-external-link-alt"></i></span></td>
<td><span class="exturl" data-url="aHR0cHM6Ly9tYXJpYWRiLm9yZy9hYm91dC8jbWFpbnRlbmFuY2UtcG9saWN5">维护到<i class="fa fa-external-link-alt"></i></span> 2023 年 8 月</td>
</tr>
</tbody></table>
<p><strong>点击发行注记 Release notes 链接</strong>，即可查看每个小版本的次带历史版本，<strong>详情请以 <span class="exturl" data-url="aHR0cHM6Ly9tYXJpYWRiLmNvbS9rYi9lbi9tYXJpYWRiLTEwLTExLTYtcmVsZWFzZS1ub3Rlcy8=">mariadb 官方发行注记<i class="fa fa-external-link-alt"></i></span> 为主</strong>，可参考资料 <span class="exturl" data-url="aHR0cHM6Ly9tYXJpYWRiLm9yZy9hYm91dC8jbWFpbnRlbmFuY2UtcG9saWN5">maintenance-policy About MariaDB Server - MariaDB.org<i class="fa fa-external-link-alt"></i></span> 。</p>
<p><strong>友情提醒</strong>：关于版本选择，<strong>企业或者个人生产环境</strong>，<strong>建议使用稳定版</strong>（GA）。不推荐使用预览版（Preview release）和候选版（RC versions）。</p>
<p>mariadb 社区服务版本生命周期：<span class="exturl" data-url="aHR0cHM6Ly9kbG0ubWFyaWFkYi5jb20vYnJvd3NlL21hcmlhZGJfc2VydmVyLw==">Community Server<i class="fa fa-external-link-alt"></i></span></p>
<table>
<thead>
<tr>
<th>社区版本</th>
<th>生命周期</th>
</tr>
</thead>
<tbody><tr>
<td><span class="exturl" data-url="aHR0cHM6Ly9kbG0ubWFyaWFkYi5jb20vYnJvd3NlL21hcmlhZGJfc2VydmVyLzI1Ni8=">Community Server 11.1<i class="fa fa-external-link-alt"></i></span></td>
<td>2024年8月</td>
</tr>
<tr>
<td><span class="exturl" data-url="aHR0cHM6Ly9kbG0ubWFyaWFkYi5jb20vYnJvd3NlL21hcmlhZGJfc2VydmVyLzI3My8=">Community Server 11.2<i class="fa fa-external-link-alt"></i></span></td>
<td>2024年6月</td>
</tr>
<tr>
<td><span class="exturl" data-url="aHR0cHM6Ly9kbG0ubWFyaWFkYi5jb20vYnJvd3NlL21hcmlhZGJfc2VydmVyLzI0Mi8=">Community Server 11.0<i class="fa fa-external-link-alt"></i></span></td>
<td>2023年11月</td>
</tr>
<tr>
<td><span class="exturl" data-url="aHR0cHM6Ly9kbG0ubWFyaWFkYi5jb20vYnJvd3NlL21hcmlhZGJfc2VydmVyLzIyOC8=">Community Server 10.11<i class="fa fa-external-link-alt"></i></span></td>
<td>2028年2月</td>
</tr>
<tr>
<td><span class="exturl" data-url="aHR0cHM6Ly9kbG0ubWFyaWFkYi5jb20vYnJvd3NlL21hcmlhZGJfc2VydmVyLzIxNC8=">Community Server 10.10 (EOL)<i class="fa fa-external-link-alt"></i></span></td>
<td>EOL（已结束）2023年11月</td>
</tr>
<tr>
<td><span class="exturl" data-url="aHR0cHM6Ly9kbG0ubWFyaWFkYi5jb20vYnJvd3NlL21hcmlhZGJfc2VydmVyLzIwNS8=">Community Server 10.9 (EOL)<i class="fa fa-external-link-alt"></i></span></td>
<td>EOL（已结束）2023年8月22</td>
</tr>
<tr>
<td><span class="exturl" data-url="aHR0cHM6Ly9kbG0ubWFyaWFkYi5jb20vYnJvd3NlL21hcmlhZGJfc2VydmVyLzIwMC8=">Community Server 10.8 (EOL)<i class="fa fa-external-link-alt"></i></span></td>
<td>EOL（已结束）2023年5月20</td>
</tr>
<tr>
<td><span class="exturl" data-url="aHR0cHM6Ly9kbG0ubWFyaWFkYi5jb20vYnJvd3NlL21hcmlhZGJfc2VydmVyLzE5Mi8=">Community Server 10.7 (EOL)<i class="fa fa-external-link-alt"></i></span></td>
<td>EOL（已结束）2023年2月9</td>
</tr>
<tr>
<td><span class="exturl" data-url="aHR0cHM6Ly9kbG0ubWFyaWFkYi5jb20vYnJvd3NlL21hcmlhZGJfc2VydmVyLzE2My8=">Community Server 10.6<i class="fa fa-external-link-alt"></i></span></td>
<td>2026年7月</td>
</tr>
<tr>
<td><span class="exturl" data-url="aHR0cHM6Ly9kbG0ubWFyaWFkYi5jb20vYnJvd3NlL21hcmlhZGJfc2VydmVyLzEwMS8=">Community Server 10.5<i class="fa fa-external-link-alt"></i></span></td>
<td>2025年6月</td>
</tr>
<tr>
<td><span class="exturl" data-url="aHR0cHM6Ly9kbG0ubWFyaWFkYi5jb20vYnJvd3NlL21hcmlhZGJfc2VydmVyLzc2Lw==">Community Server 10.4<i class="fa fa-external-link-alt"></i></span></td>
<td>2024年6月</td>
</tr>
<tr>
<td><span class="exturl" data-url="aHR0cHM6Ly9kbG0ubWFyaWFkYi5jb20vYnJvd3NlL21hcmlhZGJfc2VydmVyLzM4Lw==">Community Server 10.3 (EOL)<i class="fa fa-external-link-alt"></i></span></td>
<td>EOL（已结束）2023年5月23</td>
</tr>
<tr>
<td><span class="exturl" data-url="aHR0cHM6Ly9kbG0ubWFyaWFkYi5jb20vYnJvd3NlL21hcmlhZGJfc2VydmVyLzM5Lw==">Community Server 10.2 (EOL)<i class="fa fa-external-link-alt"></i></span></td>
<td>EOL（已结束）2022年5月23</td>
</tr>
<tr>
<td><span class="exturl" data-url="aHR0cHM6Ly9kbG0ubWFyaWFkYi5jb20vYnJvd3NlL21hcmlhZGJfc2VydmVyLzQwLw==">Community Server 10.1 (EOL)<i class="fa fa-external-link-alt"></i></span></td>
<td>EOL（已结束）2020年10月17</td>
</tr>
<tr>
<td><span class="exturl" data-url="aHR0cHM6Ly9kbG0ubWFyaWFkYi5jb20vYnJvd3NlL21hcmlhZGJfc2VydmVyLzQxLw==">Community Server 10.0 (EOL)<i class="fa fa-external-link-alt"></i></span></td>
<td>EOL（已结束）2019年3月31</td>
</tr>
<tr>
<td><span class="exturl" data-url="aHR0cHM6Ly9kbG0ubWFyaWFkYi5jb20vYnJvd3NlL21hcmlhZGJfc2VydmVyLzQyLw==">Community Server 5.5 (EOL)<i class="fa fa-external-link-alt"></i></span></td>
<td>EOL（已结束）2020年4月11</td>
</tr>
</tbody></table>
<p><strong>友情提醒</strong>：EOL 表示寿命终止（end of life），文中指某一版本已停止维护；面向表达式的语言（Expression-Oriented Language）。</p>
<h3 id="MariaDB-资源获取"><a href="#MariaDB-资源获取" class="headerlink" title="MariaDB 资源获取"></a>MariaDB 资源获取</h3><p><strong>友情提醒</strong>：关于版本选择，<strong>企业或者个人生产环境</strong>，<strong>建议使用稳定版</strong>（GA）。不推荐使用预览版（Preview release）和候选版（RC versions）。</p>
<p>MariaDB在Windows平台提供了多种安装形式：</p>
<ol>
<li>msi文件：直接双击进行安装，有可视化界面，<strong>安装较为容易，但不够灵活</strong>。</li>
<li>归档包（archive zip）：以zip格式进行压缩，类似于Linux中的二进制包。<strong>比较灵活，只需几个命令即可安装服务和实例化</strong>。</li>
<li>源码包（source package）：<strong>最灵活</strong>，可根据需求编译安装功能，<strong>难易度最高</strong>。</li>
<li>docker形式安装：其实是在容器中安装。</li>
</ol>
<p>Linux或者Unix安装MariaDB有四种方式：</p>
<ol>
<li>rpm包安装：最为简单，但<strong>不灵活，适合初学者使用</strong>。</li>
<li>二进制包（binary package）：归档包（archive zip），编译好的源码包，<strong>比rpm包更灵活。个人认为是安装多个服务最佳选择</strong>。</li>
<li>源码包（source package）：<strong>最灵活</strong>，可根据需求编译安装功能，<strong>难易度最高</strong>。</li>
<li>docker形式安装：其实是在容器中安装。</li>
</ol>
<p>MariaDB所有版本下载地址，<strong>建议使用BT工具或者那个你们缓存过很多日本姑娘的软件</strong>，速度更快：</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9kbG0ubWFyaWFkYi5jb20vYnJvd3NlL21hcmlhZGJfc2VydmVyLw==">https://dlm.mariadb.com/browse/mariadb_server&#x2F;<i class="fa fa-external-link-alt"></i></span></p>
<p>如果上面地址失效选择下面地址（点击Show All Files进入所有版本下载界面）：</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9tYXJpYWRiLmNvbS9kb3dubG9hZHMv">https://mariadb.com/downloads/<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>mariadb 社区服务版本 Community Server 参数说明</strong></p>
<p>MariaDB 目前最新稳定长期支持版本：<span class="exturl" data-url="aHR0cHM6Ly9kbG0ubWFyaWFkYi5jb20vYnJvd3NlL21hcmlhZGJfc2VydmVyLzIyOC8xOTE1Lw==">All Files - Community Server 10.11.6 (mariadb.com)<i class="fa fa-external-link-alt"></i></span> ，<span class="exturl" data-url="aHR0cHM6Ly9tYXJpYWRiLm9yZy9hYm91dC8jbWFpbnRlbmFuY2UtcG9saWN5">维护到<i class="fa fa-external-link-alt"></i></span> 2028 年 2 月。</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td><strong><span class="exturl" data-url="aHR0cHM6Ly9kbG0ubWFyaWFkYi5jb20vYnJvd3NlL21hcmlhZGJfc2VydmVyLzIyOC8xOTE1L2JpbnRhci1saW51eC1zeXN0ZW1kLXg4Nl82NC8=">bintar-linux-systemd-x86_64&#x2F;<i class="fa fa-external-link-alt"></i></span></strong></td>
<td>经源码包编译过的二进制 tar包（支持 systemd-x86_64 环境）</td>
</tr>
<tr>
<td><strong><span class="exturl" data-url="aHR0cHM6Ly9kbG0ubWFyaWFkYi5jb20vYnJvd3NlL21hcmlhZGJfc2VydmVyLzIyOC8xOTE1L2dhbGVyYS0yNi40LjE2Lw==">galera-26.4.14&#x2F;<i class="fa fa-external-link-alt"></i></span></strong></td>
<td>galera-26.4.14</td>
</tr>
<tr>
<td><strong><span class="exturl" data-url="aHR0cHM6Ly9kbG0ubWFyaWFkYi5jb20vYnJvd3NlL21hcmlhZGJfc2VydmVyLzIyOC8xOTE1L3JlcG8v">repo&#x2F;<i class="fa fa-external-link-alt"></i></span></strong></td>
<td>仓库（包含Debian、Ubuntu）</td>
</tr>
<tr>
<td><strong><span class="exturl" data-url="aHR0cHM6Ly9kbG0ubWFyaWFkYi5jb20vYnJvd3NlL21hcmlhZGJfc2VydmVyLzIyOC8xOTE1L3NvdXJjZS8=">source&#x2F;<i class="fa fa-external-link-alt"></i></span></strong></td>
<td>源码包</td>
</tr>
<tr>
<td><strong><span class="exturl" data-url="aHR0cHM6Ly9kbG0ubWFyaWFkYi5jb20vYnJvd3NlL21hcmlhZGJfc2VydmVyLzIyOC8xOTE1L3dpbng2NC1wYWNrYWdlcy8=">winx64-packages&#x2F;<i class="fa fa-external-link-alt"></i></span></strong></td>
<td>Windows平台（ msi 文件与免安装二进制归档包 zip 文件）</td>
</tr>
<tr>
<td><strong><span class="exturl" data-url="aHR0cHM6Ly9kbG0ubWFyaWFkYi5jb20vYnJvd3NlL21hcmlhZGJfc2VydmVyLzIyOC8xOTE1L3l1bS8=">yum&#x2F;<i class="fa fa-external-link-alt"></i></span></strong></td>
<td>yum仓库（ RHEL 系列 CentOS、Fedora、OpenSUSE、RHEL、Sles 可使用 ）</td>
</tr>
</tbody></table>
<p>你还可以通过 <span class="exturl" data-url="aHR0cHM6Ly9tYXJpYWRiLm9yZy8=">mariadb.org<i class="fa fa-external-link-alt"></i></span> 获取（下载） <span class="exturl" data-url="aHR0cHM6Ly9tYXJpYWRiLm9yZy9kb3dubG9hZA==">mariadb server<i class="fa fa-external-link-alt"></i></span></p>
<ol>
<li>MariaDB Server：可以选择版本、操作系统、平台，安装包类型。</li>
<li>MariaDB Server Repositories：可以选择操作系统发行版本、具体版本，mariadb 服务版本、仓库镜像地址（国内可选阿里云）。</li>
<li>Connectors：可以选择连接器的版本（支持编程语言 C、Java、Nodejs、ODBC 以及 Python），操作系统，安装包类型。</li>
</ol>
<p><strong>关于个人演示说明</strong>：</p>
<ul>
<li>采用最新长期支持稳定版本做演示，目前最新长期维护稳定版本是 mariadb-10.11.6。</li>
<li>Windows 平台使用 archive zip 版本。</li>
<li>Linux 平台，主要以RHEL9 系列（Rocky-9）作为演示环境，安装方式主要以 <strong>Systemd</strong>、 <strong>YUM 或者 DNF 工具</strong>进行安装。</li>
</ul>
<h2 id="Windows-平台体验-mariadb-10-11-6"><a href="#Windows-平台体验-mariadb-10-11-6" class="headerlink" title="Windows 平台体验 mariadb-10.11.6"></a>Windows 平台体验 mariadb-10.11.6</h2><p><strong>如果提示权限不足，请以管理员身份运行 Windows terminal、powershell 或者 cmd</strong>。</p>
<h3 id="Archive-Zip-形式安装"><a href="#Archive-Zip-形式安装" class="headerlink" title="Archive Zip 形式安装"></a>Archive Zip 形式安装</h3><p>使用Windows terminal 打开 powershell 或者 cmd ，进入解压后的 mariadb-10.11.6-winx64.zip 目录。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">unzip mariadb<span class="literal">-10</span>.<span class="number">11.6</span><span class="literal">-winx64</span>.zip</span><br><span class="line"><span class="built_in">cd</span> mariadb<span class="literal">-10</span>.<span class="number">11.6</span><span class="literal">-winx64</span></span><br></pre></td></tr></table></figure>

<hr>
<p>如果没有 <code>unzip</code> 命令，请尝试打开<code>powershell</code> 使用 <code>Expand-Archive</code>命令解压。</p>
<p>示例<strong>解压到默认目录</strong>：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Expand-Archive</span> .\mariadb<span class="literal">-10</span>.<span class="number">11.6</span><span class="literal">-winx64</span>.zip </span><br></pre></td></tr></table></figure>

<p>示例<strong>解压到指定目录</strong><code>D:\work\</code>，使用参数 <code>-DestinationPath</code>：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Expand-Archive</span> .\mariadb<span class="literal">-10</span>.<span class="number">11.6</span><span class="literal">-winx64</span>.zip <span class="literal">-DestinationPath</span> D:\work\</span><br></pre></td></tr></table></figure>

<p>如果你想<strong>指定压缩文件路径</strong><code>D:\Downloads\DBMS\MariaDB\winx64\mariadb-10.11.6-winx64.zip</code>，可以使用<code>-Path</code>参数：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Expand-Archive</span> <span class="literal">-Path</span> D:\Downloads\DBMS\MariaDB\winx64\mariadb<span class="literal">-10</span>.<span class="number">11.6</span><span class="literal">-winx64</span>.zip <span class="literal">-DestinationPath</span> D:\work\</span><br></pre></td></tr></table></figure>

<p>可参考资料：<span class="exturl" data-url="aHR0cHM6Ly9sZWFybi5taWNyb3NvZnQuY29tL3poLWNuL3Bvd2Vyc2hlbGwvbW9kdWxlL21pY3Jvc29mdC5wb3dlcnNoZWxsLmFyY2hpdmUvZXhwYW5kLWFyY2hpdmU/dmlldz1wb3dlcnNoZWxsLTcuNA==">Expand-Archive (Microsoft.PowerShell.Archive) - PowerShell | Microsoft Learn<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>1、初始化 mariadb</strong></p>
<p>运行 <code>mysql_install_db.exe</code> 或者 <code>mariadb-install-db.exe</code> 程序进行mariadb安装环节，创建 <code>my.ini</code> 配置文件（Creating my.ini file），移除默认用户（Removing default user），创建数据库服务完成（Creation of the database was successful）。</p>
<p><strong>如果提示权限不足，请以管理员身份运行 Windows terminal、powershell 或者 cmd</strong>。</p>
<p>示例初始化 mariadb：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">PS</span> D:\work\mariadb<span class="literal">-10</span>.<span class="number">11.6</span><span class="literal">-winx64</span>&gt; .\bin\mysql_install_db.exe</span><br><span class="line">Default <span class="keyword">data</span> directory is D:\work\mariadb<span class="literal">-10</span>.<span class="number">11.6</span><span class="literal">-winx64</span>\data</span><br><span class="line">Running bootstrap</span><br><span class="line">Creating my.ini file</span><br><span class="line">Removing default user</span><br><span class="line">Creation of the database was successful</span><br></pre></td></tr></table></figure>

<p>或者执行：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">PS</span> D:\work\mariadb<span class="literal">-10</span>.<span class="number">11.6</span><span class="literal">-winx64</span>&gt; .\bin\mariadb<span class="literal">-install-db</span>.exe</span><br></pre></td></tr></table></figure>



<p><strong>2、管理 mariadb 服务</strong></p>
<p>进入解压后的 <code>.\mariadb-10.11.6-winx64\bin</code> 或者 <code>.\mariadb-10.11.6-winx64</code>  运行 <code>mysqld</code> 或者 <code>.\bin\mysqld</code> 程序启动 mariadb 服务。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="number">2023</span><span class="literal">-12-26</span> <span class="number">21</span>:<span class="number">55</span>:<span class="number">08</span> <span class="number">0</span> [<span class="type">Note</span>] Starting MariaDB <span class="number">10.11</span>.<span class="number">6</span><span class="literal">-MariaDB</span> source revision fecd78b83785d5ae96f2c6ff340375be803cd299 as <span class="keyword">process</span> <span class="number">62216</span></span><br><span class="line"><span class="number">2023</span><span class="literal">-12-26</span> <span class="number">21</span>:<span class="number">55</span>:<span class="number">08</span> <span class="number">0</span> [<span class="type">Note</span>] InnoDB: Compressed tables use zlib <span class="number">1.3</span></span><br><span class="line"><span class="number">2023</span><span class="literal">-12-26</span> <span class="number">21</span>:<span class="number">55</span>:<span class="number">08</span> <span class="number">0</span> [<span class="type">Note</span>] InnoDB: Number of transaction pools: <span class="number">1</span></span><br><span class="line"><span class="number">2023</span><span class="literal">-12-26</span> <span class="number">21</span>:<span class="number">55</span>:<span class="number">08</span> <span class="number">0</span> [<span class="type">Note</span>] InnoDB: <span class="keyword">Using</span> crc32 + pclmulqdq instructions</span><br><span class="line"><span class="number">2023</span><span class="literal">-12-26</span> <span class="number">21</span>:<span class="number">55</span>:<span class="number">08</span> <span class="number">0</span> [<span class="type">Note</span>] InnoDB: Initializing buffer pool, total size = <span class="number">128.000</span>MiB, chunk size = <span class="number">2.000</span>MiB</span><br><span class="line"><span class="number">2023</span><span class="literal">-12-26</span> <span class="number">21</span>:<span class="number">55</span>:<span class="number">08</span> <span class="number">0</span> [<span class="type">Note</span>] InnoDB: Completed initialization of buffer pool</span><br><span class="line"><span class="number">2023</span><span class="literal">-12-26</span> <span class="number">21</span>:<span class="number">55</span>:<span class="number">08</span> <span class="number">0</span> [<span class="type">Note</span>] InnoDB: File system buffers <span class="keyword">for</span> log disabled (block size=<span class="number">4096</span> bytes)</span><br><span class="line"><span class="number">2023</span><span class="literal">-12-26</span> <span class="number">21</span>:<span class="number">55</span>:<span class="number">08</span> <span class="number">0</span> [<span class="type">Note</span>] InnoDB: <span class="keyword">End</span> of log at LSN=<span class="number">46980</span></span><br><span class="line"><span class="number">2023</span><span class="literal">-12-26</span> <span class="number">21</span>:<span class="number">55</span>:<span class="number">08</span> <span class="number">0</span> [<span class="type">Note</span>] InnoDB: <span class="number">128</span> rollback segments are active.</span><br><span class="line"><span class="number">2023</span><span class="literal">-12-26</span> <span class="number">21</span>:<span class="number">55</span>:<span class="number">08</span> <span class="number">0</span> [<span class="type">Note</span>] InnoDB: Setting file <span class="string">&#x27;./ibtmp1&#x27;</span> size to <span class="number">12.000</span>MiB. Physically writing the file full; Please wait ...</span><br><span class="line"><span class="number">2023</span><span class="literal">-12-26</span> <span class="number">21</span>:<span class="number">55</span>:<span class="number">08</span> <span class="number">0</span> [<span class="type">Note</span>] InnoDB: File <span class="string">&#x27;./ibtmp1&#x27;</span> size is now <span class="number">12.000</span>MiB.</span><br><span class="line"><span class="number">2023</span><span class="literal">-12-26</span> <span class="number">21</span>:<span class="number">55</span>:<span class="number">08</span> <span class="number">0</span> [<span class="type">Note</span>] InnoDB: log sequence number <span class="number">46980</span>; transaction id <span class="number">14</span></span><br><span class="line"><span class="number">2023</span><span class="literal">-12-26</span> <span class="number">21</span>:<span class="number">55</span>:<span class="number">08</span> <span class="number">0</span> [<span class="type">Note</span>] Plugin <span class="string">&#x27;FEEDBACK&#x27;</span> is disabled.</span><br><span class="line"><span class="number">2023</span><span class="literal">-12-26</span> <span class="number">21</span>:<span class="number">55</span>:<span class="number">08</span> <span class="number">0</span> [<span class="type">Note</span>] InnoDB: Loading buffer pool(s) from D:\work\mariadb<span class="literal">-10</span>.<span class="number">11.6</span><span class="literal">-winx64</span>\data\ib_buffer_pool</span><br><span class="line"><span class="number">2023</span><span class="literal">-12-26</span> <span class="number">21</span>:<span class="number">55</span>:<span class="number">08</span> <span class="number">0</span> [<span class="type">Note</span>] mysqld.exe: SSPI: <span class="keyword">using</span> principal name <span class="string">&#x27;localhost&#x27;</span>, mech <span class="string">&#x27;Negotiate&#x27;</span></span><br><span class="line"><span class="number">2023</span><span class="literal">-12-26</span> <span class="number">21</span>:<span class="number">55</span>:<span class="number">08</span> <span class="number">0</span> [<span class="type">Note</span>] InnoDB: Buffer pool(s) load completed at <span class="number">231226</span> <span class="number">21</span>:<span class="number">55</span>:<span class="number">08</span></span><br><span class="line"><span class="number">2023</span><span class="literal">-12-26</span> <span class="number">21</span>:<span class="number">55</span>:<span class="number">08</span> <span class="number">0</span> [<span class="type">Note</span>] Server socket created on IP: <span class="string">&#x27;::&#x27;</span>.</span><br><span class="line"><span class="number">2023</span><span class="literal">-12-26</span> <span class="number">21</span>:<span class="number">55</span>:<span class="number">08</span> <span class="number">0</span> [<span class="type">Note</span>] Server socket created on IP: <span class="string">&#x27;0.0.0.0&#x27;</span>.</span><br><span class="line"><span class="number">2023</span><span class="literal">-12-26</span> <span class="number">21</span>:<span class="number">55</span>:<span class="number">08</span> <span class="number">0</span> [<span class="type">Note</span>] D:\work\mariadb<span class="literal">-10</span>.<span class="number">11.6</span><span class="literal">-winx64</span>\bin\mysqld.exe: ready <span class="keyword">for</span> connections.</span><br><span class="line">Version: <span class="string">&#x27;10.11.6-MariaDB&#x27;</span>  socket: <span class="string">&#x27;&#x27;</span>  port: <span class="number">3306</span>  mariadb.org binary distribution</span><br></pre></td></tr></table></figure>

<p>还可以运行 <code>mariadb</code> 或者 <code>.\bin\mariadb</code> 程序启动 mariadb 服务。</p>
<p>将服务注册到 services.ms 管理：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">.\bin\mariadbd --install</span><br></pre></td></tr></table></figure>

<p>或者使用</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">.\bin\mysqld --install</span><br></pre></td></tr></table></figure>

<p>如果 <code>.\bin\mariadbd --install</code>或者 <code>.\bin\mysqld --install</code> 后不加服务名，默认服务名是 MySQL。</p>
<p>示例移除 MySQL 服务，然后重新命名为 MariaDB：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">PS D:\work\mariadb-10.11.6-winx64&gt; sc delete MySQL</span><br><span class="line">[SC] DeleteService 成功</span><br><span class="line">PS D:\work\mariadb-10.11.6-winx64&gt; .\bin\mariadbd --install MariaDB</span><br><span class="line">Service &#x27;MariaDB&#x27; successfully installed.</span><br></pre></td></tr></table></figure>

<p>通过 <code>sc</code> 命令管理 MariaDB 服务：</p>
<ol>
<li>查询 MariaDB 服务：<code>sc query mariadb</code>；</li>
<li>启动 MariaDB 服务：<code>sc start mariadb</code>；</li>
<li>停止 MariaDB 服务：<code>sc stop mariadb</code>；</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">PS D:\work\mariadb-10.11.6-winx64&gt; sc query mariadb</span><br><span class="line">SERVICE_NAME: mariadb</span><br><span class="line">        TYPE               : 10  WIN32_OWN_PROCESS</span><br><span class="line">        STATE              : 1  STOPPED</span><br><span class="line">        WIN32_EXIT_CODE    : 1077  (0x435)</span><br><span class="line">        SERVICE_EXIT_CODE  : 0  (0x0)</span><br><span class="line">        CHECKPOINT         : 0x0</span><br><span class="line">        WAIT_HINT          : 0x0</span><br><span class="line">        </span><br><span class="line">PS D:\work\mariadb-10.11.6-winx64&gt; sc start mariadb</span><br><span class="line">SERVICE_NAME: mariadb</span><br><span class="line">        TYPE               : 10  WIN32_OWN_PROCESS</span><br><span class="line">        STATE              : 2  START_PENDING</span><br><span class="line">                                (NOT_STOPPABLE, NOT_PAUSABLE, IGNORES_SHUTDOWN)</span><br><span class="line">        WIN32_EXIT_CODE    : 0  (0x0)</span><br><span class="line">        SERVICE_EXIT_CODE  : 0  (0x0)</span><br><span class="line">        CHECKPOINT         : 0x1</span><br><span class="line">        WAIT_HINT          : 0x0</span><br><span class="line">        PID                : 8056</span><br><span class="line">        FLAGS              :</span><br><span class="line">        </span><br><span class="line">PS D:\work\mariadb-10.11.6-winx64&gt; sc stop mariadb</span><br><span class="line">SERVICE_NAME: mariadb</span><br><span class="line">        TYPE               : 10  WIN32_OWN_PROCESS</span><br><span class="line">        STATE              : 3  STOP_PENDING</span><br><span class="line">                                (STOPPABLE, NOT_PAUSABLE, ACCEPTS_SHUTDOWN)</span><br><span class="line">        WIN32_EXIT_CODE    : 0  (0x0)</span><br><span class="line">        SERVICE_EXIT_CODE  : 0  (0x0)</span><br><span class="line">        CHECKPOINT         : 0x4</span><br><span class="line">        WAIT_HINT          : 0x0</span><br></pre></td></tr></table></figure>

<p>当然，你还可以通过 <code>net</code> 命令管理 mariadb 服务：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">PS</span> D:\work&gt; net <span class="built_in">start</span> mariadb</span><br><span class="line">MariaDB 服务正在启动 ......</span><br><span class="line">MariaDB 服务已经启动成功。</span><br><span class="line"></span><br><span class="line"><span class="built_in">PS</span> D:\work&gt; net stop mariadb</span><br><span class="line">MariaDB 服务正在停止..</span><br><span class="line">MariaDB 服务已成功停止。</span><br></pre></td></tr></table></figure>

<p>Windows terminal 通过 <code>netstat</code> 配合 <code>tasklist</code>  以及 <code>findstr</code> 命令监控 mariadb 服务：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">PS</span> D:\work&gt; netstat <span class="literal">-ano</span> | findstr <span class="number">3306</span></span><br><span class="line">  TCP    <span class="number">0.0</span>.<span class="number">0.0</span>:<span class="number">3306</span>           <span class="number">0.0</span>.<span class="number">0.0</span>:<span class="number">0</span>              LISTENING       <span class="number">24416</span></span><br><span class="line">  TCP    [::]:<span class="number">3306</span>              [::]:<span class="number">0</span>                 LISTENING       <span class="number">24416</span></span><br><span class="line"><span class="built_in">PS</span> D:\work&gt; tasklist | findstr <span class="number">24416</span></span><br><span class="line">mariadbd.exe                 <span class="number">24416</span> Services                   <span class="number">0</span>     <span class="number">26</span>,<span class="number">236</span> K</span><br></pre></td></tr></table></figure>





<p><strong>3、快捷关闭 mariadb 服务</strong><br>使用 Windows terminal  打开 powershell 或者 cmd ，使用快捷键 <code>ctrl + c</code> 可以停止  mariadb 服务（\mariadb-10.11.6-winx64\bin\mysqld.exe: Shutdown complete）。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="number">2023</span><span class="literal">-12-26</span> <span class="number">21</span>:<span class="number">57</span>:<span class="number">18</span> <span class="number">0</span> [<span class="type">Note</span>] console_event_handler: received CTRL_C_EVENT event, shutting down</span><br><span class="line"><span class="number">2023</span><span class="literal">-12-26</span> <span class="number">21</span>:<span class="number">57</span>:<span class="number">18</span> <span class="number">0</span> [<span class="type">Note</span>] D:\work\mariadb<span class="literal">-10</span>.<span class="number">11.6</span><span class="literal">-winx64</span>\bin\mysqld.exe (initiated by: unknown): Normal shutdown</span><br><span class="line"><span class="number">2023</span><span class="literal">-12-26</span> <span class="number">21</span>:<span class="number">57</span>:<span class="number">18</span> <span class="number">0</span> [<span class="type">Note</span>] InnoDB: FTS optimize thread exiting.</span><br><span class="line"><span class="number">2023</span><span class="literal">-12-26</span> <span class="number">21</span>:<span class="number">57</span>:<span class="number">18</span> <span class="number">0</span> [<span class="type">Note</span>] InnoDB: Starting shutdown...</span><br><span class="line"><span class="number">2023</span><span class="literal">-12-26</span> <span class="number">21</span>:<span class="number">57</span>:<span class="number">18</span> <span class="number">0</span> [<span class="type">Note</span>] InnoDB: Dumping buffer pool(s) to D:\work\mariadb<span class="literal">-10</span>.<span class="number">11.6</span><span class="literal">-winx64</span>\data\ib_buffer_pool</span><br><span class="line"><span class="number">2023</span><span class="literal">-12-26</span> <span class="number">21</span>:<span class="number">57</span>:<span class="number">18</span> <span class="number">0</span> [<span class="type">Note</span>] InnoDB: Buffer pool(s) dump completed at <span class="number">231226</span> <span class="number">21</span>:<span class="number">57</span>:<span class="number">18</span></span><br><span class="line"><span class="number">2023</span><span class="literal">-12-26</span> <span class="number">21</span>:<span class="number">57</span>:<span class="number">19</span> <span class="number">0</span> [<span class="type">Note</span>] InnoDB: Removed temporary tablespace <span class="keyword">data</span> file: <span class="string">&quot;./ibtmp1&quot;</span></span><br><span class="line"><span class="number">2023</span><span class="literal">-12-26</span> <span class="number">21</span>:<span class="number">57</span>:<span class="number">19</span> <span class="number">0</span> [<span class="type">Note</span>] InnoDB: Shutdown completed; log sequence number <span class="number">46980</span>; transaction id <span class="number">15</span></span><br><span class="line"><span class="number">2023</span><span class="literal">-12-26</span> <span class="number">21</span>:<span class="number">57</span>:<span class="number">19</span> <span class="number">0</span> [<span class="type">Note</span>] D:\work\mariadb<span class="literal">-10</span>.<span class="number">11.6</span><span class="literal">-winx64</span>\bin\mysqld.exe: Shutdown complete</span><br></pre></td></tr></table></figure>



<p><strong>4、登录 mariadb monitor 字符命令行模式</strong></p>
<p>如下示例，进入 <code>.\mariadb-10.11.6-winx64</code> 目录，执行 <code>.\bin\mysql -uroot -p</code>。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">PS</span> D:\work\mariadb<span class="literal">-10</span>.<span class="number">11.6</span><span class="literal">-winx64</span>&gt; .\bin\mysql <span class="literal">-uroot</span> <span class="literal">-p</span></span><br></pre></td></tr></table></figure>

<p>或者使用 <code>.\bin\mariadb -uroot -p</code>：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">PS</span> D:\work\mariadb<span class="literal">-10</span>.<span class="number">11.6</span><span class="literal">-winx64</span>&gt; .\bin\mariadb <span class="literal">-uroot</span> <span class="literal">-p</span></span><br></pre></td></tr></table></figure>

<p>默认 mariadb 或者 MySQL  端口号（port）均为 3306，实际生产环境可能会视实际情况而改变。比如我个人测试环境安装了多个服务，在 my.ini 或者 my.cnf 中会指定端口为 3307，达到演示目的。执行方式略有变动，指定 <code>-P 3307</code>，如下：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">PS</span> D:\work\mariadb<span class="literal">-10</span>.<span class="number">11.6</span><span class="literal">-winx64</span>&gt; .\bin\mysql <span class="literal">-uroot</span> <span class="literal">-p</span> <span class="literal">-P</span> <span class="number">3307</span></span><br></pre></td></tr></table></figure>

<p>或者使用：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">PS</span> D:\work\mariadb<span class="literal">-10</span>.<span class="number">11.6</span><span class="literal">-winx64</span>&gt; .\bin\mariadb <span class="literal">-uroot</span> <span class="literal">-p</span> <span class="literal">-P</span> <span class="number">3307</span></span><br></pre></td></tr></table></figure>





<p><strong>5、初步体验</strong></p>
<p>如果你使用了第三方数据库软件管理工具，注释用法如下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 注释用法一</span></span><br><span class="line"><span class="comment">/** 注释用法二 **/</span></span><br></pre></td></tr></table></figure>



<p>演示过程，加了注释只为便于初学者理解：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [mysql]<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="number">1</span>; <span class="comment">-- 检索 1，不经过任何表</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---+</span></span><br><span class="line"></span><br><span class="line">MariaDB [mysql]<span class="operator">&gt;</span> EXPLAIN <span class="keyword">SELECT</span> <span class="number">1</span>; <span class="comment">-- 使用 EXPLAIN 执行计划分析</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+-------------+-------+------+---------------+------+---------+------+------+----------------+</span></span><br><span class="line"><span class="operator">|</span> id   <span class="operator">|</span> select_type <span class="operator">|</span> <span class="keyword">table</span> <span class="operator">|</span> type <span class="operator">|</span> possible_keys <span class="operator">|</span> key  <span class="operator">|</span> key_len <span class="operator">|</span> <span class="keyword">ref</span>  <span class="operator">|</span> <span class="keyword">rows</span> <span class="operator">|</span> Extra          <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+-------------+-------+------+---------------+------+---------+------+------+----------------+</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">1</span> <span class="operator">|</span> SIMPLE      <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span> <span class="keyword">NULL</span>          <span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span> <span class="keyword">No</span> tables used <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+-------------+-------+------+---------------+------+---------+------+------+----------------+</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询数据库软件具体版本号</span></span><br><span class="line">MariaDB [mysql]<span class="operator">&gt;</span> <span class="keyword">SELECT</span> version(); </span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+</span></span><br><span class="line"><span class="operator">|</span> version()      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">10.11</span><span class="number">.6</span><span class="operator">-</span>MariaDB <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/** 查询所有数据库 **/</span></span><br><span class="line">MariaDB [mysql]<span class="operator">&gt;</span> <span class="keyword">SHOW</span> DATABASES;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+</span></span><br><span class="line"><span class="operator">|</span> Database           <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+</span></span><br><span class="line"><span class="operator">|</span> information_schema <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> mysql              <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> performance_schema <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> sys                <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+</span></span><br></pre></td></tr></table></figure>



<h3 id="MSI-文件形式安装"><a href="#MSI-文件形式安装" class="headerlink" title="MSI 文件形式安装"></a>MSI 文件形式安装</h3><p>由于安装过程比较容易，此处省略教程，详情请参考<span class="exturl" data-url="aHR0cHM6Ly9tYXJpYWRiLmNvbS9rYi9lbi9pbnN0YWxsaW5nLW1hcmlhZGItbXNpLXBhY2thZ2VzLW9uLXdpbmRvd3Mv">Installing MariaDB MSI Packages on Windows - MariaDB Knowledge Base<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="Linux-平台体验-mariadb-10-11-6"><a href="#Linux-平台体验-mariadb-10-11-6" class="headerlink" title="Linux 平台体验 mariadb-10.11.6"></a>Linux 平台体验 mariadb-10.11.6</h2><p><strong>友情提醒</strong>：可直接参考 <span class="exturl" data-url="aHR0cHM6Ly9kZXYubXlzcWwuY29tL2RvYy9yZWZtYW4vOC4wL2VuL2luc3RhbGxpbmcuaHRtbA==">MySQL<i class="fa fa-external-link-alt"></i></span> 或者 <span class="exturl" data-url="aHR0cHM6Ly9tYXJpYWRiLmNvbS9rYi9lbi9nZXR0aW5nLWluc3RhbGxpbmctYW5kLXVwZ3JhZGluZy1tYXJpYWRiLw==">MariadDB<i class="fa fa-external-link-alt"></i></span> 官方文档进行安装哟！当然，可能存在细微差别。</p>
<h3 id="RHEL、Rocky、CentOS环境"><a href="#RHEL、Rocky、CentOS环境" class="headerlink" title="RHEL、Rocky、CentOS环境"></a>RHEL、Rocky、CentOS环境</h3><p><strong>RHEL 9  使用 YUM &amp; DNF 工具安装 mariadb</strong>：</p>
<p>新建 mariadb 服务仓库：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd /etc/yum.repos.d</span><br><span class="line">touch MariaDB.repo</span><br></pre></td></tr></table></figure>

<p>如果存在 <code>Nvim</code> 或者 <code>Vim</code> 环境，可以直接编辑 <code>MariaDB.repo</code> 文件进行补全：</p>
<p><code>Nvim /etc/yum.repos.d/MariaDB.repo</code></p>
<p><code>vim /etc/yum.repos.d/MariaDB.repo</code></p>
<p>复制如下内容到 <code>MariaDB.repo</code> ：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">MariaDB 10.11 RedHatEnterpriseLinux repository list - created 2023-12-25 13:48 UTC</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">https://mariadb.org/download/</span></span><br><span class="line">[mariadb]</span><br><span class="line">name = MariaDB</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">rpm.mariadb.org is a dynamic mirror <span class="keyword">if</span> your preferred mirror goes offline. See https://mariadb.org/mirrorbits/ <span class="keyword">for</span> details.</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">baseurl = https://rpm.mariadb.org/10.11/rhel/<span class="variable">$releasever</span>/<span class="variable">$basearch</span></span></span><br><span class="line">baseurl = https://mirrors.aliyun.com/mariadb/yum/10.11/rhel/$releasever/$basearch</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">gpgkey = https://rpm.mariadb.org/RPM-GPG-KEY-MariaDB</span></span><br><span class="line">gpgkey = https://mirrors.aliyun.com/mariadb/yum/RPM-GPG-KEY-MariaDB</span><br><span class="line">gpgcheck = 1</span><br></pre></td></tr></table></figure>

<p>国内访问<span class="exturl" data-url="aHR0cHM6Ly9ycG0ubWFyaWFkYi5vcmcv">mariadb官方镜像地址<i class="fa fa-external-link-alt"></i></span>可能较缓慢，此处采用了<span class="exturl" data-url="aHR0cHM6Ly9taXJyb3JzLmFsaXl1bi5jb20v">阿里云<i class="fa fa-external-link-alt"></i></span>的镜像地址。</p>
<p><strong>安装</strong>：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo dnf install MariaDB-server MariaDB-client</span><br></pre></td></tr></table></figure>

<p>安装成功，监控 mariadb 状态：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@localhost local]# systemctl status mariadb</span><br><span class="line">● mariadb.service - MariaDB 10.11.6 database server</span><br><span class="line">     Loaded: loaded (/usr/lib/systemd/system/mariadb.service; disabled; preset: disabled)</span><br><span class="line">    Drop-In: /etc/systemd/system/mariadb.service.d</span><br><span class="line">             └─migrated-from-my.cnf-settings.conf</span><br><span class="line">     Active: active (running) since Tue 2023-12-26 15:23:02 CST; 46min ago</span><br><span class="line">       Docs: man:mariadbd(8)</span><br><span class="line">             https://mariadb.com/kb/en/library/systemd/</span><br><span class="line">    Process: 3639 ExecStartPre=/bin/sh -c systemctl unset-environment _WSREP_START_POSITION (code=exited, status=0/SUCCESS)</span><br><span class="line">    Process: 3640 ExecStartPre=/bin/sh -c [ ! -e /usr/bin/galera_recovery ] &amp;&amp; VAR= ||   VAR=`cd /usr/bin/..; /usr/bin/galera_recovery`; [&gt;</span><br><span class="line">    Process: 3660 ExecStartPost=/bin/sh -c systemctl unset-environment _WSREP_START_POSITION (code=exited, status=0/SUCCESS)</span><br><span class="line">   Main PID: 3648 (mariadbd)</span><br><span class="line">     Status: &quot;Taking your SQL requests now...&quot;</span><br><span class="line">      Tasks: 9 (limit: 10685)</span><br><span class="line">     Memory: 216.1M</span><br><span class="line">        CPU: 681ms</span><br><span class="line">     CGroup: /system.slice/mariadb.service</span><br><span class="line">             └─3648 /usr/sbin/mariadbd</span><br><span class="line"></span><br><span class="line">12月 26 15:23:02 localhost.localdomain mariadbd[3648]: 2023-12-26 15:23:02 0 [Note] InnoDB: File &#x27;./ibtmp1&#x27; size is now 12.000MiB.</span><br><span class="line">12月 26 15:23:02 localhost.localdomain mariadbd[3648]: 2023-12-26 15:23:02 0 [Note] InnoDB: log sequence number 45502; transaction id 14</span><br><span class="line">12月 26 15:23:02 localhost.localdomain mariadbd[3648]: 2023-12-26 15:23:02 0 [Note] InnoDB: Loading buffer pool(s) from /var/lib/mysql/ib_&gt;</span><br><span class="line">12月 26 15:23:02 localhost.localdomain mariadbd[3648]: 2023-12-26 15:23:02 0 [Note] Plugin &#x27;FEEDBACK&#x27; is disabled.</span><br><span class="line">12月 26 15:23:02 localhost.localdomain mariadbd[3648]: 2023-12-26 15:23:02 0 [Note] Server socket created on IP: &#x27;0.0.0.0&#x27;.</span><br><span class="line">12月 26 15:23:02 localhost.localdomain mariadbd[3648]: 2023-12-26 15:23:02 0 [Note] Server socket created on IP: &#x27;::&#x27;.</span><br><span class="line">12月 26 15:23:02 localhost.localdomain mariadbd[3648]: 2023-12-26 15:23:02 0 [Note] InnoDB: Buffer pool(s) load completed at 231226 15:23:&gt;</span><br><span class="line">12月 26 15:23:02 localhost.localdomain mariadbd[3648]: 2023-12-26 15:23:02 0 [Note] /usr/sbin/mariadbd: ready for connections.</span><br><span class="line">12月 26 15:23:02 localhost.localdomain mariadbd[3648]: Version: &#x27;10.11.6-MariaDB&#x27;  socket: &#x27;/var/lib/mysql/mysql.sock&#x27;  port: 3306  MariaD&gt;</span><br><span class="line">12月 26 15:23:02 localhost.localdomain systemd[1]: Started MariaDB 10.11.6 database server.</span><br></pre></td></tr></table></figure>





<p><strong>友情提醒</strong>：初次安装 mariadb 数据库软件， root 用户密码为空，可登录终端自行更改。</p>
<p>修改 root@localhost 用户密码：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mariadb <span class="operator">-</span>uroot <span class="operator">-</span>p</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;mypwd@123&#x27;</span>;</span><br></pre></td></tr></table></figure>



<p><strong>小结</strong>：</p>
<ul>
<li>优点：使用 <code>yum</code> 或者 <code>dnf</code> 工具在线，有网络，安装过程比较简单。相比离线下载 rpm 包容易上手，会自动匹配依赖包。</li>
<li>缺点：不灵活。</li>
</ul>
<h3 id="Systemd-环境"><a href="#Systemd-环境" class="headerlink" title="Systemd 环境"></a>Systemd 环境</h3><p>可参考资料：<span class="exturl" data-url="aHR0cHM6Ly9tYXJpYWRiLmNvbS9rYi9lbi9pbnN0YWxsaW5nLW1hcmlhZGItYmluYXJ5LXRhcmJhbGxzLw==">Installing MariaDB Binary Tarballs - MariaDB Knowledge Base<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>Systemd 环境安装</strong>：</p>
<p>预备环境，开启 EPEL，<strong>AlmaLinux 9, Rocky Linux 9</strong>：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">dnf config-manager --set-enabled crb</span><br><span class="line">dnf install epel-release</span><br></pre></td></tr></table></figure>

<p><strong>安装必备依赖包</strong>：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">dnf install libaio</span><br><span class="line">dnf -y install ncurses-compat-libs</span><br></pre></td></tr></table></figure>

<p>安装步骤：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">groupadd mysql</span><br><span class="line">useradd -r -g mysql -s /bin/false mysql # 创建 mysql 用户（没有服务器主机登录权限的用户）</span><br><span class="line">cd /usr/local</span><br><span class="line">tar -zxvpf /path-to/mariadb-VERSION-OS.tar.gz</span><br><span class="line">ln -s mariadb-VERSION-OS mysql</span><br><span class="line">cd mysql</span><br><span class="line">./scripts/mariadb-install-db --user=mysql</span><br><span class="line">chown -R root .</span><br><span class="line">chown -R mysql data</span><br></pre></td></tr></table></figure>

<p><strong>重点解析</strong>：</p>
<ol>
<li><p><code>groupadd mysql</code>：创建 mysql 组。</p>
</li>
<li><p><code>useradd -r -g mysql -s /bin/false mysql</code>： 创建 mysql 用户（没有服务器主机登录权限的用户）。</p>
</li>
<li><p><code>/path-to/mariadb-VERSION-OS.tar.gz</code>：你下载的 mariadb 安装包名称所在路径。</p>
<p>比如我示例安装路径 <code>/usr/local/mariadb-10.11.6-linux-systemd-x86_64.tar.gz</code>。</p>
</li>
<li><p><code>./scripts/mariadb-install-db --user=mysql</code>：指定 mysql 用户，安装 mariadb 服务。</p>
</li>
</ol>
<p><strong>启动 mariadb 服务</strong>：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./bin/mysqld_safe --user=mysql &amp;</span><br><span class="line">or</span><br><span class="line">./bin/mysqld_safe --defaults-file=~/.my.cnf --user=mysql &amp;</span><br></pre></td></tr></table></figure>

<p>配置环境变量：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export PATH=$PATH:/usr/local/mysql/bin/</span><br></pre></td></tr></table></figure>

<p><strong>写入配置文件，永久生效，全局则做如下设置</strong>，编辑：<code>vim /etc/profile</code>，需要 root 用户权限，或者使用 <code>sudo vim /etc/profile</code>： </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">mysql home</span></span><br><span class="line">MYSQL_HOME=/usr/local/mysql</span><br><span class="line">PATH=$PATH:$MYSQL_HOME/bin</span><br><span class="line">export MYSQL_HOME PATH</span><br></pre></td></tr></table></figure>

<p>设置 mysqld 服务使用 systemctl 进行管理：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cp support-files/mysql.server /etc/init.d/mysql.server</span><br><span class="line">systemctl daemon-reload</span><br></pre></td></tr></table></figure>

<p>设置 mariadb 服务使用 systemctl 进行管理：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cp support-files/systemd/mariadb.service /usr/lib/systemd/system/mariadb.service</span><br><span class="line">systemctl daemon-reload</span><br></pre></td></tr></table></figure>

<p>启动 mariadb 与停止服务：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl start mariadb.service</span><br><span class="line">systemctl stop mariadb.service</span><br></pre></td></tr></table></figure>

<p>设置 mariadb 自启：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl enable mariadb.service</span><br></pre></td></tr></table></figure>

<p>监控 mariadb 服务：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl status mariadb.service</span><br></pre></td></tr></table></figure>





<h3 id="Source-源码包环境"><a href="#Source-源码包环境" class="headerlink" title="Source 源码包环境"></a>Source 源码包环境</h3><p>本人工作中很少遇到需要使用源码包环境编译安装，扩展或者精简某些功能。此处省略教程，详情请参考<span class="exturl" data-url="aHR0cHM6Ly9tYXJpYWRiLmNvbS9rYi9lbi9jb21waWxpbmctbWFyaWFkYi1mcm9tLXNvdXJjZS8=">Compiling MariaDB From Source - MariaDB Knowledge Base<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="MariaDB-服务监控"><a href="#MariaDB-服务监控" class="headerlink" title="MariaDB 服务监控"></a>MariaDB 服务监控</h3><p><strong>友情提醒</strong>，如果条件允许，可以利用 cockpit 工具协助管理 Linux 服务器：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">dnf install cockpit</span><br><span class="line">systemctl enable --now cockpit.socket</span><br><span class="line">firewall-cmd --add-service=cockpit --permanent</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure>

<p>安装 cockpit 服务并设置开机自启，利用 firewalld 防火墙管理工具设置 cockpit 服务加入到 firewall-cmd 进行管理。</p>
<p><strong>terminal 监控 mariadb 服务</strong>：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">netstat -tlunp | grep 3306</span><br><span class="line">ps -aux | grep mariadb</span><br><span class="line">ps -ef | grep mariadb</span><br></pre></td></tr></table></figure>





<h2 id="mariadb-字符集：无法插入中文"><a href="#mariadb-字符集：无法插入中文" class="headerlink" title="mariadb 字符集：无法插入中文"></a>mariadb 字符集：无法插入中文</h2><p>使用标准形式安装 mariadb 服务，默认字符集是 <strong>latin1</strong>，插入中文，会出现如下提示：</p>
<p><code>MariaDB [test]&gt; insert into t1 values(1,&#39;mariadb 最新长期稳定支持版本是 10.11.6&#39;);</code><br><code>ERROR 1366 (22007): Incorrect string value: &#39;\xE6\x9C\x80\xE6\x96\xB0...&#39; for column test.t1.db_names at row 1</code></p>
<p>创建表时指定字符集，成功插入中文内容：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [test]<span class="operator">&gt;</span> <span class="keyword">create</span> <span class="keyword">table</span> t2(id <span class="type">int</span> <span class="keyword">primary</span> key,db_names <span class="type">varchar</span>(<span class="number">64</span>)) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8mb4_general_ci;</span><br><span class="line">MariaDB [test]<span class="operator">&gt;</span> <span class="keyword">insert</span> <span class="keyword">into</span> t2 <span class="keyword">values</span>(<span class="number">1</span>,<span class="string">&#x27;mariadb 最新长期稳定支持版是 10.11.6&#x27;</span>);</span><br><span class="line">MariaDB [test]<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t2\G;</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">      id: <span class="number">1</span></span><br><span class="line">db_names: mariadb 最新长期稳定支持版是 <span class="number">10.11</span><span class="number">.6</span></span><br></pre></td></tr></table></figure>



<p><strong>System Variables 系统变量</strong></p>
<table>
<thead>
<tr>
<th>Variable</th>
<th>MariaDB in Debian</th>
<th>Standard MariaDB</th>
<th>Notes</th>
</tr>
</thead>
<tbody><tr>
<td>character_set_server</td>
<td>utf8mb4</td>
<td>latin1</td>
<td>Debian sets a default character set that can support emojis etc.</td>
</tr>
<tr>
<td>collation_server</td>
<td>utf8mb4_general_ci</td>
<td>latin1_swedish_ci</td>
<td></td>
</tr>
</tbody></table>
<p>Windows 平台配置 my.ini，编辑 <code>\mariadb-10.11.6-winx64\data\my.ini</code> ：</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[mysqld]</span></span><br><span class="line"><span class="attr">datadir</span>=D:/work/mariadb-<span class="number">10.11</span>.<span class="number">6</span>-winx64/data</span><br><span class="line"><span class="attr">character_set_server</span>=utf8mb4</span><br><span class="line"><span class="attr">collation_server</span>=utf8mb4_general_ci</span><br><span class="line"><span class="section">[client]</span></span><br><span class="line"><span class="attr">plugin-dir</span>=D:\work\mariadb-<span class="number">10.11</span>.<span class="number">6</span>-winx64/lib/plugin</span><br></pre></td></tr></table></figure>

<p>设置好默认字符集以及字符集排序规则，重启 mariadb 服务即可。</p>
<p><strong>查询与设置字符集</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> VARIABLES <span class="keyword">LIKE</span> <span class="string">&#x27;character_set\_%&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------+---------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name            <span class="operator">|</span> <span class="keyword">Value</span>   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------+---------+</span></span><br><span class="line"><span class="operator">|</span> character_set_client     <span class="operator">|</span> utf8mb3 <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> character_set_connection <span class="operator">|</span> utf8mb3 <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> character_set_database   <span class="operator">|</span> latin1  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> character_set_filesystem <span class="operator">|</span> <span class="type">binary</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> character_set_results    <span class="operator">|</span> utf8mb3 <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> character_set_server     <span class="operator">|</span> latin1  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> character_set_system     <span class="operator">|</span> utf8mb3 <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------+---------+</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SHOW</span> VARIABLES <span class="keyword">LIKE</span> <span class="string">&#x27;collation%&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------+--------------------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name        <span class="operator">|</span> <span class="keyword">Value</span>              <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------+--------------------+</span></span><br><span class="line"><span class="operator">|</span> collation_connection <span class="operator">|</span> utf8mb3_general_ci <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> collation_database   <span class="operator">|</span> latin1_swedish_ci  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> collation_server     <span class="operator">|</span> latin1_swedish_ci  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------+--------------------+</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span> <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SHOW</span> VARIABLES <span class="keyword">LIKE</span> <span class="string">&#x27;character_set\_%&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------+---------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name            <span class="operator">|</span> <span class="keyword">Value</span>   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------+---------+</span></span><br><span class="line"><span class="operator">|</span> character_set_client     <span class="operator">|</span> utf8mb4 <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> character_set_connection <span class="operator">|</span> latin1  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> character_set_database   <span class="operator">|</span> latin1  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> character_set_filesystem <span class="operator">|</span> <span class="type">binary</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> character_set_results    <span class="operator">|</span> utf8mb4 <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> character_set_server     <span class="operator">|</span> latin1  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> character_set_system     <span class="operator">|</span> utf8mb3 <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------+---------+</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SHOW</span> VARIABLES <span class="keyword">LIKE</span> <span class="string">&#x27;collation%&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------+-------------------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name        <span class="operator">|</span> <span class="keyword">Value</span>             <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------+-------------------+</span></span><br><span class="line"><span class="operator">|</span> collation_connection <span class="operator">|</span> latin1_swedish_ci <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> collation_database   <span class="operator">|</span> latin1_swedish_ci <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> collation_server     <span class="operator">|</span> latin1_swedish_ci <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------+-------------------+</span></span><br></pre></td></tr></table></figure>





<h2 id="web-开发阶段"><a href="#web-开发阶段" class="headerlink" title="web 开发阶段"></a>web 开发阶段</h2><p><strong>极简体验</strong></p>
<p>这里所说的开发阶段，是指利用第三方工具技术与 DBMS 发行厂商发行的数据库软件进行沟通交流。</p>
<p>mariadb Java 连接驱动与 Java 版本、JDBC 版本对应关系：</p>
<table>
<thead>
<tr>
<th align="left">Java Version(s)</th>
<th align="left">Recommended MariaDB Connector&#x2F;J Release Series</th>
<th align="left">JDBC Version</th>
</tr>
</thead>
<tbody><tr>
<td align="left">Java 21, Java 17, Java 11, Java 8</td>
<td align="left">MariaDB Connector&#x2F;J 3.3</td>
<td align="left">JDBC 4.2</td>
</tr>
<tr>
<td align="left">Java 17, Java 11, Java 8</td>
<td align="left">MariaDB Connector&#x2F;J 3.0</td>
<td align="left">JDBC 4.2</td>
</tr>
<tr>
<td align="left">Java 11, Java 8</td>
<td align="left">MariaDB Connector&#x2F;J 2.7</td>
<td align="left">JDBC 4.2</td>
</tr>
</tbody></table>
<h3 id="MariaDB-之-JDBC"><a href="#MariaDB-之-JDBC" class="headerlink" title="MariaDB 之 JDBC"></a>MariaDB 之 JDBC</h3><p>示例：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> DriverManager.getConnection(<span class="string">&quot;jdbc:mariadb://localhost:3306/DB?user=root&amp;password=myPassword&quot;</span>);</span><br></pre></td></tr></table></figure>

<p>使用 Java JDBC 连接 mariadb，采用 <span class="exturl" data-url="aHR0cHM6Ly9tYXZlbi5hcGFjaGUub3JnLw==">Maven<i class="fa fa-external-link-alt"></i></span> 或者 <span class="exturl" data-url="aHR0cHM6Ly9kb2NzLmdyYWRsZS5vcmcvY3VycmVudC91c2VyZ3VpZGUvZ3JhZGxlX2lkZXMuaHRtbA==">Gradle in IDEs<i class="fa fa-external-link-alt"></i></span> 进行构建。</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9tYXJpYWRiLmNvbS9rYi9lbi9hYm91dC1tYXJpYWRiLWNvbm5lY3Rvci1qLw==">About MariaDB Connector&#x2F;J - MariaDB Knowledge Base<i class="fa fa-external-link-alt"></i></span></p>
<p><span class="exturl" data-url="aHR0cHM6Ly9tYXJpYWRiLmNvbS9rYi9lbi9qYXZhLWNvbm5lY3Rvci11c2luZy1tYXZlbi8=">Java Connector Using Maven - MariaDB Knowledge Base<i class="fa fa-external-link-alt"></i></span></p>
<p><span class="exturl" data-url="aHR0cHM6Ly9tYXJpYWRiLmNvbS9rYi9lbi9qYXZhLWNvbm5lY3Rvci11c2luZy1ncmFkbGUv">Java Connector Using Gradle - MariaDB Knowledge Base<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p><strong>maven 配置</strong></p>
<p>设置 pom.xml 配置文件，使用 mariadb 进行连接测试。maven 的镜像仓库，可以使用<span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIuYWxpeXVuLmNvbS9tdm4vZ3VpZGU=">阿里仓库服务 (aliyun.com)<i class="fa fa-external-link-alt"></i></span>的镜像源地址。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mariadb.jdbc<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mariadb-java-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>



<p>创建普通的 <span class="exturl" data-url="aHR0cHM6Ly9tYXZlbi5hcGFjaGUub3JnL2Rvd25sb2FkLmNnaQ==">Maven<i class="fa fa-external-link-alt"></i></span> 项目或者 springboot 项目，然后配置 pom.xml。如果访问、下载速度缓慢，这是正常现象，建议使用国内镜像站，比如阿里云提供的 <span class="exturl" data-url="aHR0cHM6Ly9taXJyb3JzLmFsaXl1bi5jb20vYXBhY2hlL21hdmVuLw==">apache-maven安装包下载、开源镜像站<i class="fa fa-external-link-alt"></i></span> ，<span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIuYWxpeXVuLmNvbS9taXJyb3IvbWF2ZW4v">maven aliyun config<i class="fa fa-external-link-alt"></i></span>，更多配置可以参考<span class="exturl" data-url="aHR0cHM6Ly9kZXZvcHMuYWxpeXVuLmNvbS8/Y2hhbm5lbD1tYXZlbi5hbGl5dW4=">阿里云云效<i class="fa fa-external-link-alt"></i></span> 。</p>
<p>配置前建议备份一份原始 settings.xml 作为参考，<code>apache-maven-3.8.6\conf\settings.xml</code> 具体参考配置如下：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirrors</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>aliyunmaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun maven<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 老版本url --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--&lt;url&gt;https://maven.aliyun.com/nexus/content/groups/public/&lt;/url&gt;--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 新版本url --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>*<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span>        </span><br><span class="line">  <span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirrors</span>&gt;</span></span><br></pre></td></tr></table></figure>



<p><strong>编写Java代码</strong></p>
<p>借助编辑器 <span class="exturl" data-url="aHR0cHM6Ly93d3cuZWNsaXBzZS5vcmcvZG93bmxvYWRzL3BhY2thZ2VzLw==">Eclipse for JavaEE<i class="fa fa-external-link-alt"></i></span>、[VSCode](<span class="exturl" data-url="aHR0cHM6Ly9jb2RlLnZpc3VhbHN0dWRpby5jb20vRG93bmxvYWQ=">Download Visual Studio Code - Mac, Linux, Windows<i class="fa fa-external-link-alt"></i></span>)、<span class="exturl" data-url="aHR0cHM6Ly9zcHJpbmcuaW8vdG9vbHM=">Spring Tool<i class="fa fa-external-link-alt"></i></span>  或者 <span class="exturl" data-url="aHR0cHM6Ly93d3cuamV0YnJhaW5zLmNvbS5jbi9pZGVhL2Rvd25sb2FkLw==">IntelliJ IDEA<i class="fa fa-external-link-alt"></i></span>。</p>
<p><strong>目的</strong>：使用纯JDBC测试，或者ORM框架mybatis、hibernate、或者 JPA，最终达到对数据库进行最基本的沟通交流（增删改查）。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo.jdbc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.DriverManager;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestConnMariaDB</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException, SQLException &#123;    </span><br><span class="line">        TestSQLConnMariadb();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Logger</span> <span class="variable">log</span> <span class="operator">=</span> LoggerFactory.getLogger(TestSQLConnMariadb.class);</span><br><span class="line">    <span class="comment">//初始化参数</span></span><br><span class="line">    <span class="keyword">static</span> <span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">PreparedStatement</span> <span class="variable">ps</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">ResultSet</span> <span class="variable">rs</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> SQLException</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> ClassNotFoundException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">TestSQLConnMariadb</span><span class="params">()</span> <span class="keyword">throws</span> SQLException, ClassNotFoundException &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Class.forName(<span class="string">&quot;org.mariadb.jdbc.Driver&quot;</span>);</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 1.获取连接参数url,username,password,默认端口是3306</span></span><br><span class="line"><span class="comment">             * mariadb：url =&quot;jdbc:mariadb://127.0.0.1:3306/test&quot;;</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="comment">/** mariadb 拼接url **/</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;jdbc:mariadb://127.0.0.1:3306/TEST?useUnicode=true&amp;characterEncoding=utf-8&quot;</span>;</span><br><span class="line">            <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> <span class="string">&quot;root&quot;</span>;</span><br><span class="line">            <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> <span class="string">&quot;mypwd@123&quot;</span>;</span><br><span class="line">            <span class="comment">//获取连接</span></span><br><span class="line">            conn = DriverManager.getConnection(url, username, password);</span><br><span class="line">            <span class="keyword">if</span>(<span class="literal">null</span> != conn) &#123;</span><br><span class="line">                log.info(<span class="string">&quot;connect database success...&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                log.error(<span class="string">&quot;connect database failed...&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//查询数据库</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;SELECT * FROM STUDY&quot;</span>;</span><br><span class="line">            <span class="comment">// 3.通过preparedStatement执行SQL</span></span><br><span class="line">            ps = conn.prepareStatement(sql);    </span><br><span class="line">            <span class="comment">// 4.执行查询,获取结果集</span></span><br><span class="line">            rs = ps.executeQuery();</span><br><span class="line">            <span class="comment">// 5.遍历结果集，前提是你的数据库创建了表以及有数据</span></span><br><span class="line">            <span class="keyword">while</span> (rs.next()) &#123;</span><br><span class="line">                <span class="comment">//对应数据库表中字段类型Int使用getInt，varchar使用getString</span></span><br><span class="line">                System.out.println(<span class="string">&quot;ID:&quot;</span> + rs.getInt(<span class="string">&quot;ID&quot;</span>));</span><br><span class="line">                System.out.println(<span class="string">&quot;姓名：&quot;</span> + rs.getString(<span class="string">&quot;NAMES&quot;</span>));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="comment">// 6.关闭连接 释放资源</span></span><br><span class="line">            rs.close();</span><br><span class="line">            ps.close();</span><br><span class="line">            conn.close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="Springboot-之-JPA"><a href="#Springboot-之-JPA" class="headerlink" title="Springboot 之 JPA"></a>Springboot 之 JPA</h3><p>如果 SpringMVC（模型-视图-控制器） 按标准书写：数据持久层、数据业务层、数据展示层。<strong>注意了</strong>，个人演示环境，省略了业务逻辑层，直接调用 repository 获取数据。</p>
<p><strong>配置 pom.xml</strong>：</p>
<p>如果不清楚需要引入哪些 jar 包，可以前往 <span class="exturl" data-url="aHR0cHM6Ly9tdm5yZXBvc2l0b3J5LmNvbS8=">Maven Repository<i class="fa fa-external-link-alt"></i></span>  搜索。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 引入数据库驱动 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mariadb.jdbc<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mariadb-java-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 引入 springboot 默认数据源 HikariCP--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 引入thymeleaf模板 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>	</span><br></pre></td></tr></table></figure>



<p><strong>配置 properties 文件</strong>：</p>
<p><code>application.properties</code></p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring.profiles.active</span>=<span class="string">dev</span></span><br></pre></td></tr></table></figure>



<p><code>application-dev.properties</code></p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="comment"># api port 默认8080</span></span><br><span class="line"><span class="attr">server.port</span>=<span class="string">8081</span></span><br><span class="line"><span class="comment">#server.servlet.context-path=</span></span><br><span class="line"><span class="comment"># 开发环境多配置文件设置：dev、prod、test</span></span><br><span class="line"><span class="comment"># 默认会找application.properties或者application.yml文件</span></span><br><span class="line"><span class="comment"># 如果设置bootstrap.properties(优先级更高)</span></span><br><span class="line"><span class="comment">#spring.profiles.active=dev</span></span><br><span class="line"><span class="comment">#spring.profiles.include=application-dev.properties</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 服务名称</span></span><br><span class="line"><span class="attr">spring.application.name</span>=<span class="string">springboot-crud</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># Nacos &amp; Eureka</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># thymeleaf base config</span></span><br><span class="line"><span class="comment"># 配置prefix(前缀:路径classpath:/templates/templates.html/)</span></span><br><span class="line"><span class="attr">spring.thymeleaf.prefix</span>=<span class="string">classpath:/templates/templates.html/</span></span><br><span class="line"><span class="comment"># 配置suffix(后缀:格式名.html)  </span></span><br><span class="line"><span class="attr">spring.thymeleaf.suffix</span>=<span class="string">.html</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 骚操作 修改启动logo</span></span><br><span class="line"><span class="comment"># 方式一</span></span><br><span class="line"><span class="comment">#spring.banner.image.location=classpath:banner/test.png</span></span><br><span class="line"><span class="comment">#spring.banner.image.pixelmode=TEXT</span></span><br><span class="line"><span class="comment"># 方式二</span></span><br><span class="line"><span class="comment">#spring.banner.location=classpath:banner/logo.txt</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">###################################DB配置#######################################</span></span><br><span class="line"><span class="comment"># datasource config</span></span><br><span class="line"><span class="attr">spring.datasource.type</span>=<span class="string">com.zaxxer.hikari.HikariDataSource</span></span><br><span class="line"><span class="comment">#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver   # MySQL JDBC</span></span><br><span class="line"><span class="attr">spring.datasource.driver-class-name</span>=<span class="string">org.mariadb.jdbc.Driver</span></span><br><span class="line"><span class="comment">#spring.datasource.url=jdbc:mysql://127.0.0.1:3306/world?useUnicode=true&amp;characterEncoding=UTF-8&amp;autoReconnect=true</span></span><br><span class="line"><span class="attr">spring.datasource.url</span>=<span class="string">jdbc:mariadb://127.0.0.1:3306/world?useUnicode=true&amp;characterEncoding=UTF-8&amp;autoReconnect=true</span></span><br><span class="line"><span class="attr">spring.datasource.username</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">spring.datasource.password</span>=<span class="string">mypwd@123</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># hikariCP连接池具体配置</span></span><br><span class="line"><span class="attr">spring.datasource.hikari.connection-timeout</span>=<span class="string">30000</span></span><br><span class="line"><span class="attr">spring.datasource.hikari.minimum-idle</span>=<span class="string">5</span></span><br><span class="line"><span class="attr">spring.datasource.hikari.maximum-pool-size</span>=<span class="string">20</span></span><br><span class="line"><span class="attr">spring.datasource.hikari.auto-commit</span>=<span class="string">true</span></span><br><span class="line"><span class="attr">spring.datasource.hikari.idle-timeout</span>=<span class="string">600000</span></span><br><span class="line"><span class="attr">spring.datasource.hikari.pool-name</span>=<span class="string">DataSourceHikariCP</span></span><br><span class="line"><span class="attr">spring.datasource.hikari.max-lifetime</span>=<span class="string">1800000</span></span><br><span class="line"><span class="attr">spring.datasource.hikari.connection-test-query</span>=<span class="string">SELECT 1</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># JPA配置</span></span><br><span class="line"><span class="attr">spring.jpa.show-sql</span>=<span class="string">true</span></span><br><span class="line"><span class="attr">spring.jpa.hibernate.ddl-auto</span>=<span class="string">none</span></span><br><span class="line"><span class="comment"># 使用驼峰命名方式</span></span><br><span class="line"><span class="attr">spring.jpa.hibernate.naming.physical-strategy</span>=<span class="string">org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl</span></span><br><span class="line"><span class="comment"># 指定映射方式为下划线</span></span><br><span class="line"><span class="comment">#spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy</span></span><br><span class="line"><span class="comment">###################################DB配置#######################################</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># minIO FsatDFS</span></span><br><span class="line"><span class="comment"># Solr ElasticSearch</span></span><br><span class="line"><span class="comment"># Redis</span></span><br><span class="line"><span class="comment"># MongoDB</span></span><br><span class="line"><span class="comment"># Kafka</span></span><br><span class="line"><span class="comment"># RocketMQ</span></span><br><span class="line"><span class="comment"># Dubbo Zookeeper</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># custom conf 使用自定义对象配置</span></span><br><span class="line"><span class="comment">#num.one=1 </span></span><br><span class="line"><span class="comment">#num.two=2</span></span><br><span class="line"><span class="comment">#num.three=3</span></span><br><span class="line"><span class="comment">#num.description=&quot;$&#123;num.one&#125;,$&#123;num.two&#125;,$&#123;num.three&#125;&quot;</span></span><br><span class="line"><span class="comment">#custom.config.find=波多老湿</span></span><br><span class="line"><span class="comment">#custom.config.say=你好啊</span></span><br></pre></td></tr></table></figure>





<p><strong>编写 CityRepository 接口类</strong>：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.repository;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.JpaRepository;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.Query;</span><br><span class="line"><span class="keyword">import</span> com.example.entity.City;</span><br><span class="line"><span class="keyword">import</span> com.example.entity.bo.CityBo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">CityRepository</span> <span class="keyword">extends</span> <span class="title class_">JpaRepository</span>&lt;City, Object&gt;&#123;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Query(value = &quot;select c.ID, c.Name, c.CountryCode ,c.District ,c.Population  from world.city c;&quot;,nativeQuery = true)</span></span><br><span class="line">	<span class="keyword">public</span> List&lt;City&gt; <span class="title function_">findAll</span><span class="params">()</span>;</span><br><span class="line">	</span><br><span class="line">	<span class="meta">@Query(value = &quot;select c.ID, c.Name, c.CountryCode from world.city c;&quot;,nativeQuery = true)</span></span><br><span class="line">	<span class="keyword">public</span> List&lt;Map&lt;String, Object&gt;&gt; <span class="title function_">findAll</span><span class="params">(City city)</span>;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Query(value = &quot;select c.ID, c.Name, c.CountryCode from world.city c;&quot;,nativeQuery = true)</span></span><br><span class="line">	<span class="keyword">public</span> List&lt;Map&lt;CityBo, Object&gt;&gt; <span class="title function_">findCityBo</span><span class="params">()</span>;</span><br><span class="line">	</span><br><span class="line">	<span class="meta">@Query(value = &quot;select c.Name, c.CountryCode from world.city c;&quot;,nativeQuery = true)</span></span><br><span class="line">	<span class="keyword">public</span> List&lt;Map&lt;CityBo, Object&gt;&gt; <span class="title function_">findCity</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure>





<p><strong>编写 CityController 类测试访问</strong>：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.Optional;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.DeleteMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PutMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"><span class="keyword">import</span> com.example.entity.City;</span><br><span class="line"><span class="keyword">import</span> com.example.entity.bo.CityBo;</span><br><span class="line"><span class="keyword">import</span> com.example.repository.CityRepository;</span><br><span class="line"><span class="keyword">import</span> com.example.service.impl.CityServiceImpl;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 示例使用JPA进行CRUD</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> kart</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/world&quot;)</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CityController</span> &#123;	</span><br><span class="line">	<span class="meta">@Autowired</span></span><br><span class="line">	<span class="keyword">private</span> CityServiceImpl cityService;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 访问接口: http://127.0.0.1:8080/world/city/findCityFive</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@desc</span> 查询当前表五条数据</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="meta">@GetMapping(&quot;/city/findCityFive&quot;)</span></span><br><span class="line">	<span class="keyword">public</span> List&lt;City&gt; <span class="title function_">findCityFive</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> repository.findAll().subList(<span class="number">0</span>, <span class="number">5</span>);</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>



<h3 id="Thymeleaf-页面交互"><a href="#Thymeleaf-页面交互" class="headerlink" title="Thymeleaf 页面交互"></a>Thymeleaf 页面交互</h3><p>使用 <span class="exturl" data-url="aHR0cHM6Ly93d3cudGh5bWVsZWFmLm9yZy8=">Thymeleaf<i class="fa fa-external-link-alt"></i></span> 与数据展示层（controller）进行交互。</p>
<p><strong>编写 ThymeleafController 类</strong>：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> com.example.entity.bo.CityBo;</span><br><span class="line"><span class="keyword">import</span> com.example.repository.CityRepository;</span><br><span class="line"><span class="keyword">import</span> jakarta.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(value = &quot;/thymeleaf&quot;)</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ThymeleafController</span> &#123;	</span><br><span class="line">	 <span class="meta">@Autowired</span></span><br><span class="line">	 <span class="keyword">private</span> CityRepository repository;</span><br><span class="line">	 </span><br><span class="line">	 <span class="meta">@GetMapping(&quot;/findCity&quot;)</span></span><br><span class="line">	 <span class="keyword">public</span> Object <span class="title function_">findCity</span><span class="params">(Model model)</span> &#123;</span><br><span class="line">		 List&lt;Map&lt;CityBo, Object&gt;&gt; list = repository.findCity().subList(<span class="number">5</span>, <span class="number">15</span>);</span><br><span class="line">		 model.addAttribute(<span class="string">&quot;list&quot;</span>, list);</span><br><span class="line">		 <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">	 &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p><strong>编写 index.html 页面</strong>：</p>
<p>使用如下路径方式构建 <code>resources\templates\templates.html\index.html</code></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html; charset=UTF-8&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">title</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- thymeleaf测试使用 </span></span><br><span class="line"><span class="comment">	&lt;section&gt;hello &amp;nbsp;&lt;span th:text=&quot;thymeleaf&quot;&gt;&lt;/span&gt;&lt;/section&gt; &lt;br /&gt;</span></span><br><span class="line"><span class="comment">	&lt;section&gt;hello &amp;nbsp;&lt;span th:text=&quot;$&#123;test&#125;&quot;&gt;&lt;/span&gt;&lt;/section&gt;&lt;br /&gt;</span></span><br><span class="line"><span class="comment">	&lt;section&gt;hello &amp;nbsp;&lt;span th:text=&quot;$&#123;idx&#125;&quot;&gt;&lt;/span&gt;&lt;/section&gt;&lt;br /&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- thymeleaf检查maps大小与非空 --&gt;</span>	</span><br><span class="line">	maps大小：<span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;#maps.size(list)&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">	maps是否为空：<span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;#maps.isEmpty(list)&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">	containsValue：<span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;#maps.containsValue(list,value)&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">	</span><br><span class="line"><span class="comment">&lt;!-- thymeleaf遍历列表 --&gt;</span>	</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span> thymeleaf 迭代列表 <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 常用护眼色：#B5E6B5、#FAF9DE、#FFF2E2、#FDE6E0、</span></span><br><span class="line"><span class="comment">				#E3EDCD、#DCE2F1、#E9EBFE、	#EAEAEF --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">width</span>=<span class="string">&quot;100%&quot;</span> <span class="attr">border</span>=<span class="string">&quot;0&quot;</span> <span class="attr">cellspacing</span>=<span class="string">&quot;1&quot;</span> <span class="attr">cellpadding</span>=<span class="string">&quot;4&quot;</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#cccccc&quot;</span> <span class="attr">class</span>=<span class="string">&quot;tabtop13&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">th</span>&gt;</span>城市名称<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">th</span>&gt;</span>国家代码<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">tr</span> <span class="attr">th:each</span>=<span class="string">&quot;cityList: $&#123;list&#125;&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;cityList.Name&#125;&quot;</span>&gt;</span>name<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;cityList.countryCode&#125;&quot;</span>&gt;</span>countryCode<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>





<p><strong>参考资料</strong></p>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9tYXJpYWRiLm9yZy8=">MariaDB 官网<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9tYXJpYWRiLm9yZy9kb2N1bWVudGF0aW9uLw==">MariaDB 官方文档<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9tYXJpYWRiLmNvbS9rYi9lbi9kb2N1bWVudGF0aW9uLw==">MariaDB Server Documentation - MariaDB Knowledge Base<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9tYXJpYWRiLm9yZy93cC1jb250ZW50L3VwbG9hZHMvMjAyMy8xMS9NYXJpYURCU2VydmVyS25vd2xlZGdlQmFzZS5wZGY=">MariaDBServerKnowledgeBase<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9kb2NzLmZlZG9yYXByb2plY3Qub3JnL2VuLVVTL2VwZWwvI19hbG1hbGludXhfOV9yb2NreV9saW51eF85">Extra Packages for Enterprise Linux (EPEL) :: Fedora Docs (fedoraproject.org)<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9sZWFybi5taWNyb3NvZnQuY29tL3poLWNuL3Bvd2Vyc2hlbGwvbW9kdWxlL21pY3Jvc29mdC5wb3dlcnNoZWxsLmFyY2hpdmUvZXhwYW5kLWFyY2hpdmU/dmlldz1wb3dlcnNoZWxsLTcuNA==">Expand-Archive (Microsoft.PowerShell.Archive) - PowerShell | Microsoft Learn<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>如果你能看到这篇博文笔记，希望对你的工作和学习有些许帮助。</p>
<p>—END—</p>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>MariaDB</tag>
      </tags>
  </entry>
  <entry>
    <title>解决Oracle无法删除oci.dll</title>
    <url>/2022/02/18/%E8%A7%A3%E5%86%B3Oracle%E6%97%A0%E6%B3%95%E5%88%A0%E9%99%A4oci-dll/</url>
    <content><![CDATA[<p>最近用虚拟机安装Oracle11g测试，遇到了各种问题，就总结了一下。用Google搜索，遇到OCI.DLL无法删除，查到被msdtc服务占用。解决方案，先停止该服务，然后删除OCI.DLL即可。</p>
<ol>
<li>卸载的时候，首先停止与Oracle相关的几个服务。</li>
</ol>
<p>卸载Oracle11g R2客户端的时候，找到如下路径执行命令，这里对应你安装时的路径（<strong>以管理员运行cmd</strong>）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">D:\app\product\11.2.0\client_1\deinstall\deinstall.bat</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>如果遇到无法删除oci.dll文件，显示被以下程序占用</li>
</ol>
<blockquote>
<p>Distributed Transaction Coordinator Service</p>
</blockquote>
<p><strong>究其原因，是msdtc这个服务的启动了，无法删除oci.dll</strong></p>
<ol start="3">
<li><p>关闭msdtc服务，<strong>以管理员运行cmd</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">net stop msdtc</span><br></pre></td></tr></table></figure>
</li>
<li><p>恢复服务msdtc</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">net start msdtc</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>Oracle</tag>
      </tags>
  </entry>
  <entry>
    <title>如何优雅的管理redis</title>
    <url>/2022/01/11/%E5%A6%82%E4%BD%95%E4%BC%98%E9%9B%85%E7%9A%84%E7%AE%A1%E7%90%86redis/</url>
    <content><![CDATA[<p>如何给Redis设置密码，以防止其它未经授权的客户端进行连接呢？怎么知道哪些命令执行的比较慢呢？</p>
<p>本文将带你熟悉Redis管理方面的知识，包含安全和通信协议等等内容。<br>与此同时，还会介与之紧密相关的第三方管理工具。</p>
<p>上一篇博客《<a href="https://blog.cnwangk.top/2022/01/07/Redis%E5%85%A5%E9%97%A8%E5%88%B0%E5%AE%9E%E8%B7%B5%EF%BC%8C%E7%94%B1%E6%8C%81%E4%B9%85%E5%8C%96%E5%BC%95%E5%8F%91%E7%9A%84%E6%80%9D%E8%80%83/">Redis入门篇</a>》，其实只能作入门指南来看，并没有多少深度，但是对于面试有不少帮助的。标题有噱头才会引起更多爱好者多Redis的探索，进一步走进Redis这个五彩斑斓的世界，进阶知识只有深入学习才能更快掌握。<br><img data-src="https://img-blog.csdnimg.cn/img_convert/436293c527de9e67229f219aa0531e82.png"></p>
<h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><p>本文将带你熟悉Redis管理方面的知识，包含安全和通信协议等等内容。<br>与此同时，还会介与之紧密相关的第三方管理工具。</p>
<h2 id="一、安全"><a href="#一、安全" class="headerlink" title="一、安全"></a>一、安全</h2><p>谈到安全，我们会联想到些什么？<br>比如，可信任的环境会给我们带来安全感，陌生的环境则会让你感到未知的恐惧和孤独。<br>再比如，国产化替代信创项目（安可替代），这里我简称为国创项目，就是要达到信任、安全可靠以及自主可控的的目的。</p>
<p>上面谈了这么多（瞎扯了很多，我黔驴尽穷了），只是为了提升我们的安全意识。</p>
<p>Redis以简洁为美，创始人曾这么描述过。但同样在安全层面也没做过多的工作。</p>
<p>这里补充一点，上次没有讲到如何<strong>优雅的关闭Redis服务</strong>。虽然可以杀掉进程来控制，但推荐使用如下方式关闭：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ /opt/redis-6.0.8/src/redis-cli shutdown</span><br></pre></td></tr></table></figure>



<h3 id="1、可信环境"><a href="#1、可信环境" class="headerlink" title="1、可信环境"></a>1、可信环境</h3><p>Redis的安全设计是基于“Redis运行在可信任的环境”这个前提下做出来的。在生产环境（正式发布环境）运行时，不允许外部直接连接到Redis服务器上，此时应该通过应用程序进行中转，运行在可信任的环境中是保证Redis安全至关重要的方法。</p>
<h4 id="1-1、bind参数"><a href="#1-1、bind参数" class="headerlink" title="1.1、bind参数"></a>1.1、bind参数</h4><p>在Redis的默认配置文件redis.conf中，只会接受本地的网络请求。但通过在配置文件中修改<code>bind</code>参数更改这一设置，默认的bind设置为：</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/c4f4c6687321a07ddc99bb7f801a7791.png"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">bind</span>:127.0.0.1</span><br></pre></td></tr></table></figure>
<p><code>bind</code>参数同样可以绑定多个IP地址，IP地址以间隔空格分隔，如下示例：</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/795e23618279bb0ee49f0bb64f9a2a78.png"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Examples:</span></span><br><span class="line"><span class="comment"># bind 192.168.1.100 10.0.0.1</span></span><br><span class="line"><span class="comment"># bind 127.0.0.1 ::1</span></span><br></pre></td></tr></table></figure>

<h4 id="1-2、protected-mode参数"><a href="#1-2、protected-mode参数" class="headerlink" title="1.2、protected-mode参数"></a>1.2、protected-mode参数</h4><p>在Redis3.2的版本中，引入了一个特殊模式：保护模式，来更好地确保Redis运行在可信环境之中。值得注意的是，保护模式在默认情况下是开启的。</p>
<p>参数设置：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#开启保护模式</span></span><br><span class="line">protected-mode <span class="built_in">yes</span></span><br><span class="line"><span class="comment">#禁止保护模式</span></span><br><span class="line">protected-mode no</span><br></pre></td></tr></table></figure>

<p><img data-src="https://img-blog.csdnimg.cn/img_convert/93868f3ed3486718d82cd0d3e9bec6a7.png"></p>
<p><strong>作用</strong>：</p>
<ul>
<li>开启保护模式：接收到来自不在bind绑定的网络客户端发送命令时，如果客户端没有设置密码，Redis会返回错误拒绝（DENIED）执行该命令。</li>
<li>禁止保护模式：可以在配置中使用<code>protected-mode no</code>禁止。</li>
<li>安全：对于生产环境需要确保开启了护盾（防火墙），达到确保可信客户端连接服务器的目的。</li>
</ul>
<p>在测试的时候，比如我在Windows下连接我的linux上的Redis服务。为了方便测试，此时临时关闭防护墙firewalld，或者采用<code>firewall-cmd</code>命令加入6379默认端口以及Redis服务，关于防火墙的知识可以参考我之前的文章《<a href="https://blog.cnwangk.top/2022/01/12/Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BD%BF%E7%94%A8firewalld%E5%92%8Ciptables/">firewalld与iptables防火墙管理工具</a>》：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#临时关闭防火墙</span></span><br><span class="line">systemctl stop firewalld.service</span><br></pre></td></tr></table></figure>



<p><strong>注意</strong>：Redis3.2之前的版本默认会绑定所有网络接口，任何网络上的计算机（包含公网）都可连接至Redis服务器上。<strong>使用旧版的需要注意，最好修改这个参数，或者升级到新版。</strong></p>
<h3 id="2、数据库密码"><a href="#2、数据库密码" class="headerlink" title="2、数据库密码"></a>2、数据库密码</h3><p>Redis中提供了数据库密码功能。最开始我傻傻的以为直接就能连上，岂不是没有密码，真不安全。直到后来在工作的实践中，才发现原来这货可以是设置密码的，只是我以前并不知道而已。值得注意的是：并且在<strong>6.0版本中支持多用户权限控制功能</strong>。</p>
<h4 id="2-1、Redis密码设置"><a href="#2-1、Redis密码设置" class="headerlink" title="2.1、Redis密码设置"></a>2.1、Redis密码设置</h4><p>在我的上一篇文章也有提到过。Redis数据库密码是通过参数<code>requirepass</code>来控制的，默认的6.0.8版本是禁用掉了，需要手动开启。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/798f79444481e544b01bf3433d52a988.png"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#默认禁用掉了</span></span><br><span class="line"><span class="comment">#requirepass foobared</span></span><br><span class="line"><span class="comment">#启用密码</span></span><br><span class="line">requirepass 123456</span><br></pre></td></tr></table></figure>

<p>客户端每次连接到Redis时都需要发送密码，否则Redis会拒绝执行客户端发来的命令。例如我使用Windows客户端连接：<br>开启了保护模式，开始提示<code>DENIED</code>。利用<code>bind</code>绑定了信任的ip或者禁止保护模式，最后还会提示密码为验证。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/498f4b37ae17297ec410557b3b333b5e.png"></p>
<p>示例：设置键sky，set “sky” “hello redis”</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#设置sky</span></span><br><span class="line"><span class="built_in">set</span> <span class="string">&quot;sky&quot;</span> <span class="string">&quot;hello redis&quot;</span></span><br></pre></td></tr></table></figure>

<p>重启redis服务（需要读取到redis.conf文件），会提示验证密码，如下图所示。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/d8fa33b47449bfdc2d5be5b6c12e13e4.png"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#获取sky</span></span><br><span class="line">get sky</span><br><span class="line">(error) NOAUTH Authentication required. <span class="comment">#提示需要密码认证</span></span><br><span class="line"><span class="comment">#认证</span></span><br><span class="line">auth 123456</span><br><span class="line"><span class="comment">#再次获取sky</span></span><br><span class="line">get sky</span><br><span class="line"><span class="string">&quot;hello redis&quot;</span></span><br></pre></td></tr></table></figure>

<p>虽然数据库设置密码很方便，但是在复杂的场景中经常需要使用更加细粒度的访问权限控制。比如：</p>
<ul>
<li>生产环境中的应用程序下不应该具有执行CONFIG、FLUSHALL涉及到管理或者数据安全的命令权限</li>
<li>多个程序因不同用途共用一个Redis服务时，建议限制某个程序访问其它程序产生的键。</li>
</ul>
<p>tips：为此，Redis6.0推出了访问控制列表（ACL）功能，可以支持多用户，并且设置每个用户可以使用的命令和访问的键名规则等。可以通过配置文件设置，如下：</p>
<ul>
<li>将ACL配置直接写在Redis配置文件中</li>
<li>将ACL配置写在单独的文件中，然后在Redis配置文件通过<code>aclfile</code>指令引入，例如：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">aclifile /opt/person/conf.acl</span><br></pre></td></tr></table></figure>

<h4 id="2-1、Redis主从复制注意事项"><a href="#2-1、Redis主从复制注意事项" class="headerlink" title="2.1、Redis主从复制注意事项"></a>2.1、Redis主从复制注意事项</h4><p>在配置Redis复制的时候，如果主库设置了密码，需要在从库的配置文件中通过<code>masterauth &lt;master-password&gt;</code>参数设置主库的密码，使从库连接主库时自动使用auth命令验证，配置如下。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/8cf1899f875e0bba335a4daa06878779.png"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">masterauth &lt;master-password&gt;</span><br></pre></td></tr></table></figure>



<h3 id="3、命名命令"><a href="#3、命名命令" class="headerlink" title="3、命名命令"></a>3、命名命令</h3><p>Redis支持在配置文件中将命令重命名，例如将FLUSHALL命令重命名为一个比较复杂的名字，达到保证只有自己的应用可以使用该命令。当然，这个功能可以看做在6.0版本之前没有ACL，作为对命令安全性的一个补充。如下配置：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rename-command FLUSHALL redisabcdsky1r2d3is</span><br></pre></td></tr></table></figure>

<p>如果希望直接一点，直接禁用，通过重命名为空字符</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rename-command FLUSHALL <span class="string">&quot;&quot;</span></span><br></pre></td></tr></table></figure>

<p><strong>再次强调</strong>：安全起见，无论设置密码还是重命名命令，都应遵循保证配置文件的安全性，否则就无意义了。</p>
<h2 id="二、通信协议"><a href="#二、通信协议" class="headerlink" title="二、通信协议"></a>二、通信协议</h2><p>之前有了解到Redis的主从复制以及持久化AOF文件的格式，通过了解Redis通信协议能更好的理解Redis。</p>
<p>当然Redis支持两种通信协议。如下：</p>
<ul>
<li>一种是二进制安全的统一<strong>请求协议（unified request protocol）</strong></li>
<li>第二种是比较直观的便于在telnet程序中输入的<strong>简单协议</strong></li>
</ul>
<h3 id="1、简单协议"><a href="#1、简单协议" class="headerlink" title="1、简单协议"></a>1、简单协议</h3><p>简单协议适合在telnet程序中和Redis通信。如下是通过telnet测试与Redis通信：</p>
<p>linux下Redhat系列安装telnet通过<strong>yum命令</strong>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install telnet</span><br></pre></td></tr></table></figure>

<p>Windows在<strong>启用或关闭Windows功能中启用telnet</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@dywangk redis-6.0.8]<span class="comment"># telnet 127.0.0.1 6379</span></span><br><span class="line">Trying 127.0.0.1...</span><br><span class="line">Connected to 127.0.0.1.</span><br><span class="line">Escape character is <span class="string">&#x27;^]&#x27;</span>.</span><br><span class="line">auth 123456 <span class="comment">#同样需要验证密码,之前设置了密码</span></span><br><span class="line">+OK</span><br><span class="line"><span class="built_in">set</span> foo bar </span><br><span class="line">+OK</span><br><span class="line">get foo</span><br><span class="line"><span class="variable">$3</span></span><br><span class="line">bar</span><br><span class="line"><span class="comment">#输入quit退出telnet</span></span><br></pre></td></tr></table></figure>

<h4 id="1-1、错误回复"><a href="#1-1、错误回复" class="headerlink" title="1.1、错误回复"></a>1.1、错误回复</h4><p>错误回复（error reply）以 - 开头并在后面跟着错误信息：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-ERR unknown <span class="built_in">command</span> ``, with args beginning with:</span><br></pre></td></tr></table></figure>

<h4 id="1-2、状态回复"><a href="#1-2、状态回复" class="headerlink" title="1.2、状态回复"></a>1.2、状态回复</h4><p>状态回复（status reply）以+开头</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">+OK</span><br></pre></td></tr></table></figure>

<h4 id="1-3、整数回复"><a href="#1-3、整数回复" class="headerlink" title="1.3、整数回复"></a>1.3、整数回复</h4><p>整数回复（integer reply）以：开头</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">:3</span><br></pre></td></tr></table></figure>

<h4 id="1-4、字符串回复"><a href="#1-4、字符串回复" class="headerlink" title="1.4、字符串回复"></a>1.4、字符串回复</h4><p>字符串（bulk reply）回复以$开头</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="variable">$3</span></span><br></pre></td></tr></table></figure>

<h3 id="2、统一请求协议"><a href="#2、统一请求协议" class="headerlink" title="2、统一请求协议"></a>2、统一请求协议</h3><p>统一请求协议是从Redis1.2开始加入的，其命令格式与多行字符串回复格式类似。也以telnet为例演示：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@dywangk redis-6.0.8]<span class="comment"># telnet 127.0.0.1 6379</span></span><br><span class="line">Trying 127.0.0.1...</span><br><span class="line">Connected to 127.0.0.1.</span><br><span class="line">Escape character is <span class="string">&#x27;^]&#x27;</span>.</span><br><span class="line">auth 123456 <span class="comment">#同样需要验证密码,之前设置了密码</span></span><br><span class="line">+OK</span><br><span class="line">*3</span><br><span class="line"><span class="variable">$3</span></span><br><span class="line"><span class="built_in">set</span></span><br><span class="line"><span class="variable">$3</span></span><br><span class="line">foo</span><br><span class="line"><span class="variable">$3</span></span><br><span class="line">bar  </span><br><span class="line">+OK</span><br><span class="line"><span class="comment">#输入quit退出telnet</span></span><br></pre></td></tr></table></figure>

<p>同样，在发送命令的时候指定了后面字符串的长度，所以每个命令的每个参数都可以包含二进制的字符。</p>
<p>Redis的AOF文件和主从复制时数据库发送的内容使用了统一请求协议。如果简单的使用telnet与Redis进行通信，使用简单协议即可。</p>
<h2 id="三、管理工具"><a href="#三、管理工具" class="headerlink" title="三、管理工具"></a>三、管理工具</h2><h3 id="1、redis-cli"><a href="#1、redis-cli" class="headerlink" title="1、redis-cli"></a>1、redis-cli</h3><p>看到redis-cli大家肯定不陌生，是的我们学习测试快速融入都是使用的redis-cli命令进行的，Redis自带的客户端。Redis可以执行大部分的Redis命令，包括查看数据库信息的<code>info</code>命令、更改数据库设置的<code>config</code>命令和强制进行RDB快照的<code>save</code>命令。简单介绍几个管理Redis常用的命令。</p>
<h4 id="1-1、耗时命令日志"><a href="#1-1、耗时命令日志" class="headerlink" title="1.1、耗时命令日志"></a>1.1、耗时命令日志</h4><p>当一条命令执行时间超过限制时，Redis会将该命令的执行时间等信息加入耗时命令日志（slow log）以供开发者查看。通过配置文件的<code>slowlog-log-slower-than 10000</code>参数设置限制，注意单位是微秒，可以看到默认为10000。通过<code>slowlog-max-len 128</code>限制记录的条数。</p>
<p>获取当前耗时命令日志</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">slowlog get</span><br></pre></td></tr></table></figure>

<p>每条日志由以下4个部分组成</p>
<ul>
<li>唯一日志ID</li>
<li>执行的Unix时间</li>
<li>耗时时间，单位为微秒</li>
<li>命令及其参数</li>
</ul>
<p><strong>测试时，将slowlog-log-slower-than 0 参数设置为0</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">slowlog-log-slower-than 0</span><br></pre></td></tr></table></figure>

<h4 id="1-2、命令监控"><a href="#1-2、命令监控" class="headerlink" title="1.2、命令监控"></a>1.2、命令监控</h4><p>Redis提供了monitor来监控Redis执行的所有命令，redis-cli也支持。例如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">monitor</span><br></pre></td></tr></table></figure>

<p><strong>注意</strong>：一般用于调试和纠错使用。</p>
<h3 id="2、Medis"><a href="#2、Medis" class="headerlink" title="2、Medis"></a>2、Medis</h3><p>获取地址：<span class="exturl" data-url="aHR0cHM6Ly9nZXRtZWRpcy5jb20v">https://getmedis.com/<i class="fa fa-external-link-alt"></i></span></p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/677402bef9281e78b688bed59c7e0939.png"></p>
<p>当Redis中的键比较多时，此时使用redis-cli管理略显不足。Medis是一款macOS下的可视化Redis管理工具。通过界面即可实现管理Redis。</p>
<h3 id="3、phpRedisAdmin"><a href="#3、phpRedisAdmin" class="headerlink" title="3、phpRedisAdmin"></a>3、phpRedisAdmin</h3><p>看到phpRedisAdmin，大家也许会联想到以网页形式管理MySQL的phpMyAdmin管理工具。</p>
<p>下载地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2VyaWtkdWJiZWxib2VyL3BocFJlZGlzQWRtaW4=">https://github.com/erikdubbelboer/phpRedisAdmin<i class="fa fa-external-link-alt"></i></span></p>
<p>关于工具的使用，可以参考github说明，这里不做过多介绍。</p>
<p><strong>建议</strong>：github那访问速度大家都懂的，建议导入到gitee作为镜像仓库使用，每隔一段时间同步。</p>
<h3 id="4、Rdbtools"><a href="#4、Rdbtools" class="headerlink" title="4、Rdbtools"></a>4、Rdbtools</h3><p>一款采用Python语言开发的Redis的快照文件解析器，它可以根据快照文件导出json数据文件、分析Redis中每个键的占用空间情况。</p>
<p>下载地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3NyaXBhdGhpa3Jpc2huYW4vcmVkaXMtcmRiLXRvb2xz">https://github.com/sripathikrishnan/redis-rdb-tools<i class="fa fa-external-link-alt"></i></span></p>
<p>关于工具的使用，可以参考github说明，这里不做过多介绍。</p>
<h3 id="5、命令参考"><a href="#5、命令参考" class="headerlink" title="5、命令参考"></a>5、命令参考</h3><p>最后介绍一个Redis命令大全参考网站，<strong>源自于Redis官网</strong>，链接如下：</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9yZWRpcy5pby9jb21tYW5kcw==">https://redis.io/commands<i class="fa fa-external-link-alt"></i></span></p>
<h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>粗缯大布裹生涯，腹有诗书气自华。–《和董传留别》苏轼</p>
<p>随着自己知识宝库的不断积累，才会慢慢感受到读书破万卷，下笔如有神的感觉。</p>
<p>—END—</p>
]]></content>
      <categories>
        <category>NOSQL</category>
      </categories>
      <tags>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title>解决eclipse导入项目后Html文件中文乱码问题</title>
    <url>/2017/06/26/%E8%A7%A3%E5%86%B3eclipse%E5%AF%BC%E5%85%A5%E9%A1%B9%E7%9B%AE%E5%90%8EHtml%E6%96%87%E4%BB%B6%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<p>几年前，刚毕业不久，接触到eclipse for JavaEE开发工具，当时不知道默认编码为GBK，或者是ISO-8859-1。</p>
<p>解决eclipse导入项目后Html文件中文乱码问题，修改字符编码，主要是修改html文件的编码。</p>
<h3 id="一、修改workspace的默认编码"><a href="#一、修改workspace的默认编码" class="headerlink" title="一、修改workspace的默认编码"></a>一、修改workspace的默认编码</h3><ol>
<li>依次找到：windows-&gt;General-&gt;Workspace</li>
<li>全局生效：将 Text file encoding 的other选项改为 UTF-8</li>
</ol>
<h3 id="二、修改Resource默认字符编码"><a href="#二、修改Resource默认字符编码" class="headerlink" title="二、修改Resource默认字符编码"></a>二、修改Resource默认字符编码</h3><ol>
<li>单项目生效：右键项目找到Text file encoding</li>
<li>将other选项改为 UTF-8</li>
</ol>
<h3 id="三、解决方案"><a href="#三、解决方案" class="headerlink" title="三、解决方案"></a>三、解决方案</h3><p>依次找到路径：</p>
<ol>
<li>windows-&gt;perferences-&gt;General-&gt;Content Types-&gt;Text-&gt;HTML</li>
<li>然后将Default encoding设置为UTF-8即可。</li>
</ol>
<p>——END——</p>
]]></content>
      <categories>
        <category>开发工具</category>
      </categories>
      <tags>
        <tag>eclipse</tag>
      </tags>
  </entry>
  <entry>
    <title>解决sublime-text打开txt文件乱码以及被墙并禁止更新提示</title>
    <url>/2021/03/08/%E8%A7%A3%E5%86%B3sublime-text%E6%89%93%E5%BC%80txt%E6%96%87%E4%BB%B6%E4%B9%B1%E7%A0%81%E4%BB%A5%E5%8F%8A%E8%A2%AB%E5%A2%99%E5%B9%B6%E7%A6%81%E6%AD%A2%E6%9B%B4%E6%96%B0%E6%8F%90%E7%A4%BA/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>原因： <span class="exturl" data-url="aHR0cHM6Ly9wYWNrYWdlY29udHJvbC5pby8=">https://packagecontrol.io<i class="fa fa-external-link-alt"></i></span>这个网址被墙了，没法安装一些需要的插件。如果不信邪，嘿嘿，你可以试一下直接访问的效果。</p>
<p>最近测试了一下，居然访问进去了，虽然依旧是龟速前进，但可以访问。</p>
<p>也可以直接进入这个页面<br><span class="exturl" data-url="aHR0cHM6Ly9wYWNrYWdlY29udHJvbC5pby9wYWNrYWdlcy9Db252ZXJ0VG9VVEY4">https://packagecontrol.io/packages/ConvertToUTF8<i class="fa fa-external-link-alt"></i></span></p>
<p>github上的中文说明文档<br><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3NlYW5saWFuZy9Db252ZXJ0VG9VVEY4L2Jsb2IvbWFzdGVyL1JFQURNRS56aF9DTi5tZA==">https://github.com/seanliang/ConvertToUTF8/blob/master/README.zh_CN.md<i class="fa fa-external-link-alt"></i></span></p>
<h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="一、方法一"><a href="#一、方法一" class="headerlink" title="一、方法一"></a>一、方法一</h2><p>依次选中，最后修改<code>Settings</code>文件并保存<br><code>Preferences</code> -&gt; <code>Settings</code></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">//设置默认编码</span><br><span class="line"><span class="string">&quot;default_encoding&quot;</span>: <span class="string">&quot;UTF-8&quot;</span>,</span><br><span class="line"></span><br><span class="line">//解决被墙</span><br><span class="line">    <span class="string">&quot;bootstrapped&quot;</span>: true,</span><br><span class="line">    //输入备用链接，部分可能失效，自己尝试，选择一个即可</span><br><span class="line">    <span class="string">&quot;channels&quot;</span>:</span><br><span class="line">    [</span><br><span class="line">    	<span class="string">&quot;http://static.bolin.site/channel_v3.json&quot;</span>,</span><br><span class="line">        <span class="string">&quot;https://erhan.in/channel_v3.json&quot;</span>,</span><br><span class="line">        <span class="string">&quot;http://cst.stu.126.net/u/json/cms/channel_v3.json&quot;</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">&quot;in_process_packages&quot;</span>:</span><br><span class="line">    [</span><br><span class="line">    ],</span><br><span class="line">    //添加需要的插件包名，根据需求添加</span><br><span class="line">    <span class="string">&quot;installed_packages&quot;</span>:</span><br><span class="line">    [</span><br><span class="line">        <span class="string">&quot;Alignment&quot;</span>,</span><br><span class="line">        <span class="string">&quot;ChineseLocalizations&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Emmet&quot;</span>,</span><br><span class="line">        <span class="string">&quot;ConvertToUTF8&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Package Control&quot;</span></span><br><span class="line">    ],</span><br><span class="line">    //默认禁用检查更新</span><br><span class="line">    <span class="string">&quot;update_check&quot;</span>: false</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h2 id="二、方法二【推荐此方法】"><a href="#二、方法二【推荐此方法】" class="headerlink" title="二、方法二【推荐此方法】"></a>二、方法二【推荐此方法】</h2><p>解决打开TXT文件乱码，安装<code>ConvertToUTF8</code> </p>
<p>选择：<code>view</code> -&gt; <code>show console</code></p>
<p>输入，亲测可能会很缓慢，建议多尝试几次。</p>
<p>不知道原作者是谁，但表示感谢贡献。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">import urllib.request,os; pf = <span class="string">&#x27;Package Control.sublime-package&#x27;</span>; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), <span class="string">&#x27;wb&#x27;</span>).write(urllib.request.urlopen( <span class="string">&#x27;http://sublime.wbond.net/&#x27;</span> + pf.replace(<span class="string">&#x27; &#x27;</span>,<span class="string">&#x27;%20&#x27;</span>)).<span class="built_in">read</span>())</span><br></pre></td></tr></table></figure>

<p>然后弹出<code>install package</code>输入框也会很缓慢，键入：<code>ConvertToUTF8</code>，安装后重启软件生效。</p>
<p>安装完后会弹出一个页面：<strong>Package Control Messages</strong>，说明安装成功，测试打开TXT文件就没乱码了。</p>
<p>万恶的原因，还是因为被墙了。</p>
<p>以上两种方法均亲测过可行，但因网络环境原因可能有差异。</p>
<h2 id="三、方法三"><a href="#三、方法三" class="headerlink" title="三、方法三"></a>三、方法三</h2><p>参考官方说明文档，手动下载离线插件包安装。前提是可以访问进去，可能会抽风。</p>
<p>也可以直接进入这个页面<br><span class="exturl" data-url="aHR0cHM6Ly9wYWNrYWdlY29udHJvbC5pby9wYWNrYWdlcy9Db252ZXJ0VG9VVEY4">https://packagecontrol.io/packages/ConvertToUTF8<i class="fa fa-external-link-alt"></i></span></p>
<p>01、搜索<strong>ConvertToUTF8</strong></p>
<p>02、参考说明文档，最后会给出<strong>github</strong>的链接地址</p>
<p>03、安装步骤，<strong>最后重启生效</strong>，具体步骤不做过多赘述</p>
<p>事先准备好下载的离线文件，依次选择Preferences -&gt; Browse Packages</p>
<p><strong>github</strong>上的中文说明文档<br><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3NlYW5saWFuZy9Db252ZXJ0VG9VVEY4L2Jsb2IvbWFzdGVyL1JFQURNRS56aF9DTi5tZA==">https://github.com/seanliang/ConvertToUTF8/blob/master/README.zh_CN.md<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="四、关于禁用更新提示"><a href="#四、关于禁用更新提示" class="headerlink" title="四、关于禁用更新提示"></a>四、关于禁用更新提示</h2><p>关于禁用sublime text 3更新的问题，今天Google搜索了下注册码。截止目前，这个注册码是有效的，经过验证。打开sublime text 3，找到<strong>help</strong>选项，然后选<strong>License</strong>填入注册码。</p>
<p><strong>如下设置，确实是没问题，前提是你使用了注册码，然后保存设置会生效</strong></p>
<p>依次选中，最后修改<code>Settings</code>文件并保存<br>找到<code>Preferences</code> -&gt; <code>Settings</code></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">	//上面有更详细的设置，这里只是提一下禁用更新提示</span><br><span class="line">	//设置默认编码，在设置里标点符号得用英文模式下的</span><br><span class="line">	<span class="string">&quot;default_encoding&quot;</span>: <span class="string">&quot;UTF-8&quot;</span>,</span><br><span class="line">	//设置禁用更新提示，</span><br><span class="line">	<span class="string">&quot;update_check&quot;</span>: false,</span><br><span class="line">	<span class="string">&quot;color_scheme&quot;</span>: <span class="string">&quot;Packages/Color Scheme - Default/Mariana.sublime-color-scheme&quot;</span>,</span><br><span class="line">	<span class="string">&quot;default_encoding&quot;</span>: <span class="string">&quot;UTF-8&quot;</span>,</span><br><span class="line">	<span class="string">&quot;font_size&quot;</span>: <span class="number">11</span>,</span><br><span class="line">	<span class="string">&quot;ignored_packages&quot;</span>:</span><br><span class="line">	[</span><br><span class="line">		<span class="string">&quot;Vintage&quot;</span></span><br><span class="line">	],</span><br><span class="line">	<span class="string">&quot;theme&quot;</span>: <span class="string">&quot;Adaptive.sublime-theme&quot;</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="关于禁用更新提示"><a href="#关于禁用更新提示" class="headerlink" title="关于禁用更新提示"></a>关于禁用更新提示</h3><p>正常情况需要购买激活码，以下演示仅供学习交流参考！</p>
<p>关于禁用sublime text 3更新的问题，今天Google搜索了下注册码。截止目前，这个注册码是有效的，经过验证。</p>
<p>打开sublime text 3，找到<strong>help</strong>选项，然后选<strong>License</strong>填入以下注册码。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">—– BEGIN LICENSE —–</span><br><span class="line">Mifeng User</span><br><span class="line">Single User License</span><br><span class="line">EA7E-1184812</span><br><span class="line">C0DAA9CD 6BE825B5 FF935692 1750523A</span><br><span class="line">EDF59D3F A3BD6C96 F8D33866 3F1CCCEA</span><br><span class="line">1C25BE4D 25B1C4CC 5110C20E 5246CC42</span><br><span class="line">D232C83B C99CCC42 0E32890C B6CBF018</span><br><span class="line">B1D4C178 2F9DDB16 ABAA74E5 95304BEF</span><br><span class="line">9D0CCFA9 8AF8F8E2 1E0A955E 4771A576</span><br><span class="line">50737C65 325B6C32 817DCB83 A7394DFA</span><br><span class="line">27B7E747 736A1198 B3865734 0B434AA5</span><br><span class="line">—— END LICENSE ——</span><br></pre></td></tr></table></figure>

<p><strong>设置完后记得保存，重启后生效</strong>，更新提示界面就消失了。可能对部分使用者并不适用，但对于我来说是验证好的。</p>
<p>以上总结，仅供学习交流参考！</p>
<p>—END—</p>
]]></content>
      <categories>
        <category>开发工具</category>
      </categories>
      <tags>
        <tag>sublime text</tag>
      </tags>
  </entry>
  <entry>
    <title>解决xshell强制更新的问题</title>
    <url>/2020/03/31/%E8%A7%A3%E5%86%B3xshell%E5%BC%BA%E5%88%B6%E6%9B%B4%E6%96%B0%E7%9A%84%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<p>解决xshell强制更新的问题。讲道理，软件用起来功能稳定就行。可是某些软件，偏偏强制你更新，感觉流氓属性十足。这时候就得寻求其它方法了，你看xshell也有这尿性，下面给出解决的方法。</p>
<h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><p>当你某一天使用xshell时，突然发现，oh fuck，不更新还不让用了，内心一万个曹尼玛奔腾而过。使用一段时间就会提示，确实很艹蛋。下图就是打开xshell软件出现的提示，按照我下面说的方法即可解决。</p>
<p><img data-src="https://img-blog.csdnimg.cn/20200331222352239.jpg?x-oss-process=,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RvbG92ZV9kcmVhbQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>这时不要担心，按照我说的方法，其实无非就是判定系统时间，把自己电脑的系统时间改一下就行了。当然采用脚本的形式更方便。</p>
<p>首先新建一个文本文档以<code>.bat</code>文件格式保存，然后将下面提供的代码复制到<code>xx.bat</code>文件中然后保存。<br>下面的代码部分位置我用#给出了注释，你复制的时候可以将#部分去掉。</p>
<p><strong>代码提供</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line">%<span class="number">1</span> mshta vbscript:CreateObject(<span class="string">&quot;Shell.Application&quot;</span>).ShellExecute(<span class="string">&quot;cmd.exe&quot;</span>,<span class="string">&quot;/c %~s0 ::&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="string">&quot;runas&quot;</span>,<span class="number">1</span>)(window.close) &amp;&amp; <span class="keyword">exit</span></span><br><span class="line">title Xshell启动器</span><br><span class="line"><span class="built_in">set</span> atime=%date:~<span class="number">0</span>,<span class="number">10</span>%</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置系统时间</span></span><br><span class="line">date <span class="number">2018</span><span class="literal">-12-31</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#改成你的xshell启动路径 </span></span><br><span class="line"><span class="built_in">start</span> D:\work\Xshell6Portable_50151\Xshell6Portable\Xshell6Portable.exe</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> 启动软件中...</span><br><span class="line">ping <span class="number">0.0</span>.<span class="number">0.0</span>  <span class="literal">-n</span> <span class="number">6</span> &gt; null</span><br><span class="line"><span class="built_in">echo</span> 同步时间中,完成后自动关闭窗口...</span><br><span class="line"></span><br><span class="line">:reset</span><br><span class="line">w32tm /resync &gt;null</span><br><span class="line"><span class="built_in">set</span> btime=%date:~<span class="number">0</span>,<span class="number">10</span>%</span><br><span class="line"><span class="built_in">echo</span> %atime%|findstr  %btime% &gt;nul</span><br><span class="line"><span class="keyword">if</span> %errorlevel% equ <span class="number">0</span> (</span><br><span class="line"><span class="keyword">exit</span></span><br><span class="line">) <span class="keyword">else</span> (</span><br><span class="line">goto reset</span><br><span class="line">)</span><br></pre></td></tr></table></figure>


<h1 id="尾声"><a href="#尾声" class="headerlink" title="尾声"></a>尾声</h1><p>记录点点滴滴。善于总结，其乐不穷。好记性不如烂笔头，多收集自己第一次尝试的成果，收获也颇丰。你会发现，自己的知识宝库越来越丰富。</p>
]]></content>
      <categories>
        <category>开发运维</category>
      </categories>
      <tags>
        <tag>xshell</tag>
      </tags>
  </entry>
  <entry>
    <title>解决使用git遇到fatal remote origin already exists</title>
    <url>/2022/02/12/%E8%A7%A3%E5%86%B3%E4%BD%BF%E7%94%A8git%E9%81%87%E5%88%B0fatal-remote-origin-already-exists/</url>
    <content><![CDATA[<p>git解决使用命令遇到fatal: remote origin already exists</p>
<p>从字面意思上进行分析，连接上远程仓库已经退出。看不懂英文是啥意思也没关系，咱有有道词典借鉴学习。<br>至于为何退出，80%的原因是已经连上远程仓库。当你再次执行远程连接命令时，会出现以上的报错信息，小部分原因是其它问题导致的。</p>
<p><strong>问题展示</strong><br>【git】使用git遇到<code>fatal: remote origin already exists</code><br><img data-src="https://img-blog.csdnimg.cn/576b13a4d5974f089f33d60679d2c79a.png?x-oss-process=,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6b6Z6IW-5LiH6YeMc2t5,size_20,color_FFFFFF,t_70,g_se,x_16#" alt="在这里插入图片描述"></p>
<p><strong>1、输入如下命令</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 输入如下命令 </span></span><br><span class="line">git remote add origin  https://github.com/(user_name)/(app_name).git</span><br></pre></td></tr></table></figure>

<p><strong>2、如果遇到</strong><br>从字面意思上进行分析，连接上远程仓库已经退出。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">fatal: remote origin already exists</span><br></pre></td></tr></table></figure>

<p><strong>3、可尝试</strong><br>释放远程仓库连接</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">git remote <span class="built_in">rm</span> origin </span><br></pre></td></tr></table></figure>

<p><strong>4、再输入 如下命令就不会报错了！</strong><br> 执行远程仓库连接命令</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">git remote add origin  https://github.com/(user_name)/(app_name).git </span><br></pre></td></tr></table></figure>

<p><strong>5、如果输入如下命令还是报错</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">git remote <span class="built_in">rm</span> origin </span><br></pre></td></tr></table></figure>

<p><strong>5、此时修改gitconfig文件的内容出现如下错误提示</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">error: Could not remove config section <span class="string">&#x27;remote.origin&#x27;</span>. </span><br></pre></td></tr></table></figure>

<p><strong>6、找到你的github的安装路径</strong></p>
<p><strong>C:\Users\admin\AppData\Local\GitHub\PortableGit_054f2e797ebafd44a30203088cd3d58663c627ef\etc</strong>     </p>
<p><strong>注意</strong>：你的的文件生成路径可能与我略微不同，需要自己分析一下。</p>
<p>最后找到一个名为gitconfig的文件，打开文件将[remote “origin”]那三行删掉，完美解决！</p>
<p>tips：其实在安装的git目录下也会生成gitconfig配置文件，使用文本编辑器打开查看。</p>
]]></content>
      <categories>
        <category>开发工具</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>解压软件哪个好用:7z和360zip国际版</title>
    <url>/2022/01/15/%E8%A7%A3%E5%8E%8B%E8%BD%AF%E4%BB%B6%E5%93%AA%E4%B8%AA%E5%A5%BD%E7%94%A8-7z%E5%92%8C360zip%E5%9B%BD%E9%99%85%E7%89%88/</url>
    <content><![CDATA[<p>在实际的工作中，解压缩软件哪款比较实用，相信很多人都搜索过也同样收集过。今天我就介绍一些个人认为比较实用的，当然有些解压缩软件外观简洁并且优美。</p>
<p>简洁的外观，实用性高，往往受众群体还可以。那么，简洁而优美的外观并且无广告，往往是吸引人关注的。曾经使用过WinRAR，但是体验不是很友好。后来用了一段时间的2345好压，起初还是很好用的。可惜后来膨胀了，广告和捆绑越来越多。转而寻找能搭配简洁的7z的解压缩软件，最终找到了360zip国际版。</p>
<p>日常就喜欢折腾，寻找简洁实用的小工具。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/4be7f1c19898165fcd31361086dd452d.png"></p>
<h1 id="一、7z"><a href="#一、7z" class="headerlink" title="一、7z"></a>一、7z</h1><p>7z正如官网描述的一样，是一款自由软件，业界良心。</p>
<h2 id="1、7z的官网地址"><a href="#1、7z的官网地址" class="headerlink" title="1、7z的官网地址"></a>1、7z的官网地址</h2><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuNy16aXAub3JnLw==">https://www.7-zip.org/<i class="fa fa-external-link-alt"></i></span></p>
<p>同时支持64位的X64和32位的X86，并且还支持64位的ARM架构，目前最新版的为21.07。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/97449b9f9b37d6378a163dcd9241cca2.png"></p>
<p>个人使用7z的版本是19.00，界面如下所示：</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/005437db165cff548478d40c6db899fb.png"></p>
<h2 id="2、7z外观及功能"><a href="#2、7z外观及功能" class="headerlink" title="2、7z外观及功能"></a>2、7z外观及功能</h2><p>7z的主界面比较简洁，但很实用，如下所示：</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/7f4bc63f6bd53423a97dad1c7dcd6aeb.png"></p>
<p>主要设置界面，选项不是很多，以实用性为主：</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/56780c59e0ed3e774ef13d3ff1b05f96.png"></p>
<p>7z就介绍这么多，小巧而实用，这是对7z最好的阐述。并且是免费的哟，业界良心，鼓吹一波。</p>
<h1 id="二、360zip国际版"><a href="#二、360zip国际版" class="headerlink" title="二、360zip国际版"></a>二、360zip国际版</h1><p>上面介绍了7z，再说另一款我沿用至今的解压缩软件360zip国际版。不仅外观耐看，而且还很实用。当然也有国内版本，同样是免费的，但我没使用过，不知道是不是有小广告弹窗之类的。</p>
<p>同样体积不是很大，外观也很简洁，<strong>360zip国内版下载地址</strong>：<span class="exturl" data-url="aHR0cHM6Ly95YXN1by4zNjAuY24v">https://yasuo.360.cn/<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="1、360zip国际版下载地址"><a href="#1、360zip国际版下载地址" class="headerlink" title="1、360zip国际版下载地址"></a>1、360zip国际版下载地址</h2><p>360zip国际版官网下载地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cuMzYwdG90YWxzZWN1cml0eS5jb20vemgtY24vMzYwemlwLw==">https://www.360totalsecurity.com/zh-cn/360zip/<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>个人目前使用的是1.0.0.1031，重来没有遇到过弹框和小广告如下图所示</strong>，官网最新版是1.0.0.1041。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/7c7b40ede89594a4e37b572045700e43.png"></p>
<h2 id="2、360zip国际版外观"><a href="#2、360zip国际版外观" class="headerlink" title="2、360zip国际版外观"></a>2、360zip国际版外观</h2><p>360zip国际版主体界面，看着是不是很舒服，简洁而优美。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/5b6b5fcb0b1b633d5cde9f79f09c390f.png"></p>
<p>压缩界面的展示，有通用和自定两种模式，同样也支持设置密码。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/9a356d605a1d5fbf5eb8f3eb6c232d4b.png"></p>
<p>解压缩界面，同样支持自定义设置。设置自己需要的解压缩格式，支持添加注释以及设置密码。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/302499a29824e9c052e76e7f39f698d4.png"></p>
<p>设置界面，<strong>注意了，如果不想自动升级，可以在设置界面将开启自动升级按钮取消掉</strong>。</p>
<p><img data-src="https://img-blog.csdnimg.cn/img_convert/db29d40759407a4d8821956ac9ffc1c4.png"></p>
]]></content>
      <categories>
        <category>通用工具</category>
      </categories>
      <tags>
        <tag>360zip</tag>
      </tags>
  </entry>
  <entry>
    <title>身份证异地办理指南</title>
    <url>/2024/03/03/%E8%BA%AB%E4%BB%BD%E8%AF%81%E5%BC%82%E5%9C%B0%E5%8A%9E%E7%90%86%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<p><strong>生活经验分享，身份证（异地）办理指南</strong>。</p>
<p><img data-src="https://s11.ax1x.com/2024/03/03/pFBBlkR.png" alt="pFBBlkR.png"></p>
<p>独自一人初次去办理身份证，是不是有点小紧张？</p>
<p>不用害怕，放松一下，前往当地派出所，可以咨询门前招待人员寻求帮助。</p>
<p><strong>友情提醒：最好穿上黑色（深色）衣服，捯饬一下发型（理个发），人显得更精神。毕竟身份证一旦办理完成，可能要用个 5 ~ 20 年，或者更久，才会再次办理。</strong>还有另外一种情况，遗失补领。 </p>
<p>首次申领居民身份证，可以参考公安部发布的这篇文章：</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cuZ292LmNuL2Z1d3UvMjAxNi0xMS8yNC9jb250ZW50XzUxMzY4NjQuaHRt">https://www.gov.cn/fuwu/2016-11/24/content_5136864.htm<i class="fa fa-external-link-alt"></i></span></p>
<p>中央政府门户网站</p>
</blockquote>
<p><em>本篇文章主要分享身份证过期换领。</em></p>
<span id="more"></span>



<h3 id="关注要点"><a href="#关注要点" class="headerlink" title="关注要点"></a>关注要点</h3><ol>
<li>暂住证。</li>
<li>身份证凭条。</li>
<li>本人领取。</li>
<li>代领。</li>
</ol>
<p><strong>暂住证（前往当地社区办理）</strong></p>
<p>找到当地社区警务办公室出示身份证，报出你的居住地址。不出意外，当天即可办理好暂住证。</p>
<p><img data-src="https://picx.zhimg.com/80/v2-aecc90d933a4fb8095779a70abdaf0bd_1440w.png?source=d16d100b" alt="img"></p>
<p><strong>领取身份证凭条（办理身份证后）</strong></p>
<p>办理好暂住证后，前往当地派出所综合办理窗口，查询暂住证是否录入进档案数据库。如果不放心，可以在警务办公室打印出纸质暂住证前往办理身份证。</p>
<p><img data-src="https://pic1.zhimg.com/80/v2-9da89984e4080e4835bc2ac70efce15e_1440w.png?source=d16d100b" alt="img"></p>
<p><strong>领取身份证凭条上有提醒：</strong> <em>15 个工作日后本人到派出所 24 小时自助取证机领取，他人代领则需持 2014 年后办理的身份证才能代领</em>。</p>
<p>以上是暂住证和身份证凭条信息，隐私部分打马赛克了，不影响观看。</p>
<p>如果身份证过期不受影响，你愿意去补办么？我的想法是，才不愿意去补办捏。</p>
<p><strong>实际情况是：</strong>各大银行、支付宝、微信、各大贷款平台相继发出短信或者电话提醒，会影响部分功能使用。</p>
<p><strong>为什么将异地办理身份证放在前面？</strong> </p>
<p>答：在外务工人员越来越多，异地办理身份证越来越便捷。避免后来办事人踩坑，主要以分享经验为主。</p>
<p><strong>办理身份证需要多久？</strong> </p>
<p>答：15个工作日（友情提醒：不包含双休日哟），政企基本上双休。</p>
<p><strong>友情提醒</strong>：可以在本地公众号（比如，重庆市有警快办服务）查询办理进度，线上办理进入警快办居民身份证(含临时身份证)业务进行在线办理。</p>
<p><strong>如何领取身份证？</strong></p>
<p> 答：带上凭条（上面印有你的姓名和身份证号，以防忘记），去办理身份证所在派出所自助终端机领取，自助终端机通常在综合办理窗口旁边。 当然可以选择邮寄方式，填写自己居住地址。</p>
<p><strong>选择直接去派出所领取还是邮寄方式？</strong></p>
<p> 答：如果你离当地辖区派出所比较近，走一走，还可以锻炼身体，直接去自助终端机领取即可。如果是近期工作变动（比如出差），那就建议选择邮寄到手的方式。</p>
<p><strong>办理身份证（申领、补领、换领）费用问题？</strong></p>
<p> 答：存在两种情况。选择到当地派出所领取，比如身份证过期换领，需支付 20 元工本费。选择邮寄方式补办，如果遗失补办，需支付 40 元工本费。 临时居民身份证申领，需支付 10 元工本费。详情可咨询当地派出所。</p>
<h3 id="异地（外地居民）办理身份证"><a href="#异地（外地居民）办理身份证" class="headerlink" title="异地（外地居民）办理身份证"></a>异地（外地居民）办理身份证</h3><p><strong>必备要件</strong>： </p>
<p>1.暂住证（或者居住证），办理暂住证（或者居住证）需前往<strong>当地辖区社区警务办公室</strong>进行登记，<strong>当天即可办好</strong>。 </p>
<p>2.本人身份证原件。</p>
<p><strong>办理步骤</strong>： </p>
<p>1.前往<strong>当地辖区派出所综合办理窗口</strong>。 </p>
<p>2.查询本人是否办理暂住证（居住证）。 </p>
<p>3.<strong>打印暂住证</strong>（居住证）。 </p>
<p>4.到身份证办理窗口进行签字、进入小房间面对摄像头照相。 </p>
<p>5.到身份证办理窗口进行左、右手大拇指按压各三次记录指纹。</p>
<p>6.到身份证办理窗口进行签字确认（监护人以及当事人），未成年（或无行为能力人）需要签监护人以及自己的姓名，成年人都签自己姓名。 </p>
<p>7.<strong>15个工作日后</strong>，前往办理居民身份证的派出所（使用<strong>自助终端</strong>，<strong>携带原始身份证或者直接输入身份证号</strong>）领取身份证。</p>
<h3 id="本地居民办理身份证"><a href="#本地居民办理身份证" class="headerlink" title="本地居民办理身份证"></a>本地居民办理身份证</h3><p><strong>必备要件</strong>： </p>
<p>1.本人身份证原件。<br>2.以防万一带上户口本。</p>
<p><strong>办理步骤</strong>： </p>
<ol>
<li>带上本人身份证前往当地辖区派出所综合办理窗口。 </li>
<li>到身份证办理窗口进行签字、进入小房间面对摄像头照相。 </li>
<li>到身份证办理窗口进行左、右手大拇指按压各三次记录指纹。</li>
<li>到身份证办理窗口进行签字确认（监护人以及当事人），未成年（或无行为能力人）需要签监护人以及自己的姓名，成年人都签自己姓名。 </li>
<li>15个工作日后，前往办理居民身份证的派出所（使用自助终端，携带原始身份证或者直接输入身份证号）领取身份证。</li>
</ol>
<p>如果看完了本篇生活经验分享，对比异地与本地办理身份证的区别，你会发现，关键点是<em>暂住证</em>。</p>
<p><strong>以上实际经验仅供参考哟，希望对你的生活和工作有所帮助哟。</strong></p>
<p>如果真的对你的生活和工作有所帮助，那就动动小手，点个赞和关注呗。</p>
<p><strong>作者 | 龙腾万里sky（ID：dywangk）</strong></p>
<p>—END—</p>
]]></content>
      <categories>
        <category>生活百科</category>
      </categories>
      <tags>
        <tag>身份证</tag>
      </tags>
  </entry>
  <entry>
    <title>面试复盘：软件实施工程师，顿悟试岗期美其名曰岗前培训</title>
    <url>/2022/04/06/%E9%9D%A2%E8%AF%95%E5%A4%8D%E7%9B%98%E9%A1%BF%E6%82%9F%E8%AF%95%E5%B2%97%E6%9C%9F%E7%BE%8E%E5%85%B6%E5%90%8D%E6%9B%B0%E5%B2%97%E5%89%8D%E5%9F%B9%E8%AE%AD/</url>
    <content><![CDATA[<p><strong>前段时间抽空面试了几家。选择其中一家进行面试复盘：软件实施工程师（xxx科技有限公司）</strong></p>
<p><strong>总结：有试岗期的公司，坚决不要去。但不排除有公司确实在试岗通过后将工资算入到试用期，有试岗期就说明该公司不想承担风险。</strong></p>
<p>具体公司名称就不透露了，算是给对方留点颜面。做人留一线，日后好相见。</p>
<p>前前后后聊了40多分钟。</p>
<p>以下是具体过程。</p>
<span id="more"></span>



<p>刚开始很纳闷，不是直接问工作经历，做过哪些项目。这竟然不是BOSS最关心的地方，难道我遇到贵人呢？还是这个岗位人员流动性很大？</p>
<p>BOSS上来和我交谈，员工与老板是合作伙伴关系，挺新颖。</p>
<p>聊了大概15分钟，终于问到我之前实施项目经验过程：步骤（方式方法），办培训班的人数规模。</p>
<p><strong>这里我简单描述了一些现场实施经验</strong>：</p>
<ol>
<li>现场项目部署：应用软件部署，涉及到沟通交流。</li>
<li>初验阶段：现场调试，以及监理验收，提交开发测试文档。</li>
<li>试运行阶段：在客户单位部署，让客户体验产品。</li>
<li>终验阶段：配合监理验收。出具验收报告，客户提供使用总结，可能需要上台演示。</li>
<li>用户培训阶段：提交用户培训文档，系统操作说明书。</li>
<li>客户确认签字，标志着终验完成。</li>
<li>项目回款。</li>
</ol>
<p><strong>培训方法</strong>：</p>
<p>1.线上视频培训，在线教学。</p>
<p>2.现场大屏幕，在线演示产品基本使用。</p>
<p>3.出具录制培训视频、PPT演示文稿、DOC文档等等。</p>
<p>4.补充：多人情况，对有不了解的，一对一辅导。</p>
<p><strong>我</strong>：熟悉以及亲自部署实施过的数据库如下</p>
<p>中间穿插了一些SQL之类。</p>
<p>我也说了（哔哔）很多：</p>
<p>1.部署实施过Oracle数据库。</p>
<p>2.部署实施过国产DM8数据库。</p>
<p>3.部署实施过MySQL数据库，这个也是我最熟悉的。吹了一波牛逼，从基本-开发-优化-架构都有实践过，自己搭建环境测试。</p>
<p><strong>BOSS</strong>：公司目前使用MySQL，还没达到用Oracle数据程度。</p>
<p><strong>薪资福利待遇</strong>：</p>
<p>提到薪资待遇，我明确说明自己手头有几家offer，具体薪资就不透露了。双向选择，BOSS此时开始谈自家公司薪资待遇组成和优势。</p>
<p>1.五险一金是基本。</p>
<p>2.强调13薪，后续会调成14薪（其实多一个月薪资是年终奖，有些套路，一再强调是分开的）。</p>
<p>3.项目提成：按项目金额10%算，中间如果有二次销售也有提成（需要年底上级主管评估）。</p>
<p>4.补贴：房补、交通补贴、话补之类由于疫情原因取消了。</p>
<p>我直接好家伙，软件实施工程师经常出差，自己租房很亏，大部分时间在现场驻场。</p>
<p>聊着聊着，接近尾声了。</p>
<p><strong>最后引出——试岗期</strong>。</p>
<p>有一点还是比较良心的，最后BOSS亲自说了有试岗期，至少没在入职以后说。</p>
<p>此时BOSS忽然来了一句，强调有试岗期。我直接表露出：无需3-4天试岗期，一天就可以看出这个人能不能上手干活。</p>
<p>有硬实力没必要藏着掖着，没有实际项目经验，我也不会聊这么多。当然，为人处事可以低调，但工作没必要低调，这也是我老东家部门主管对我说过的一句话。源于我在老东家，入职半年的时候直接带了一个新人（其实项目对接），能不能上项目，直接在现场就能体现出来。</p>
<p>之前遇到过更离谱的，通知入职，所有手续全办齐了，最后和我说有5天试岗期。</p>
<p>周一是上班第一天，一般会开例会。BOSS开会去了，主动和我握手之后，我撤退了。</p>
<p><strong>HR锲而不舍</strong></p>
<p>当天下午HR打了两次电话，最后加了微信。居然问我是不是有什么顾虑，丝毫没意识到试岗期是违法的。</p>
<p>下面附上聊天记录截图，出于保护双方隐私，做了处理。部分聊天记录也手打出来了。</p>
<p><img data-src="https://picx.zhimg.com/80/v2-4ccce9ef14998de02c822444c0dd1e31_720w.jpg?source=d16d100b" alt="img"></p>
<p><img data-src="https://pic1.zhimg.com/80/v2-8ae072a52f1fd6659d66cf28a01d6400_720w.jpg?source=d16d100b" alt="img"></p>
<p><img data-src="https://pica.zhimg.com/80/v2-e0b179d8cd4478b73421a36f2ccf34dd_720w.jpg?source=d16d100b" alt="img"></p>
<p><strong>我</strong>：我对试岗期很反感。</p>
<p><strong>HR</strong>：这个不难理解，…!其实试岗期相当于一个岗前培训，工资也照算。</p>
<p><strong>我</strong>：据我所知，不存在试岗期这一说法，法律规定（<strong>劳动法</strong>）试用期公司可以根据情况判定对方是否能胜任。麻烦您熟悉一下相关法律，再考虑与我交谈。</p>
<p><strong>HR</strong>：鉴于你的情况，我刚刚也和早上面试你的领导进行了沟通，你可以直接试用，不需要试岗期。</p>
<p><strong>HR</strong>：我们领导通过和你的交流，确实是蛮看中你的，同时公司也是非常重视人才。</p>
<p>好家伙，看了我发的这段，立马改口了。公司重人才，面试你的领导欣赏你，你来公司直接进试用期。</p>
<p>合着去贵公司，进入试用期是一种馈赠。</p>
<p>做人留一线，日后好相见。</p>
<p>—END—</p>
]]></content>
      <categories>
        <category>面经</category>
      </categories>
  </entry>
  <entry>
    <title>龙腾万里sky小破站备用地址</title>
    <url>/2023/03/16/%E9%BE%99%E8%85%BE%E4%B8%87%E9%87%8Csky%E5%B0%8F%E7%AB%99%E5%A4%87%E7%94%A8%E5%9C%B0%E5%9D%80/</url>
    <content><![CDATA[<p>主要托管在 github pages ，主站访问体验可能不友好。</p>
<p>实验阶段，备用地址采用 vercel 、netlify、cloudflare 提供的 pages 服务搭建。</p>
<p>个人目前比较喜欢的 hexo 主题主要有三款：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL25leHQtdGhlbWUvaGV4by10aGVtZS1uZXh0">next<i class="fa fa-external-link-alt"></i></span>、<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2ZsdWlkLWRldi9oZXhvLXRoZW1lLWZsdWlk">fluid<i class="fa fa-external-link-alt"></i></span>、<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2JsaW5rZm94L2hleG8tdGhlbWUtbWF0ZXJ5">matery<i class="fa fa-external-link-alt"></i></span></p>
<span id="more"></span>

<h3 id="hexo-next-主题"><a href="#hexo-next-主题" class="headerlink" title="hexo next 主题"></a>hexo next 主题</h3><p><strong>主要采用 hexo 的 next 主题打造。如果主站访问缓慢，请戳备用地址。</strong></p>
<p>使用 giscus 评论插件，基于 github 仓库 discussions 功能，目前已开放评论。</p>
<ol>
<li><p><strong>备用地址</strong>：</p>
<ul>
<li><a href="https://blog.cnwangk.top/">https://blog.cnwangk.top/</a><ul>
<li>部署在 vercel：<span class="exturl" data-url="aHR0cHM6Ly92ZXJjZWwuY29tLw==">https://vercel.com/<i class="fa fa-external-link-alt"></i></span></li>
</ul>
</li>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cuY253YW5nay50b3Av">https://www.cnwangk.top/<i class="fa fa-external-link-alt"></i></span><ul>
<li>部署在 netlify：<span class="exturl" data-url="aHR0cHM6Ly9hcHAubmV0bGlmeS5jb20v">https://app.netlify.com/<i class="fa fa-external-link-alt"></i></span></li>
</ul>
</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9jZi5jbndhbmdrLnRvcC8=">https://cf.cnwangk.top/<i class="fa fa-external-link-alt"></i></span><ul>
<li>部署在 cloudflare：<span class="exturl" data-url="aHR0cHM6Ly9kYXNoLmNsb3VkZmxhcmUuY29tLw==">https://dash.cloudflare.com/<i class="fa fa-external-link-alt"></i></span></li>
</ul>
</li>
</ul>
</li>
<li><p>主站地址：</p>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9za3kuY253YW5nay50b3Av">https://sky.cnwangk.top/<i class="fa fa-external-link-alt"></i></span><ul>
<li>部署在github：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2Nud2FuZ2svY253YW5nay5naXRodWIuaW8=">https://github.com/cnwangk/cnwangk.github.io<i class="fa fa-external-link-alt"></i></span></li>
</ul>
</li>
</ul>
</li>
</ol>
<p><strong>致谢</strong></p>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9wYWdlcy5naXRodWIuY29tLw==">github pages<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvLw==">hexo<i class="fa fa-external-link-alt"></i></span> &amp; <span class="exturl" data-url="aHR0cHM6Ly90aGVtZS1uZXh0LmpzLm9yZy8=">hexo-theme-next<i class="fa fa-external-link-alt"></i></span></li>
<li>vercel：<span class="exturl" data-url="aHR0cHM6Ly92ZXJjZWwuY29tLw==">https://vercel.com/<i class="fa fa-external-link-alt"></i></span></li>
<li>netlify：<span class="exturl" data-url="aHR0cHM6Ly9hcHAubmV0bGlmeS5jb20v">https://app.netlify.com/<i class="fa fa-external-link-alt"></i></span></li>
<li>cloudflare：<span class="exturl" data-url="aHR0cHM6Ly9kYXNoLmNsb3VkZmxhcmUuY29tLw==">https://dash.cloudflare.com/<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>感谢这些平台提供友好的服务支持，我们才可以愉快的打造个人博客站点。</p>
<p>—END—</p>
]]></content>
  </entry>
  <entry>
    <title>驾驶证到期了怎么换证</title>
    <url>/2024/03/19/%E9%A9%BE%E9%A9%B6%E8%AF%81%E5%88%B0%E6%9C%9F%E4%BA%86%E6%80%8E%E4%B9%88%E6%8D%A2%E8%AF%81/</url>
    <content><![CDATA[<p>驾驶证期满换证流程（异地）。</p>
<p>前往<strong>指定医院</strong>，完成体检，医院会上传提交体检报告到车管所数据服务中心。发票和纸质体检报告做为凭据自行保留哟。</p>
<p>异地办理的驾驶证，需要在<strong>交管12123 APP</strong> 选择迁移现居住地，提交<strong>近期 1 寸白底照片</strong>。</p>
<p><strong>问：</strong>驾驶人期满换证需要经历哪些过程？          </p>
<p><strong>答：</strong>五个阶段。</p>
<p>如下所示：</p>
<ol>
<li>提交申请阶段。</li>
<li>受理阶段。</li>
<li>制证阶段。</li>
<li>邮件交寄中阶段。</li>
<li>办理完成阶段。</li>
</ol>
<p><strong>问：</strong>正常办理驾驶人期满换证需要多久？          </p>
<p><strong>答：</strong>一般来说，当天完成体检，第二天可以收到受理办证信息。至于多久可以到手，取决于你是自行前往还是邮寄到手。<strong>以本人为例，当天体检后提交迁移申请，第三天下午收到快递（重庆渝中区），效率挺高的。</strong></p>
<p><strong>问：</strong>办理驾驶人期满换证需要花费多少钱？          </p>
<p><strong>答：</strong>根据各地体检收费标准而定。例如，我个人花费 70 元。消费组成，体检费用 50 元，驾驶证工本费 10 元，邮政快递费用 10 元。</p>
<span id="more"></span>



<h2 id="00-期满换证注意事项"><a href="#00-期满换证注意事项" class="headerlink" title="00  期满换证注意事项"></a>00  期满换证注意事项</h2><p><strong>注意了</strong>：驾驶证期满换证，<strong>迁入到现居住地，核发地变成了居住地所在交管局</strong>（XX市公安局交通管理局）。如需将驾驶证转入到其他城市，使用<strong>交管12123 APP</strong>驾驶证补换领功能，可以看到转入到其他城市选项。</p>
<p>如果你想<strong>核发地</strong>是原始发证地点，那么可能需要在驾驶证原始核发地完成体检，进行办理期满换证业务。我想，可能是各地数据还无法互通吧，也有其它可能，只是猜测。</p>
<p>理论上，按正常想法，驾驶人可能会想到如下流程。即使在异地完成驾驶人体检，在不选择异地迁入的情况下，可以直接选择期满换证业务。核发地制证单位完成制证，驾驶人前往交管局领取，或者使用邮寄上门方式领取。假如小花老家在黄冈，初次领取驾驶证也在老家。由于工作原因，现居住地在深圳，只能在异地完成体检，办理期满换证业务。那么，核发地应该依旧是黄冈市公安局交通管理局。</p>
<p>本人暂时还没弄清楚核发地变更对<strong>办理驾驶证业务</strong>有什么具体影响，我想这也可能是你会担心的问题，也可能是我想多了。这篇期满换证教程你依旧可以进行参考。</p>
<p>更详细的期满换证说明请参考各地区办事指南，比如湖北地区可以参考这篇：</p>
<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9oYi4xMjIuZ292LmNuL3ZpZXdzL2hlbHBNYWluLmh0bWw/dHlwZT0vaGVscA==">湖北省公安交通管理局互联网交通安全服务管理平台 (122.gov.cn)<i class="fa fa-external-link-alt"></i></span> <strong>期满换证：</strong>机动车驾驶人应当于机动车驾驶证有效期满前九十日内，申请机动车驾驶证有效期满换证。如已超过有效期但未满11个月的，可通过本平台继续申请换证业务。超过有效期满11个月，未满1年的，需到机动车驾驶证核发地车辆管理所申请换证。网上办理期满换证业务，需先到指定医院<span class="exturl" data-url="aHR0cHM6Ly9oYi4xMjIuZ292LmNuLyMvbWFwP3R5cD13ZGx4ZG0mY29kZT0yMCZ0ZXh0PSVFNSU4QyVCQiVFNyU5NiU5NyVFNCVCRCU5MyVFNiVBMyU4MCVFNiU5QyVCQSVFNiU5RSU4NA==">（体检医院）<i class="fa fa-external-link-alt"></i></span>进行体检并获取《机动车驾驶人身体条件证明》。</p>
</blockquote>
<p>有哪些疑问，我也尽量在教程中展示出来。请接着往下看。</p>
<p><strong>问：</strong>驾驶人期满换证需要经历哪些过程？          </p>
<p><strong>答：</strong>五个阶段。</p>
<p>如下所示：</p>
<ol>
<li>提交申请阶段。</li>
<li>受理阶段。</li>
<li>制证阶段。</li>
<li>邮件交寄中阶段。</li>
<li>办理完成阶段。</li>
</ol>
<p><strong>问：</strong>正常办理驾驶人期满换证需要多久？          </p>
<p><strong>答：</strong>一般来说，当天完成体检，第二天可以收到受理办证信息。至于多久可以到手，取决于你是自行前往还是邮寄到手。<strong>以本人为例，当天体检后提交迁移申请，第三天下午收到快递（重庆渝中区），效率挺高的。</strong></p>
<p><strong>问：</strong>办理驾驶人期满换证需要花费多少钱？          </p>
<p><strong>答：</strong>根据各地体检收费标准而定。例如，我个人花费 70 元。消费组成，体检费用 50 元，驾驶证工本费 10 元，邮政快递费用 10 元。</p>
<p>关于《机动车驾驶证申领和使用规定》，详情请参考公安部发布的这篇文章：    </p>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cubXBzLmdvdi5jbi9uNjU1NzU1OC9jODI4MTY4MC9jb250ZW50Lmh0bWw=">https://www.mps.gov.cn/n6557558/c8281680/content.html<i class="fa fa-external-link-alt"></i></span></p>
<p>国务院公报：            </p>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cuZ292LmNuL2dvbmdiYW8vY29udGVudC8yMDIyL2NvbnRlbnRfNTY3OTY5Ni5odG0=">https://www.gov.cn/gongbao/content/2022/content_5679696.htm<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>线上办理必备要件</strong>：</p>
<ul>
<li>准备交管12123 APP。 </li>
<li>身份证原件，线下体检需要。</li>
<li>体检报告，在交管12123 APP 指定医院进行体检。可以选择人工体检和自助机体检。</li>
<li>1 寸白底照片，可以自己找人用手机拍摄，也可以自拍哟，制作成白底即可。</li>
</ul>
<p>驾驶证离过期还剩 60 天左右，在交管12123 APP 可以看到期满换证选项，提醒 90 日内办理期满换证业务。如果近期没有在指定医院进行体检，期满换证选项是灰色不可使用状态。</p>
<p>如何查找符合车管所体检<strong>资</strong>质要求的附近医院？进入交管12123 APP，底部菜单栏选择<strong>服务网点，依次选择驾驶证业务，点击驾驶人体检即可找到附近符合车管所资质要求的医院。</strong></p>
<p><strong>正常情况下，体检项目重点测试视力，很严格</strong>。</p>
<h2 id="01-驾驶人体检流程"><a href="#01-驾驶人体检流程" class="headerlink" title="01  驾驶人体检流程"></a>01  驾驶人体检流程</h2><p>可以选择人工体检和机器自助体检。我前往的所在医院貌似没啥人使用自助机体检，估计也没开机，原本想使用自助体检机。</p>
<p>最后选择人工体检，体检步骤如下：</p>
<ol>
<li>测试左右眼视力，如果有配眼镜，佩戴眼镜进行测试。</li>
<li>测试红绿色盲，一般使用虚线构成的图案，让你识别。</li>
<li>测试听力，左右耳正常分辨从哪个方向传来的声音。</li>
<li>测试身高体重，在自助量体重身高检测机进行测试。</li>
<li>测试上下肢、躯干、颈部是否正常，示意做几个蹲起。</li>
<li>测试完毕后，正常坐姿双手并拢面对摄像头照相，形成体检报告。发票凭据和纸质体检报告自己保留。</li>
</ol>
<p><strong>吐槽收费：5 - 10 分钟搞定体检，50 元费用，医院果然暴利行业。</strong></p>
<p>异地办理的驾驶证，需要在交管12123 APP 选择迁移现居住地，提交近期 1 寸白底照片。</p>
<p>通过审核，提交完成，即可看到选择邮寄或者到本地交管所取驾驶证。交管所位置一般很偏僻，建议选择邮寄方式，多花 10 元钱。</p>
<h2 id="02-交管12123-APP-期满换证"><a href="#02-交管12123-APP-期满换证" class="headerlink" title="02  交管12123 APP 期满换证"></a>02  交管12123 APP 期满换证</h2><p>完成体检。异地办理的驾驶证，需要在<strong>交管12123 APP</strong> 选择迁移现居住地，提交<strong>近期1寸白底照片</strong>。</p>
<p>进入交管12123 APP，选择首页（默认），选择<strong>驾驶证补换领。异地办理的驾驶证，选择迁移现居住地。</strong></p>
<p>进入驾驶证功能模块，同样会提醒待办驾驶证业务<strong>期满换证</strong>。</p>
<p>做完上述操作。继续使用交管12123 APP ，底部菜单栏选择网办进度，查看网办进度。</p>
<p>交管12123 APP 站内也会有温馨提醒。</p>
<ul>
<li><strong>通过审核提醒</strong>。</li>
<li><strong>邮寄提醒</strong>。</li>
</ul>
<p>当然，也会<strong>通过短信进行提醒</strong>。</p>
<p>正常提交完成，通过审核，静候佳音，等待快递上门送驾驶证。</p>
<p>最后，以上生活经验，仅供参考哟！希望对你的生活、工作、学习有所帮助。</p>
<p><strong>参考资料：</strong></p>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cubXBzLmdvdi5jbi9uNjU1NzU1OC9jODI4MTY4MC9jb250ZW50Lmh0bWw=">《机动车驾驶证申领和使用规定》（公安部令第162号）<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cuMTIyLmdvdi5jbi9tL2luZGV4Lw==">公安部互联网交通安全综合服务管理平台 (122.gov.cn)<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9oYi4xMjIuZ292LmNuL3ZpZXdzL2hlbHBNYWluLmh0bWw/dHlwZT0vaGVscA==">湖北省公安交通管理局互联网交通安全服务管理平台 (122.gov.cn)<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>个人公众号<strong>龙腾万里sky</strong>，不定期分享生活经验哟！</p>
<p><strong>点赞关注，不迷路</strong>。</p>
<p>—END—              </p>
]]></content>
      <categories>
        <category>生活百科</category>
      </categories>
      <tags>
        <tag>驾驶证</tag>
      </tags>
  </entry>
</search>
